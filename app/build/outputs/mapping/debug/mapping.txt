# compiler: R8
# compiler_version: 3.3.83
# min_api: 24
# common_typos_disable
# {"id":"com.android.tools.r8.mapping","version":"2.0"}
# pg_map_id: 0eb913b
# pg_map_hash: SHA-256 0eb913b66d6397a61e7518be046d2c3656e57d07673b15b94293e8f21005d0a2
android.app.AppComponentFactory -> android.app.AppComponentFactory:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void <init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivity
      # {"id":"com.android.tools.r8.synthesized"}
    android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String) -> instantiateApplication
      # {"id":"com.android.tools.r8.synthesized"}
    android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String) -> instantiateProvider
      # {"id":"com.android.tools.r8.synthesized"}
    android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiver
      # {"id":"com.android.tools.r8.synthesized"}
    android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateService
      # {"id":"com.android.tools.r8.synthesized"}
android.graphics.ColorSpace -> android.graphics.ColorSpace:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.ColorSpace get(android.graphics.ColorSpace$Named) -> get
      # {"id":"com.android.tools.r8.synthesized"}
    boolean isWideGamut() -> isWideGamut
      # {"id":"com.android.tools.r8.synthesized"}
android.graphics.ColorSpace$Named -> android.graphics.ColorSpace$Named:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
android.graphics.ImageDecoder -> android.graphics.ImageDecoder:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.ImageDecoder$Source createSource(java.nio.ByteBuffer) -> createSource
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.Bitmap decodeBitmap(android.graphics.ImageDecoder$Source,android.graphics.ImageDecoder$OnHeaderDecodedListener) -> decodeBitmap
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.drawable.Drawable decodeDrawable(android.graphics.ImageDecoder$Source,android.graphics.ImageDecoder$OnHeaderDecodedListener) -> decodeDrawable
      # {"id":"com.android.tools.r8.synthesized"}
    void setAllocator(int) -> setAllocator
      # {"id":"com.android.tools.r8.synthesized"}
    void setMemorySizePolicy(int) -> setMemorySizePolicy
      # {"id":"com.android.tools.r8.synthesized"}
    void setOnPartialImageListener(android.graphics.ImageDecoder$OnPartialImageListener) -> setOnPartialImageListener
      # {"id":"com.android.tools.r8.synthesized"}
    void setTargetColorSpace(android.graphics.ColorSpace) -> setTargetColorSpace
      # {"id":"com.android.tools.r8.synthesized"}
    void setTargetSize(int,int) -> setTargetSize
      # {"id":"com.android.tools.r8.synthesized"}
android.graphics.ImageDecoder$ImageInfo -> android.graphics.ImageDecoder$ImageInfo:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.ColorSpace getColorSpace() -> getColorSpace
      # {"id":"com.android.tools.r8.synthesized"}
    android.util.Size getSize() -> getSize
      # {"id":"com.android.tools.r8.synthesized"}
android.graphics.ImageDecoder$OnHeaderDecodedListener -> android.graphics.ImageDecoder$OnHeaderDecodedListener:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
android.graphics.ImageDecoder$OnPartialImageListener -> android.graphics.ImageDecoder$OnPartialImageListener:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
android.graphics.ImageDecoder$Source -> android.graphics.ImageDecoder$Source:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
android.graphics.Insets -> android.graphics.Insets:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.Insets of(int,int,int,int) -> of
      # {"id":"com.android.tools.r8.synthesized"}
android.graphics.Typeface$Builder -> android.graphics.Typeface$Builder:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void <init>(java.io.FileDescriptor) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.Typeface build() -> build
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.Typeface$Builder setItalic(boolean) -> setItalic
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.Typeface$Builder setWeight(int) -> setWeight
      # {"id":"com.android.tools.r8.synthesized"}
android.graphics.Typeface$CustomFallbackBuilder -> android.graphics.Typeface$CustomFallbackBuilder:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void <init>(android.graphics.fonts.FontFamily) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.Typeface build() -> build
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.Typeface$CustomFallbackBuilder setStyle(android.graphics.fonts.FontStyle) -> setStyle
      # {"id":"com.android.tools.r8.synthesized"}
android.graphics.drawable.AdaptiveIconDrawable -> android.graphics.drawable.AdaptiveIconDrawable:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void <init>(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
android.graphics.drawable.AnimatedImageDrawable -> android.graphics.drawable.AnimatedImageDrawable:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void clearAnimationCallbacks() -> clearAnimationCallbacks
      # {"id":"com.android.tools.r8.synthesized"}
    int getIntrinsicHeight() -> getIntrinsicHeight
      # {"id":"com.android.tools.r8.synthesized"}
    int getIntrinsicWidth() -> getIntrinsicWidth
      # {"id":"com.android.tools.r8.synthesized"}
    void stop() -> stop
      # {"id":"com.android.tools.r8.synthesized"}
android.graphics.fonts.Font -> android.graphics.fonts.Font:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.fonts.FontStyle getStyle() -> getStyle
      # {"id":"com.android.tools.r8.synthesized"}
android.graphics.fonts.Font$Builder -> android.graphics.fonts.Font$Builder:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void <init>(android.content.res.Resources,int) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void <init>(android.os.ParcelFileDescriptor) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.fonts.Font build() -> build
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.fonts.Font$Builder setFontVariationSettings(java.lang.String) -> setFontVariationSettings
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.fonts.Font$Builder setSlant(int) -> setSlant
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.fonts.Font$Builder setTtcIndex(int) -> setTtcIndex
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.fonts.Font$Builder setWeight(int) -> setWeight
      # {"id":"com.android.tools.r8.synthesized"}
android.graphics.fonts.FontFamily -> android.graphics.fonts.FontFamily:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.fonts.Font getFont(int) -> getFont
      # {"id":"com.android.tools.r8.synthesized"}
    int getSize() -> getSize
      # {"id":"com.android.tools.r8.synthesized"}
android.graphics.fonts.FontFamily$Builder -> android.graphics.fonts.FontFamily$Builder:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void <init>(android.graphics.fonts.Font) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.fonts.FontFamily$Builder addFont(android.graphics.fonts.Font) -> addFont
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.fonts.FontFamily build() -> build
      # {"id":"com.android.tools.r8.synthesized"}
android.graphics.fonts.FontStyle -> android.graphics.fonts.FontStyle:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void <init>(int,int) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    int getSlant() -> getSlant
      # {"id":"com.android.tools.r8.synthesized"}
    int getWeight() -> getWeight
      # {"id":"com.android.tools.r8.synthesized"}
android.graphics.fonts.FontVariationAxis -> android.graphics.fonts.FontVariationAxis:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.fonts.FontVariationAxis[] fromFontVariationSettings(java.lang.String) -> fromFontVariationSettings
      # {"id":"com.android.tools.r8.synthesized"}
android.support.v4.app.RemoteActionCompatParcelizer -> android.support.v4.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:18:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.graphics.drawable.IconCompatParcelizer -> android.support.v4.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:18:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.text.PrecomputedText -> android.text.PrecomputedText:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
      # {"id":"com.android.tools.r8.synthesized"}
    void removeSpan(java.lang.Object) -> removeSpan
      # {"id":"com.android.tools.r8.synthesized"}
    void setSpan(java.lang.Object,int,int,int) -> setSpan
      # {"id":"com.android.tools.r8.synthesized"}
android.text.PrecomputedText$Params -> android.text.PrecomputedText$Params:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    int getBreakStrategy() -> getBreakStrategy
      # {"id":"com.android.tools.r8.synthesized"}
    int getHyphenationFrequency() -> getHyphenationFrequency
      # {"id":"com.android.tools.r8.synthesized"}
    android.text.TextDirectionHeuristic getTextDirection() -> getTextDirection
      # {"id":"com.android.tools.r8.synthesized"}
    android.text.TextPaint getTextPaint() -> getTextPaint
      # {"id":"com.android.tools.r8.synthesized"}
android.text.PrecomputedText$Params$Builder -> android.text.PrecomputedText$Params$Builder:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void <init>(android.text.TextPaint) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    android.text.PrecomputedText$Params build() -> build
      # {"id":"com.android.tools.r8.synthesized"}
    android.text.PrecomputedText$Params$Builder setBreakStrategy(int) -> setBreakStrategy
      # {"id":"com.android.tools.r8.synthesized"}
    android.text.PrecomputedText$Params$Builder setHyphenationFrequency(int) -> setHyphenationFrequency
      # {"id":"com.android.tools.r8.synthesized"}
    android.text.PrecomputedText$Params$Builder setTextDirection(android.text.TextDirectionHeuristic) -> setTextDirection
      # {"id":"com.android.tools.r8.synthesized"}
android.view.ContentInfo -> android.view.ContentInfo:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    android.content.ClipData getClip() -> getClip
      # {"id":"com.android.tools.r8.synthesized"}
    int getFlags() -> getFlags
      # {"id":"com.android.tools.r8.synthesized"}
    int getSource() -> getSource
      # {"id":"com.android.tools.r8.synthesized"}
android.view.ContentInfo$Builder -> android.view.ContentInfo$Builder:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void <init>(android.content.ClipData,int) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    android.view.ContentInfo build() -> build
      # {"id":"com.android.tools.r8.synthesized"}
    android.view.ContentInfo$Builder setExtras(android.os.Bundle) -> setExtras
      # {"id":"com.android.tools.r8.synthesized"}
    android.view.ContentInfo$Builder setFlags(int) -> setFlags
      # {"id":"com.android.tools.r8.synthesized"}
    android.view.ContentInfo$Builder setLinkUri(android.net.Uri) -> setLinkUri
      # {"id":"com.android.tools.r8.synthesized"}
android.view.DisplayCutout -> android.view.DisplayCutout:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void <init>(android.graphics.Rect,java.util.List) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List getBoundingRects() -> getBoundingRects
      # {"id":"com.android.tools.r8.synthesized"}
    int getSafeInsetBottom() -> getSafeInsetBottom
      # {"id":"com.android.tools.r8.synthesized"}
    int getSafeInsetLeft() -> getSafeInsetLeft
      # {"id":"com.android.tools.r8.synthesized"}
    int getSafeInsetRight() -> getSafeInsetRight
      # {"id":"com.android.tools.r8.synthesized"}
    int getSafeInsetTop() -> getSafeInsetTop
      # {"id":"com.android.tools.r8.synthesized"}
    int hashCode() -> hashCode
      # {"id":"com.android.tools.r8.synthesized"}
android.view.OnReceiveContentListener -> android.view.OnReceiveContentListener:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
android.view.View$OnUnhandledKeyEventListener -> android.view.View$OnUnhandledKeyEventListener:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
android.view.WindowInsets$Builder -> android.view.WindowInsets$Builder:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void <init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void <init>(android.view.WindowInsets) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    android.view.WindowInsets build() -> build
      # {"id":"com.android.tools.r8.synthesized"}
    android.view.WindowInsets$Builder setMandatorySystemGestureInsets(android.graphics.Insets) -> setMandatorySystemGestureInsets
      # {"id":"com.android.tools.r8.synthesized"}
    android.view.WindowInsets$Builder setStableInsets(android.graphics.Insets) -> setStableInsets
      # {"id":"com.android.tools.r8.synthesized"}
    android.view.WindowInsets$Builder setSystemGestureInsets(android.graphics.Insets) -> setSystemGestureInsets
      # {"id":"com.android.tools.r8.synthesized"}
    android.view.WindowInsets$Builder setSystemWindowInsets(android.graphics.Insets) -> setSystemWindowInsets
      # {"id":"com.android.tools.r8.synthesized"}
    android.view.WindowInsets$Builder setTappableElementInsets(android.graphics.Insets) -> setTappableElementInsets
      # {"id":"com.android.tools.r8.synthesized"}
android.view.WindowInsets$Type -> android.view.WindowInsets$Type:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    int captionBar() -> captionBar
      # {"id":"com.android.tools.r8.synthesized"}
    int displayCutout() -> displayCutout
      # {"id":"com.android.tools.r8.synthesized"}
    int ime() -> ime
      # {"id":"com.android.tools.r8.synthesized"}
    int mandatorySystemGestures() -> mandatorySystemGestures
      # {"id":"com.android.tools.r8.synthesized"}
    int navigationBars() -> navigationBars
      # {"id":"com.android.tools.r8.synthesized"}
    int statusBars() -> statusBars
      # {"id":"com.android.tools.r8.synthesized"}
    int systemGestures() -> systemGestures
      # {"id":"com.android.tools.r8.synthesized"}
    int tappableElement() -> tappableElement
      # {"id":"com.android.tools.r8.synthesized"}
android.view.WindowInsetsController -> android.view.WindowInsetsController:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void setSystemBarsAppearance(int,int) -> setSystemBarsAppearance
      # {"id":"com.android.tools.r8.synthesized"}
android.view.autofill.AutofillManager -> android.view.autofill.AutofillManager:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void notifyValueChanged(android.view.View) -> notifyValueChanged
      # {"id":"com.android.tools.r8.synthesized"}
android.view.inputmethod.InputContentInfo -> android.view.inputmethod.InputContentInfo:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    android.net.Uri getContentUri() -> getContentUri
      # {"id":"com.android.tools.r8.synthesized"}
    android.content.ClipDescription getDescription() -> getDescription
      # {"id":"com.android.tools.r8.synthesized"}
    android.net.Uri getLinkUri() -> getLinkUri
      # {"id":"com.android.tools.r8.synthesized"}
    void requestPermission() -> requestPermission
      # {"id":"com.android.tools.r8.synthesized"}
android.view.textclassifier.TextClassificationManager -> android.view.textclassifier.TextClassificationManager:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
      # {"id":"com.android.tools.r8.synthesized"}
android.view.textclassifier.TextClassifier -> android.view.textclassifier.TextClassifier:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.ComponentActivity -> androidx.activity.ComponentActivity:
    void $r8$lambda$Mg7-hF6_XzI8jXHyb9wZTvbC5nA(androidx.activity.ComponentActivity,android.content.Context) -> $r8$lambda$Mg7-hF6_XzI8jXHyb9wZTvbC5nA
      # {"id":"com.android.tools.r8.synthesized"}
    android.os.Bundle $r8$lambda$uMG6y9sMaPUFZmnRrSgWpORKiAI(androidx.activity.ComponentActivity) -> $r8$lambda$uMG6y9sMaPUFZmnRrSgWpORKiAI
      # {"id":"com.android.tools.r8.synthesized"}
    137:323:void <init>() -> <init>
    337:339:void <init>(int) -> <init>
    114:114:void access$001(androidx.activity.ComponentActivity) -> access$001
    454:456:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    531:532:void addMenuProvider(androidx.core.view.MenuProvider) -> addMenuProvider
    536:537:void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner) -> addMenuProvider
    543:544:void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$State) -> addMenuProvider
    859:860:void addOnConfigurationChangedListener(androidx.core.util.Consumer) -> addOnConfigurationChangedListener
    485:486:void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener) -> addOnContextAvailableListener
    965:966:void addOnMultiWindowModeChangedListener(androidx.core.util.Consumer) -> addOnMultiWindowModeChangedListener
    914:915:void addOnNewIntentListener(androidx.core.util.Consumer) -> addOnNewIntentListener
    1019:1020:void addOnPictureInPictureModeChangedListener(androidx.core.util.Consumer) -> addOnPictureInPictureModeChangedListener
    885:886:void addOnTrimMemoryListener(androidx.core.util.Consumer) -> addOnTrimMemoryListener
    598:609:void ensureViewModelStore() -> ensureViewModelStore
    837:837:androidx.activity.result.ActivityResultRegistry getActivityResultRegistry() -> getActivityResultRegistry
    634:643:androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras() -> getDefaultViewModelCreationExtras
    614:620:androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory() -> getDefaultViewModelProviderFactory
    425:427:java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    572:572:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    668:668:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    674:674:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    588:593:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    461:465:void initViewTreeOwners() -> initViewTreeOwners
    553:554:void invalidateMenu() -> invalidateMenu
    312:314:android.os.Bundle lambda$new$0() -> lambda$new$0
    317:322:void lambda$new$1(android.content.Context) -> lambda$new$1
    777:780:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    657:658:void onBackPressed() -> onBackPressed
    849:853:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    351:358:void onCreate(android.os.Bundle) -> onCreate
    505:509:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    514:520:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    937:940:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    956:959:void onMultiWindowModeChanged(boolean,android.content.res.Configuration) -> onMultiWindowModeChanged
    904:908:void onNewIntent(android.content.Intent) -> onNewIntent
    525:527:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    989:992:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    1009:1013:void onPictureInPictureModeChanged(boolean,android.content.res.Configuration) -> onPictureInPictureModeChanged
    496:500:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    802:809:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    413:413:java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    381:401:java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    363:369:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    877:881:void onTrimMemory(int) -> onTrimMemory
    470:470:android.content.Context peekAvailableContext() -> peekAvailableContext
    817:818:androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultRegistry,androidx.activity.result.ActivityResultCallback) -> registerForActivityResult
    826:826:androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback) -> registerForActivityResult
    548:549:void removeMenuProvider(androidx.core.view.MenuProvider) -> removeMenuProvider
    866:867:void removeOnConfigurationChangedListener(androidx.core.util.Consumer) -> removeOnConfigurationChangedListener
    491:492:void removeOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener) -> removeOnContextAvailableListener
    972:973:void removeOnMultiWindowModeChangedListener(androidx.core.util.Consumer) -> removeOnMultiWindowModeChangedListener
    921:922:void removeOnNewIntentListener(androidx.core.util.Consumer) -> removeOnNewIntentListener
    1026:1027:void removeOnPictureInPictureModeChangedListener(androidx.core.util.Consumer) -> removeOnPictureInPictureModeChangedListener
    890:891:void removeOnTrimMemoryListener(androidx.core.util.Consumer) -> removeOnTrimMemoryListener
    1032:1052:void reportFullyDrawn() -> reportFullyDrawn
    432:434:void setContentView(int) -> setContentView
    438:440:void setContentView(android.view.View) -> setContentView
    446:448:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    693:694:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    712:713:void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    734:736:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int) -> startIntentSenderForResult
    756:758:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
androidx.activity.ComponentActivity$$ExternalSyntheticLambda0 -> androidx.activity.ComponentActivity$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.activity.ComponentActivity androidx.activity.ComponentActivity$$InternalSyntheticLambda$1$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$0.f$0 -> f$0
    void androidx.activity.ComponentActivity$$InternalSyntheticLambda$1$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$0.<init>(androidx.activity.ComponentActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.activity.ComponentActivity$$InternalSyntheticLambda$1$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.ComponentActivity$$ExternalSyntheticLambda1 -> androidx.activity.ComponentActivity$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.activity.ComponentActivity androidx.activity.ComponentActivity$$InternalSyntheticLambda$1$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$1.f$0 -> f$0
    void androidx.activity.ComponentActivity$$InternalSyntheticLambda$1$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$1.<init>(androidx.activity.ComponentActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    android.os.Bundle androidx.activity.ComponentActivity$$InternalSyntheticLambda$1$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$1.saveState() -> saveState
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.ComponentActivity$$ExternalSyntheticLambda2 -> androidx.activity.ComponentActivity$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.activity.ComponentActivity androidx.activity.ComponentActivity$$InternalSyntheticLambda$1$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$2.f$0 -> f$0
    void androidx.activity.ComponentActivity$$InternalSyntheticLambda$1$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$2.<init>(androidx.activity.ComponentActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.activity.ComponentActivity$$InternalSyntheticLambda$1$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$2.onContextAvailable(android.content.Context) -> onContextAvailable
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.ComponentActivity$1 -> androidx.activity.ComponentActivity$1:
    149:149:void <init>(androidx.activity.ComponentActivity) -> <init>
    156:163:void run() -> run
androidx.activity.ComponentActivity$2 -> androidx.activity.ComponentActivity$2:
    171:171:void <init>(androidx.activity.ComponentActivity) -> <init>
    179:239:void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat) -> onLaunch
androidx.activity.ComponentActivity$2$1 -> androidx.activity.ComponentActivity$2$1:
    185:185:void <init>(androidx.activity.ComponentActivity$2,int,androidx.activity.result.contract.ActivityResultContract$SynchronousResult) -> <init>
    188:189:void run() -> run
androidx.activity.ComponentActivity$2$2 -> androidx.activity.ComponentActivity$2$2:
    226:226:void <init>(androidx.activity.ComponentActivity$2,int,android.content.IntentSender$SendIntentException) -> <init>
    229:232:void run() -> run
androidx.activity.ComponentActivity$3 -> androidx.activity.ComponentActivity$3:
    268:268:void <init>(androidx.activity.ComponentActivity) -> <init>
    272:279:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$4 -> androidx.activity.ComponentActivity$4:
    282:282:void <init>(androidx.activity.ComponentActivity) -> <init>
    286:294:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$5 -> androidx.activity.ComponentActivity$5:
    296:296:void <init>(androidx.activity.ComponentActivity) -> <init>
    300:302:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$Api19Impl -> androidx.activity.ComponentActivity$Api19Impl:
    1059:1060:void cancelPendingInputEvents(android.view.View) -> cancelPendingInputEvents
androidx.activity.ComponentActivity$NonConfigurationInstances -> androidx.activity.ComponentActivity$NonConfigurationInstances:
    130:130:void <init>() -> <init>
androidx.activity.ComponentDialog -> androidx.activity.ComponentDialog:
# {"id":"sourceFile","fileName":"ComponentDialog.kt"}
    void $r8$lambda$3VrmmHeIN9Sasz9FquQXdvV7x_o(androidx.activity.ComponentDialog) -> $r8$lambda$3VrmmHeIN9Sasz9FquQXdvV7x_o
      # {"id":"com.android.tools.r8.synthesized"}
    34:69:void <init>(android.content.Context,int) -> <init>
    47:47:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    43:45:androidx.lifecycle.LifecycleRegistry getLifecycleRegistry() -> getLifecycleRegistry
    73:73:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    77:78:void onBackPressed() -> onBackPressed
    70:71:void onBackPressedDispatcher$lambda-1(androidx.activity.ComponentDialog) -> onBackPressedDispatcher$lambda-1
    51:53:void onCreate(android.os.Bundle) -> onCreate
    57:59:void onStart() -> onStart
    64:67:void onStop() -> onStop
androidx.activity.ComponentDialog$$ExternalSyntheticLambda0 -> androidx.activity.ComponentDialog$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.activity.ComponentDialog androidx.activity.ComponentDialog$$InternalSyntheticLambda$2$bea0efecfbdbd441d49af04bfdf9955934424a07259119ec0236a888ffd3a3e0$0.f$0 -> f$0
    void androidx.activity.ComponentDialog$$InternalSyntheticLambda$2$bea0efecfbdbd441d49af04bfdf9955934424a07259119ec0236a888ffd3a3e0$0.<init>(androidx.activity.ComponentDialog) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.activity.ComponentDialog$$InternalSyntheticLambda$2$bea0efecfbdbd441d49af04bfdf9955934424a07259119ec0236a888ffd3a3e0$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.ImmLeaksCleaner -> androidx.activity.ImmLeaksCleaner:
    39:39:void <clinit>() -> <clinit>
    103:114:void initializeReflectiveFields() -> initializeReflectiveFields
    52:97:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.OnBackPressedCallback -> androidx.activity.OnBackPressedCallback:
    46:56:void <init>(boolean) -> <init>
    103:104:void addCancellable(androidx.activity.Cancellable) -> addCancellable
    82:82:boolean isEnabled() -> isEnabled
    91:94:void remove() -> remove
    107:108:void removeCancellable(androidx.activity.Cancellable) -> removeCancellable
    71:72:void setEnabled(boolean) -> setEnabled
androidx.activity.OnBackPressedDispatcher -> androidx.activity.OnBackPressedDispatcher:
    59:79:void <init>(java.lang.Runnable) -> <init>
    148:155:void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback) -> addCallback
    114:117:androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback) -> addCancellableCallback
    187:199:void onBackPressed() -> onBackPressed
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable:
    223:227:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback) -> <init>
    246:252:void cancel() -> cancel
    232:242:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable:
    203:205:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.activity.OnBackPressedCallback) -> <init>
    209:211:void cancel() -> cancel
androidx.activity.ViewTreeOnBackPressedDispatcherOwner -> androidx.activity.ViewTreeOnBackPressedDispatcherOwner:
# {"id":"sourceFile","fileName":"ViewTreeOnBackPressedDispatcherOwner.kt"}
    38:39:void set(android.view.View,androidx.activity.OnBackPressedDispatcherOwner) -> set
androidx.activity.contextaware.ContextAwareHelper -> androidx.activity.contextaware.ContextAwareHelper:
    42:50:void <init>() -> <init>
    73:77:void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener) -> addOnContextAvailableListener
    108:109:void clearAvailableContext() -> clearAvailableContext
    97:101:void dispatchOnContextAvailable(android.content.Context) -> dispatchOnContextAvailable
    62:62:android.content.Context peekAvailableContext() -> peekAvailableContext
    87:88:void removeOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener) -> removeOnContextAvailableListener
androidx.activity.result.ActivityResult -> androidx.activity.result.ActivityResult:
    109:109:void <clinit>() -> <clinit>
    45:48:void <init>(int,android.content.Intent) -> <init>
    50:53:void <init>(android.os.Parcel) -> <init>
    105:105:int describeContents() -> describeContents
    67:67:android.content.Intent getData() -> getData
    59:59:int getResultCode() -> getResultCode
    87:90:java.lang.String resultCodeToString(int) -> resultCodeToString
    72:73:java.lang.String toString() -> toString
    96:101:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.activity.result.ActivityResult$1 -> androidx.activity.result.ActivityResult$1:
    109:109:void <init>() -> <init>
    109:109:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    112:112:androidx.activity.result.ActivityResult createFromParcel(android.os.Parcel) -> createFromParcel
    109:109:java.lang.Object[] newArray(int) -> newArray
    117:117:androidx.activity.result.ActivityResult[] newArray(int) -> newArray
androidx.activity.result.ActivityResultLauncher -> androidx.activity.result.ActivityResultLauncher:
    34:34:void <init>() -> <init>
    47:48:void launch(java.lang.Object) -> launch
androidx.activity.result.ActivityResultRegistry -> androidx.activity.result.ActivityResultRegistry:
    51:79:void <init>() -> <init>
    455:457:void bindRcKey(int,java.lang.String) -> bindRcKey
    371:376:boolean dispatchResult(int,int,android.content.Intent) -> dispatchResult
    390:409:boolean dispatchResult(int,java.lang.Object) -> dispatchResult
    414:426:void doDispatch(java.lang.String,int,android.content.Intent,androidx.activity.result.ActivityResultRegistry$CallbackAndContract) -> doDispatch
    445:451:int generateRandomNumber() -> generateRandomNumber
    324:356:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    306:315:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    118:163:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.lifecycle.LifecycleOwner,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback) -> register
    217:234:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback) -> register
    429:435:void registerKey(java.lang.String) -> registerKey
    275:298:void unregister(java.lang.String) -> unregister
androidx.activity.result.ActivityResultRegistry$1 -> androidx.activity.result.ActivityResultRegistry$1:
    132:132:void <init>(androidx.activity.result.ActivityResultRegistry,java.lang.String,androidx.activity.result.ActivityResultCallback,androidx.activity.result.contract.ActivityResultContract) -> <init>
    138:158:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.result.ActivityResultRegistry$2 -> androidx.activity.result.ActivityResultRegistry$2:
    163:163:void <init>(androidx.activity.result.ActivityResultRegistry,java.lang.String,androidx.activity.result.contract.ActivityResultContract) -> <init>
    166:180:void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat) -> launch
    184:185:void unregister() -> unregister
androidx.activity.result.ActivityResultRegistry$3 -> androidx.activity.result.ActivityResultRegistry$3:
    234:234:void <init>(androidx.activity.result.ActivityResultRegistry,java.lang.String,androidx.activity.result.contract.ActivityResultContract) -> <init>
    237:251:void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat) -> launch
    255:256:void unregister() -> unregister
androidx.activity.result.ActivityResultRegistry$CallbackAndContract -> androidx.activity.result.ActivityResultRegistry$CallbackAndContract:
    465:468:void <init>(androidx.activity.result.ActivityResultCallback,androidx.activity.result.contract.ActivityResultContract) -> <init>
androidx.activity.result.ActivityResultRegistry$LifecycleContainer -> androidx.activity.result.ActivityResultRegistry$LifecycleContainer:
    475:478:void <init>(androidx.lifecycle.Lifecycle) -> <init>
    481:483:void addObserver(androidx.lifecycle.LifecycleEventObserver) -> addObserver
    486:490:void clearObservers() -> clearObservers
androidx.activity.result.IntentSenderRequest -> androidx.activity.result.IntentSenderRequest:
    132:132:void <clinit>() -> <clinit>
    77:82:void <init>(android.content.IntentSender,android.content.Intent,int,int) -> <init>
    124:129:void <init>(android.os.Parcel) -> <init>
    146:146:int describeContents() -> describeContents
    102:102:android.content.Intent getFillInIntent() -> getFillInIntent
    111:111:int getFlagsMask() -> getFlagsMask
    120:120:int getFlagsValues() -> getFlagsValues
    91:91:android.content.IntentSender getIntentSender() -> getIntentSender
    151:155:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.activity.result.IntentSenderRequest$1 -> androidx.activity.result.IntentSenderRequest$1:
    132:132:void <init>() -> <init>
    132:132:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    135:135:androidx.activity.result.IntentSenderRequest createFromParcel(android.os.Parcel) -> createFromParcel
    132:132:java.lang.Object[] newArray(int) -> newArray
    140:140:androidx.activity.result.IntentSenderRequest[] newArray(int) -> newArray
androidx.activity.result.IntentSenderRequest$Builder -> androidx.activity.result.IntentSenderRequest$Builder:
    187:189:void <init>(android.content.IntentSender) -> <init>
    239:239:androidx.activity.result.IntentSenderRequest build() -> build
    211:212:androidx.activity.result.IntentSenderRequest$Builder setFillInIntent(android.content.Intent) -> setFillInIntent
    227:229:androidx.activity.result.IntentSenderRequest$Builder setFlags(int,int) -> setFlags
androidx.activity.result.contract.ActivityResultContract -> androidx.activity.result.contract.ActivityResultContract:
# {"id":"sourceFile","fileName":"ActivityResultContract.kt"}
    29:29:void <init>() -> <init>
    48:48:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object) -> getSynchronousResult
androidx.activity.result.contract.ActivityResultContract$SynchronousResult -> androidx.activity.result.contract.ActivityResultContract$SynchronousResult:
# {"id":"sourceFile","fileName":"ActivityResultContract.kt"}
    55:55:void <init>(java.lang.Object) -> <init>
    55:55:java.lang.Object getValue() -> getValue
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions -> androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions:
# {"id":"sourceFile","fileName":"ActivityResultContracts.kt"}
    128:128:void <init>() -> <init>
    127:127:java.lang.Object parseResult(int,android.content.Intent) -> <init>
    127:127:void <init>():127 -> <init>
    127:127:java.lang.Object parseResult(int,android.content.Intent) -> createIntent
    127:127:android.content.Intent createIntent(android.content.Context,java.lang.Object):127 -> createIntent
    169:169:android.content.Intent createIntent(android.content.Context,java.lang.String[]) -> createIntent
    127:127:java.lang.Object parseResult(int,android.content.Intent) -> getSynchronousResult
    127:127:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object):127 -> getSynchronousResult
    176:609:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[]) -> getSynchronousResult
    127:127:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    194:613:java.util.Map parseResult(int,android.content.Intent) -> parseResult
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion -> androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion:
# {"id":"sourceFile","fileName":"ActivityResultContracts.kt"}
    130:130:void <init>() -> <init>
    164:164:android.content.Intent createIntent$activity_release(java.lang.String[]) -> createIntent$activity_release
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult -> androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult:
# {"id":"sourceFile","fileName":"ActivityResultContracts.kt"}
    49:49:void <init>() -> <init>
    49:49:android.content.Intent createIntent(android.content.Context,java.lang.Object) -> createIntent
    64:64:android.content.Intent createIntent(android.content.Context,android.content.Intent) -> createIntent
    49:49:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    69:69:androidx.activity.result.ActivityResult parseResult(int,android.content.Intent) -> parseResult
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult$Companion -> androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult$Companion:
# {"id":"sourceFile","fileName":"ActivityResultContracts.kt"}
    51:51:void <init>() -> <init>
androidx.annotation.Keep -> androidx.annotation.Keep:
# {"id":"sourceFile","fileName":"Keep.kt"}
androidx.appcompat.app.ActionBar -> androidx.appcompat.app.ActionBar:
    92:92:void <init>() -> <init>
    1074:1074:boolean closeOptionsMenu() -> closeOptionsMenu
    1080:1080:boolean invalidateOptionsMenu() -> invalidateOptionsMenu
    1052:1052:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1121:1121:void onDestroy() -> onDestroy
    1086:1086:boolean onMenuKeyEvent(android.view.KeyEvent) -> onMenuKeyEvent
    1068:1068:boolean openOptionsMenu() -> openOptionsMenu
    1062:1062:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback) -> startActionMode
androidx.appcompat.app.ActionBar$LayoutParams -> androidx.appcompat.app.ActionBar$LayoutParams:
    1374:1382:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1374:1387:void <init>(int,int) -> <init>
    1374:1402:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    1374:1406:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.app.ActionBar$Tab -> androidx.appcompat.app.ActionBar$Tab:
    1171:1171:void <init>() -> <init>
androidx.appcompat.app.AlertController -> androidx.appcompat.app.AlertController:
    82:206:void <init>(android.content.Context,androidx.appcompat.app.AppCompatDialog,android.view.Window) -> <init>
    209:227:boolean canTextInput(android.view.View) -> canTextInput
    829:833:void centerButton(android.widget.Button) -> centerButton
    398:400:int getIconAttributeResId(int) -> getIconAttributeResId
    404:404:android.widget.ListView getListView() -> getListView
    231:234:void installContent() -> installContent
    422:422:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    427:427:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    441:463:android.view.ViewGroup resolvePanel(android.view.View,android.view.View) -> resolvePanel
    237:243:int selectContentView() -> selectContentView
    323:350:void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message,android.graphics.drawable.Drawable) -> setButton
    257:258:void setCustomTitle(android.view.View) -> setCustomTitle
    359:370:void setIcon(int) -> setIcon
    378:389:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    261:265:void setMessage(java.lang.CharSequence) -> setMessage
    560:636:void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int) -> setScrollIndicators
    247:251:void setTitle(java.lang.CharSequence) -> setTitle
    271:274:void setView(int) -> setView
    280:283:void setView(android.view.View) -> setView
    290:297:void setView(android.view.View,int,int,int,int) -> setView
    759:826:void setupButtons(android.view.ViewGroup) -> setupButtons
    719:745:void setupContent(android.view.ViewGroup) -> setupContent
    640:670:void setupCustomContent(android.view.ViewGroup) -> setupCustomContent
    673:716:void setupTitle(android.view.ViewGroup) -> setupTitle
    467:555:void setupView() -> setupView
    177:179:boolean shouldCenterSingleButton(android.content.Context) -> shouldCenterSingleButton
androidx.appcompat.app.AlertController$1 -> androidx.appcompat.app.AlertController$1:
    126:126:void <init>(androidx.appcompat.app.AlertController) -> <init>
    130:147:void onClick(android.view.View) -> onClick
androidx.appcompat.app.AlertController$AlertParams -> androidx.appcompat.app.AlertController$AlertParams:
    869:928:void <init>(android.content.Context) -> <init>
    931:985:void apply(androidx.appcompat.app.AlertController) -> apply
    988:1098:void createListView(androidx.appcompat.app.AlertController) -> createListView
androidx.appcompat.app.AlertController$AlertParams$1 -> androidx.appcompat.app.AlertController$AlertParams$1:
    995:995:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],androidx.appcompat.app.AlertController$RecycleListView) -> <init>
    998:1005:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.app.AlertController$AlertParams$2 -> androidx.appcompat.app.AlertController$AlertParams$2:
    1009:1017:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1021:1026:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    1030:1030:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
androidx.appcompat.app.AlertController$AlertParams$3 -> androidx.appcompat.app.AlertController$AlertParams$3:
    1065:1065:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController) -> <init>
    1068:1072:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$AlertParams$4 -> androidx.appcompat.app.AlertController$AlertParams$4:
    1075:1075:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1078:1083:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$ButtonHandler -> androidx.appcompat.app.AlertController$ButtonHandler:
    156:158:void <init>(android.content.DialogInterface) -> <init>
    162:173:void handleMessage(android.os.Message) -> handleMessage
androidx.appcompat.app.AlertController$CheckedItemAdapter -> androidx.appcompat.app.AlertController$CheckedItemAdapter:
    1104:1105:void <init>(android.content.Context,int,int,java.lang.CharSequence[]) -> <init>
    1114:1114:long getItemId(int) -> getItemId
    1109:1109:boolean hasStableIds() -> hasStableIds
androidx.appcompat.app.AlertController$RecycleListView -> androidx.appcompat.app.AlertController$RecycleListView:
    844:852:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    855:862:void setHasDecor(boolean,boolean) -> setHasDecor
androidx.appcompat.app.AlertDialog -> androidx.appcompat.app.AlertDialog:
    98:100:void <init>(android.content.Context,int) -> <init>
    140:140:android.widget.ListView getListView() -> getListView
    278:280:void onCreate(android.os.Bundle) -> onCreate
    284:287:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    292:295:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    111:116:int resolveDialogTheme(android.content.Context,int) -> resolveDialogTheme
    145:147:void setTitle(java.lang.CharSequence) -> setTitle
androidx.appcompat.app.AlertDialog$Builder -> androidx.appcompat.app.AlertDialog$Builder:
    313:314:void <init>(android.content.Context) -> <init>
    342:346:void <init>(android.content.Context,int) -> <init>
    983:994:androidx.appcompat.app.AlertDialog create() -> create
    358:358:android.content.Context getContext() -> getContext
    659:661:androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> setAdapter
    398:399:androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View) -> setCustomTitle
    445:446:androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable) -> setIcon
    620:621:androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> setOnKeyListener
    853:857:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    377:378:androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> setTitle
androidx.appcompat.app.AppCompatActivity -> androidx.appcompat.app.AppCompatActivity:
    94:96:void <init>() -> <init>
    110:112:void <init>(int) -> <init>
    212:214:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    139:140:void attachBaseContext(android.content.Context) -> attachBaseContext
    652:657:void closeOptionsMenu() -> closeOptionsMenu
    595:601:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    261:261:android.view.View findViewById(int) -> findViewById
    585:588:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    555:555:androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
    189:189:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    606:609:android.content.res.Resources getResources() -> getResources
    163:163:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    502:502:android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
    116:135:void initDelegate() -> initDelegate
    219:222:void initViewTreeOwners() -> initViewTreeOwners
    316:317:void invalidateOptionsMenu() -> invalidateOptionsMenu
    226:238:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    542:543:void onContentChanged() -> onContentChanged
    419:420:void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> onCreateSupportNavigateUpTaskStack
    280:282:void onDestroy() -> onDestroy
    635:638:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    266:275:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    566:566:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    666:666:void onNightModeChanged(int) -> onNightModeChanged
    577:578:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    150:152:void onPostCreate(android.os.Bundle) -> onPostCreate
    242:244:void onPostResume() -> onPostResume
    438:438:void onPrepareSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> onPrepareSupportNavigateUpTaskStack
    248:250:void onStart() -> onStart
    254:256:void onStop() -> onStop
    339:339:void onSupportActionModeFinished(androidx.appcompat.view.ActionMode) -> onSupportActionModeFinished
    328:328:void onSupportActionModeStarted(androidx.appcompat.view.ActionMode) -> onSupportActionModeStarted
    550:550:void onSupportContentChanged() -> onSupportContentChanged
    464:487:boolean onSupportNavigateUp() -> onSupportNavigateUp
    286:288:void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    353:353:androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
    643:648:void openOptionsMenu() -> openOptionsMenu
    618:630:boolean performMenuItemShortcut(android.view.KeyEvent) -> performMenuItemShortcut
    194:196:void setContentView(int) -> setContentView
    200:202:void setContentView(android.view.View) -> setContentView
    206:208:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    183:184:void setSupportActionBar(androidx.appcompat.widget.Toolbar) -> setSupportActionBar
    393:393:void setSupportProgress(int) -> setSupportProgress
    386:386:void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    379:379:void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    372:372:void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    144:146:void setTheme(int) -> setTheme
    364:364:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionMode
    311:312:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    535:536:void supportNavigateUpTo(android.content.Intent) -> supportNavigateUpTo
    305:305:boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
    519:519:boolean supportShouldUpRecreateTask(android.content.Intent) -> supportShouldUpRecreateTask
androidx.appcompat.app.AppCompatActivity$1 -> androidx.appcompat.app.AppCompatActivity$1:
    117:117:void <init>(androidx.appcompat.app.AppCompatActivity) -> <init>
    121:123:android.os.Bundle saveState() -> saveState
androidx.appcompat.app.AppCompatActivity$2 -> androidx.appcompat.app.AppCompatActivity$2:
    126:126:void <init>(androidx.appcompat.app.AppCompatActivity) -> <init>
    129:133:void onContextAvailable(android.content.Context) -> onContextAvailable
androidx.appcompat.app.AppCompatDelegate -> androidx.appcompat.app.AppCompatDelegate:
    166:175:void <clinit>() -> <clinit>
    271:271:void <init>() -> <init>
    655:662:void addActiveDelegate(androidx.appcompat.app.AppCompatDelegate) -> addActiveDelegate
    387:387:void attachBaseContext(android.content.Context) -> attachBaseContext
    395:396:android.content.Context attachBaseContext2(android.content.Context) -> attachBaseContext2
    230:230:androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> create
    241:241:androidx.appcompat.app.AppCompatDelegate create(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> create
    604:604:int getDefaultNightMode() -> getDefaultNightMode
    551:551:int getLocalNightMode() -> getLocalNightMode
    665:669:void removeActivityDelegate(androidx.appcompat.app.AppCompatDelegate) -> removeActivityDelegate
    672:683:void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate) -> removeDelegateFromActives
    348:348:void setTheme(int) -> setTheme
androidx.appcompat.app.AppCompatDelegateImpl -> androidx.appcompat.app.AppCompatDelegateImpl:
    136:192:void <clinit>() -> <clinit>
    292:293:void <init>(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> <init>
    296:297:void <init>(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> <init>
    213:343:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object) -> <init>
    725:729:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    2377:2377:boolean applyDayNight() -> applyDayNight
    2382:2407:boolean applyDayNight(boolean) -> applyDayNight
    1032:1066:void applyFixedSizeWindow() -> applyFixedSizeWindow
    349:476:android.content.Context attachBaseContext2(android.content.Context) -> attachBaseContext2
    791:815:void attachToWindow(android.view.Window) -> attachToWindow
    2465:2465:int calculateNightMode() -> calculateNightMode
    2082:2107:void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu) -> callOnPanelClosed
    1967:1978:void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder) -> checkCloseActionMenu
    766:772:void cleanupAutoManagers() -> cleanupAutoManagers
    1981:1982:void closePanel(int) -> closePanel
    1985:2014:void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean) -> closePanel
    2473:2505:android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration,boolean) -> createOverrideConfigurationForDayNight
    852:1026:android.view.ViewGroup createSubDecor() -> createSubDecor
    1528:1572:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> createView
    2351:2373:void dismissPopups() -> dismissPopups
    1460:1478:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2173:2197:void doInvalidatePanelMenu(int) -> doInvalidatePanelMenu
    1399:1402:void endOnGoingFadeAnimation() -> endOnGoingFadeAnimation
    818:849:void ensureSubDecor() -> ensureSubDecor
    782:788:void ensureWindow() -> ensureWindow
    2110:2118:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu) -> findMenuPanel
    640:641:android.view.View findViewById(int) -> findViewById
    3495:3598:android.content.res.Configuration generateConfigDelta(android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta
    611:622:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    2651:2654:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager(android.content.Context) -> getAutoBatteryNightModeManager
    2643:2647:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context) -> getAutoTimeNightModeManager
    3433:3433:androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
    2429:2429:int getLocalNightMode() -> getLocalNightMode
    628:633:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    2123:2135:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean) -> getPanelState
    543:544:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    1151:1155:java.lang.CharSequence getTitle() -> getTitle
    552:552:android.view.Window$Callback getWindowCallback() -> getWindowCallback
    556:570:void initWindowDecorActionBar() -> initWindowDecorActionBar
    1842:1859:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelContent
    1748:1751:boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelDecor
    1799:1838:boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelMenu
    1603:1612:void installViewFactory() -> installViewFactory
    1230:1233:void invalidateOptionsMenu() -> invalidateOptionsMenu
    2164:2170:void invalidatePanelMenu(int) -> invalidatePanelMenu
    2658:2692:boolean isActivityManifestHandlingUiMode(android.content.Context) -> isActivityManifestHandlingUiMode
    1395:1395:boolean isHandleNativeActionModesEnabled() -> isHandleNativeActionModesEnabled
    2435:2458:int mapNightMode(android.content.Context,int) -> mapNightMode
    1406:1418:boolean onBackPressed() -> onBackPressed
    648:671:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    498:531:void onCreate(android.os.Bundle) -> onCreate
    1620:1620:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    1629:1629:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    737:762:void onDestroy() -> onDestroy
    1509:1522:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    2017:2024:boolean onKeyDownPanel(int,android.view.KeyEvent) -> onKeyDownPanel
    1423:1454:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    1482:1505:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    2028:2077:boolean onKeyUpPanel(int,android.view.KeyEvent) -> onKeyUpPanel
    1185:1192:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1197:1198:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    1175:1181:void onMenuOpened(int) -> onMenuOpened
    1159:1172:void onPanelClosed(int) -> onPanelClosed
    536:537:void onPostCreate(android.os.Bundle) -> onPostCreate
    690:694:void onPostResume() -> onPostResume
    733:733:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    677:678:void onStart() -> onStart
    682:686:void onStop() -> onStop
    1029:1029:void onSubDecorInstalled(android.view.ViewGroup) -> onSubDecorInstalled
    1650:1745:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> openPanel
    548:548:androidx.appcompat.app.ActionBar peekSupportActionBar() -> peekSupportActionBar
    2140:2160:boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int) -> performPanelShortcut
    1863:1963:boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> preparePanel
    1755:1796:void reopenMenu(boolean) -> reopenMenu
    1070:1107:boolean requestWindowFeature(int) -> requestWindowFeature
    2333:2343:int sanitizeWindowFeatureId(int) -> sanitizeWindowFeatureId
    698:703:void setContentView(android.view.View) -> setContentView
    707:712:void setContentView(int) -> setContentView
    716:721:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    574:608:void setSupportActionBar(androidx.appcompat.widget.Toolbar) -> setSupportActionBar
    776:777:void setTheme(int) -> setTheme
    1138:1147:void setTitle(java.lang.CharSequence) -> setTitle
    1385:1385:boolean shouldAnimateActionModeView() -> shouldAnimateActionModeView
    1577:1597:boolean shouldInheritContext(android.view.ViewParent) -> shouldInheritContext
    1202:1225:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionMode
    1236:1379:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionModeFromWindow
    2326:2330:void throwFeatureRequestIfSubDecorInstalled() -> throwFeatureRequestIfSubDecorInstalled
    1634:1645:androidx.appcompat.app.AppCompatActivity tryUnwrapContext() -> tryUnwrapContext
    2518:2577:boolean updateForNightMode(int,boolean) -> updateForNightMode
    2585:2630:void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration) -> updateResourcesConfigurationForNightMode
    2208:2314:int updateStatusGuard(androidx.core.view.WindowInsetsCompat,android.graphics.Rect) -> updateStatusGuard
    2318:2323:void updateStatusGuardColor(android.view.View) -> updateStatusGuardColor
androidx.appcompat.app.AppCompatDelegateImpl$2 -> androidx.appcompat.app.AppCompatDelegateImpl$2:
    269:269:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    272:280:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$3 -> androidx.appcompat.app.AppCompatDelegateImpl$3:
    951:951:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    955:967:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.appcompat.app.AppCompatDelegateImpl$5 -> androidx.appcompat.app.AppCompatDelegateImpl$5:
    1016:1016:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1018:1018:void onAttachedFromWindow() -> onAttachedFromWindow
    1022:1023:void onDetachedFromWindow() -> onDetachedFromWindow
androidx.appcompat.app.AppCompatDelegateImpl$6 -> androidx.appcompat.app.AppCompatDelegateImpl$6:
    1291:1291:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1294:1319:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$6$1 -> androidx.appcompat.app.AppCompatDelegateImpl$6$1:
    1302:1302:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$6) -> <init>
    1310:1313:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1305:1306:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$7 -> androidx.appcompat.app.AppCompatDelegateImpl$7:
    1344:1344:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1355:1358:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1347:1351:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl -> androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl:
    3437:3438:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback:
    2790:2791:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2804:2805:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2795:2799:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 -> androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9:
    2701:2703:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.view.ActionMode$Callback) -> <init>
    2718:2718:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    2707:2707:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    2723:2752:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    2712:2713:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1 -> androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1:
    2731:2731:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9) -> <init>
    2734:2744:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl:
    3614:3614:android.content.Context createConfigurationContext(android.content.Context,android.content.res.Configuration) -> createConfigurationContext
    3607:3610:void generateConfigDelta_densityDpi(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta_densityDpi
androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl:
    3623:3623:boolean isPowerSaveMode(android.os.PowerManager) -> isPowerSaveMode
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl:
    3633:3639:void generateConfigDelta_locale(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta_locale
androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl:
    3648:3658:void generateConfigDelta_colorMode(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta_colorMode
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback -> androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback:
    3091:3093:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.view.Window$Callback) -> <init>
    3291:3295:boolean bypassDispatchKeyEvent(android.view.Window$Callback,android.view.KeyEvent) -> bypassDispatchKeyEvent
    3273:3278:void bypassOnContentChanged(android.view.Window$Callback) -> bypassOnContentChanged
    3309:3314:void bypassOnPanelClosed(android.view.Window$Callback,int,android.view.Menu) -> bypassOnPanelClosed
    3101:3106:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    3111:3112:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    3138:3145:void onContentChanged() -> onContentChanged
    3117:3122:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    3127:3133:android.view.View onCreatePanelView(int) -> onCreatePanelView
    3182:3184:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    3189:3196:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    3149:3177:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    3253:3262:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    3201:3203:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    3238:3246:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
    3096:3097:void setActionBarCallback(androidx.appcompat.app.AppCompatDelegateImpl$ActionBarMenuCallback) -> setActionBarCallback
    3220:3231:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback) -> startAsSupportActionMode
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager:
    3401:3404:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    3422:3425:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> createIntentFilterForBroadcastReceiver
    3409:3410:int getApplyableNightMode() -> getApplyableNightMode
    3417:3418:void onChange() -> onChange
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager:
    3322:3322:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    3354:3363:void cleanup() -> cleanup
    3331:3348:void setup() -> setup
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1 -> androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1:
    3340:3340:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager) -> <init>
    3343:3344:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager:
    3373:3375:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.app.TwilightManager) -> <init>
    3390:3394:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> createIntentFilterForBroadcastReceiver
    3380:3380:int getApplyableNightMode() -> getApplyableNightMode
    3385:3386:void onChange() -> onChange
androidx.appcompat.app.AppCompatDelegateImpl$ContextThemeWrapperCompatApi17Impl -> androidx.appcompat.app.AppCompatDelegateImpl$ContextThemeWrapperCompatApi17Impl:
    490:491:void applyOverrideConfiguration(android.view.ContextThemeWrapper,android.content.res.Configuration) -> applyOverrideConfiguration
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView -> androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView:
    3040:3042:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    3046:3047:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    3070:3070:boolean isOutOfBounds(int,int) -> isOutOfBounds
    3052:3061:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    3066:3067:void setBackgroundResource(int) -> setBackgroundResource
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState:
    2873:2877:void <init>(int) -> <init>
    2941:2952:androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback) -> getListMenuView
    2880:2883:boolean hasPanelItems() -> hasPanelItems
    2929:2938:void setMenu(androidx.appcompat.view.menu.MenuBuilder) -> setMenu
    2897:2926:void setStyle(android.content.Context) -> setStyle
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback:
    2756:2757:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2761:2774:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2779:2785:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDialog -> androidx.appcompat.app.AppCompatDialog:
    47:66:void <init>(android.content.Context,int) -> <init>
    129:130:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    140:143:void dismiss() -> dismiss
    214:215:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    112:112:android.view.View findViewById(int) -> findViewById
    177:180:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    184:190:int getThemeResId(android.content.Context,int) -> getThemeResId
    169:170:void invalidateOptionsMenu() -> invalidateOptionsMenu
    77:80:void onCreate(android.os.Bundle) -> onCreate
    134:136:void onStop() -> onStop
    199:199:void onSupportActionModeFinished(androidx.appcompat.view.ActionMode) -> onSupportActionModeFinished
    195:195:void onSupportActionModeStarted(androidx.appcompat.view.ActionMode) -> onSupportActionModeStarted
    204:204:androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
    95:96:void setContentView(int) -> setContentView
    100:101:void setContentView(android.view.View) -> setContentView
    105:106:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    117:119:void setTitle(java.lang.CharSequence) -> setTitle
    123:125:void setTitle(int) -> setTitle
    209:209:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
    160:160:boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
androidx.appcompat.app.AppCompatDialog$$ExternalSyntheticLambda0 -> androidx.appcompat.app.AppCompatDialog$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.app.AppCompatDialog androidx.appcompat.app.AppCompatDialog$$InternalSyntheticLambda$1$b6999da9a308ba79bfa0ec130c31bbdfcc71a76702282f4849380eac14a81bd5$0.f$0 -> f$0
    void androidx.appcompat.app.AppCompatDialog$$InternalSyntheticLambda$1$b6999da9a308ba79bfa0ec130c31bbdfcc71a76702282f4849380eac14a81bd5$0.<init>(androidx.appcompat.app.AppCompatDialog) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean androidx.appcompat.app.AppCompatDialog$$InternalSyntheticLambda$1$b6999da9a308ba79bfa0ec130c31bbdfcc71a76702282f4849380eac14a81bd5$0.superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatViewInflater -> androidx.appcompat.app.AppCompatViewInflater:
    75:93:void <clinit>() -> <clinit>
    73:96:void <init>() -> <init>
    395:416:void backportAccessibilityAttributes(android.content.Context,android.view.View,android.util.AttributeSet) -> backportAccessibilityAttributes
    320:336:void checkOnClickListener(android.view.View,android.util.AttributeSet) -> checkOnClickListener
    247:247:androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createAutoCompleteTextView
    211:211:androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet) -> createButton
    231:231:androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet) -> createCheckBox
    241:241:androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet) -> createCheckedTextView
    216:216:androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet) -> createEditText
    226:226:androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet) -> createImageButton
    206:206:androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet) -> createImageView
    253:253:androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createMultiAutoCompleteTextView
    236:236:androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet) -> createRadioButton
    258:258:androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet) -> createRatingBar
    263:263:androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet) -> createSeekBar
    221:221:androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet) -> createSpinner
    201:201:androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet) -> createTextView
    268:268:androidx.appcompat.widget.AppCompatToggleButton createToggleButton(android.content.Context,android.util.AttributeSet) -> createToggleButton
    101:196:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean) -> createView
    280:280:android.view.View createView(android.content.Context,java.lang.String,android.util.AttributeSet) -> createView
    340:358:android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String) -> createViewByPrefix
    284:311:android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet) -> createViewFromTag
    367:390:android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean) -> themifyContext
    272:276:void verifyNotNull(android.view.View,java.lang.String) -> verifyNotNull
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener -> androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener:
    429:432:void <init>(android.view.View,java.lang.String) -> <init>
    436:449:void onClick(android.view.View) -> onClick
    452:479:void resolveMethod(android.content.Context) -> resolveMethod
androidx.appcompat.app.LayoutIncludeDetector -> androidx.appcompat.app.LayoutIncludeDetector:
    36:38:void <init>() -> <init>
    45:61:boolean detect(android.util.AttributeSet) -> detect
    108:111:boolean isParserOutdated(org.xmlpull.v1.XmlPullParser) -> isParserOutdated
    95:103:org.xmlpull.v1.XmlPullParser popOutdatedAttrHolders(java.util.Deque) -> popOutdatedAttrHolders
    66:83:boolean shouldInheritContext(org.xmlpull.v1.XmlPullParser,org.xmlpull.v1.XmlPullParser) -> shouldInheritContext
androidx.appcompat.app.ResourcesFlusher -> androidx.appcompat.app.ResourcesFlusher:
    47:57:void flush(android.content.res.Resources) -> flush
    114:163:void flushNougats(android.content.res.Resources) -> flushNougats
    167:208:void flushThemedResourcesCache(java.lang.Object) -> flushThemedResourcesCache
androidx.appcompat.app.ResourcesFlusher$Api16Impl -> androidx.appcompat.app.ResourcesFlusher$Api16Impl:
    221:222:void clear(android.util.LongSparseArray) -> clear
androidx.appcompat.app.ToolbarActionBar -> androidx.appcompat.app.ToolbarActionBar:
    53:81:void <init>(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback) -> <init>
    431:431:boolean closeOptionsMenu() -> closeOptionsMenu
    443:447:boolean collapseActionView() -> collapseActionView
    507:516:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    326:326:int getDisplayOptions() -> getDisplayOptions
    545:550:android.view.Menu getMenu() -> getMenu
    149:149:android.content.Context getThemedContext() -> getThemedContext
    436:438:boolean invalidateOptionsMenu() -> invalidateOptionsMenu
    189:190:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    492:493:void onDestroy() -> onDestroy
    479:486:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    471:474:boolean onMenuKeyEvent(android.view.KeyEvent) -> onMenuKeyEvent
    426:426:boolean openOptionsMenu() -> openOptionsMenu
    451:467:void populateOptionsMenu() -> populateOptionsMenu
    175:175:void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    185:185:void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    231:232:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
androidx.appcompat.app.ToolbarActionBar$1 -> androidx.appcompat.app.ToolbarActionBar$1:
    55:55:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    58:59:void run() -> run
androidx.appcompat.app.ToolbarActionBar$2 -> androidx.appcompat.app.ToolbarActionBar$2:
    63:63:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    66:66:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback -> androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback:
    556:557:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    567:575:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    561:562:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback -> androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback:
    580:581:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    585:585:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    590:595:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.app.ToolbarActionBar$ToolbarMenuCallback -> androidx.appcompat.app.ToolbarActionBar$ToolbarMenuCallback:
    519:519:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    534:540:android.view.View onCreatePanelView(int) -> onCreatePanelView
    523:529:boolean onPreparePanel(int) -> onPreparePanel
androidx.appcompat.app.TwilightCalculator -> androidx.appcompat.app.TwilightCalculator:
    26:26:void <init>() -> <init>
    89:138:void calculateTwilight(long,double,double) -> calculateTwilight
    31:34:androidx.appcompat.app.TwilightCalculator getInstance() -> getInstance
androidx.appcompat.app.TwilightManager -> androidx.appcompat.app.TwilightManager:
    66:72:void <init>(android.content.Context,android.location.LocationManager) -> <init>
    50:55:androidx.appcompat.app.TwilightManager getInstance(android.content.Context) -> getInstance
    107:127:android.location.Location getLastKnownLocation() -> getLastKnownLocation
    134:140:android.location.Location getLastKnownLocationForProvider(java.lang.String) -> getLastKnownLocationForProvider
    80:102:boolean isNight() -> isNight
    144:144:boolean isStateValid() -> isStateValid
    148:192:void updateState(android.location.Location) -> updateState
androidx.appcompat.app.TwilightManager$TwilightState -> androidx.appcompat.app.TwilightManager$TwilightState:
    205:206:void <init>() -> <init>
androidx.appcompat.app.WindowDecorActionBar -> androidx.appcompat.app.WindowDecorActionBar:
    84:85:void <clinit>() -> <clinit>
    98:176:void <init>(android.app.Activity,boolean) -> <init>
    98:180:void <init>(android.app.Dialog) -> <init>
    871:907:void animateToMode(boolean) -> animateToMode
    756:761:boolean checkShowingFlags(boolean,boolean,boolean) -> checkShowingFlags
    971:975:boolean collapseActionView() -> collapseActionView
    309:314:void completeDeferredDestroyActionMode() -> completeDeferredDestroyActionMode
    348:357:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    833:861:void doHide(boolean) -> doHide
    784:830:void doShow(boolean) -> doShow
    670:671:void enableContentAnimations(boolean) -> enableContentAnimations
    234:240:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    515:515:int getDisplayOptions() -> getDisplayOptions
    510:510:int getNavigationMode() -> getNavigationMode
    917:929:android.content.Context getThemedContext() -> getThemedContext
    708:715:void hideForActionMode() -> hideForActionMode
    719:723:void hideForSystem() -> hideForSystem
    192:231:void init(android.view.View) -> init
    256:257:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    959:963:void onContentScrollStarted() -> onContentScrollStarted
    967:967:void onContentScrollStopped() -> onContentScrollStopped
    1396:1406:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    318:319:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    1389:1392:void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    377:378:void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    471:476:void setDisplayOptions(int,int) -> setDisplayOptions
    246:247:void setElevation(float) -> setElevation
    260:282:void setHasEmbeddedTabs(boolean) -> setHasEmbeddedTabs
    727:733:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    392:393:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    330:334:void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    443:444:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    912:912:boolean shouldAnimateContextView() -> shouldAnimateContextView
    682:689:void showForActionMode() -> showForActionMode
    693:697:void showForSystem() -> showForSystem
    520:536:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback) -> startActionMode
    767:781:void updateVisibility(boolean) -> updateVisibility
androidx.appcompat.app.WindowDecorActionBar$1 -> androidx.appcompat.app.WindowDecorActionBar$1:
    134:134:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    137:148:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$2 -> androidx.appcompat.app.WindowDecorActionBar$2:
    151:151:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    154:156:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$3 -> androidx.appcompat.app.WindowDecorActionBar$3:
    160:160:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    163:165:void onAnimationUpdate(android.view.View) -> onAnimationUpdate
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl -> androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl:
    989:995:void <init>(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback) -> <init>
    1054:1059:boolean dispatchOnCreate() -> dispatchOnCreate
    1009:1034:void finish() -> finish
    1111:1111:android.view.View getCustomView() -> getCustomView
    1004:1004:android.view.Menu getMenu() -> getMenu
    999:999:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    1095:1095:java.lang.CharSequence getSubtitle() -> getSubtitle
    1090:1090:java.lang.CharSequence getTitle() -> getTitle
    1038:1051:void invalidate() -> invalidate
    1106:1106:boolean isTitleOptional() -> isTitleOptional
    1116:1119:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1144:1149:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    1064:1066:void setCustomView(android.view.View) -> setCustomView
    1070:1071:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    1085:1086:void setSubtitle(int) -> setSubtitle
    1075:1076:void setTitle(java.lang.CharSequence) -> setTitle
    1080:1081:void setTitle(int) -> setTitle
    1100:1102:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.content.res.AppCompatResources -> androidx.appcompat.content.res.AppCompatResources:
    48:48:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    66:66:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
androidx.appcompat.graphics.drawable.DrawableWrapper -> androidx.appcompat.graphics.drawable.DrawableWrapper:
    46:48:void <init>(android.graphics.drawable.Drawable) -> <init>
    52:53:void draw(android.graphics.Canvas) -> draw
    67:67:int getChangingConfigurations() -> getChangingConfigurations
    113:113:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    139:139:int getIntrinsicHeight() -> getIntrinsicHeight
    134:134:int getIntrinsicWidth() -> getIntrinsicWidth
    149:149:int getMinimumHeight() -> getMinimumHeight
    144:144:int getMinimumWidth() -> getMinimumWidth
    124:124:int getOpacity() -> getOpacity
    154:154:boolean getPadding(android.graphics.Rect) -> getPadding
    103:103:int[] getState() -> getState
    129:129:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    162:163:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    193:193:boolean isAutoMirrored() -> isAutoMirrored
    93:93:boolean isStateful() -> isStateful
    108:109:void jumpToCurrentState() -> jumpToCurrentState
    57:58:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    183:183:boolean onLevelChange(int) -> onLevelChange
    170:171:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    83:84:void setAlpha(int) -> setAlpha
    188:189:void setAutoMirrored(boolean) -> setAutoMirrored
    62:63:void setChangingConfigurations(int) -> setChangingConfigurations
    88:89:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    73:74:void setDither(boolean) -> setDither
    78:79:void setFilterBitmap(boolean) -> setFilterBitmap
    213:214:void setHotspot(float,float) -> setHotspot
    218:219:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    98:98:boolean setState(int[]) -> setState
    198:199:void setTint(int) -> setTint
    203:204:void setTintList(android.content.res.ColorStateList) -> setTintList
    208:209:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    118:118:boolean setVisible(boolean,boolean) -> setVisible
    226:235:void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    178:179:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.appcompat.graphics.drawable.DrawerArrowDrawable -> androidx.appcompat.graphics.drawable.DrawerArrowDrawable:
    100:100:void <clinit>() -> <clinit>
    326:401:void draw(android.graphics.Canvas) -> draw
    419:419:int getIntrinsicHeight() -> getIntrinsicHeight
    424:424:int getIntrinsicWidth() -> getIntrinsicWidth
    429:429:int getOpacity() -> getOpacity
    465:465:float lerp(float,float,float) -> lerp
    405:409:void setAlpha(int) -> setAlpha
    413:415:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    448:452:void setProgress(float) -> setProgress
androidx.appcompat.resources.Compatibility$Api15Impl -> androidx.appcompat.resources.Compatibility$Api15Impl:
    96:97:void getValueForDensity(android.content.res.Resources,int,int,android.util.TypedValue,boolean) -> getValueForDensity
androidx.appcompat.view.ActionBarPolicy -> androidx.appcompat.view.ActionBarPolicy:
    46:48:void <init>(android.content.Context) -> <init>
    110:110:boolean enableHomeButtonByDefault() -> enableHomeButtonByDefault
    43:43:androidx.appcompat.view.ActionBarPolicy get(android.content.Context) -> get
    86:86:int getEmbeddedMenuWidthLimit() -> getEmbeddedMenuWidthLimit
    56:73:int getMaxActionButtons() -> getMaxActionButtons
    115:115:int getStackedTabMaxWidth() -> getStackedTabMaxWidth
    94:104:int getTabContainerHeight() -> getTabContainerHeight
    90:90:boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    78:79:boolean showsOverflowMenuButton() -> showsOverflowMenuButton
androidx.appcompat.view.ActionMode -> androidx.appcompat.view.ActionMode:
    41:41:void <init>() -> <init>
    71:71:java.lang.Object getTag() -> getTag
    145:145:boolean getTitleOptionalHint() -> getTitleOptionalHint
    57:58:void setTag(java.lang.Object) -> setTag
    134:135:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.ContextThemeWrapper -> androidx.appcompat.view.ContextThemeWrapper:
    55:56:void <init>() -> <init>
    70:72:void <init>(android.content.Context,int) -> <init>
    84:86:void <init>(android.content.Context,android.content.res.Resources$Theme) -> <init>
    104:112:void applyOverrideConfiguration(android.content.res.Configuration) -> applyOverrideConfiguration
    90:91:void attachBaseContext(android.content.Context) -> attachBaseContext
    213:213:android.content.res.AssetManager getAssets() -> getAssets
    116:116:android.content.res.Resources getResources() -> getResources
    120:139:android.content.res.Resources getResourcesInternal() -> getResourcesInternal
    174:180:java.lang.Object getSystemService(java.lang.String) -> getSystemService
    160:169:android.content.res.Resources$Theme getTheme() -> getTheme
    155:155:int getThemeResId() -> getThemeResId
    199:208:void initializeTheme() -> initializeTheme
    222:234:boolean isEmptyConfiguration(android.content.res.Configuration) -> isEmptyConfiguration
    195:196:void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean) -> onApplyThemeResource
    144:148:void setTheme(int) -> setTheme
androidx.appcompat.view.ContextThemeWrapper$Api17Impl -> androidx.appcompat.view.ContextThemeWrapper$Api17Impl:
    246:246:android.content.Context createConfigurationContext(androidx.appcompat.view.ContextThemeWrapper,android.content.res.Configuration) -> createConfigurationContext
androidx.appcompat.view.StandaloneActionMode -> androidx.appcompat.view.StandaloneActionMode:
    50:59:void <init>(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean) -> <init>
    105:111:void finish() -> finish
    130:130:android.view.View getCustomView() -> getCustomView
    115:115:android.view.Menu getMenu() -> getMenu
    135:135:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    125:125:java.lang.CharSequence getSubtitle() -> getSubtitle
    120:120:java.lang.CharSequence getTitle() -> getTitle
    100:101:void invalidate() -> invalidate
    89:89:boolean isTitleOptional() -> isTitleOptional
    140:140:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    160:162:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    94:96:void setCustomView(android.view.View) -> setCustomView
    68:69:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    78:79:void setSubtitle(int) -> setSubtitle
    63:64:void setTitle(java.lang.CharSequence) -> setTitle
    73:74:void setTitle(int) -> setTitle
    83:85:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper -> androidx.appcompat.view.SupportActionModeWrapper:
    49:52:void <init>(android.content.Context,androidx.appcompat.view.ActionMode) -> <init>
    81:82:void finish() -> finish
    111:111:android.view.View getCustomView() -> getCustomView
    86:86:android.view.Menu getMenu() -> getMenu
    121:121:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    101:101:java.lang.CharSequence getSubtitle() -> getSubtitle
    56:56:java.lang.Object getTag() -> getTag
    91:91:java.lang.CharSequence getTitle() -> getTitle
    126:126:boolean getTitleOptionalHint() -> getTitleOptionalHint
    76:77:void invalidate() -> invalidate
    136:136:boolean isTitleOptional() -> isTitleOptional
    116:117:void setCustomView(android.view.View) -> setCustomView
    71:72:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    106:107:void setSubtitle(int) -> setSubtitle
    61:62:void setTag(java.lang.Object) -> setTag
    66:67:void setTitle(java.lang.CharSequence) -> setTitle
    96:97:void setTitle(int) -> setTitle
    131:132:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper -> androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper:
    150:155:void <init>(android.content.Context,android.view.ActionMode$Callback) -> <init>
    192:204:android.view.ActionMode getActionModeWrapper(androidx.appcompat.view.ActionMode) -> getActionModeWrapper
    182:187:android.view.Menu getMenuWrapper(android.view.Menu) -> getMenuWrapper
    172:172:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    159:160:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    178:179:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    165:166:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.view.SupportMenuInflater -> androidx.appcompat.view.SupportMenuInflater:
    83:85:void <clinit>() -> <clinit>
    101:105:void <init>(android.content.Context) -> <init>
    231:237:java.lang.Object findRealOwner(java.lang.Object) -> findRealOwner
    224:227:java.lang.Object getRealOwner() -> getRealOwner
    119:137:void inflate(int,android.view.Menu) -> inflate
    145:221:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu) -> parseMenu
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener:
    242:242:void <clinit>() -> <clinit>
    247:259:void <init>(java.lang.Object,java.lang.String) -> <init>
    264:271:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.SupportMenuInflater$MenuState -> androidx.appcompat.view.SupportMenuInflater$MenuState:
    337:353:void <init>(androidx.appcompat.view.SupportMenuInflater,android.view.Menu) -> <init>
    530:532:void addItem() -> addItem
    535:538:android.view.SubMenu addSubMenuItem() -> addSubMenuItem
    459:462:char getShortcut(java.lang.String) -> getShortcut
    542:542:boolean hasAddedItem() -> hasAddedItem
    549:556:java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> newInstance
    368:380:void readGroup(android.util.AttributeSet) -> readGroup
    386:456:void readItem(android.util.AttributeSet) -> readItem
    356:362:void resetGroup() -> resetGroup
    467:527:void setItem(android.view.MenuItem) -> setItem
androidx.appcompat.view.ViewPropertyAnimatorCompatSet -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet:
    42:120:void <init>() -> <init>
    90:97:void cancel() -> cancel
    86:87:void onAnimationsEnded() -> onAnimationsEnded
    53:56:androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat) -> play
    61:64:androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat) -> playSequentially
    100:103:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long) -> setDuration
    107:110:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    114:117:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    68:83:void start() -> start
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1 -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1:
    121:123:void <init>(androidx.appcompat.view.ViewPropertyAnimatorCompatSet) -> <init>
    144:150:void onAnimationEnd(android.view.View) -> onAnimationEnd
    127:134:void onAnimationStart(android.view.View) -> onAnimationStart
    137:140:void onEnd() -> onEnd
androidx.appcompat.view.WindowCallbackWrapper -> androidx.appcompat.view.WindowCallbackWrapper:
    51:56:void <init>(android.view.Window$Callback) -> <init>
    80:80:boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    60:60:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    65:65:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    85:85:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    70:70:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    75:75:boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    189:189:android.view.Window$Callback getWrapped() -> getWrapped
    172:173:void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
    167:168:void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    130:131:void onAttachedToWindow() -> onAttachedToWindow
    95:95:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    90:90:android.view.View onCreatePanelView(int) -> onCreatePanelView
    135:136:void onDetachedFromWindow() -> onDetachedFromWindow
    110:110:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    105:105:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    140:141:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    185:186:void onPointerCaptureChanged(boolean) -> onPointerCaptureChanged
    100:100:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    179:180:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    146:146:boolean onSearchRequested(android.view.SearchEvent) -> onSearchRequested
    151:151:boolean onSearchRequested() -> onSearchRequested
    115:116:void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    125:126:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    162:162:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl -> androidx.appcompat.view.WindowCallbackWrapper$Api23Impl:
    200:200:boolean onSearchRequested(android.view.Window$Callback,android.view.SearchEvent) -> onSearchRequested
    206:206:android.view.ActionMode onWindowStartingActionMode(android.view.Window$Callback,android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
androidx.appcompat.view.WindowCallbackWrapper$Api24Impl -> androidx.appcompat.view.WindowCallbackWrapper$Api24Impl:
    219:220:void onProvideKeyboardShortcuts(android.view.Window$Callback,java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
androidx.appcompat.view.WindowCallbackWrapper$Api26Impl -> androidx.appcompat.view.WindowCallbackWrapper$Api26Impl:
    232:233:void onPointerCaptureChanged(android.view.Window$Callback,boolean) -> onPointerCaptureChanged
androidx.appcompat.view.WindowCallbackWrapper$Api26Impl$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.view.WindowCallbackWrapper$Api26Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.appcompat.view.WindowCallbackWrapper$Api26Impl$$InternalSyntheticApiModelOutline$1$17eface982ffa170be836720e125336518159376251db9d1560695013140fbfd$0.m(android.view.Window$Callback,boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.view.menu.ActionMenuItem -> androidx.appcompat.view.menu.ActionMenuItem:
    54:86:void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence) -> <init>
    449:461:void applyIconTint() -> applyIconTint
    379:379:boolean collapseActionView() -> collapseActionView
    374:374:boolean expandActionView() -> expandActionView
    345:345:android.view.ActionProvider getActionProvider() -> getActionProvider
    335:335:android.view.View getActionView() -> getActionView
    95:95:int getAlphabeticModifiers() -> getAlphabeticModifiers
    90:90:char getAlphabeticShortcut() -> getAlphabeticShortcut
    401:401:java.lang.CharSequence getContentDescription() -> getContentDescription
    100:100:int getGroupId() -> getGroupId
    105:105:android.graphics.drawable.Drawable getIcon() -> getIcon
    429:429:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    445:445:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    110:110:android.content.Intent getIntent() -> getIntent
    115:115:int getItemId() -> getItemId
    120:120:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    130:130:int getNumericModifiers() -> getNumericModifiers
    125:125:char getNumericShortcut() -> getNumericShortcut
    135:135:int getOrder() -> getOrder
    140:140:android.view.SubMenu getSubMenu() -> getSubMenu
    356:356:androidx.core.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    145:145:java.lang.CharSequence getTitle() -> getTitle
    150:150:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    413:413:java.lang.CharSequence getTooltipText() -> getTooltipText
    155:155:boolean hasSubMenu() -> hasSubMenu
    384:384:boolean isActionViewExpanded() -> isActionViewExpanded
    160:160:boolean isCheckable() -> isCheckable
    165:165:boolean isChecked() -> isChecked
    170:170:boolean isEnabled() -> isEnabled
    175:175:boolean isVisible() -> isVisible
    340:340:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    43:43:android.view.MenuItem setActionView(int) -> setActionView
    43:43:android.view.MenuItem setActionView(android.view.View) -> setActionView
    330:330:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    351:351:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    180:181:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    187:189:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    194:195:android.view.MenuItem setCheckable(boolean) -> setCheckable
    205:206:android.view.MenuItem setChecked(boolean) -> setChecked
    43:43:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    395:396:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    211:212:android.view.MenuItem setEnabled(boolean) -> setEnabled
    217:220:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    225:228:android.view.MenuItem setIcon(int) -> setIcon
    419:424:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    435:440:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    233:234:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    239:240:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    246:248:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    389:389:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    253:254:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    259:261:android.view.MenuItem setShortcut(char,char) -> setShortcut
    268:272:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    315:315:void setShowAsAction(int) -> setShowAsAction
    43:43:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    368:369:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    362:362:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    277:278:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    283:284:android.view.MenuItem setTitle(int) -> setTitle
    289:290:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    43:43:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    407:408:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    295:296:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.ActionMenuItemView -> androidx.appcompat.view.menu.ActionMenuItemView:
    68:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:88:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    100:100:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    124:124:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    242:242:boolean hasText() -> hasText
    129:142:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    269:269:boolean needsDividerAfter() -> needsDividerAfter
    264:264:boolean needsDividerBefore() -> needsDividerBefore
    155:158:void onClick(android.view.View) -> onClick
    92:96:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    274:301:void onMeasure(int,int) -> onMeasure
    338:339:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    146:150:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    170:170:boolean prefersCondensedTitle() -> prefersCondensedTitle
    176:176:void setCheckable(boolean) -> setCheckable
    181:181:void setChecked(boolean) -> setChecked
    184:190:void setExpandedFormat(boolean) -> setExpandedFormat
    220:239:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    161:162:void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    118:120:void setPadding(int,int,int,int) -> setPadding
    165:166:void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback) -> setPopupCallback
    252:255:void setTitle(java.lang.CharSequence) -> setTitle
    108:112:boolean shouldAllowTextWithIcon() -> shouldAllowTextWithIcon
    193:216:void updateTextButtonVisibility() -> updateTextButtonVisibility
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener -> androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener:
    304:306:void <init>(androidx.appcompat.view.menu.ActionMenuItemView) -> <init>
    310:313:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    319:323:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback -> androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback:
    341:341:void <init>() -> <init>
androidx.appcompat.view.menu.BaseMenuPresenter -> androidx.appcompat.view.menu.BaseMenuPresenter:
    61:66:void <init>(android.content.Context,int,int) -> <init>
    134:139:void addItemView(android.view.View,int) -> addItemView
    239:239:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    167:167:androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> createItemView
    234:234:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    148:149:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    158:158:androidx.appcompat.view.menu.MenuPresenter$Callback getCallback() -> getCallback
    183:189:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    77:83:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    70:73:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    213:216:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    220:224:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    154:155:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    248:249:void setId(int) -> setId
    91:125:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.BaseMenuWrapper -> androidx.appcompat.view.menu.BaseMenuWrapper:
    34:36:void <init>(android.content.Context) -> <init>
    39:58:android.view.MenuItem getMenuItemWrapper(android.view.MenuItem) -> getMenuItemWrapper
    62:78:android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> getSubMenuWrapper
    83:89:void internalClear() -> internalClear
    92:101:void internalRemoveGroup(int) -> internalRemoveGroup
    104:113:void internalRemoveItem(int) -> internalRemoveItem
androidx.appcompat.view.menu.CascadingMenuPopup -> androidx.appcompat.view.menu.CascadingMenuPopup:
    66:66:void <clinit>() -> <clinit>
    89:238:void <init>(android.content.Context,android.view.View,int,int,boolean) -> <init>
    355:362:void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> addMenu
    792:792:boolean closeMenuOnSubMenuOpened() -> closeMenuOnSubMenuOpened
    246:255:androidx.appcompat.widget.MenuPopupWindow createPopupWindow() -> createPopupWindow
    288:299:void dismiss() -> dismiss
    656:663:int findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder) -> findIndexOfAddedMenu
    517:524:android.view.MenuItem findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder) -> findMenuItemForSubmenu
    538:581:android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder) -> findParentViewForSubmenu
    727:727:boolean flagActionItems() -> flagActionItems
    316:318:int getInitialMenuPosition() -> getInitialMenuPosition
    766:768:android.widget.ListView getListView() -> getListView
    330:349:int getNextMenuPosition(int) -> getNextMenuPosition
    589:589:boolean isShowing() -> isShowing
    668:723:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    599:613:void onDismiss() -> onDismiss
    303:307:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    630:646:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    750:757:void setAnchorView(android.view.View) -> setAnchorView
    624:625:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    242:243:void setForceShowIcon(boolean) -> setForceShowIcon
    741:746:void setGravity(int) -> setGravity
    773:775:void setHorizontalOffset(int) -> setHorizontalOffset
    761:762:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    785:786:void setShowTitle(boolean) -> setShowTitle
    779:781:void setVerticalOffset(int) -> setVerticalOffset
    260:280:void show() -> show
    370:504:void showMenu(androidx.appcompat.view.menu.MenuBuilder) -> showMenu
    617:620:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.CascadingMenuPopup$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$1:
    98:98:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    104:116:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.CascadingMenuPopup$2 -> androidx.appcompat.view.menu.CascadingMenuPopup$2:
    120:120:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    123:123:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    127:134:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.CascadingMenuPopup$3 -> androidx.appcompat.view.menu.CascadingMenuPopup$3:
    137:137:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    150:194:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    143:144:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
androidx.appcompat.view.menu.CascadingMenuPopup$3$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$3$1:
    173:173:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup$3,androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,androidx.appcompat.view.menu.MenuBuilder) -> <init>
    178:190:void run() -> run
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo -> androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo:
    801:805:void <init>(androidx.appcompat.widget.MenuPopupWindow,androidx.appcompat.view.menu.MenuBuilder,int) -> <init>
    808:808:android.widget.ListView getListView() -> getListView
androidx.appcompat.view.menu.ExpandedMenuView -> androidx.appcompat.view.menu.ExpandedMenuView:
    42:42:void <clinit>() -> <clinit>
    53:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    97:97:int getWindowAnimations() -> getWindowAnimations
    73:74:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    86:86:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    78:82:void onDetachedFromWindow() -> onDetachedFromWindow
    92:93:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.view.menu.ListMenuItemView -> androidx.appcompat.view.menu.ListMenuItemView:
    74:75:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    78:98:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    138:139:void addContentView(android.view.View) -> addContentView
    142:147:void addContentView(android.view.View,int) -> addContentView
    347:355:void adjustListItemSelectionBounds(android.graphics.Rect) -> adjustListItemSelectionBounds
    327:330:android.view.LayoutInflater getInflater() -> getInflater
    166:166:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    124:135:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    309:314:void insertCheckBox() -> insertCheckBox
    294:298:void insertIconView() -> insertIconView
    301:306:void insertRadioButton() -> insertRadioButton
    102:120:void onFinishInflate() -> onFinishInflate
    282:291:void onMeasure(int,int) -> onMeasure
    318:318:boolean prefersCondensedTitle() -> prefersCondensedTitle
    171:213:void setCheckable(boolean) -> setCheckable
    219:232:void setChecked(boolean) -> setChecked
    150:151:void setForceShowIcon(boolean) -> setForceShowIcon
    339:343:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    256:278:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    242:252:void setShortcut(boolean,char) -> setShortcut
    235:238:void setSubMenuArrowVisible(boolean) -> setSubMenuArrowVisible
    155:162:void setTitle(java.lang.CharSequence) -> setTitle
androidx.appcompat.view.menu.ListMenuPresenter -> androidx.appcompat.view.menu.ListMenuPresenter:
    71:74:void <init>(android.content.Context,int) -> <init>
    81:84:void <init>(int,int) -> <init>
    188:188:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    183:183:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    178:178:boolean flagActionItems() -> flagActionItems
    125:128:android.widget.ListAdapter getAdapter() -> getAdapter
    105:114:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    88:101:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    155:158:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    173:174:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    143:150:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    138:139:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    133:134:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter -> androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter:
    233:237:void <init>(androidx.appcompat.view.menu.ListMenuPresenter) -> <init>
    278:291:void findExpandedIndex() -> findExpandedIndex
    241:246:int getCount() -> getCount
    232:232:java.lang.Object getItem(int) -> getItem
    251:256:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    263:263:long getItemId(int) -> getItemId
    268:274:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    295:297:void notifyDataSetChanged() -> notifyDataSetChanged
androidx.appcompat.view.menu.MenuAdapter -> androidx.appcompat.view.menu.MenuAdapter:
    36:50:void <init>(androidx.appcompat.view.menu.MenuBuilder,android.view.LayoutInflater,boolean,int) -> <init>
    114:127:void findExpandedIndex() -> findExpandedIndex
    71:71:androidx.appcompat.view.menu.MenuBuilder getAdapterMenu() -> getAdapterMenu
    62:67:int getCount() -> getCount
    32:32:java.lang.Object getItem(int) -> getItem
    76:81:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    88:88:long getItemId(int) -> getItemId
    93:110:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    131:133:void notifyDataSetChanged() -> notifyDataSetChanged
    57:58:void setForceShowIcon(boolean) -> setForceShowIcon
androidx.appcompat.view.menu.MenuBuilder -> androidx.appcompat.view.menu.MenuBuilder:
    68:68:void <clinit>() -> <clinit>
    134:236:void <init>(android.content.Context) -> <init>
    468:468:android.view.MenuItem add(java.lang.CharSequence) -> add
    473:473:android.view.MenuItem add(int) -> add
    478:478:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    483:483:android.view.MenuItem add(int,int,int,int) -> add
    522:546:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    443:456:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    250:251:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> addMenuPresenter
    263:266:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context) -> addMenuPresenter
    488:488:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    493:493:android.view.SubMenu addSubMenu(int) -> addSubMenu
    498:502:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    507:507:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    843:846:void changeMenuMode() -> changeMenuMode
    606:612:void clear() -> clear
    1215:1220:void clearHeader() -> clearHeader
    1032:1044:void close(boolean) -> close
    1048:1049:void close() -> close
    1375:1393:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    462:462:androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int) -> createNewMenuItem
    836:836:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    284:296:void dispatchPresenterUpdate(boolean) -> dispatchPresenterUpdate
    300:317:boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter) -> dispatchSubMenuSelected
    1353:1371:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    726:726:int findGroupIndex(int) -> findGroupIndex
    730:744:int findGroupIndex(int,int) -> findGroupIndex
    849:856:int findInsertIndex(java.util.ArrayList,int) -> findInsertIndex
    695:709:android.view.MenuItem findItem(int) -> findItem
    713:722:int findItemIndex(int) -> findItemIndex
    932:967:androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> findItemWithShortcutForKey
    884:916:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> findItemsWithShortcutForKey
    1165:1202:void flagActionItems() -> flagActionItems
    1205:1206:java.util.ArrayList getActionItems() -> getActionItems
    432:432:java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    832:832:android.content.Context getContext() -> getContext
    1397:1397:androidx.appcompat.view.menu.MenuItemImpl getExpandedItem() -> getExpandedItem
    1318:1318:android.graphics.drawable.Drawable getHeaderIcon() -> getHeaderIcon
    1314:1314:java.lang.CharSequence getHeaderTitle() -> getHeaderTitle
    1322:1322:android.view.View getHeaderView() -> getHeaderView
    754:754:android.view.MenuItem getItem(int) -> getItem
    1210:1211:java.util.ArrayList getNonActionItems() -> getNonActionItems
    1349:1349:boolean getOptionalIconsVisible() -> getOptionalIconsVisible
    781:787:int getOrdering(int) -> getOrdering
    828:828:android.content.res.Resources getResources() -> getResources
    1330:1330:androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    1120:1135:java.util.ArrayList getVisibleItems() -> getVisibleItems
    677:690:boolean hasVisibleItems() -> hasVisibleItems
    516:516:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    794:794:boolean isQwertyMode() -> isQwertyMode
    759:759:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    824:824:boolean isShortcutsVisible() -> isShortcutsVisible
    1114:1116:void onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemActionRequestChanged
    1103:1105:void onItemVisibleChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemVisibleChanged
    1059:1072:void onItemsChanged(boolean) -> onItemsChanged
    973:973:boolean performIdentifierAction(int,int) -> performIdentifierAction
    977:977:boolean performItemAction(android.view.MenuItem,int) -> performItemAction
    981:1020:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int) -> performItemAction
    861:873:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    556:569:void removeGroup(int) -> removeGroup
    551:552:void removeItem(int) -> removeItem
    582:587:void removeItemAtInt(int,boolean) -> removeItemAtInt
    275:281:void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> removeMenuPresenter
    402:429:void restoreActionViewStates(android.os.Bundle) -> restoreActionViewStates
    374:398:void saveActionViewStates(android.os.Bundle) -> saveActionViewStates
    436:437:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    239:240:androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int) -> setDefaultShowAsAction
    615:630:void setExclusiveItemChecked(android.view.MenuItem) -> setExclusiveItemChecked
    634:643:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    512:513:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    665:673:void setGroupEnabled(int,boolean) -> setGroupEnabled
    647:661:void setGroupVisible(int,boolean) -> setGroupVisible
    1285:1286:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> setHeaderIconInt
    1297:1298:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int) -> setHeaderIconInt
    1224:1251:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> setHeaderInternal
    1261:1262:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> setHeaderTitleInt
    1273:1274:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int) -> setHeaderTitleInt
    1309:1310:androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> setHeaderViewInt
    1406:1407:void setOverrideVisibleItems(boolean) -> setOverrideVisibleItems
    764:767:void setQwertyMode(boolean) -> setQwertyMode
    814:818:void setShortcutsVisibleInner(boolean) -> setShortcutsVisibleInner
    749:749:int size() -> size
    1088:1094:void startDispatchingItemsChanged() -> startDispatchingItemsChanged
    1080:1085:void stopDispatchingItemsChanged() -> stopDispatchingItemsChanged
androidx.appcompat.view.menu.MenuDialogHelper -> androidx.appcompat.view.menu.MenuDialogHelper:
    43:45:void <init>(androidx.appcompat.view.menu.MenuBuilder) -> <init>
    140:143:void dismiss() -> dismiss
    170:171:void onClick(android.content.DialogInterface,int) -> onClick
    152:158:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    147:148:void onDismiss(android.content.DialogInterface) -> onDismiss
    95:126:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
    162:165:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
    54:91:void show(android.os.IBinder) -> show
androidx.appcompat.view.menu.MenuItemImpl -> androidx.appcompat.view.menu.MenuItemImpl:
    69:147:void <init>(androidx.appcompat.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int) -> <init>
    697:698:void actionFormatChanged() -> actionFormatChanged
    406:409:void appendModifier(java.lang.StringBuilder,int,int,java.lang.String) -> appendModifier
    576:591:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable) -> applyIconTintIfNecessary
    848:861:boolean collapseActionView() -> collapseActionView
    834:843:boolean expandActionView() -> expandActionView
    796:796:android.view.ActionProvider getActionProvider() -> getActionProvider
    778:784:android.view.View getActionView() -> getActionView
    277:277:int getAlphabeticModifiers() -> getAlphabeticModifiers
    244:244:char getAlphabeticShortcut() -> getAlphabeticShortcut
    902:902:java.lang.CharSequence getContentDescription() -> getContentDescription
    204:204:int getGroupId() -> getGroupId
    504:515:android.graphics.drawable.Drawable getIcon() -> getIcon
    555:555:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    572:572:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    224:224:android.content.Intent getIntent() -> getIntent
    210:210:int getItemId() -> getItemId
    693:693:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    287:287:int getNumericModifiers() -> getNumericModifiers
    282:282:char getNumericShortcut() -> getNumericShortcut
    215:215:int getOrder() -> getOrder
    219:219:int getOrdering() -> getOrdering
    346:346:char getShortcut() -> getShortcut
    356:402:java.lang.String getShortcutLabel() -> getShortcutLabel
    423:423:android.view.SubMenu getSubMenu() -> getSubMenu
    802:802:androidx.core.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    440:440:java.lang.CharSequence getTitle() -> getTitle
    475:484:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    450:452:java.lang.CharSequence getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView) -> getTitleForItemView
    917:917:java.lang.CharSequence getTooltipText() -> getTooltipText
    865:871:boolean hasCollapsibleActionView() -> hasCollapsibleActionView
    428:428:boolean hasSubMenu() -> hasSubMenu
    155:181:boolean invoke() -> invoke
    708:708:boolean isActionButton() -> isActionButton
    881:881:boolean isActionViewExpanded() -> isActionViewExpanded
    596:596:boolean isCheckable() -> isCheckable
    620:620:boolean isChecked() -> isChecked
    186:186:boolean isEnabled() -> isEnabled
    615:615:boolean isExclusiveCheckable() -> isExclusiveCheckable
    646:649:boolean isVisible() -> isVisible
    712:712:boolean requestsActionButton() -> requestsActionButton
    717:717:boolean requiresActionButton() -> requiresActionButton
    790:790:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    52:52:android.view.MenuItem setActionView(int) -> setActionView
    52:52:android.view.MenuItem setActionView(android.view.View) -> setActionView
    758:764:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    770:773:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    875:877:void setActionViewExpanded(boolean) -> setActionViewExpanded
    249:257:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    263:272:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    601:607:android.view.MenuItem setCheckable(boolean) -> setCheckable
    625:633:android.view.MenuItem setChecked(boolean) -> setChecked
    637:642:void setCheckedInt(boolean) -> setCheckedInt
    52:52:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    893:897:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    191:199:android.view.MenuItem setEnabled(boolean) -> setEnabled
    611:612:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    520:525:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    530:537:android.view.MenuItem setIcon(int) -> setIcon
    544:550:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    561:567:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    229:230:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    726:731:void setIsActionButton(boolean) -> setIsActionButton
    688:689:void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setMenuInfo
    292:300:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    306:315:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    886:887:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    678:679:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    320:325:android.view.MenuItem setShortcut(char,char) -> setShortcut
    332:339:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    739:753:void setShowAsAction(int) -> setShowAsAction
    52:52:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    828:829:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    432:435:void setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder) -> setSubMenu
    808:822:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    457:465:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    470:470:android.view.MenuItem setTitle(int) -> setTitle
    490:499:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    52:52:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    908:912:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    671:673:android.view.MenuItem setVisible(boolean) -> setVisible
    661:663:boolean setVisibleInt(boolean) -> setVisibleInt
    704:704:boolean shouldShowIcon() -> shouldShowIcon
    418:418:boolean shouldShowShortcut() -> shouldShowShortcut
    734:734:boolean showsTextAsAction() -> showsTextAsAction
    684:684:java.lang.String toString() -> toString
androidx.appcompat.view.menu.MenuItemImpl$1 -> androidx.appcompat.view.menu.MenuItemImpl$1:
    815:815:void <init>(androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    818:819:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
androidx.appcompat.view.menu.MenuItemWrapperICS -> androidx.appcompat.view.menu.MenuItemWrapperICS:
    56:61:void <init>(android.content.Context,androidx.core.internal.view.SupportMenuItem) -> <init>
    326:326:boolean collapseActionView() -> collapseActionView
    321:321:boolean expandActionView() -> expandActionView
    312:316:android.view.ActionProvider getActionProvider() -> getActionProvider
    291:295:android.view.View getActionView() -> getActionView
    188:188:int getAlphabeticModifiers() -> getAlphabeticModifiers
    183:183:char getAlphabeticShortcut() -> getAlphabeticShortcut
    349:349:java.lang.CharSequence getContentDescription() -> getContentDescription
    70:70:int getGroupId() -> getGroupId
    120:120:android.graphics.drawable.Drawable getIcon() -> getIcon
    371:371:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    382:382:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    131:131:android.content.Intent getIntent() -> getIntent
    65:65:int getItemId() -> getItemId
    253:253:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    166:166:int getNumericModifiers() -> getNumericModifiers
    161:161:char getNumericShortcut() -> getNumericShortcut
    75:75:int getOrder() -> getOrder
    241:241:android.view.SubMenu getSubMenu() -> getSubMenu
    92:92:java.lang.CharSequence getTitle() -> getTitle
    103:103:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    360:360:java.lang.CharSequence getTooltipText() -> getTooltipText
    236:236:boolean hasSubMenu() -> hasSubMenu
    331:331:boolean isActionViewExpanded() -> isActionViewExpanded
    199:199:boolean isCheckable() -> isCheckable
    210:210:boolean isChecked() -> isChecked
    231:231:boolean isEnabled() -> isEnabled
    220:220:boolean isVisible() -> isVisible
    301:307:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    269:273:android.view.MenuItem setActionView(android.view.View) -> setActionView
    279:286:android.view.MenuItem setActionView(int) -> setActionView
    171:172:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    177:178:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    193:194:android.view.MenuItem setCheckable(boolean) -> setCheckable
    204:205:android.view.MenuItem setChecked(boolean) -> setChecked
    343:344:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    225:226:android.view.MenuItem setEnabled(boolean) -> setEnabled
    387:395:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    108:109:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    114:115:android.view.MenuItem setIcon(int) -> setIcon
    365:366:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    376:377:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    125:126:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    149:150:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    155:156:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    336:338:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    246:248:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    136:137:android.view.MenuItem setShortcut(char,char) -> setShortcut
    143:144:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    258:259:void setShowAsAction(int) -> setShowAsAction
    263:264:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    80:81:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    86:87:android.view.MenuItem setTitle(int) -> setTitle
    97:98:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    354:355:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    215:215:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper:
    432:435:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    449:449:boolean hasSubMenu() -> hasSubMenu
    439:439:android.view.View onCreateActionView() -> onCreateActionView
    444:444:boolean onPerformDefaultAction() -> onPerformDefaultAction
    454:455:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB -> androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB:
    463:465:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    479:479:boolean isVisible() -> isVisible
    495:498:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
    469:469:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    474:474:boolean overridesItemVisibility() -> overridesItemVisibility
    489:491:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> setVisibilityListener
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper:
    512:515:void <init>(android.view.View) -> <init>
    528:528:android.view.View getWrappedView() -> getWrappedView
    524:525:void onActionViewCollapsed() -> onActionViewCollapsed
    519:520:void onActionViewExpanded() -> onActionViewExpanded
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper:
    414:416:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnActionExpandListener) -> <init>
    425:425:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    420:420:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper:
    401:403:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnMenuItemClickListener) -> <init>
    407:407:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.menu.MenuPopup -> androidx.appcompat.view.menu.MenuPopup:
    39:39:void <init>() -> <init>
    217:217:boolean closeMenuOnSubMenuOpened() -> closeMenuOnSubMenuOpened
    113:113:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    108:108:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    78:78:android.graphics.Rect getEpicenterBounds() -> getEpicenterBounds
    99:99:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    143:172:int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int) -> measureIndividualMenuWidth
    123:132:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    71:72:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    202:213:boolean shouldPreserveIconSpacing(androidx.appcompat.view.menu.MenuBuilder) -> shouldPreserveIconSpacing
    184:187:androidx.appcompat.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter) -> toMenuAdapter
androidx.appcompat.view.menu.MenuPopupHelper -> androidx.appcompat.view.menu.MenuPopupHelper:
    83:84:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int) -> <init>
    64:343:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int,int) -> <init>
    233:268:androidx.appcompat.view.menu.MenuPopup createPopup() -> createPopup
    307:310:void dismiss() -> dismiss
    164:167:androidx.appcompat.view.menu.MenuPopup getPopup() -> getPopup
    329:329:boolean isShowing() -> isShowing
    321:326:void onDismiss() -> onDismiss
    109:110:void setAnchorView(android.view.View) -> setAnchorView
    122:126:void setForceShowIcon(boolean) -> setForceShowIcon
    136:137:void setGravity(int) -> setGravity
    98:99:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    334:338:void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setPresenterCallback
    147:150:void show() -> show
    272:300:void showPopup(int,int,boolean,boolean) -> showPopup
    177:186:boolean tryShow() -> tryShow
    213:222:boolean tryShow(int,int) -> tryShow
androidx.appcompat.view.menu.MenuPopupHelper$1 -> androidx.appcompat.view.menu.MenuPopupHelper$1:
    343:343:void <init>(androidx.appcompat.view.menu.MenuPopupHelper) -> <init>
    346:347:void onDismiss() -> onDismiss
androidx.appcompat.view.menu.MenuPopupHelper$Api17Impl -> androidx.appcompat.view.menu.MenuPopupHelper$Api17Impl:
    365:366:void getRealSize(android.view.Display,android.graphics.Point) -> getRealSize
androidx.appcompat.view.menu.MenuWrapperICS -> androidx.appcompat.view.menu.MenuWrapperICS:
    41:46:void <init>(android.content.Context,androidx.core.internal.view.SupportMenu) -> <init>
    50:50:android.view.MenuItem add(java.lang.CharSequence) -> add
    55:55:android.view.MenuItem add(int) -> add
    60:60:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    65:65:android.view.MenuItem add(int,int,int,int) -> add
    92:106:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    70:70:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    75:75:android.view.SubMenu addSubMenu(int) -> addSubMenu
    80:80:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    85:86:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    123:125:void clear() -> clear
    164:165:void close() -> close
    149:149:android.view.MenuItem findItem(int) -> findItem
    159:159:android.view.MenuItem getItem(int) -> getItem
    144:144:boolean hasVisibleItems() -> hasVisibleItems
    174:174:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    179:179:boolean performIdentifierAction(int,int) -> performIdentifierAction
    169:169:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    117:119:void removeGroup(int) -> removeGroup
    111:113:void removeItem(int) -> removeItem
    129:130:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    139:140:void setGroupEnabled(int,boolean) -> setGroupEnabled
    134:135:void setGroupVisible(int,boolean) -> setGroupVisible
    184:185:void setQwertyMode(boolean) -> setQwertyMode
    154:154:int size() -> size
androidx.appcompat.view.menu.StandardMenuPopup -> androidx.appcompat.view.menu.StandardMenuPopup:
    46:46:void <clinit>() -> <clinit>
    60:136:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,int,int,boolean) -> <init>
    223:223:void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> addMenu
    215:218:void dismiss() -> dismiss
    311:311:boolean flagActionItems() -> flagActionItems
    344:344:android.widget.ListView getListView() -> getListView
    227:227:boolean isShowing() -> isShowing
    301:307:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    232:245:void onDismiss() -> onDismiss
    330:334:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    263:295:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    325:326:void setAnchorView(android.view.View) -> setAnchorView
    258:259:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    140:141:void setForceShowIcon(boolean) -> setForceShowIcon
    145:146:void setGravity(int) -> setGravity
    350:351:void setHorizontalOffset(int) -> setHorizontalOffset
    339:340:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    360:361:void setShowTitle(boolean) -> setShowTitle
    355:356:void setVerticalOffset(int) -> setVerticalOffset
    208:211:void show() -> show
    149:203:boolean tryShow() -> tryShow
    249:254:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.StandardMenuPopup$1 -> androidx.appcompat.view.menu.StandardMenuPopup$1:
    61:61:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    67:76:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.StandardMenuPopup$2 -> androidx.appcompat.view.menu.StandardMenuPopup$2:
    80:80:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    83:83:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    87:92:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.SubMenuBuilder -> androidx.appcompat.view.menu.SubMenuBuilder:
    43:47:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    138:138:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    90:91:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    133:133:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    143:147:java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    75:75:android.view.MenuItem getItem() -> getItem
    70:70:android.view.Menu getParentMenu() -> getParentMenu
    85:85:androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    157:157:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    56:56:boolean isQwertyMode() -> isQwertyMode
    66:66:boolean isShortcutsVisible() -> isShortcutsVisible
    80:81:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    152:153:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    108:108:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    113:113:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    118:118:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    123:123:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    128:128:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    96:97:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    102:103:android.view.SubMenu setIcon(int) -> setIcon
    51:52:void setQwertyMode(boolean) -> setQwertyMode
androidx.appcompat.view.menu.SubMenuWrapperICS -> androidx.appcompat.view.menu.SubMenuWrapperICS:
    39:41:void <init>(android.content.Context,androidx.core.internal.view.SupportSubMenu) -> <init>
    75:76:void clearHeader() -> clearHeader
    92:92:android.view.MenuItem getItem() -> getItem
    57:58:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    63:64:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    45:46:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    51:52:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    69:70:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    80:81:android.view.SubMenu setIcon(int) -> setIcon
    86:87:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
androidx.appcompat.widget.AbsActionBarView -> androidx.appcompat.widget.AbsActionBarView:
    58:59:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    39:71:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    36:36:void access$001(androidx.appcompat.widget.AbsActionBarView,int) -> access$001
    36:36:void access$101(androidx.appcompat.widget.AbsActionBarView,int) -> access$101
    153:156:int getAnimatedVisibility() -> getAnimatedVisibility
    146:146:int getContentHeight() -> getContentHeight
    248:254:int measureChildView(android.view.View,int,int,int) -> measureChildView
    258:258:int next(int,int,boolean) -> next
    75:87:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    120:137:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    96:112:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    262:272:int positionChild(android.view.View,int,int,int,boolean) -> positionChild
    141:143:void setContentHeight(int) -> setContentHeight
    187:193:void setVisibility(int) -> setVisibility
    160:176:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener -> androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener:
    275:276:void <init>(androidx.appcompat.widget.AbsActionBarView) -> <init>
    302:303:void onAnimationCancel(android.view.View) -> onAnimationCancel
    294:298:void onAnimationEnd(android.view.View) -> onAnimationEnd
    288:290:void onAnimationStart(android.view.View) -> onAnimationStart
    281:283:androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int) -> withFinalVisibility
androidx.appcompat.widget.ActionBarBackgroundDrawable -> androidx.appcompat.widget.ActionBarBackgroundDrawable:
    32:34:void <init>(androidx.appcompat.widget.ActionBarContainer) -> <init>
    38:50:void draw(android.graphics.Canvas) -> draw
    62:62:int getOpacity() -> getOpacity
    68:78:void getOutline(android.graphics.Outline) -> getOutline
    54:54:void setAlpha(int) -> setAlpha
    58:58:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
androidx.appcompat.widget.ActionBarBackgroundDrawable$Api21Impl -> androidx.appcompat.widget.ActionBarBackgroundDrawable$Api21Impl:
    87:88:void getOutline(android.graphics.drawable.Drawable,android.graphics.Outline) -> getOutline
androidx.appcompat.widget.ActionBarContainer -> androidx.appcompat.widget.ActionBarContainer:
    60:81:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    169:179:void drawableStateChanged() -> drawableStateChanged
    268:269:int getMeasuredHeightWithMargins(android.view.View) -> getMeasuredHeightWithMargins
    244:244:android.view.View getTabContainer() -> getTabContainer
    264:264:boolean isCollapsed(android.view.View) -> isCollapsed
    183:193:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    85:88:void onFinishInflate() -> onFinishInflate
    223:226:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    210:210:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    304:348:void onLayout(boolean,int,int,int,int) -> onLayout
    274:300:void onMeasure(int,int) -> onMeasure
    215:218:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    91:109:void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    133:150:void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    112:130:void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    230:241:void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView) -> setTabContainer
    203:206:void setTransitioning(boolean) -> setTransitioning
    154:159:void setVisibility(int) -> setVisibility
    251:251:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback) -> startActionModeForChild
    257:260:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int) -> startActionModeForChild
    163:164:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.ActionBarContainer$Api21Impl -> androidx.appcompat.widget.ActionBarContainer$Api21Impl:
    357:358:void invalidateOutline(androidx.appcompat.widget.ActionBarContainer) -> invalidateOutline
androidx.appcompat.widget.ActionBarContextView -> androidx.appcompat.widget.ActionBarContextView:
    58:59:void <init>(android.content.Context) -> <init>
    62:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:85:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    195:199:void closeMode() -> closeMode
    239:239:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    244:244:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    41:41:int getAnimatedVisibility() -> getAnimatedVisibility
    41:41:int getContentHeight() -> getContentHeight
    132:132:java.lang.CharSequence getSubtitle() -> getSubtitle
    128:128:java.lang.CharSequence getTitle() -> getTitle
    163:192:void initForMode(androidx.appcompat.view.ActionMode) -> initForMode
    136:160:void initTitle() -> initTitle
    371:371:boolean isTitleOptional() -> isTitleOptional
    202:209:void killMode() -> killMode
    89:94:void onDetachedFromWindow() -> onDetachedFromWindow
    41:41:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    329:356:void onLayout(boolean,int,int,int,int) -> onLayout
    249:325:void onMeasure(int,int) -> onMeasure
    41:41:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    98:99:void setContentHeight(int) -> setContentHeight
    102:114:void setCustomView(android.view.View) -> setCustomView
    123:125:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    117:120:void setTitle(java.lang.CharSequence) -> setTitle
    364:368:void setTitleOptional(boolean) -> setTitleOptional
    41:41:void setVisibility(int) -> setVisibility
    41:41:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    360:360:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    213:216:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarContextView$1 -> androidx.appcompat.widget.ActionBarContextView$1:
    172:172:void <init>(androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode) -> <init>
    175:176:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ActionBarOverlayLayout -> androidx.appcompat.widget.ActionBarOverlayLayout:
    147:147:void <clinit>() -> <clinit>
    71:163:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    741:743:void addActionBarHideOffset() -> addActionBarHideOffset
    287:305:boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean) -> applyInsets
    822:823:boolean canShowOverflowMenu() -> canShowOverflowMenu
    404:404:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    876:878:void dismissPopups() -> dismissPopups
    543:552:void draw(android.graphics.Canvas) -> draw
    311:313:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    63:63:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    389:389:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    63:63:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    394:394:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    399:399:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    707:707:int getActionBarHideOffset() -> getActionBarHideOffset
    682:688:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    670:670:int getNestedScrollAxes() -> getNestedScrollAxes
    765:766:java.lang.CharSequence getTitle() -> getTitle
    718:723:void haltActionBarHideOffsetAnimations() -> haltActionBarHideOffsetAnimations
    846:847:boolean hideOverflowMenu() -> hideOverflowMenu
    166:176:void init(android.content.Context) -> init
    771:783:void initFeature(int) -> initFeature
    211:211:boolean isInOverlayMode() -> isInOverlayMode
    834:835:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    828:829:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    347:384:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets) -> onApplyWindowInsets
    241:244:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    180:182:void onDetachedFromWindow() -> onDetachedFromWindow
    520:539:void onLayout(boolean,int,int,int,int) -> onLayout
    410:516:void onMeasure(int,int) -> onMeasure
    646:655:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    665:665:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    598:601:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    661:661:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    564:565:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    591:594:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    626:628:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    576:579:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    615:621:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    571:571:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    607:610:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    583:586:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    632:642:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    253:274:void onWindowSystemUiVisibilityChanged(int) -> onWindowSystemUiVisibilityChanged
    278:283:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    731:733:void postAddActionBarHideOffset() -> postAddActionBarHideOffset
    726:728:void postRemoveActionBarHideOffset() -> postRemoveActionBarHideOffset
    674:679:void pullChildren() -> pullChildren
    736:738:void removeActionBarHideOffset() -> removeActionBarHideOffset
    711:715:void setActionBarHideOffset(int) -> setActionBarHideOffset
    185:196:void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback) -> setActionBarVisibilityCallback
    215:216:void setHasNonEmbeddedTabs(boolean) -> setHasNonEmbeddedTabs
    693:700:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    804:806:void setIcon(int) -> setIcon
    810:812:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    816:818:void setLogo(int) -> setLogo
    858:860:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    852:854:void setMenuPrepared() -> setMenuPrepared
    199:208:void setOverlayMode(boolean) -> setOverlayMode
    237:237:void setShowingForActionMode(boolean) -> setShowingForActionMode
    788:788:void setUiOptions(int) -> setUiOptions
    753:755:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    759:761:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    556:556:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    746:748:boolean shouldHideActionBarOnFling(float) -> shouldHideActionBarOnFling
    840:841:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarOverlayLayout$1 -> androidx.appcompat.widget.ActionBarOverlayLayout$1:
    114:114:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    123:125:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    117:119:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.appcompat.widget.ActionBarOverlayLayout$2 -> androidx.appcompat.widget.ActionBarOverlayLayout$2:
    128:128:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    131:134:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$3 -> androidx.appcompat.widget.ActionBarOverlayLayout$3:
    137:137:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    140:144:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams -> androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams:
    882:883:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    886:887:void <init>(int,int) -> <init>
    890:891:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.widget.ActionMenuPresenter -> androidx.appcompat.widget.ActionMenuPresenter:
    75:88:void <init>(android.content.Context) -> <init>
    54:54:androidx.appcompat.view.menu.MenuBuilder access$000(androidx.appcompat.widget.ActionMenuPresenter) -> access$000
    54:54:androidx.appcompat.view.menu.MenuBuilder access$100(androidx.appcompat.widget.ActionMenuPresenter) -> access$100
    54:54:androidx.appcompat.view.menu.MenuView access$200(androidx.appcompat.widget.ActionMenuPresenter) -> access$200
    54:54:androidx.appcompat.view.menu.MenuBuilder access$300(androidx.appcompat.widget.ActionMenuPresenter) -> access$300
    54:54:androidx.appcompat.view.menu.MenuBuilder access$400(androidx.appcompat.widget.ActionMenuPresenter) -> access$400
    54:54:androidx.appcompat.view.menu.MenuBuilder access$500(androidx.appcompat.widget.ActionMenuPresenter) -> access$500
    54:54:androidx.appcompat.view.menu.MenuView access$600(androidx.appcompat.widget.ActionMenuPresenter) -> access$600
    207:217:void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView) -> bindItemView
    373:375:boolean dismissPopupMenus() -> dismissPopupMenus
    275:276:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    317:328:android.view.View findViewForItem(android.view.MenuItem) -> findViewForItem
    413:543:boolean flagActionItems() -> flagActionItems
    191:202:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    181:186:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    171:176:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    354:365:boolean hideOverflowMenu() -> hideOverflowMenu
    384:388:boolean hideSubMenus() -> hideSubMenus
    92:130:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    399:399:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    395:395:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    548:550:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    133:139:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    281:313:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    158:159:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    586:588:void setMenuView(androidx.appcompat.widget.ActionMenuView) -> setMenuView
    162:168:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    148:150:void setReserveOverflow(boolean) -> setReserveOverflow
    221:221:boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl) -> shouldIncludeItem
    336:345:boolean showOverflowMenu() -> showOverflowMenu
    226:271:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu -> androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu:
    733:743:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View) -> <init>
    747:751:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback -> androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback:
    800:801:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    805:805:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable -> androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable:
    782:784:void <init>(androidx.appcompat.widget.ActionMenuPresenter,androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup) -> <init>
    788:796:void run() -> run
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton -> androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton:
    628:667:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context) -> <init>
    687:687:boolean needsDividerAfter() -> needsDividerAfter
    682:682:boolean needsDividerBefore() -> needsDividerBefore
    671:677:boolean performClick() -> performClick
    692:709:boolean setFrame(int,int,int,int) -> setFrame
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1 -> androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1:
    638:638:void <init>(androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    641:645:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    650:651:boolean onForwardingStarted() -> onForwardingStarted
    659:664:boolean onForwardingStopped() -> onForwardingStopped
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup -> androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup:
    715:719:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean) -> <init>
    723:729:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback -> androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback:
    755:756:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    769:776:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    760:764:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.widget.ActionMenuView -> androidx.appcompat.widget.ActionMenuView:
    79:80:void <init>(android.content.Context) -> <init>
    83:90:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    610:610:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    723:726:void dismissPopupMenus() -> dismissPopupMenus
    750:750:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    50:50:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    50:50:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    583:586:androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    50:50:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    50:50:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    50:50:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    50:50:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    591:591:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    596:605:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    616:618:androidx.appcompat.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> generateOverflowButtonLayoutParams
    651:663:android.view.Menu getMenu() -> getMenu
    565:566:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    116:116:int getPopupTheme() -> getPopupTheme
    632:632:int getWindowAnimations() -> getWindowAnimations
    733:745:boolean hasSupportDividerBeforeChildAt(int) -> hasSupportDividerBeforeChildAt
    700:700:boolean hideOverflowMenu() -> hideOverflowMenu
    639:640:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    625:625:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    716:716:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    710:710:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    572:572:boolean isOverflowReserved() -> isOverflowReserved
    407:437:int measureChildForCells(android.view.View,int,int,int,int) -> measureChildForCells
    131:141:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    544:546:void onDetachedFromWindow() -> onDetachedFromWindow
    442:540:void onLayout(boolean,int,int,int,int) -> onLayout
    150:177:void onMeasure(int,int) -> onMeasure
    181:390:void onMeasureExactFormat(int,int) -> onMeasureExactFormat
    682:682:androidx.appcompat.view.menu.MenuBuilder peekMenu() -> peekMenu
    756:757:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    672:674:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    144:145:void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener) -> setOnMenuItemClickListener
    554:556:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    578:579:void setOverflowReserved(boolean) -> setOverflowReserved
    100:108:void setPopupTheme(int) -> setPopupTheme
    125:127:void setPresenter(androidx.appcompat.widget.ActionMenuPresenter) -> setPresenter
    691:691:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback -> androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback:
    793:794:void <init>() -> <init>
    798:798:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    802:802:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.widget.ActionMenuView$LayoutParams -> androidx.appcompat.widget.ActionMenuView$LayoutParams:
    833:834:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    837:838:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    841:843:void <init>(androidx.appcompat.widget.ActionMenuView$LayoutParams) -> <init>
    846:848:void <init>(int,int) -> <init>
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback -> androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback:
    775:776:void <init>(androidx.appcompat.widget.ActionMenuView) -> <init>
    780:781:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    786:789:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.widget.ActivityChooserView$InnerLayout -> androidx.appcompat.widget.ActivityChooserView$InnerLayout:
    873:873:void <clinit>() -> <clinit>
    878:882:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.appcompat.widget.AlertDialogLayout -> androidx.appcompat.widget.AlertDialogLayout:
    59:60:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    217:236:void forceUniformWidth(int,int) -> forceUniformWidth
    265:345:void onLayout(boolean,int,int,int,int) -> onLayout
    64:68:void onMeasure(int,int) -> onMeasure
    248:260:int resolveMinimumHeight(android.view.View) -> resolveMinimumHeight
    348:349:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    71:206:boolean tryOnMeasure(int,int) -> tryOnMeasure
androidx.appcompat.widget.AppCompatAutoCompleteTextView -> androidx.appcompat.widget.AppCompatAutoCompleteTextView:
    65:65:void <clinit>() -> <clinit>
    79:80:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    84:105:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    226:233:void drawableStateChanged() -> drawableStateChanged
    264:265:android.view.ActionMode$Callback getCustomSelectionActionModeCallback() -> getCustomSelectionActionModeCallback
    192:193:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    220:221:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    322:322:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    365:365:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    128:145:void initEmojiKeyListener(androidx.appcompat.widget.AppCompatEmojiEditTextHelper) -> initEmojiKeyListener
    245:247:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    162:166:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    154:158:void setBackgroundResource(int) -> setBackgroundResource
    292:296:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    302:306:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    257:259:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    149:150:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    281:282:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    276:277:void setKeyListener(android.text.method.KeyListener) -> setKeyListener
    177:180:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    205:208:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    345:347:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    385:387:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    237:241:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatBackgroundHelper -> androidx.appcompat.widget.AppCompatBackgroundHelper:
    37:46:void <init>(android.view.View) -> <init>
    178:200:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    123:140:void applySupportBackgroundTint() -> applySupportBackgroundTint
    105:105:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    119:119:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    49:77:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    89:93:void onSetBackgroundDrawable(android.graphics.drawable.Drawable) -> onSetBackgroundDrawable
    80:86:void onSetBackgroundResource(int) -> onSetBackgroundResource
    143:153:void setInternalBackgroundTint(android.content.res.ColorStateList) -> setInternalBackgroundTint
    96:102:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    109:116:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    156:160:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
androidx.appcompat.widget.AppCompatButton -> androidx.appcompat.widget.AppCompatButton:
    75:76:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    80:93:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    169:176:void drawableStateChanged() -> drawableStateChanged
    337:344:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    321:328:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    305:312:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    353:360:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    287:296:int getAutoSizeTextType() -> getAutoSizeTextType
    392:393:android.view.ActionMode$Callback getCustomSelectionActionModeCallback() -> getCustomSelectionActionModeCallback
    453:456:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    135:136:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    163:164:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    415:415:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    437:437:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    188:190:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    194:196:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    200:204:void onLayout(boolean,int,int,int,int) -> onLayout
    219:223:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    461:463:void setAllCaps(boolean) -> setAllCaps
    251:260:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    269:276:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    232:239:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    105:109:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    97:101:void setBackgroundResource(int) -> setBackgroundResource
    385:387:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    468:469:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    443:444:void setFilters(android.text.InputFilter[]) -> setFilters
    373:376:void setSupportAllCaps(boolean) -> setSupportAllCaps
    120:123:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    148:151:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    403:405:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    425:427:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    180:184:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    208:215:void setTextSize(int,float) -> setTextSize
androidx.appcompat.widget.AppCompatCheckBox -> androidx.appcompat.widget.AppCompatCheckBox:
    74:75:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    79:94:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    251:258:void drawableStateChanged() -> drawableStateChanged
    122:125:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    101:104:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    201:202:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    229:230:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    148:150:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    173:175:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    314:314:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    357:357:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    267:269:void setAllCaps(boolean) -> setAllCaps
    235:239:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    243:247:void setBackgroundResource(int) -> setBackgroundResource
    109:113:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    117:118:void setButtonDrawable(int) -> setButtonDrawable
    284:288:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    294:298:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    273:274:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    262:263:void setFilters(android.text.InputFilter[]) -> setFilters
    186:189:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    214:217:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    135:138:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    160:163:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
    337:339:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    377:379:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
androidx.appcompat.widget.AppCompatCheckedTextView -> androidx.appcompat.widget.AppCompatCheckedTextView:
    82:83:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    87:103:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    253:263:void drawableStateChanged() -> drawableStateChanged
    286:287:android.view.ActionMode$Callback getCustomSelectionActionModeCallback() -> getCustomSelectionActionModeCallback
    296:299:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    195:196:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    223:224:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    140:142:android.content.res.ColorStateList getSupportCheckMarkTintList() -> getSupportCheckMarkTintList
    167:169:android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode() -> getSupportCheckMarkTintMode
    352:352:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    395:395:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    268:268:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    304:306:void setAllCaps(boolean) -> setAllCaps
    229:233:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    237:241:void setBackgroundResource(int) -> setBackgroundResource
    107:111:void setCheckMarkDrawable(android.graphics.drawable.Drawable) -> setCheckMarkDrawable
    115:116:void setCheckMarkDrawable(int) -> setCheckMarkDrawable
    322:326:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    332:336:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    279:281:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    311:312:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    180:183:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    208:211:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    126:129:void setSupportCheckMarkTintList(android.content.res.ColorStateList) -> setSupportCheckMarkTintList
    153:156:void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode) -> setSupportCheckMarkTintMode
    375:377:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    415:417:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    245:249:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatCheckedTextViewHelper -> androidx.appcompat.widget.AppCompatCheckedTextViewHelper:
    43:52:void <init>(android.widget.CheckedTextView) -> <init>
    133:151:void applyCheckMarkTint() -> applyCheckMarkTint
    108:108:android.content.res.ColorStateList getSupportCheckMarkTintList() -> getSupportCheckMarkTintList
    119:119:android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode() -> getSupportCheckMarkTintMode
    55:98:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    123:130:void onSetCheckMarkDrawable() -> onSetCheckMarkDrawable
    101:105:void setSupportCheckMarkTintList(android.content.res.ColorStateList) -> setSupportCheckMarkTintList
    112:116:void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode) -> setSupportCheckMarkTintMode
androidx.appcompat.widget.AppCompatCompoundButtonHelper -> androidx.appcompat.widget.AppCompatCompoundButtonHelper:
    39:48:void <init>(android.widget.CompoundButton) -> <init>
    127:145:void applyButtonTint() -> applyButtonTint
    148:156:int getCompoundPaddingLeft(int) -> getCompoundPaddingLeft
    102:102:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    113:113:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    51:92:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    117:124:void onSetButtonDrawable() -> onSetButtonDrawable
    95:99:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    106:110:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatDrawableManager -> androidx.appcompat.widget.AppCompatDrawableManager:
    54:54:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    51:51:android.graphics.PorterDuff$Mode access$000() -> access$000
    465:469:androidx.appcompat.widget.AppCompatDrawableManager get() -> get
    475:475:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    480:480:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    507:507:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    498:498:android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    483:485:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    58:460:void preload() -> preload
    502:503:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> tintDrawable
androidx.appcompat.widget.AppCompatDrawableManager$1 -> androidx.appcompat.widget.AppCompatDrawableManager$1:
    62:128:void <init>() -> <init>
    360:365:boolean arrayContains(int[],int) -> arrayContains
    143:143:android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context) -> createBorderlessButtonColorStateList
    154:181:android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int) -> createButtonColorStateList
    148:149:android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context) -> createColoredButtonColorStateList
    136:137:android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context) -> createDefaultButtonColorStateList
    234:254:android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int) -> createDrawableFor
    185:228:android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context) -> createSwitchThumbColorStateList
    260:309:android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int) -> getRatingBarLayerDrawable
    372:396:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int) -> getTintListForDrawableRes
    450:456:android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int) -> getTintModeForDrawableRes
    313:318:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode) -> setPorterDuffColorFilter
    323:356:boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawable
    402:445:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
androidx.appcompat.widget.AppCompatEditText -> androidx.appcompat.widget.AppCompatEditText:
    92:93:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    97:114:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    244:251:void drawableStateChanged() -> drawableStateChanged
    301:302:android.view.ActionMode$Callback getCustomSelectionActionModeCallback() -> getCustomSelectionActionModeCallback
    210:211:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    238:239:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    433:433:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    476:476:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    76:76:java.lang.CharSequence getText() -> getText
    162:167:android.text.Editable getText() -> getText
    329:332:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    137:154:void initEmojiKeyListener(androidx.appcompat.widget.AppCompatEmojiEditTextHelper) -> initEmojiKeyListener
    270:284:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    337:340:boolean onDragEvent(android.view.DragEvent) -> onDragEvent
    376:376:androidx.core.view.ContentInfoCompat onReceiveContent(androidx.core.view.ContentInfoCompat) -> onReceiveContent
    351:354:boolean onTextContextMenuItem(int) -> onTextContextMenuItem
    180:184:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    172:176:void setBackgroundResource(int) -> setBackgroundResource
    403:407:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    413:417:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    294:296:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    392:393:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    387:388:void setKeyListener(android.text.method.KeyListener) -> setKeyListener
    195:198:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    223:226:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    456:458:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    496:498:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    255:259:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    311:316:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatEmojiEditTextHelper -> androidx.appcompat.widget.AppCompatEmojiEditTextHelper:
    50:54:void <init>(android.widget.EditText) -> <init>
    123:126:android.text.method.KeyListener getKeyListener(android.text.method.KeyListener) -> getKeyListener
    86:86:boolean isEmojiCapableKeyListener(android.text.method.KeyListener) -> isEmojiCapableKeyListener
    63:75:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    148:148:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    96:97:void setEnabled(boolean) -> setEnabled
androidx.appcompat.widget.AppCompatEmojiTextHelper -> androidx.appcompat.widget.AppCompatEmojiTextHelper:
    41:44:void <init>(android.widget.TextView) -> <init>
    99:99:android.text.InputFilter[] getFilters(android.text.InputFilter[]) -> getFilters
    52:64:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    109:110:void setAllCaps(boolean) -> setAllCaps
    77:78:void setEnabled(boolean) -> setEnabled
androidx.appcompat.widget.AppCompatHintHelper -> androidx.appcompat.widget.AppCompatHintHelper:
    28:40:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.view.View) -> onCreateInputConnection
androidx.appcompat.widget.AppCompatImageButton -> androidx.appcompat.widget.AppCompatImageButton:
    73:74:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    66:87:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    256:263:void drawableStateChanged() -> drawableStateChanged
    167:168:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    195:196:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    222:223:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    250:251:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    267:267:boolean hasOverlappingRendering() -> hasOverlappingRendering
    137:141:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    129:133:void setBackgroundResource(int) -> setBackgroundResource
    113:117:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    97:109:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    272:274:void setImageLevel(int) -> setImageLevel
    92:93:void setImageResource(int) -> setImageResource
    121:125:void setImageURI(android.net.Uri) -> setImageURI
    152:155:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    180:183:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    207:210:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    235:238:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatImageHelper -> androidx.appcompat.widget.AppCompatImageHelper:
    46:50:void <init>(android.widget.ImageView) -> <init>
    201:223:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    238:241:void applyImageLevel() -> applyImageLevel
    142:163:void applySupportImageTint() -> applySupportImageTint
    124:124:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    138:138:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    104:111:boolean hasOverlappingRendering() -> hasOverlappingRendering
    53:87:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    231:232:void obtainLevelFromDrawable(android.graphics.drawable.Drawable) -> obtainLevelFromDrawable
    90:101:void setImageResource(int) -> setImageResource
    115:121:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    128:135:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    179:183:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
androidx.appcompat.widget.AppCompatImageView -> androidx.appcompat.widget.AppCompatImageView:
    69:70:void <init>(android.content.Context) -> <init>
    73:74:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    66:87:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    268:275:void drawableStateChanged() -> drawableStateChanged
    178:179:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    206:207:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    234:235:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    262:263:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    279:279:boolean hasOverlappingRendering() -> hasOverlappingRendering
    148:152:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    140:144:void setBackgroundResource(int) -> setBackgroundResource
    124:128:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    108:120:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    284:286:void setImageLevel(int) -> setImageLevel
    100:104:void setImageResource(int) -> setImageResource
    132:136:void setImageURI(android.net.Uri) -> setImageURI
    163:166:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    191:194:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    219:222:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    247:250:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView -> androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView:
    64:64:void <clinit>() -> <clinit>
    79:80:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    84:105:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    226:233:void drawableStateChanged() -> drawableStateChanged
    192:193:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    220:221:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    304:304:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    347:347:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    128:145:void initEmojiKeyListener(androidx.appcompat.widget.AppCompatEmojiEditTextHelper) -> initEmojiKeyListener
    245:247:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    162:166:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    154:158:void setBackgroundResource(int) -> setBackgroundResource
    274:278:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    284:288:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    149:150:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    263:264:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    258:259:void setKeyListener(android.text.method.KeyListener) -> setKeyListener
    177:180:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    205:208:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    327:329:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    367:369:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    237:241:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatPopupWindow -> androidx.appcompat.widget.AppCompatPopupWindow:
    34:34:void <clinit>() -> <clinit>
    46:48:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    51:60:void init(android.content.Context,android.util.AttributeSet,int,int) -> init
    90:95:void setSupportOverlapAnchor(boolean) -> setSupportOverlapAnchor
    64:69:void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    73:78:void showAsDropDown(android.view.View,int,int,int) -> showAsDropDown
    82:87:void update(android.view.View,int,int,int,int) -> update
androidx.appcompat.widget.AppCompatProgressBarHelper -> androidx.appcompat.widget.AppCompatProgressBarHelper:
    41:41:void <clinit>() -> <clinit>
    50:52:void <init>(android.widget.ProgressBar) -> <init>
    147:148:android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    152:152:android.graphics.Bitmap getSampleTile() -> getSampleTile
    55:69:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    77:120:android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> tileify
    129:143:android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> tileifyIndeterminate
androidx.appcompat.widget.AppCompatProgressBarHelper$Api23Impl -> androidx.appcompat.widget.AppCompatProgressBarHelper$Api23Impl:
    165:174:void transferLayerProperties(android.graphics.drawable.LayerDrawable,android.graphics.drawable.LayerDrawable,int) -> transferLayerProperties
androidx.appcompat.widget.AppCompatRadioButton -> androidx.appcompat.widget.AppCompatRadioButton:
    74:75:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    78:92:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    250:257:void drawableStateChanged() -> drawableStateChanged
    120:123:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    99:102:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    200:201:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    228:229:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    146:148:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    171:173:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    313:313:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    356:356:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    266:268:void setAllCaps(boolean) -> setAllCaps
    234:238:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    242:246:void setBackgroundResource(int) -> setBackgroundResource
    107:111:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    115:116:void setButtonDrawable(int) -> setButtonDrawable
    283:287:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    293:297:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    272:273:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    261:262:void setFilters(android.text.InputFilter[]) -> setFilters
    185:188:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    213:216:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    133:136:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    158:161:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
    336:338:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    376:378:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
androidx.appcompat.widget.AppCompatRatingBar -> androidx.appcompat.widget.AppCompatRatingBar:
    46:47:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:57:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    60:69:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.AppCompatReceiveContentHelper -> androidx.appcompat.widget.AppCompatReceiveContentHelper:
    85:113:boolean maybeHandleDragEventViaPerformReceiveContent(android.view.View,android.view.DragEvent) -> maybeHandleDragEventViaPerformReceiveContent
    59:73:boolean maybeHandleMenuActionViaPerformReceiveContent(android.widget.TextView,int) -> maybeHandleMenuActionViaPerformReceiveContent
    158:165:android.app.Activity tryGetActivity(android.view.View) -> tryGetActivity
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl -> androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl:
    123:134:boolean onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity) -> onDropForTextView
    140:144:boolean onDropForView(android.view.DragEvent,android.view.View,android.app.Activity) -> onDropForView
androidx.appcompat.widget.AppCompatSeekBar -> androidx.appcompat.widget.AppCompatSeekBar:
    45:46:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    50:56:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    66:68:void drawableStateChanged() -> drawableStateChanged
    72:74:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    59:62:void onDraw(android.graphics.Canvas) -> onDraw
androidx.appcompat.widget.AppCompatSeekBarHelper -> androidx.appcompat.widget.AppCompatSeekBarHelper:
    36:44:void <init>(android.widget.SeekBar) -> <init>
    128:145:void applyTickMarkTint() -> applyTickMarkTint
    165:185:void drawTickMarks(android.graphics.Canvas) -> drawTickMarks
    154:159:void drawableStateChanged() -> drawableStateChanged
    148:151:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    48:77:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    80:96:void setTickMark(android.graphics.drawable.Drawable) -> setTickMark
androidx.appcompat.widget.AppCompatSpinner -> androidx.appcompat.widget.AppCompatSpinner:
    86:86:void <clinit>() -> <clinit>
    151:152:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    167:168:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    187:188:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    113:309:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme) -> <init>
    565:605:int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> compatMeasureContentWidth
    558:562:void drawableStateChanged() -> drawableStateChanged
    380:383:int getDropDownHorizontalOffset() -> getDropDownHorizontalOffset
    354:357:int getDropDownVerticalOffset() -> getDropDownVerticalOffset
    399:402:int getDropDownWidth() -> getDropDownWidth
    610:610:androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup() -> getInternalPopup
    335:338:android.graphics.drawable.Drawable getPopupBackground() -> getPopupBackground
    316:316:android.content.Context getPopupContext() -> getPopupContext
    479:479:java.lang.CharSequence getPrompt() -> getPrompt
    523:524:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    552:553:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    426:431:void onDetachedFromWindow() -> onDetachedFromWindow
    443:452:void onMeasure(int,int) -> onMeasure
    632:658:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    624:627:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    435:438:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    456:465:boolean performClick() -> performClick
    81:81:void setAdapter(android.widget.Adapter) -> setAdapter
    411:422:void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    492:496:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    484:488:void setBackgroundResource(int) -> setBackgroundResource
    364:370:void setDropDownHorizontalOffset(int) -> setDropDownHorizontalOffset
    345:350:void setDropDownVerticalOffset(int) -> setDropDownVerticalOffset
    390:395:void setDropDownWidth(int) -> setDropDownWidth
    321:326:void setPopupBackgroundDrawable(android.graphics.drawable.Drawable) -> setPopupBackgroundDrawable
    330:331:void setPopupBackgroundResource(int) -> setPopupBackgroundResource
    470:475:void setPrompt(java.lang.CharSequence) -> setPrompt
    508:511:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    537:540:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    614:619:void showPopup() -> showPopup
androidx.appcompat.widget.AppCompatSpinner$1 -> androidx.appcompat.widget.AppCompatSpinner$1:
    271:271:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.view.View,androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    274:274:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    280:283:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.widget.AppCompatSpinner$2 -> androidx.appcompat.widget.AppCompatSpinner$2:
    639:639:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    642:653:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$Api16Impl -> androidx.appcompat.widget.AppCompatSpinner$Api16Impl:
    1176:1177:void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> removeOnGlobalLayoutListener
androidx.appcompat.widget.AppCompatSpinner$Api17Impl -> androidx.appcompat.widget.AppCompatSpinner$Api17Impl:
    1146:1146:int getTextAlignment(android.view.View) -> getTextAlignment
    1156:1156:int getTextDirection(android.view.View) -> getTextDirection
    1151:1152:void setTextAlignment(android.view.View,int) -> setTextAlignment
    1161:1162:void setTextDirection(android.view.View,int) -> setTextDirection
androidx.appcompat.widget.AppCompatSpinner$Api23Impl -> androidx.appcompat.widget.AppCompatSpinner$Api23Impl:
    1132:1135:void setDropDownViewTheme(android.widget.ThemedSpinnerAdapter,android.content.res.Resources$Theme) -> setDropDownViewTheme
androidx.appcompat.widget.AppCompatSpinner$DialogPopup -> androidx.appcompat.widget.AppCompatSpinner$DialogPopup:
    863:863:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    871:875:void dismiss() -> dismiss
    942:942:android.graphics.drawable.Drawable getBackground() -> getBackground
    894:894:java.lang.CharSequence getHintText() -> getHintText
    952:952:int getHorizontalOffset() -> getHorizontalOffset
    947:947:int getVerticalOffset() -> getVerticalOffset
    879:879:boolean isShowing() -> isShowing
    918:923:void onClick(android.content.DialogInterface,int) -> onClick
    884:885:void setAdapter(android.widget.ListAdapter) -> setAdapter
    927:928:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    937:938:void setHorizontalOffset(int) -> setHorizontalOffset
    957:958:void setHorizontalOriginalOffset(int) -> setHorizontalOriginalOffset
    889:890:void setPromptText(java.lang.CharSequence) -> setPromptText
    932:933:void setVerticalOffset(int) -> setVerticalOffset
    899:914:void show(int,int) -> show
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter -> androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter:
    710:730:void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme) -> <init>
    783:787:boolean areAllItemsEnabled() -> areAllItemsEnabled
    734:734:int getCount() -> getCount
    754:755:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    739:739:java.lang.Object getItem(int) -> getItem
    744:744:long getItemId(int) -> getItemId
    807:807:int getItemViewType(int) -> getItemViewType
    749:749:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    812:812:int getViewTypeCount() -> getViewTypeCount
    760:760:boolean hasStableIds() -> hasStableIds
    817:817:boolean isEmpty() -> isEmpty
    797:801:boolean isEnabled(int) -> isEnabled
    765:768:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    772:775:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup:
    970:991:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int) -> <init>
    967:967:void access$001(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> access$001
    1011:1046:void computeContentWidth() -> computeContentWidth
    1001:1001:java.lang.CharSequence getHintText() -> getHintText
    1117:1117:int getHorizontalOriginalOffset() -> getHorizontalOriginalOffset
    1107:1107:boolean isVisibleToUser(android.view.View) -> isVisibleToUser
    995:997:void setAdapter(android.widget.ListAdapter) -> setAdapter
    1112:1113:void setHorizontalOriginalOffset(int) -> setHorizontalOriginalOffset
    1007:1008:void setPromptText(java.lang.CharSequence) -> setPromptText
    1050:1101:void show(int,int) -> show
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1:
    980:980:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,androidx.appcompat.widget.AppCompatSpinner) -> <init>
    983:989:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2:
    1076:1076:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    1079:1088:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3:
    1091:1091:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> <init>
    1094:1098:void onDismiss() -> onDismiss
androidx.appcompat.widget.AppCompatSpinner$SavedState -> androidx.appcompat.widget.AppCompatSpinner$SavedState:
    678:678:void <clinit>() -> <clinit>
    664:665:void <init>(android.os.Parcelable) -> <init>
    668:670:void <init>(android.os.Parcel) -> <init>
    674:676:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.AppCompatSpinner$SavedState$1 -> androidx.appcompat.widget.AppCompatSpinner$SavedState$1:
    679:679:void <init>() -> <init>
    679:679:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    682:682:androidx.appcompat.widget.AppCompatSpinner$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    679:679:java.lang.Object[] newArray(int) -> newArray
    687:687:androidx.appcompat.widget.AppCompatSpinner$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.AppCompatTextClassifierHelper -> androidx.appcompat.widget.AppCompatTextClassifierHelper:
    43:45:void <init>(android.widget.TextView) -> <init>
    63:66:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    52:53:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatTextClassifierHelper$Api26Impl -> androidx.appcompat.widget.AppCompatTextClassifierHelper$Api26Impl:
    78:83:android.view.textclassifier.TextClassifier getTextClassifier(android.widget.TextView) -> getTextClassifier
androidx.appcompat.widget.AppCompatTextHelper -> androidx.appcompat.widget.AppCompatTextHelper:
    75:83:void <init>(android.widget.TextView) -> <init>
    544:547:void applyCompoundDrawableTint(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo) -> applyCompoundDrawableTint
    526:541:void applyCompoundDrawablesTints() -> applyCompoundDrawablesTints
    582:583:void autoSizeText() -> autoSizeText
    551:558:androidx.appcompat.widget.TintInfo createTintInfo(android.content.Context,androidx.appcompat.widget.AppCompatDrawableManager,int) -> createTintInfo
    627:627:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    623:623:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    619:619:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    631:631:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    615:615:int getAutoSizeTextType() -> getAutoSizeTextType
    636:636:android.content.res.ColorStateList getCompoundDrawableTintList() -> getCompoundDrawableTintList
    650:650:android.graphics.PorterDuff$Mode getCompoundDrawableTintMode() -> getCompoundDrawableTintMode
    588:588:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    87:342:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    440:457:void onAsyncTypefaceReceived(java.lang.ref.WeakReference,android.graphics.Typeface) -> onAsyncTypefaceReceived
    564:567:void onLayout(boolean,int,int,int,int) -> onLayout
    522:523:void onSetCompoundDrawables() -> onSetCompoundDrawables
    460:515:void onSetTextAppearance(android.content.Context,int) -> onSetTextAppearance
    721:724:void populateSurroundingTextIfNeeded(android.widget.TextView,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> populateSurroundingTextIfNeeded
    518:519:void setAllCaps(boolean) -> setAllCaps
    604:606:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    610:611:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    596:597:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    640:646:void setCompoundDrawableTintList(android.content.res.ColorStateList) -> setCompoundDrawableTintList
    654:660:void setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode) -> setCompoundDrawableTintMode
    675:703:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    663:669:void setCompoundTints() -> setCompoundTints
    572:577:void setTextSize(int,float) -> setTextSize
    592:593:void setTextSizeInternal(int,float) -> setTextSizeInternal
    345:436:void updateTypefaceAndStyle(android.content.Context,androidx.appcompat.widget.TintTypedArray) -> updateTypefaceAndStyle
androidx.appcompat.widget.AppCompatTextHelper$1 -> androidx.appcompat.widget.AppCompatTextHelper$1:
    365:365:void <init>(androidx.appcompat.widget.AppCompatTextHelper,int,int,java.lang.ref.WeakReference) -> <init>
    380:380:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    368:375:void onFontRetrieved(android.graphics.Typeface) -> onFontRetrieved
androidx.appcompat.widget.AppCompatTextHelper$2 -> androidx.appcompat.widget.AppCompatTextHelper$2:
    446:446:void <init>(androidx.appcompat.widget.AppCompatTextHelper,android.widget.TextView,android.graphics.Typeface,int) -> <init>
    449:450:void run() -> run
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl -> androidx.appcompat.widget.AppCompatTextHelper$Api17Impl:
    793:793:android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView) -> getCompoundDrawablesRelative
    788:789:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    782:783:void setTextLocale(android.widget.TextView,java.util.Locale) -> setTextLocale
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl -> androidx.appcompat.widget.AppCompatTextHelper$Api24Impl:
    770:770:android.os.LocaleList forLanguageTags(java.lang.String) -> forLanguageTags
    765:766:void setTextLocales(android.widget.TextView,android.os.LocaleList) -> setTextLocales
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl -> androidx.appcompat.widget.AppCompatTextHelper$Api26Impl:
    739:739:int getAutoSizeStepGranularity(android.widget.TextView) -> getAutoSizeStepGranularity
    746:748:void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    753:754:void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    734:734:boolean setFontVariationSettings(android.widget.TextView,java.lang.String) -> setFontVariationSettings
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.widget.AppCompatTextHelper$Api26Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean androidx.appcompat.widget.AppCompatTextHelper$Api26Impl$$InternalSyntheticApiModelOutline$1$3b6436af3ec75dc700daef4146df3fad1f56767d9747c5619aeff5b5fa6d1acf$0.m(android.widget.TextView,java.lang.String) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl$$ExternalSyntheticApiModelOutline1 -> androidx.appcompat.widget.AppCompatTextHelper$Api26Impl$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.appcompat.widget.AppCompatTextHelper$Api26Impl$$InternalSyntheticApiModelOutline$1$70fe6e1b379c862ff315ab36ba6ac04e86cb0aee5eeb7ede73d7074c81d71aaf$0.m(android.widget.TextView,int,int,int,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl$$ExternalSyntheticApiModelOutline2 -> androidx.appcompat.widget.AppCompatTextHelper$Api26Impl$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int androidx.appcompat.widget.AppCompatTextHelper$Api26Impl$$InternalSyntheticApiModelOutline$1$e8ae67d0857ffdb3d45654ccd2137fdbc51d6ae1a423c5330562c6ab3f2a8338$0.m(android.widget.TextView) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl$$ExternalSyntheticApiModelOutline3 -> androidx.appcompat.widget.AppCompatTextHelper$Api26Impl$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.appcompat.widget.AppCompatTextHelper$Api26Impl$$InternalSyntheticApiModelOutline$1$f9508e16852f1fc13549afe13051cec907924380721fa4600ff045682209b0e1$0.m(android.widget.TextView,int[],int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextHelper$Api28Impl -> androidx.appcompat.widget.AppCompatTextHelper$Api28Impl:
    818:818:android.graphics.Typeface create(android.graphics.Typeface,int,boolean) -> create
androidx.appcompat.widget.AppCompatTextHelper$Api28Impl$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.widget.AppCompatTextHelper$Api28Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.graphics.Typeface androidx.appcompat.widget.AppCompatTextHelper$Api28Impl$$InternalSyntheticApiModelOutline$1$9e1dd7c7c8f74abfc34a78550c412890eea41679ebc2362e22cbcb839a843ad9$0.m(android.graphics.Typeface,int,boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextView -> androidx.appcompat.widget.AppCompatTextView:
    99:100:void <init>(android.content.Context) -> <init>
    103:104:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    93:123:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    538:547:void consumeTextFutureAndSetBlocking() -> consumeTextFutureAndSetBlocking
    240:247:void drawableStateChanged() -> drawableStateChanged
    412:419:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    393:400:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    374:381:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    431:438:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    353:362:int getAutoSizeTextType() -> getAutoSizeTextType
    497:498:android.view.ActionMode$Callback getCustomSelectionActionModeCallback() -> getCustomSelectionActionModeCallback
    131:134:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    470:470:int getFirstBaselineToTopHeight() -> getFirstBaselineToTopHeight
    475:475:int getLastBaselineToBottomHeight() -> getLastBaselineToBottomHeight
    177:178:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    205:206:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    690:690:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    733:733:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    551:552:java.lang.CharSequence getText() -> getText
    579:582:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    510:510:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat() -> getTextMetricsParamsCompat
    443:445:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    251:255:void onLayout(boolean,int,int,int,int) -> onLayout
    606:608:void onMeasure(int,int) -> onMeasure
    270:274:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    224:226:void setAllCaps(boolean) -> setAllCaps
    310:319:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    332:339:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    287:294:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    147:151:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    139:143:void setBackgroundResource(int) -> setBackgroundResource
    613:617:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    623:627:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    655:659:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    665:674:void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    632:636:void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesWithIntrinsicBounds
    640:649:void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesWithIntrinsicBounds
    490:492:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    230:231:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    219:220:void setFilters(android.text.InputFilter[]) -> setFilters
    450:455:void setFirstBaselineToTopHeight(int) -> setFirstBaselineToTopHeight
    460:466:void setLastBaselineToBottomHeight(int) -> setLastBaselineToBottomHeight
    480:481:void setLineHeight(int) -> setLineHeight
    534:535:void setPrecomputedText(androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    162:165:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    190:193:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    713:715:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    753:755:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    211:215:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    561:566:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
    598:602:void setTextFuture(java.util.concurrent.Future) -> setTextFuture
    521:522:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params) -> setTextMetricsParamsCompat
    259:266:void setTextSize(int,float) -> setTextSize
    759:778:void setTypeface(android.graphics.Typeface,int) -> setTypeface
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper:
    66:81:void <clinit>() -> <clinit>
    89:164:void <init>(android.widget.TextView) -> <init>
    605:639:void autoSizeText() -> autoSizeText
    512:536:int[] cleanupAutoSizePresetSizes(int[]) -> cleanupAutoSizePresetSizes
    642:648:void clearAutoSizeConfiguration() -> clearAutoSizeConfiguration
    741:742:android.text.StaticLayout createLayout(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> createLayout
    699:719:int findLargestTextSizeWhichFits(android.graphics.RectF) -> findLargestTextSizeWhichFits
    469:469:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    453:453:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    437:437:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    482:482:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    423:423:int getAutoSizeTextType() -> getAutoSizeTextType
    846:859:java.lang.reflect.Method getTextViewMethod(java.lang.String) -> getTextViewMethod
    724:731:void initTempTextPaint(int) -> initTempTextPaint
    808:824:java.lang.Object invokeAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> invokeAndReturnWithDefault
    890:890:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    167:245:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    330:346:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    373:403:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    263:293:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    661:692:void setRawTextSize(float) -> setRawTextSize
    653:658:void setTextSizeInternal(int,float) -> setTextSizeInternal
    575:595:boolean setupAutoSizeText() -> setupAutoSizeText
    486:496:void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray) -> setupAutoSizeUniformPresetSizes
    499:507:boolean setupAutoSizeUniformPresetSizesConfiguration() -> setupAutoSizeUniformPresetSizesConfiguration
    753:781:boolean suggestedSizeFitsInSpace(int,android.graphics.RectF) -> suggestedSizeFitsInSpace
    899:899:boolean supportsAutoSizeText() -> supportsAutoSizeText
    550:572:void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float) -> validateAndSetAutoSizeTextTypeUniformConfiguration
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl:
    975:981:android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,android.widget.TextView,android.text.TextPaint) -> createStaticLayoutForMeasuring
    963:963:int getMaxLines(android.widget.TextView) -> getMaxLines
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api18Impl -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api18Impl:
    951:951:boolean isInLayout(android.view.View) -> isInLayout
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api23Impl -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api23Impl:
    919:939:android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int,android.widget.TextView,android.text.TextPaint,androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl) -> createStaticLayoutForMeasuring
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl:
    114:114:void <init>() -> <init>
    117:117:boolean isHorizontallyScrollable(android.widget.TextView) -> isHorizontallyScrollable
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23 -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23:
    126:126:void <init>() -> <init>
    131:135:void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView) -> computeAndSetTextDirection
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29 -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29:
    140:140:void <init>() -> <init>
    150:151:void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView) -> computeAndSetTextDirection
    144:144:boolean isHorizontallyScrollable(android.widget.TextView) -> isHorizontallyScrollable
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29$$InternalSyntheticApiModelOutline$1$4bd0b8dbfc2142eeb6a8aadc70a04bbad08754921d4929d7f99fefe931b04677$0.m(android.widget.TextView) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29$$ExternalSyntheticApiModelOutline1 -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.text.TextDirectionHeuristic androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29$$InternalSyntheticApiModelOutline$1$76011127f8b33c40fb128d8179a05b6d9d5b6f231b8da4ffee0b264fabc202d3$0.m(android.widget.TextView) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatToggleButton -> androidx.appcompat.widget.AppCompatToggleButton:
    69:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    74:86:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    162:169:void drawableStateChanged() -> drawableStateChanged
    183:186:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    128:129:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    156:157:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    238:238:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    281:281:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    191:193:void setAllCaps(boolean) -> setAllCaps
    98:102:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    90:94:void setBackgroundResource(int) -> setBackgroundResource
    208:212:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    218:222:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    197:198:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    173:174:void setFilters(android.text.InputFilter[]) -> setFilters
    113:116:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    141:144:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    261:263:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    301:303:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
androidx.appcompat.widget.ButtonBarLayout -> androidx.appcompat.widget.ButtonBarLayout:
    50:65:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    156:161:int getNextVisibleChildIndex(int) -> getNextVisibleChildIndex
    186:186:boolean isStacked() -> isStacked
    79:153:void onMeasure(int,int) -> onMeasure
    68:75:void setAllowStacking(boolean) -> setAllowStacking
    165:183:void setStacked(boolean) -> setStacked
androidx.appcompat.widget.ContentFrameLayout -> androidx.appcompat.widget.ContentFrameLayout:
    60:61:void <init>(android.content.Context) -> <init>
    64:65:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:71:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    197:198:android.util.TypedValue getFixedHeightMajor() -> getFixedHeightMajor
    202:203:android.util.TypedValue getFixedHeightMinor() -> getFixedHeightMinor
    187:188:android.util.TypedValue getFixedWidthMajor() -> getFixedWidthMajor
    192:193:android.util.TypedValue getFixedWidthMinor() -> getFixedWidthMinor
    177:178:android.util.TypedValue getMinWidthMajor() -> getMinWidthMajor
    182:183:android.util.TypedValue getMinWidthMinor() -> getMinWidthMinor
    208:212:void onAttachedToWindow() -> onAttachedToWindow
    216:220:void onDetachedFromWindow() -> onDetachedFromWindow
    101:174:void onMeasure(int,int) -> onMeasure
    82:83:void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener) -> setAttachListener
    93:97:void setDecorPadding(int,int,int,int) -> setDecorPadding
androidx.appcompat.widget.DialogTitle -> androidx.appcompat.widget.DialogTitle:
    46:47:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    55:82:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.DrawableUtils -> androidx.appcompat.widget.DrawableUtils:
    50:53:void <clinit>() -> <clinit>
    107:109:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable) -> canSafelyMutateDrawable
    88:100:void fixDrawable(android.graphics.drawable.Drawable) -> fixDrawable
    149:159:void forceDrawableStateChange(android.graphics.drawable.Drawable) -> forceDrawableStateChange
    165:179:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
androidx.appcompat.widget.DropDownListView -> androidx.appcompat.widget.DropDownListView:
    57:136:void <init>(android.content.Context,boolean) -> <init>
    643:657:void clearPressedItem() -> clearPressedItem
    555:557:void clickPressedItem(android.view.View,int) -> clickPressedItem
    206:212:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    578:585:void drawSelectorCompat(android.graphics.Canvas) -> drawSelectorCompat
    194:202:void drawableStateChanged() -> drawableStateChanged
    172:172:boolean hasFocus() -> hasFocus
    152:152:boolean hasWindowFocus() -> hasWindowFocus
    162:162:boolean isFocused() -> isFocused
    142:142:boolean isInTouchMode() -> isInTouchMode
    298:375:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    484:486:void onDetachedFromWindow() -> onDetachedFromWindow
    495:547:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    436:479:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    216:225:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    618:640:void positionSelectorCompat(int,android.view.View) -> positionSelectorCompat
    599:614:void positionSelectorLikeFocusCompat(int,android.view.View) -> positionSelectorLikeFocusCompat
    588:594:void positionSelectorLikeTouchCompat(int,android.view.View,float,float) -> positionSelectorLikeTouchCompat
    567:568:void setListSelectionHidden(boolean) -> setListSelectionHidden
    660:704:void setPressedItem(android.view.View,int,float,float) -> setPressedItem
    177:189:void setSelector(android.graphics.drawable.Drawable) -> setSelector
    379:382:void setSelectorEnabled(boolean) -> setSelectorEnabled
    707:707:boolean touchModeDrawsInPressedStateCompat() -> touchModeDrawsInPressedStateCompat
    571:575:void updateSelectorStateCompat() -> updateSelectorStateCompat
androidx.appcompat.widget.DropDownListView$Api21Impl -> androidx.appcompat.widget.DropDownListView$Api21Impl:
    803:804:void drawableHotspotChanged(android.view.View,float,float) -> drawableHotspotChanged
androidx.appcompat.widget.DropDownListView$Api30Impl -> androidx.appcompat.widget.DropDownListView$Api30Impl:
    744:758:void <clinit>() -> <clinit>
    769:769:boolean canPositionSelectorForHoveredItem() -> canPositionSelectorForHoveredItem
    784:792:void positionSelectorForHoveredItem(androidx.appcompat.widget.DropDownListView,int,android.view.View) -> positionSelectorForHoveredItem
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable -> androidx.appcompat.widget.DropDownListView$GateKeeperDrawable:
    388:390:void <init>(android.graphics.drawable.Drawable) -> <init>
    406:409:void draw(android.graphics.Canvas) -> draw
    393:394:void setEnabled(boolean) -> setEnabled
    413:416:void setHotspot(float,float) -> setHotspot
    420:423:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    398:401:boolean setState(int[]) -> setState
    427:430:boolean setVisible(boolean,boolean) -> setVisible
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable -> androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable:
    714:715:void <init>(androidx.appcompat.widget.DropDownListView) -> <init>
    725:727:void cancel() -> cancel
    730:731:void post() -> post
    720:722:void run() -> run
androidx.appcompat.widget.FitWindowsFrameLayout -> androidx.appcompat.widget.FitWindowsFrameLayout:
    43:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    53:56:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    48:49:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.FitWindowsLinearLayout -> androidx.appcompat.widget.FitWindowsLinearLayout:
    43:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    53:56:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    48:49:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.ForwardingListener -> androidx.appcompat.widget.ForwardingListener:
    66:78:void <init>(android.view.View) -> <init>
    216:223:void clearCallbacks() -> clearCallbacks
    156:160:boolean onForwardingStopped() -> onForwardingStopped
    226:249:void onLongPress() -> onLongPress
    94:112:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    259:284:boolean onTouchForwarded(android.view.MotionEvent) -> onTouchForwarded
    170:212:boolean onTouchObserved(android.view.MotionEvent) -> onTouchObserved
    117:117:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    121:127:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    288:290:boolean pointInView(android.view.View,float,float,float) -> pointInView
    309:312:boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent) -> toGlobalMotionEvent
    298:301:boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent) -> toLocalMotionEvent
androidx.appcompat.widget.ForwardingListener$DisallowIntercept -> androidx.appcompat.widget.ForwardingListener$DisallowIntercept:
    316:317:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    321:325:void run() -> run
androidx.appcompat.widget.ForwardingListener$TriggerLongPress -> androidx.appcompat.widget.ForwardingListener$TriggerLongPress:
    329:330:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    334:335:void run() -> run
androidx.appcompat.widget.LinearLayoutCompat -> androidx.appcompat.widget.LinearLayoutCompat:
    153:154:void <init>(android.content.Context) -> <init>
    157:158:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    104:197:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1781:1781:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    342:380:void drawDividersHorizontal(android.graphics.Canvas) -> drawDividersHorizontal
    315:339:void drawDividersVertical(android.graphics.Canvas) -> drawDividersVertical
    383:386:void drawHorizontalDivider(android.graphics.Canvas,int) -> drawHorizontalDivider
    389:392:void drawVerticalDivider(android.graphics.Canvas,int) -> drawVerticalDivider
    1341:1360:void forceUniformHeight(int,int) -> forceUniformHeight
    919:938:void forceUniformWidth(int,int) -> forceUniformWidth
    61:61:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1764:1769:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    61:61:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    61:61:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1751:1751:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1774:1774:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    445:493:int getBaseline() -> getBaseline
    503:503:int getBaselineAlignedChildIndex() -> getBaselineAlignedChildIndex
    1371:1371:int getChildrenSkipCount(android.view.View,int) -> getChildrenSkipCount
    240:240:android.graphics.drawable.Drawable getDividerDrawable() -> getDividerDrawable
    288:288:int getDividerPadding() -> getDividerPadding
    298:298:int getDividerWidth() -> getDividerWidth
    1730:1730:int getGravity() -> getGravity
    1413:1413:int getLocationOffset(android.view.View) -> getLocationOffset
    1425:1425:int getNextLocationOffset(android.view.View) -> getNextLocationOffset
    1695:1695:int getOrientation() -> getOrientation
    230:230:int getShowDividers() -> getShowDividers
    528:528:android.view.View getVirtualChildAt(int) -> getVirtualChildAt
    541:541:int getVirtualChildCount() -> getVirtualChildCount
    553:553:float getWeightSum() -> getWeightSum
    590:604:boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
    1545:1666:void layoutHorizontal(int,int,int,int) -> layoutHorizontal
    1450:1530:void layoutVertical(int,int,int,int) -> layoutVertical
    1401:1403:void measureChildBeforeLayout(android.view.View,int,int,int,int,int) -> measureChildBeforeLayout
    952:1335:void measureHorizontal(int,int) -> measureHorizontal
    1382:1382:int measureNullChild(int) -> measureNullChild
    619:915:void measureVertical(int,int) -> measureVertical
    303:312:void onDraw(android.graphics.Canvas) -> onDraw
    1786:1788:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1792:1794:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1430:1435:void onLayout(boolean,int,int,int,int) -> onLayout
    574:579:void onMeasure(int,int) -> onMeasure
    413:414:void setBaselineAligned(boolean) -> setBaselineAligned
    511:516:void setBaselineAlignedChildIndex(int) -> setBaselineAlignedChildIndex
    1669:1670:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    251:264:void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    276:277:void setDividerPadding(int) -> setDividerPadding
    1707:1719:void setGravity(int) -> setGravity
    1734:1739:void setHorizontalGravity(int) -> setHorizontalGravity
    440:441:void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    1678:1682:void setOrientation(int) -> setOrientation
    207:211:void setShowDividers(int) -> setShowDividers
    1742:1747:void setVerticalGravity(int) -> setVerticalGravity
    569:570:void setWeightSum(float) -> setWeightSum
    215:215:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams -> androidx.appcompat.widget.LinearLayoutCompat$LayoutParams:
    1805:1806:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1812:1813:void <init>(int,int) -> <init>
    1833:1834:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.widget.ListPopupWindow -> androidx.appcompat.widget.ListPopupWindow:
    87:112:void <clinit>() -> <clinit>
    227:228:void <init>(android.content.Context) -> <init>
    251:252:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    118:281:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1159:1332:int buildDropDown() -> buildDropDown
    849:856:void clearListSelection() -> clearListSelection
    953:953:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    775:780:void dismiss() -> dismiss
    463:463:android.view.View getAnchorView() -> getAnchorView
    426:426:android.graphics.drawable.Drawable getBackground() -> getBackground
    480:480:int getHorizontalOffset() -> getHorizontalOffset
    949:949:android.widget.ListView getListView() -> getListView
    1448:1460:int getMaxAvailableHeight(android.view.View,int,boolean) -> getMaxAvailableHeight
    898:901:java.lang.Object getSelectedItem() -> getSelectedItem
    924:927:long getSelectedItemId() -> getSelectedItemId
    911:914:int getSelectedItemPosition() -> getSelectedItemPosition
    937:940:android.view.View getSelectedView() -> getSelectedView
    496:499:int getVerticalOffset() -> getVerticalOffset
    548:548:int getWidth() -> getWidth
    871:871:boolean isInputMethodNotNeeded() -> isInputMethodNotNeeded
    348:348:boolean isModal() -> isModal
    863:863:boolean isShowing() -> isShowing
    792:799:void removePromptView() -> removePromptView
    290:303:void setAdapter(android.widget.ListAdapter) -> setAdapter
    473:474:void setAnchorView(android.view.View) -> setAnchorView
    444:445:void setAnimationStyle(int) -> setAnimationStyle
    435:436:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    568:575:void setContentWidth(int) -> setContentWidth
    541:542:void setDropDownGravity(int) -> setDropDownGravity
    520:521:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    489:490:void setHorizontalOffset(int) -> setHorizontalOffset
    814:815:void setInputMethodMode(int) -> setInputMethodMode
    338:340:void setModal(boolean) -> setModal
    788:789:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    622:623:void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    633:634:void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    1341:1343:void setOverlapAnchor(boolean) -> setOverlapAnchor
    1434:1445:void setPopupClipToScreenEnabled(boolean) -> setPopupClipToScreenEnabled
    315:316:void setPromptPosition(int) -> setPromptPosition
    833:842:void setSelection(int) -> setSelection
    508:510:void setVerticalOffset(int) -> setVerticalOffset
    558:559:void setWidth(int) -> setWidth
    666:768:void show() -> show
androidx.appcompat.widget.ListPopupWindow$2 -> androidx.appcompat.widget.ListPopupWindow$2:
    1170:1170:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1174:1178:void run() -> run
androidx.appcompat.widget.ListPopupWindow$3 -> androidx.appcompat.widget.ListPopupWindow$3:
    1189:1189:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1194:1201:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    1205:1205:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.appcompat.widget.ListPopupWindow$Api24Impl -> androidx.appcompat.widget.ListPopupWindow$Api24Impl:
    1491:1491:int getMaxAvailableHeight(android.widget.PopupWindow,android.view.View,int,boolean) -> getMaxAvailableHeight
androidx.appcompat.widget.ListPopupWindow$Api29Impl -> androidx.appcompat.widget.ListPopupWindow$Api29Impl:
    1473:1474:void setEpicenterBounds(android.widget.PopupWindow,android.graphics.Rect) -> setEpicenterBounds
    1478:1479:void setIsClippedToScreen(android.widget.PopupWindow,boolean) -> setIsClippedToScreen
androidx.appcompat.widget.ListPopupWindow$Api29Impl$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.widget.ListPopupWindow$Api29Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.appcompat.widget.ListPopupWindow$Api29Impl$$InternalSyntheticApiModelOutline$1$04e69853bd03891dc92f4d3ba570f962f05fc630f182eb69149d46be31c0e792$0.m(android.widget.PopupWindow,android.graphics.Rect) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.ListPopupWindow$Api29Impl$$ExternalSyntheticApiModelOutline1 -> androidx.appcompat.widget.ListPopupWindow$Api29Impl$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.appcompat.widget.ListPopupWindow$Api29Impl$$InternalSyntheticApiModelOutline$1$6f86f401db942ae89d3b2a9edc6991456a4223e57107f5e399d083d1a7ee1f61$0.m(android.widget.PopupWindow,boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider -> androidx.appcompat.widget.ListPopupWindow$ListSelectorHider:
    1364:1365:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1369:1370:void run() -> run
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver -> androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver:
    1346:1347:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1351:1355:void onChanged() -> onChanged
    1359:1360:void onInvalidated() -> onInvalidated
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener -> androidx.appcompat.widget.ListPopupWindow$PopupScrollListener:
    1410:1411:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1417:1417:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    1421:1426:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor -> androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor:
    1389:1390:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1394:1405:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable -> androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable:
    1374:1375:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1379:1385:void run() -> run
androidx.appcompat.widget.MenuPopupWindow -> androidx.appcompat.widget.MenuPopupWindow:
    63:70:void <clinit>() -> <clinit>
    76:77:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    82:84:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    124:127:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    132:135:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
    88:91:void setEnterTransition(java.lang.Object) -> setEnterTransition
    94:97:void setExitTransition(java.lang.Object) -> setExitTransition
    100:101:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    108:119:void setTouchModal(boolean) -> setTouchModal
androidx.appcompat.widget.MenuPopupWindow$Api23Impl -> androidx.appcompat.widget.MenuPopupWindow$Api23Impl:
    269:270:void setEnterTransition(android.widget.PopupWindow,android.transition.Transition) -> setEnterTransition
    274:275:void setExitTransition(android.widget.PopupWindow,android.transition.Transition) -> setExitTransition
androidx.appcompat.widget.MenuPopupWindow$Api29Impl -> androidx.appcompat.widget.MenuPopupWindow$Api29Impl:
    286:287:void setTouchModal(android.widget.PopupWindow,boolean) -> setTouchModal
androidx.appcompat.widget.MenuPopupWindow$Api29Impl$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.widget.MenuPopupWindow$Api29Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.appcompat.widget.MenuPopupWindow$Api29Impl$$InternalSyntheticApiModelOutline$1$2fd9c2857139d16be825bddf9dcfaf0949cd7f86fa725cbc54e8d3f8f517eb3d$0.m(android.widget.PopupWindow,boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView -> androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView:
    149:161:void <init>(android.content.Context,boolean) -> <init>
    140:140:boolean hasFocus() -> hasFocus
    140:140:boolean hasWindowFocus() -> hasWindowFocus
    140:140:boolean isFocused() -> isFocused
    140:140:boolean isInTouchMode() -> isInTouchMode
    140:140:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    140:140:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    203:244:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    173:197:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    140:140:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    164:165:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    140:140:void setSelector(android.graphics.drawable.Drawable) -> setSelector
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView$Api17Impl -> androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView$Api17Impl:
    255:255:int getLayoutDirection(android.content.res.Configuration) -> getLayoutDirection
androidx.appcompat.widget.ResourceManagerInternal -> androidx.appcompat.widget.ResourceManagerInternal:
    87:117:void <clinit>() -> <clinit>
    63:123:void <init>() -> <init>
    340:351:boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable) -> addDrawableToCache
    407:416:void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList) -> addTintListToCache
    499:512:void checkVectorDrawableSetup(android.content.Context) -> checkVectorDrawableSetup
    172:172:long createCacheKey(android.util.TypedValue) -> createCacheKey
    177:200:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int) -> createDrawableIfNeeded
    477:481:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]) -> createTintFilter
    97:102:androidx.appcompat.widget.ResourceManagerInternal get() -> get
    319:336:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long) -> getCachedDrawable
    137:137:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    141:160:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    486:495:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    383:394:android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    398:402:android.content.res.ColorStateList getTintListFromCache(android.content.Context,int) -> getTintListFromCache
    379:379:android.graphics.PorterDuff$Mode getTintMode(int) -> getTintMode
    109:115:void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal) -> installDefaultInflateDelegates
    515:516:boolean isVectorDrawable(android.graphics.drawable.Drawable) -> isVectorDrawable
    234:315:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int) -> loadDrawableFromDelegates
    163:169:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    355:363:android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int) -> onDrawableLoadedFromResources
    132:134:void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks) -> setHooks
    205:230:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable) -> tintDrawable
    441:473:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> tintDrawable
    368:368:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache -> androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache:
    421:422:void <init>(int) -> <init>
    433:436:int generateCacheKey(int,android.graphics.PorterDuff$Mode) -> generateCacheKey
    425:425:android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode) -> get
    429:429:android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter) -> put
androidx.appcompat.widget.ResourcesWrapper -> androidx.appcompat.widget.ResourcesWrapper:
    50:52:void <init>(android.content.res.Resources) -> <init>
    209:209:android.content.res.XmlResourceParser getAnimation(int) -> getAnimation
    194:194:boolean getBoolean(int) -> getBoolean
    183:183:int getColor(int) -> getColor
    189:189:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    272:272:android.content.res.Configuration getConfiguration() -> getConfiguration
    112:112:float getDimension(int) -> getDimension
    117:117:int getDimensionPixelOffset(int) -> getDimensionPixelOffset
    122:122:int getDimensionPixelSize(int) -> getDimensionPixelSize
    267:267:android.util.DisplayMetrics getDisplayMetrics() -> getDisplayMetrics
    155:155:android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme) -> getDrawable
    149:149:android.graphics.drawable.Drawable getDrawableCanonical(int) -> getDrawableCanonical
    165:165:android.graphics.drawable.Drawable getDrawableForDensity(int,int) -> getDrawableForDensity
    171:171:android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    127:127:float getFraction(int,int,int) -> getFraction
    277:277:int getIdentifier(java.lang.String,java.lang.String,java.lang.String) -> getIdentifier
    102:102:int[] getIntArray(int) -> getIntArray
    199:199:int getInteger(int) -> getInteger
    204:204:android.content.res.XmlResourceParser getLayout(int) -> getLayout
    177:177:android.graphics.Movie getMovie(int) -> getMovie
    77:77:java.lang.String getQuantityString(int,int,java.lang.Object[]) -> getQuantityString
    82:82:java.lang.String getQuantityString(int,int) -> getQuantityString
    61:61:java.lang.CharSequence getQuantityText(int,int) -> getQuantityText
    297:297:java.lang.String getResourceEntryName(int) -> getResourceEntryName
    282:282:java.lang.String getResourceName(int) -> getResourceName
    287:287:java.lang.String getResourcePackageName(int) -> getResourcePackageName
    292:292:java.lang.String getResourceTypeName(int) -> getResourceTypeName
    66:66:java.lang.String getString(int) -> getString
    71:71:java.lang.String getString(int,java.lang.Object[]) -> getString
    97:97:java.lang.String[] getStringArray(int) -> getStringArray
    56:56:java.lang.CharSequence getText(int) -> getText
    87:87:java.lang.CharSequence getText(int,java.lang.CharSequence) -> getText
    92:92:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    235:236:void getValue(int,android.util.TypedValue,boolean) -> getValue
    248:249:void getValue(java.lang.String,android.util.TypedValue,boolean) -> getValue
    242:243:void getValueForDensity(int,int,android.util.TypedValue,boolean) -> getValueForDensity
    214:214:android.content.res.XmlResourceParser getXml(int) -> getXml
    253:253:android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]) -> obtainAttributes
    107:107:android.content.res.TypedArray obtainTypedArray(int) -> obtainTypedArray
    219:219:java.io.InputStream openRawResource(int) -> openRawResource
    224:224:java.io.InputStream openRawResource(int,android.util.TypedValue) -> openRawResource
    229:229:android.content.res.AssetFileDescriptor openRawResourceFd(int) -> openRawResourceFd
    309:310:void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle) -> parseBundleExtra
    303:304:void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle) -> parseBundleExtras
    259:263:void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics) -> updateConfiguration
androidx.appcompat.widget.RtlSpacingHelper -> androidx.appcompat.widget.RtlSpacingHelper:
    25:36:void <init>() -> <init>
    51:51:int getEnd() -> getEnd
    39:39:int getLeft() -> getLeft
    43:43:int getRight() -> getRight
    47:47:int getStart() -> getStart
    68:71:void setAbsolute(int,int) -> setAbsolute
    74:90:void setDirection(boolean) -> setDirection
    55:65:void setRelative(int,int) -> setRelative
androidx.appcompat.widget.ScrollingTabContainerView -> androidx.appcompat.widget.ScrollingTabContainerView:
    78:78:void <clinit>() -> <clinit>
    261:274:void animateToTab(int) -> animateToTab
    215:221:android.widget.Spinner createSpinner() -> createSpinner
    294:307:androidx.appcompat.widget.ScrollingTabContainerView$TabView createTabView(androidx.appcompat.app.ActionBar$Tab,boolean) -> createTabView
    147:147:boolean isCollapsed() -> isCollapsed
    278:283:void onAttachedToWindow() -> onAttachedToWindow
    226:233:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    287:291:void onDetachedFromWindow() -> onDetachedFromWindow
    372:374:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    98:139:void onMeasure(int,int) -> onMeasure
    379:379:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    155:171:void performCollapse() -> performCollapse
    174:180:boolean performExpand() -> performExpand
    151:152:void setAllowCollapse(boolean) -> setAllowCollapse
    200:202:void setContentHeight(int) -> setContentHeight
    184:197:void setTabSelected(int) -> setTabSelected
androidx.appcompat.widget.ScrollingTabContainerView$1 -> androidx.appcompat.widget.ScrollingTabContainerView$1:
    265:265:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.view.View) -> <init>
    268:271:void run() -> run
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter -> androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter:
    527:528:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    532:532:int getCount() -> getCount
    537:537:java.lang.Object getItem(int) -> getItem
    542:542:long getItemId(int) -> getItemId
    547:552:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener -> androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener:
    557:558:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    562:569:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ScrollingTabContainerView$TabView -> androidx.appcompat.widget.ScrollingTabContainerView$TabView:
    382:411:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.content.Context,androidx.appcompat.app.ActionBar$Tab,boolean) -> <init>
    414:416:void bindTab(androidx.appcompat.app.ActionBar$Tab) -> bindTab
    522:522:androidx.appcompat.app.ActionBar$Tab getTab() -> getTab
    429:432:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    436:440:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    444:451:void onMeasure(int,int) -> onMeasure
    420:425:void setSelected(boolean) -> setSelected
    454:519:void update() -> update
androidx.appcompat.widget.SearchView -> androidx.appcompat.widget.SearchView:
    180:181:void <clinit>() -> <clinit>
    272:273:void <init>(android.content.Context) -> <init>
    276:277:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    136:1729:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1380:1401:void adjustDropDownSizeAndPosition() -> adjustDropDownSizeAndPosition
    505:510:void clearFocus() -> clearFocus
    1553:1576:android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> createIntent
    1672:1708:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> createIntentFromSuggestion
    1598:1653:android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceAppSearchIntent
    1583:1587:android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceWebSearchIntent
    1218:1219:void dismissSuggestions() -> dismissSuggestions
    1713:1719:void forceSuggestionQuery() -> forceSuggestionQuery
    862:867:void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect) -> getChildBoundsWithinSearchView
    1104:1114:java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> getDecoratedHint
    460:460:int getImeOptions() -> getImeOptions
    482:482:int getInputType() -> getInputType
    788:788:int getMaxWidth() -> getMaxWidth
    875:876:int getPreferredHeight() -> getPreferredHeight
    870:871:int getPreferredWidth() -> getPreferredWidth
    567:567:java.lang.CharSequence getQuery() -> getQuery
    628:635:java.lang.CharSequence getQueryHint() -> getQueryHint
    401:401:int getSuggestionCommitIconResId() -> getSuggestionCommitIconResId
    397:397:int getSuggestionRowLayout() -> getSuggestionRowLayout
    765:765:androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    904:917:boolean hasVoiceSearch() -> hasVoiceSearch
    693:693:boolean isIconified() -> isIconified
    1722:1722:boolean isLandscapeMode(android.content.Context) -> isLandscapeMode
    921:921:boolean isSubmitAreaEnabled() -> isSubmitAreaEnabled
    1510:1520:void launchIntent(android.content.Intent) -> launchIntent
    1532:1535:void launchQuerySearch(int,java.lang.String,java.lang.String) -> launchQuerySearch
    1493:1503:boolean launchSuggestion(int,int,java.lang.String) -> launchSuggestion
    1295:1300:void onActionViewCollapsed() -> onActionViewCollapsed
    1307:1314:void onActionViewExpanded() -> onActionViewExpanded
    1222:1239:void onCloseClicked() -> onCloseClicked
    975:978:void onDetachedFromWindow() -> onDetachedFromWindow
    1404:1411:boolean onItemClicked(int,int,java.lang.String) -> onItemClicked
    1415:1420:boolean onItemSelected(int) -> onItemSelected
    843:859:void onLayout(boolean,int,int,int,int) -> onLayout
    794:839:void onMeasure(int,int) -> onMeasure
    989:990:void onQueryRefine(java.lang.CharSequence) -> onQueryRefine
    1369:1377:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1361:1364:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1242:1248:void onSearchClicked() -> onSearchClicked
    1204:1215:void onSubmitQuery() -> onSubmitQuery
    1059:1098:boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> onSuggestionsKey
    1190:1201:void onTextChanged(java.lang.CharSequence) -> onTextChanged
    1274:1281:void onTextFocusChanged() -> onTextFocusChanged
    1252:1271:void onVoiceClicked() -> onVoiceClicked
    1285:1288:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    956:957:void postUpdateFocusedState() -> postUpdateFocusedState
    488:499:boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    1460:1480:void rewriteQueryFromSuggestion(int) -> rewriteQueryFromSuggestion
    436:437:void setAppSearchData(android.os.Bundle) -> setAppSearchData
    679:684:void setIconified(boolean) -> setIconified
    651:655:void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    448:449:void setImeOptions(int) -> setImeOptions
    472:473:void setInputType(int) -> setInputType
    774:777:void setMaxWidth(int) -> setMaxWidth
    528:529:void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener) -> setOnCloseListener
    537:538:void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    519:520:void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    558:559:void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    546:547:void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    579:589:void setQuery(java.lang.CharSequence,boolean) -> setQuery
    1526:1529:void setQuery(java.lang.CharSequence) -> setQuery
    602:604:void setQueryHint(java.lang.CharSequence) -> setQueryHint
    733:738:void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    413:427:void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    705:707:void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    755:758:void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter) -> setSuggestionsAdapter
    944:953:void updateCloseButton() -> updateCloseButton
    960:971:void updateFocusedState() -> updateFocusedState
    1118:1120:void updateQueryHint() -> updateQueryHint
    1126:1160:void updateSearchAutoComplete() -> updateSearchAutoComplete
    934:941:void updateSubmitArea() -> updateSubmitArea
    925:931:void updateSubmitButton(boolean) -> updateSubmitButton
    880:901:void updateViewsVisibility(boolean) -> updateViewsVisibility
    1169:1175:void updateVoiceButton(boolean) -> updateVoiceButton
androidx.appcompat.widget.SearchView$1 -> androidx.appcompat.widget.SearchView$1:
    183:183:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    186:187:void run() -> run
androidx.appcompat.widget.SearchView$10 -> androidx.appcompat.widget.SearchView$10:
    1729:1729:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1741:1741:void afterTextChanged(android.text.Editable) -> afterTextChanged
    1731:1731:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    1736:1737:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
androidx.appcompat.widget.SearchView$2 -> androidx.appcompat.widget.SearchView$2:
    190:190:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    193:196:void run() -> run
androidx.appcompat.widget.SearchView$3 -> androidx.appcompat.widget.SearchView$3:
    338:338:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    341:344:void onFocusChange(android.view.View,boolean) -> onFocusChange
androidx.appcompat.widget.SearchView$4 -> androidx.appcompat.widget.SearchView$4:
    383:383:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    387:388:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
androidx.appcompat.widget.SearchView$5 -> androidx.appcompat.widget.SearchView$5:
    992:992:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    995:1006:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.SearchView$6 -> androidx.appcompat.widget.SearchView$6:
    1014:1014:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1018:1048:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
androidx.appcompat.widget.SearchView$7 -> androidx.appcompat.widget.SearchView$7:
    1177:1177:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1184:1185:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
androidx.appcompat.widget.SearchView$8 -> androidx.appcompat.widget.SearchView$8:
    1423:1423:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1431:1432:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.SearchView$9 -> androidx.appcompat.widget.SearchView$9:
    1435:1435:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1443:1444:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    1453:1453:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.appcompat.widget.SearchView$Api29Impl -> androidx.appcompat.widget.SearchView$Api29Impl:
    2136:2137:void refreshAutoCompleteResults(android.widget.AutoCompleteTextView) -> refreshAutoCompleteResults
    2131:2132:void setInputMethodMode(androidx.appcompat.widget.SearchView$SearchAutoComplete,int) -> setInputMethodMode
androidx.appcompat.widget.SearchView$Api29Impl$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.widget.SearchView$Api29Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.appcompat.widget.SearchView$Api29Impl$$InternalSyntheticApiModelOutline$1$49ec33bf97a73d2e3b212df38817bb6e75dcf336ffc596a8e2a2d3355049bdbb$0.m(android.widget.AutoCompleteTextView) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector -> androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector:
    2053:2083:void <init>() -> <init>
    2096:2103:void doAfterTextChanged(android.widget.AutoCompleteTextView) -> doAfterTextChanged
    2086:2093:void doBeforeTextChanged(android.widget.AutoCompleteTextView) -> doBeforeTextChanged
    2106:2113:void ensureImeVisible(android.widget.AutoCompleteTextView) -> ensureImeVisible
    2116:2120:void preApi29Check() -> preApi29Check
androidx.appcompat.widget.SearchView$SavedState -> androidx.appcompat.widget.SearchView$SavedState:
    1341:1341:void <clinit>() -> <clinit>
    1320:1321:void <init>(android.os.Parcelable) -> <init>
    1324:1326:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1336:1337:java.lang.String toString() -> toString
    1330:1332:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.SearchView$SavedState$1 -> androidx.appcompat.widget.SearchView$SavedState$1:
    1341:1341:void <init>() -> <init>
    1341:1341:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1341:1341:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1344:1344:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1349:1349:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1341:1341:java.lang.Object[] newArray(int) -> newArray
    1354:1354:androidx.appcompat.widget.SearchView$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.SearchView$SearchAutoComplete -> androidx.appcompat.widget.SearchView$SearchAutoComplete:
    1862:1863:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1850:1868:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1947:1947:boolean enoughToFilter() -> enoughToFilter
    2041:2049:void ensureImeVisible() -> ensureImeVisible
    1980:1990:int getSearchViewTextMinWidthDp() -> getSearchViewTextMinWidthDp
    1892:1892:boolean isEmpty() -> isEmpty
    1999:2004:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    1872:1876:void onFinishInflate() -> onFinishInflate
    1937:1939:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    1952:1973:boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    1919:1933:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    1911:1911:void performCompletion() -> performCompletion
    1901:1901:void replaceText(java.lang.CharSequence) -> replaceText
    2017:2038:void setImeVisibility(boolean) -> setImeVisibility
    1879:1880:void setSearchView(androidx.appcompat.widget.SearchView) -> setSearchView
    1884:1886:void setThreshold(int) -> setThreshold
    2008:2014:void showSoftInputIfNecessary() -> showSoftInputIfNecessary
androidx.appcompat.widget.SearchView$SearchAutoComplete$1 -> androidx.appcompat.widget.SearchView$SearchAutoComplete$1:
    1850:1850:void <init>(androidx.appcompat.widget.SearchView$SearchAutoComplete) -> <init>
    1853:1854:void run() -> run
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate -> androidx.appcompat.widget.SearchView$UpdatableTouchDelegate:
    1776:1783:void <init>(android.graphics.Rect,android.graphics.Rect,android.view.View) -> <init>
    1794:1835:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1786:1790:void setBounds(android.graphics.Rect,android.graphics.Rect) -> setBounds
androidx.appcompat.widget.SuggestionsAdapter -> androidx.appcompat.widget.SuggestionsAdapter:
    73:104:void <init>(android.content.Context,androidx.appcompat.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap) -> <init>
    273:323:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    215:235:void changeCursor(android.database.Cursor) -> changeCursor
    582:587:android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> checkIconCache
    414:437:java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    334:346:java.lang.CharSequence formatUrl(java.lang.CharSequence) -> formatUrl
    645:662:android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> getActivityIcon
    623:634:android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> getActivityIconWithCache
    674:675:java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> getColumnString
    604:610:android.graphics.drawable.Drawable getDefaultIcon1() -> getDefaultIcon1
    549:575:android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> getDrawable
    697:728:android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> getDrawableFromResourceUri
    506:538:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> getDrawableFromResourceValue
    472:482:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    361:369:android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> getIcon1
    373:377:android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> getIcon2
    735:776:android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> getSearchManagerSuggestions
    679:688:java.lang.String getStringOrNull(android.database.Cursor,int) -> getStringOrNull
    449:459:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    133:133:boolean hasStableIds() -> hasStableIds
    242:248:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    179:182:void notifyDataSetChanged() -> notifyDataSetChanged
    187:190:void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    327:331:void onClick(android.view.View) -> onClick
    144:167:android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    116:117:void setQueryRefinement(int) -> setQueryRefinement
    387:402:void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> setViewDrawable
    351:358:void setViewText(android.widget.TextView,java.lang.CharSequence) -> setViewText
    591:594:void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> storeInIconCache
    193:206:void updateSpinnerState(android.database.Cursor) -> updateSpinnerState
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache -> androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache:
    262:268:void <init>(android.view.View) -> <init>
androidx.appcompat.widget.ThemeUtils -> androidx.appcompat.widget.ThemeUtils:
    41:53:void <clinit>() -> <clinit>
    162:176:void checkAppCompatTheme(android.view.View,android.content.Context) -> checkAppCompatTheme
    126:138:int getDisabledThemeAttrColor(android.content.Context,int) -> getDisabledThemeAttrColor
    91:97:int getThemeAttrColor(android.content.Context,int) -> getThemeAttrColor
    152:154:int getThemeAttrColor(android.content.Context,int,float) -> getThemeAttrColor
    109:115:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int) -> getThemeAttrColorStateList
    143:148:android.util.TypedValue getTypedValue() -> getTypedValue
androidx.appcompat.widget.TintContextWrapper -> androidx.appcompat.widget.TintContextWrapper:
    42:42:void <clinit>() -> <clinit>
    92:104:void <init>(android.content.Context) -> <init>
    128:128:android.content.res.AssetManager getAssets() -> getAssets
    122:122:android.content.res.Resources getResources() -> getResources
    108:108:android.content.res.Resources$Theme getTheme() -> getTheme
    113:118:void setTheme(int) -> setTheme
    78:85:boolean shouldWrap(android.content.Context) -> shouldWrap
    46:74:android.content.Context wrap(android.content.Context) -> wrap
androidx.appcompat.widget.TintInfo -> androidx.appcompat.widget.TintInfo:
    28:28:void <init>() -> <init>
    35:39:void clear() -> clear
androidx.appcompat.widget.TintResources -> androidx.appcompat.widget.TintResources:
    35:37:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    46:51:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
androidx.appcompat.widget.TintTypedArray -> androidx.appcompat.widget.TintTypedArray:
    68:71:void <init>(android.content.Context,android.content.res.TypedArray) -> <init>
    159:159:boolean getBoolean(int,boolean) -> getBoolean
    171:171:int getColor(int,int) -> getColor
    175:185:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    193:193:float getDimension(int,float) -> getDimension
    197:197:int getDimensionPixelOffset(int,int) -> getDimensionPixelOffset
    201:201:int getDimensionPixelSize(int,int) -> getDimensionPixelSize
    81:87:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    91:97:android.graphics.drawable.Drawable getDrawableIfKnown(int) -> getDrawableIfKnown
    167:167:float getFloat(int,float) -> getFloat
    120:127:android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
    163:163:int getInt(int,int) -> getInt
    189:189:int getInteger(int,int) -> getInteger
    209:209:int getLayoutDimension(int,int) -> getLayoutDimension
    217:217:int getResourceId(int,int) -> getResourceId
    151:151:java.lang.String getString(int) -> getString
    147:147:java.lang.CharSequence getText(int) -> getText
    221:221:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    77:77:android.content.res.TypedArray getWrappedTypeArray() -> getWrappedTypeArray
    241:241:boolean hasValue(int) -> hasValue
    55:55:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]) -> obtainStyledAttributes
    60:61:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int) -> obtainStyledAttributes
    65:65:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[]) -> obtainStyledAttributes
    253:254:void recycle() -> recycle
androidx.appcompat.widget.Toolbar -> androidx.appcompat.widget.Toolbar:
    246:247:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    190:367:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2296:2302:void addChildrenForExpandedActionView() -> addChildrenForExpandedActionView
    2188:2214:void addCustomViewsWithGravity(java.util.List,int) -> addCustomViewsWithGravity
    1559:1576:void addSystemView(android.view.View,boolean) -> addSystemView
    537:537:boolean canShowOverflowMenu() -> canShowOverflowMenu
    2270:2270:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    747:752:void collapseActionView() -> collapseActionView
    615:618:void dismissPopupMenus() -> dismissPopupMenus
    1540:1556:void ensureCollapseButtonView() -> ensureCollapseButtonView
    2333:2336:void ensureContentInsets() -> ensureContentInsets
    717:720:void ensureLogoView() -> ensureLogoView
    1184:1194:void ensureMenu() -> ensureMenu
    1197:1207:void ensureMenuView() -> ensureMenuView
    1519:1526:void ensureNavButtonView() -> ensureNavButtonView
    154:154:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2265:2265:androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    154:154:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    154:154:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2247:2247:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    2252:2259:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2217:2226:int getChildHorizontalGravity(int) -> getChildHorizontalGravity
    2137:2164:int getChildTop(android.view.View,int) -> getChildTop
    2169:2176:int getChildVerticalGravity(int) -> getChildVerticalGravity
    1065:1065:java.lang.CharSequence getCollapseContentDescription() -> getCollapseContentDescription
    1111:1111:android.graphics.drawable.Drawable getCollapseIcon() -> getCollapseIcon
    1300:1300:int getContentInsetEnd() -> getContentInsetEnd
    1426:1428:int getContentInsetEndWithActions() -> getContentInsetEndWithActions
    1344:1344:int getContentInsetLeft() -> getContentInsetLeft
    1365:1365:int getContentInsetRight() -> getContentInsetRight
    1279:1279:int getContentInsetStart() -> getContentInsetStart
    1382:1384:int getContentInsetStartWithNavigation() -> getContentInsetStartWithNavigation
    1478:1485:int getCurrentContentInsetEnd() -> getCurrentContentInsetEnd
    1498:1500:int getCurrentContentInsetLeft() -> getCurrentContentInsetLeft
    1513:1515:int getCurrentContentInsetRight() -> getCurrentContentInsetRight
    1464:1466:int getCurrentContentInsetStart() -> getCurrentContentInsetStart
    2368:2375:java.util.ArrayList getCurrentMenuItems() -> getCurrentMenuItems
    2235:2237:int getHorizontalMargins(android.view.View) -> getHorizontalMargins
    674:674:android.graphics.drawable.Drawable getLogo() -> getLogo
    713:713:java.lang.CharSequence getLogoDescription() -> getLogoDescription
    1158:1159:android.view.Menu getMenu() -> getMenu
    1210:1210:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    1536:1536:android.view.View getNavButtonView() -> getNavButtonView
    942:942:java.lang.CharSequence getNavigationContentDescription() -> getNavigationContentDescription
    1036:1036:android.graphics.drawable.Drawable getNavigationIcon() -> getNavigationIcon
    2360:2360:androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter() -> getOuterActionMenuPresenter
    1179:1180:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    2364:2364:android.content.Context getPopupContext() -> getPopupContext
    395:395:int getPopupTheme() -> getPopupTheme
    818:818:java.lang.CharSequence getSubtitle() -> getSubtitle
    2353:2353:android.widget.TextView getSubtitleTextView() -> getSubtitleTextView
    761:761:java.lang.CharSequence getTitle() -> getTitle
    496:496:int getTitleMarginBottom() -> getTitleMarginBottom
    473:473:int getTitleMarginEnd() -> getTitleMarginEnd
    427:427:int getTitleMarginStart() -> getTitleMarginStart
    450:450:int getTitleMarginTop() -> getTitleMarginTop
    2344:2344:android.widget.TextView getTitleTextView() -> getTitleTextView
    2241:2242:int getVerticalMargins(android.view.View) -> getVerticalMargins
    2092:2107:int getViewListMeasuredWidth(java.util.List,int[]) -> getViewListMeasuredWidth
    2276:2279:androidx.appcompat.widget.DecorToolbar getWrapper() -> getWrapper
    733:733:boolean hasExpandedActionView() -> hasExpandedActionView
    571:571:boolean hideOverflowMenu() -> hideOverflowMenu
    1223:1224:void inflateMenu(int) -> inflateMenu
    2426:2430:void invalidateMenu() -> invalidateMenu
    2305:2305:boolean isChildOrHidden(android.view.View) -> isChildOrHidden
    553:553:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    547:547:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    2112:2120:int layoutChildLeft(android.view.View,int,int[],int) -> layoutChildLeft
    2125:2133:int layoutChildRight(android.view.View,int,int[],int) -> layoutChildRight
    1701:1718:int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]) -> measureChildCollapseMargins
    1676:1693:void measureChildConstrained(android.view.View,int,int,int,int,int) -> measureChildConstrained
    2379:2388:void onCreateMenu() -> onCreateMenu
    1620:1622:void onDetachedFromWindow() -> onDetachedFromWindow
    1655:1671:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    1874:2089:void onLayout(boolean,int,int,int,int) -> onLayout
    1740:1870:void onMeasure(int,int) -> onMeasure
    1592:1611:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    513:519:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    1580:1587:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1631:1647:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1614:1616:void postShowOverflowMenu() -> postShowOverflowMenu
    2283:2293:void removeChildrenForExpandedActionView() -> removeChildrenForExpandedActionView
    1079:1080:void setCollapseContentDescription(int) -> setCollapseContentDescription
    1093:1099:void setCollapseContentDescription(java.lang.CharSequence) -> setCollapseContentDescription
    1125:1126:void setCollapseIcon(int) -> setCollapseIcon
    1139:1145:void setCollapseIcon(android.graphics.drawable.Drawable) -> setCollapseIcon
    2315:2317:void setCollapsible(boolean) -> setCollapsible
    1444:1453:void setContentInsetEndWithActions(int) -> setContentInsetEndWithActions
    1401:1410:void setContentInsetStartWithNavigation(int) -> setContentInsetStartWithNavigation
    1257:1259:void setContentInsetsRelative(int,int) -> setContentInsetsRelative
    531:532:void setLogo(int) -> setLogo
    651:663:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    686:687:void setLogoDescription(int) -> setLogoDescription
    698:704:void setLogoDescription(java.lang.CharSequence) -> setLogoDescription
    577:609:void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter) -> setMenu
    2325:2330:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    956:957:void setNavigationContentDescription(int) -> setNavigationContentDescription
    970:977:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    994:995:void setNavigationIcon(int) -> setNavigationIcon
    1012:1024:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    1049:1051:void setNavigationOnClickListener(android.view.View$OnClickListener) -> setNavigationOnClickListener
    1235:1236:void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener) -> setOnMenuItemClickListener
    1168:1170:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    377:385:void setPopupTheme(int) -> setPopupTheme
    829:830:void setSubtitle(int) -> setSubtitle
    840:864:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    882:886:void setSubtitleTextAppearance(android.content.Context,int) -> setSubtitleTextAppearance
    915:916:void setSubtitleTextColor(int) -> setSubtitleTextColor
    924:928:void setSubtitleTextColor(android.content.res.ColorStateList) -> setSubtitleTextColor
    773:774:void setTitle(int) -> setTitle
    785:809:void setTitle(java.lang.CharSequence) -> setTitle
    507:509:void setTitleMarginBottom(int) -> setTitleMarginBottom
    484:487:void setTitleMarginEnd(int) -> setTitleMarginEnd
    438:441:void setTitleMarginStart(int) -> setTitleMarginStart
    461:464:void setTitleMarginTop(int) -> setTitleMarginTop
    871:875:void setTitleTextAppearance(android.content.Context,int) -> setTitleTextAppearance
    894:895:void setTitleTextColor(int) -> setTitleTextColor
    903:907:void setTitleTextColor(android.content.res.ColorStateList) -> setTitleTextColor
    1725:1735:boolean shouldCollapse() -> shouldCollapse
    2231:2231:boolean shouldLayout(android.view.View) -> shouldLayout
    562:562:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.Toolbar$$ExternalSyntheticLambda0 -> androidx.appcompat.widget.Toolbar$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.widget.Toolbar androidx.appcompat.widget.Toolbar$$InternalSyntheticLambda$1$9d491c767e08664ee770b78946284ac791fb0c59871b12cb09771a4b9103b30a$0.f$0 -> f$0
    void androidx.appcompat.widget.Toolbar$$InternalSyntheticLambda$1$9d491c767e08664ee770b78946284ac791fb0c59871b12cb09771a4b9103b30a$0.<init>(androidx.appcompat.widget.Toolbar) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.appcompat.widget.Toolbar$$InternalSyntheticLambda$1$9d491c767e08664ee770b78946284ac791fb0c59871b12cb09771a4b9103b30a$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.Toolbar$1 -> androidx.appcompat.widget.Toolbar$1:
    214:214:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    217:223:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.widget.Toolbar$2 -> androidx.appcompat.widget.Toolbar$2:
    235:235:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    237:238:void run() -> run
androidx.appcompat.widget.Toolbar$3 -> androidx.appcompat.widget.Toolbar$3:
    1549:1549:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    1552:1553:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter -> androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter:
    2557:2558:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    2655:2668:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    2618:2648:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    2613:2613:boolean flagActionItems() -> flagActionItems
    2563:2567:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    2609:2609:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2604:2604:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    2577:2596:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.Toolbar$LayoutParams -> androidx.appcompat.widget.Toolbar$LayoutParams:
    2461:2465:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2461:2470:void <init>(int,int) -> <init>
    2461:2485:void <init>(androidx.appcompat.widget.Toolbar$LayoutParams) -> <init>
    2461:2489:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    2461:2496:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2461:2500:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2503:2507:void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams) -> copyMarginsFromCompat
androidx.appcompat.widget.Toolbar$SavedState -> androidx.appcompat.widget.Toolbar$SavedState:
    2535:2535:void <clinit>() -> <clinit>
    2519:2522:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2525:2526:void <init>(android.os.Parcelable) -> <init>
    2530:2533:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.Toolbar$SavedState$1 -> androidx.appcompat.widget.Toolbar$SavedState$1:
    2535:2535:void <init>() -> <init>
    2535:2535:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2535:2535:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2538:2538:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2543:2543:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2535:2535:java.lang.Object[] newArray(int) -> newArray
    2548:2548:androidx.appcompat.widget.Toolbar$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.ToolbarWidgetWrapper -> androidx.appcompat.widget.ToolbarWidgetWrapper:
    96:98:void <init>(androidx.appcompat.widget.Toolbar,boolean) -> <init>
    90:192:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int) -> <init>
    338:338:boolean canShowOverflowMenu() -> canShowOverflowMenu
    232:233:void collapseActionView() -> collapseActionView
    206:212:int detectDisplayOptions() -> detectDisplayOptions
    378:379:void dismissPopupMenus() -> dismissPopupMenus
    222:222:android.content.Context getContext() -> getContext
    383:383:int getDisplayOptions() -> getDisplayOptions
    680:680:android.view.Menu getMenu() -> getMenu
    461:461:int getNavigationMode() -> getNavigationMode
    250:250:java.lang.CharSequence getTitle() -> getTitle
    217:217:android.view.ViewGroup getViewGroup() -> getViewGroup
    227:227:boolean hasExpandedActionView() -> hasExpandedActionView
    358:358:boolean hideOverflowMenu() -> hideOverflowMenu
    289:290:void initIndeterminateProgress() -> initIndeterminateProgress
    284:285:void initProgress() -> initProgress
    348:348:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    343:343:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    451:452:void setCollapsible(boolean) -> setCollapsible
    543:550:void setCustomView(android.view.View) -> setCustomView
    196:203:void setDefaultNavigationContentDescription(int) -> setDefaultNavigationContentDescription
    388:421:void setDisplayOptions(int) -> setDisplayOptions
    425:437:void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    457:457:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    304:305:void setIcon(int) -> setIcon
    309:311:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    315:316:void setLogo(int) -> setLogo
    320:322:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    368:374:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    675:676:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    363:364:void setMenuPrepared() -> setMenuPrepared
    623:625:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    629:630:void setNavigationContentDescription(int) -> setNavigationContentDescription
    596:598:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    276:280:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    255:257:void setTitle(java.lang.CharSequence) -> setTitle
    260:267:void setTitleInt(java.lang.CharSequence) -> setTitleInt
    664:665:void setVisibility(int) -> setVisibility
    237:238:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    243:246:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    569:572:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    353:353:boolean showOverflowMenu() -> showOverflowMenu
    633:640:void updateHomeAccessibility() -> updateHomeAccessibility
    614:619:void updateNavigationIcon() -> updateNavigationIcon
    325:334:void updateToolbarLogo() -> updateToolbarLogo
androidx.appcompat.widget.ToolbarWidgetWrapper$1 -> androidx.appcompat.widget.ToolbarWidgetWrapper$1:
    182:183:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper) -> <init>
    187:190:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ToolbarWidgetWrapper$2 -> androidx.appcompat.widget.ToolbarWidgetWrapper$2:
    572:573:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper,int) -> <init>
    589:590:void onAnimationCancel(android.view.View) -> onAnimationCancel
    582:585:void onAnimationEnd(android.view.View) -> onAnimationEnd
    577:578:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.widget.TooltipCompat -> androidx.appcompat.widget.TooltipCompat:
    46:51:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
androidx.appcompat.widget.TooltipCompat$Api26Impl -> androidx.appcompat.widget.TooltipCompat$Api26Impl:
    64:65:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
androidx.appcompat.widget.TooltipCompat$Api26Impl$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.widget.TooltipCompat$Api26Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.appcompat.widget.TooltipCompat$Api26Impl$$InternalSyntheticApiModelOutline$1$5517ef83c50b5bcb5cef0037369255269385f4e942650492eb2b2be9ad0cabd7$0.m(android.view.View,java.lang.CharSequence) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.TooltipCompatHandler -> androidx.appcompat.widget.TooltipCompatHandler:
    void $r8$lambda$3aFESLcagOxECyCXdU9G39Uust4(androidx.appcompat.widget.TooltipCompatHandler) -> $r8$lambda$3aFESLcagOxECyCXdU9G39Uust4
      # {"id":"com.android.tools.r8.synthesized"}
    54:108:void <init>(android.view.View,java.lang.CharSequence) -> <init>
    217:218:void cancelPendingShow() -> cancelPendingShow
    245:246:void forceNextChangeSignificant() -> forceNextChangeSignificant
    185:200:void hide() -> hide
    54:54:void lambda$new$0() -> lambda$new$0
    120:140:boolean onHover(android.view.View,android.view.MotionEvent) -> onHover
    112:115:boolean onLongClick(android.view.View) -> onLongClick
    146:146:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    150:151:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    213:214:void scheduleShow() -> scheduleShow
    203:210:void setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler) -> setPendingHandler
    84:97:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
    155:182:void show(boolean) -> show
    228:238:boolean updateAnchorPos(android.view.MotionEvent) -> updateAnchorPos
androidx.appcompat.widget.TooltipCompatHandler$$ExternalSyntheticLambda0 -> androidx.appcompat.widget.TooltipCompatHandler$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.widget.TooltipCompatHandler androidx.appcompat.widget.TooltipCompatHandler$$InternalSyntheticLambda$1$990bd139c764fdd0af01d525cfae7cb46744c3b2435b7922b50af1bf6983d455$0.f$0 -> f$0
    void androidx.appcompat.widget.TooltipCompatHandler$$InternalSyntheticLambda$1$990bd139c764fdd0af01d525cfae7cb46744c3b2435b7922b50af1bf6983d455$0.<init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.appcompat.widget.TooltipCompatHandler$$InternalSyntheticLambda$1$990bd139c764fdd0af01d525cfae7cb46744c3b2435b7922b50af1bf6983d455$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.TooltipCompatHandler$$ExternalSyntheticLambda1 -> androidx.appcompat.widget.TooltipCompatHandler$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.widget.TooltipCompatHandler androidx.appcompat.widget.TooltipCompatHandler$$InternalSyntheticLambda$1$990bd139c764fdd0af01d525cfae7cb46744c3b2435b7922b50af1bf6983d455$1.f$0 -> f$0
    void androidx.appcompat.widget.TooltipCompatHandler$$InternalSyntheticLambda$1$990bd139c764fdd0af01d525cfae7cb46744c3b2435b7922b50af1bf6983d455$1.<init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.appcompat.widget.TooltipCompatHandler$$InternalSyntheticLambda$1$990bd139c764fdd0af01d525cfae7cb46744c3b2435b7922b50af1bf6983d455$1.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.TooltipPopup -> androidx.appcompat.widget.TooltipPopup:
    54:74:void <init>(android.content.Context) -> <init>
    105:185:void computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams) -> computePosition
    188:208:android.view.View getAppRootView(android.view.View) -> getAppRootView
    91:97:void hide() -> hide
    100:100:boolean isShowing() -> isShowing
    78:88:void show(android.view.View,int,int,boolean,java.lang.CharSequence) -> show
androidx.appcompat.widget.VectorEnabledTintResources -> androidx.appcompat.widget.VectorEnabledTintResources:
    39:39:void <clinit>() -> <clinit>
    56:58:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    37:37:android.content.res.XmlResourceParser getAnimation(int) -> getAnimation
    37:37:boolean getBoolean(int) -> getBoolean
    37:37:int getColor(int) -> getColor
    37:37:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    37:37:android.content.res.Configuration getConfiguration() -> getConfiguration
    37:37:float getDimension(int) -> getDimension
    37:37:int getDimensionPixelOffset(int) -> getDimensionPixelOffset
    37:37:int getDimensionPixelSize(int) -> getDimensionPixelSize
    37:37:android.util.DisplayMetrics getDisplayMetrics() -> getDisplayMetrics
    37:37:android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme) -> getDrawable
    67:74:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    37:37:android.graphics.drawable.Drawable getDrawableForDensity(int,int) -> getDrawableForDensity
    37:37:android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    37:37:float getFraction(int,int,int) -> getFraction
    37:37:int getIdentifier(java.lang.String,java.lang.String,java.lang.String) -> getIdentifier
    37:37:int[] getIntArray(int) -> getIntArray
    37:37:int getInteger(int) -> getInteger
    37:37:android.content.res.XmlResourceParser getLayout(int) -> getLayout
    37:37:android.graphics.Movie getMovie(int) -> getMovie
    37:37:java.lang.String getQuantityString(int,int) -> getQuantityString
    37:37:java.lang.String getQuantityString(int,int,java.lang.Object[]) -> getQuantityString
    37:37:java.lang.CharSequence getQuantityText(int,int) -> getQuantityText
    37:37:java.lang.String getResourceEntryName(int) -> getResourceEntryName
    37:37:java.lang.String getResourceName(int) -> getResourceName
    37:37:java.lang.String getResourcePackageName(int) -> getResourcePackageName
    37:37:java.lang.String getResourceTypeName(int) -> getResourceTypeName
    37:37:java.lang.String getString(int) -> getString
    37:37:java.lang.String getString(int,java.lang.Object[]) -> getString
    37:37:java.lang.String[] getStringArray(int) -> getStringArray
    37:37:java.lang.CharSequence getText(int) -> getText
    37:37:java.lang.CharSequence getText(int,java.lang.CharSequence) -> getText
    37:37:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    37:37:void getValue(int,android.util.TypedValue,boolean) -> getValue
    37:37:void getValue(java.lang.String,android.util.TypedValue,boolean) -> getValue
    37:37:void getValueForDensity(int,int,android.util.TypedValue,boolean) -> getValueForDensity
    37:37:android.content.res.XmlResourceParser getXml(int) -> getXml
    93:93:boolean isCompatVectorFromResourcesEnabled() -> isCompatVectorFromResourcesEnabled
    37:37:android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]) -> obtainAttributes
    37:37:android.content.res.TypedArray obtainTypedArray(int) -> obtainTypedArray
    37:37:java.io.InputStream openRawResource(int) -> openRawResource
    37:37:java.io.InputStream openRawResource(int,android.util.TypedValue) -> openRawResource
    37:37:android.content.res.AssetFileDescriptor openRawResourceFd(int) -> openRawResourceFd
    37:37:void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle) -> parseBundleExtra
    37:37:void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle) -> parseBundleExtras
    42:42:boolean shouldBeUsed() -> shouldBeUsed
    37:37:void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics) -> updateConfiguration
androidx.appcompat.widget.ViewStubCompat -> androidx.appcompat.widget.ViewStubCompat:
    55:56:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    46:72:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    161:161:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    157:157:void draw(android.graphics.Canvas) -> draw
    85:85:int getInflatedId() -> getInflatedId
    146:146:android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    115:115:int getLayoutResource() -> getLayoutResource
    198:237:android.view.View inflate() -> inflate
    151:152:void onMeasure(int,int) -> onMeasure
    99:100:void setInflatedId(int) -> setInflatedId
    139:140:void setLayoutInflater(android.view.LayoutInflater) -> setLayoutInflater
    131:132:void setLayoutResource(int) -> setLayoutResource
    250:251:void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener) -> setOnInflateListener
    175:188:void setVisibility(int) -> setVisibility
androidx.appcompat.widget.ViewUtils -> androidx.appcompat.widget.ViewUtils:
    42:53:void <clinit>() -> <clinit>
    66:73:void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect) -> computeFitSystemWindows
    58:58:boolean isLayoutRtl(android.view.View) -> isLayoutRtl
    80:97:void makeOptionalFitsSystemWindows(android.view.View) -> makeOptionalFitsSystemWindows
androidx.arch.core.executor.ArchTaskExecutor -> androidx.arch.core.executor.ArchTaskExecutor:
    void $r8$lambda$660dvPX9TmFUAes_5pIFbpOEa8M(java.lang.Runnable) -> $r8$lambda$660dvPX9TmFUAes_5pIFbpOEa8M
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$B-NyukiANkmKkd3XkhAfbEit2Bs(java.lang.Runnable) -> $r8$lambda$B-NyukiANkmKkd3XkhAfbEit2Bs
      # {"id":"com.android.tools.r8.synthesized"}
    42:46:void <clinit>() -> <clinit>
    49:52:void <init>() -> <init>
    88:89:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    61:69:androidx.arch.core.executor.ArchTaskExecutor getInstance() -> getInstance
    108:108:boolean isMainThread() -> isMainThread
    43:43:void lambda$static$0(java.lang.Runnable) -> lambda$static$0
    47:47:void lambda$static$1(java.lang.Runnable) -> lambda$static$1
    93:94:void postToMainThread(java.lang.Runnable) -> postToMainThread
androidx.arch.core.executor.ArchTaskExecutor$$ExternalSyntheticLambda0 -> androidx.arch.core.executor.ArchTaskExecutor$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$1$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$1$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$0.execute(java.lang.Runnable) -> execute
      # {"id":"com.android.tools.r8.synthesized"}
androidx.arch.core.executor.ArchTaskExecutor$$ExternalSyntheticLambda1 -> androidx.arch.core.executor.ArchTaskExecutor$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$1$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$1.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$1$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$1.execute(java.lang.Runnable) -> execute
      # {"id":"com.android.tools.r8.synthesized"}
androidx.arch.core.executor.DefaultTaskExecutor -> androidx.arch.core.executor.DefaultTaskExecutor:
    38:42:void <init>() -> <init>
    84:100:android.os.Handler createAsync(android.os.Looper) -> createAsync
    60:61:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    78:78:boolean isMainThread() -> isMainThread
    65:74:void postToMainThread(java.lang.Runnable) -> postToMainThread
androidx.arch.core.executor.DefaultTaskExecutor$1 -> androidx.arch.core.executor.DefaultTaskExecutor$1:
    42:45:void <init>(androidx.arch.core.executor.DefaultTaskExecutor) -> <init>
    49:51:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.arch.core.executor.DefaultTaskExecutor$Api28Impl -> androidx.arch.core.executor.DefaultTaskExecutor$Api28Impl:
    111:111:android.os.Handler createAsync(android.os.Looper) -> createAsync
androidx.arch.core.executor.DefaultTaskExecutor$Api28Impl$$ExternalSyntheticApiModelOutline0 -> androidx.arch.core.executor.DefaultTaskExecutor$Api28Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.os.Handler androidx.arch.core.executor.DefaultTaskExecutor$Api28Impl$$InternalSyntheticApiModelOutline$2$5bb6e992ee077423ed91517b1cf587e82950c13e07aaf8ed1ebc7e8abbb88f51$0.m(android.os.Looper) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.arch.core.executor.TaskExecutor -> androidx.arch.core.executor.TaskExecutor:
    31:31:void <init>() -> <init>
androidx.arch.core.internal.FastSafeIterableMap -> androidx.arch.core.internal.FastSafeIterableMap:
    36:38:void <init>() -> <init>
    79:82:java.util.Map$Entry ceil(java.lang.Object) -> ceil
    69:69:boolean contains(java.lang.Object) -> contains
    44:44:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    49:54:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    59:61:java.lang.Object remove(java.lang.Object) -> remove
androidx.arch.core.internal.SafeIterableMap -> androidx.arch.core.internal.SafeIterableMap:
    36:44:void <init>() -> <init>
    154:156:java.util.Iterator descendingIterator() -> descendingIterator
    174:174:java.util.Map$Entry eldest() -> eldest
    188:208:boolean equals(java.lang.Object) -> equals
    49:56:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    213:217:int hashCode() -> hashCode
    143:145:java.util.Iterator iterator() -> iterator
    164:166:androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions() -> iteratorWithAdditions
    182:182:java.util.Map$Entry newest() -> newest
    78:89:androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object) -> put
    69:74:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    101:126:java.lang.Object remove(java.lang.Object) -> remove
    133:133:int size() -> size
    222:232:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$AscendingIterator -> androidx.arch.core.internal.SafeIterableMap$AscendingIterator:
    289:290:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    299:299:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    294:294:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$DescendingIterator -> androidx.arch.core.internal.SafeIterableMap$DescendingIterator:
    306:307:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    316:316:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    311:311:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$Entry -> androidx.arch.core.internal.SafeIterableMap$Entry:
    380:383:void <init>(java.lang.Object,java.lang.Object) -> <init>
    410:417:boolean equals(java.lang.Object) -> equals
    388:388:java.lang.Object getKey() -> getKey
    394:394:java.lang.Object getValue() -> getValue
    422:422:int hashCode() -> hashCode
    399:399:java.lang.Object setValue(java.lang.Object) -> setValue
    404:404:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions -> androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions:
    327:330:void <init>(androidx.arch.core.internal.SafeIterableMap) -> <init>
    343:346:boolean hasNext() -> hasNext
    323:323:java.lang.Object next() -> next
    351:357:java.util.Map$Entry next() -> next
    335:339:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.arch.core.internal.SafeIterableMap$ListIterator -> androidx.arch.core.internal.SafeIterableMap$ListIterator:
    240:243:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    247:247:boolean hasNext() -> hasNext
    235:235:java.lang.Object next() -> next
    277:279:java.util.Map$Entry next() -> next
    269:272:androidx.arch.core.internal.SafeIterableMap$Entry nextNode() -> nextNode
    253:265:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.arch.core.internal.SafeIterableMap$SupportRemove -> androidx.arch.core.internal.SafeIterableMap$SupportRemove:
    368:368:void <init>() -> <init>
androidx.cardview.widget.CardView -> androidx.cardview.widget.CardView:
    81:93:void <clinit>() -> <clinit>
    303:303:android.content.res.ColorStateList getCardBackgroundColor() -> getCardBackgroundColor
    387:387:float getCardElevation() -> getCardElevation
    343:343:int getContentPaddingBottom() -> getContentPaddingBottom
    313:313:int getContentPaddingLeft() -> getContentPaddingLeft
    323:323:int getContentPaddingRight() -> getContentPaddingRight
    333:333:int getContentPaddingTop() -> getContentPaddingTop
    413:413:float getMaxCardElevation() -> getMaxCardElevation
    424:424:boolean getPreventCornerOverlap() -> getPreventCornerOverlap
    364:364:float getRadius() -> getRadius
    183:183:boolean getUseCompatPadding() -> getUseCompatPadding
    232:262:void onMeasure(int,int) -> onMeasure
    283:284:void setCardBackgroundColor(int) -> setCardBackgroundColor
    293:294:void setCardBackgroundColor(android.content.res.ColorStateList) -> setCardBackgroundColor
    376:377:void setCardElevation(float) -> setCardElevation
    402:403:void setMaxCardElevation(float) -> setMaxCardElevation
    272:274:void setMinimumHeight(int) -> setMinimumHeight
    266:268:void setMinimumWidth(int) -> setMinimumWidth
    169:169:void setPadding(int,int,int,int) -> setPadding
    174:174:void setPaddingRelative(int,int,int,int) -> setPaddingRelative
    441:445:void setPreventCornerOverlap(boolean) -> setPreventCornerOverlap
    354:355:void setRadius(float) -> setRadius
    203:207:void setUseCompatPadding(boolean) -> setUseCompatPadding
androidx.cardview.widget.CardViewApi21Impl -> androidx.cardview.widget.CardViewApi21Impl:
    26:26:void <init>() -> <init>
    118:118:android.content.res.ColorStateList getBackgroundColor(androidx.cardview.widget.CardViewDelegate) -> getBackgroundColor
    122:122:androidx.cardview.widget.RoundRectDrawable getCardBackground(androidx.cardview.widget.CardViewDelegate) -> getCardBackground
    83:83:float getElevation(androidx.cardview.widget.CardViewDelegate) -> getElevation
    58:58:float getMaxElevation(androidx.cardview.widget.CardViewDelegate) -> getMaxElevation
    68:68:float getMinHeight(androidx.cardview.widget.CardViewDelegate) -> getMinHeight
    63:63:float getMinWidth(androidx.cardview.widget.CardViewDelegate) -> getMinWidth
    73:73:float getRadius(androidx.cardview.widget.CardViewDelegate) -> getRadius
    47:47:void initStatic() -> initStatic
    103:104:void onCompatPaddingChanged(androidx.cardview.widget.CardViewDelegate) -> onCompatPaddingChanged
    108:109:void onPreventCornerOverlapChanged(androidx.cardview.widget.CardViewDelegate) -> onPreventCornerOverlapChanged
    113:114:void setBackgroundColor(androidx.cardview.widget.CardViewDelegate,android.content.res.ColorStateList) -> setBackgroundColor
    78:79:void setElevation(androidx.cardview.widget.CardViewDelegate,float) -> setElevation
    51:54:void setMaxElevation(androidx.cardview.widget.CardViewDelegate,float) -> setMaxElevation
    42:43:void setRadius(androidx.cardview.widget.CardViewDelegate,float) -> setRadius
    88:99:void updatePadding(androidx.cardview.widget.CardViewDelegate) -> updatePadding
androidx.cardview.widget.RoundRectDrawable -> androidx.cardview.widget.RoundRectDrawable:
    206:210:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> createTintFilter
    87:102:void draw(android.graphics.Canvas) -> draw
    164:164:android.content.res.ColorStateList getColor() -> getColor
    151:151:int getOpacity() -> getOpacity
    127:128:void getOutline(android.graphics.Outline) -> getOutline
    82:82:float getPadding() -> getPadding
    155:155:float getRadius() -> getRadius
    197:198:boolean isStateful() -> isStateful
    121:123:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    183:192:boolean onStateChange(int[]) -> onStateChange
    141:142:void setAlpha(int) -> setAlpha
    65:67:void setBackground(android.content.res.ColorStateList) -> setBackground
    159:161:void setColor(android.content.res.ColorStateList) -> setColor
    146:147:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    70:79:void setPadding(float,boolean,boolean) -> setPadding
    131:137:void setRadius(float) -> setRadius
    169:172:void setTintList(android.content.res.ColorStateList) -> setTintList
    176:179:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    105:117:void updateBounds(android.graphics.Rect) -> updateBounds
androidx.cardview.widget.RoundRectDrawableWithShadow -> androidx.cardview.widget.RoundRectDrawableWithShadow:
    41:41:void <clinit>() -> <clinit>
    189:192:float calculateHorizontalPadding(float,float,boolean) -> calculateHorizontalPadding
    180:183:float calculateVerticalPadding(float,float,boolean) -> calculateVerticalPadding
androidx.collection.ArrayMap -> androidx.collection.ArrayMap:
    57:58:void <init>() -> <init>
    64:65:void <init>(int) -> <init>
    71:72:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    182:182:java.util.Set entrySet() -> entrySet
    75:123:androidx.collection.MapCollections getCollection() -> getCollection
    194:194:java.util.Set keySet() -> keySet
    142:146:void putAll(java.util.Map) -> putAll
    164:164:boolean retainAll(java.util.Collection) -> retainAll
    206:206:java.util.Collection values() -> values
androidx.collection.ArrayMap$1 -> androidx.collection.ArrayMap$1:
    76:76:void <init>(androidx.collection.ArrayMap) -> <init>
    119:120:void colClear() -> colClear
    84:84:java.lang.Object colGetEntry(int,int) -> colGetEntry
    99:99:java.util.Map colGetMap() -> colGetMap
    79:79:int colGetSize() -> colGetSize
    89:89:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    94:94:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    104:105:void colPut(java.lang.Object,java.lang.Object) -> colPut
    114:115:void colRemoveAt(int) -> colRemoveAt
    109:109:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
androidx.collection.ArraySet -> androidx.collection.ArraySet:
    50:51:void <clinit>() -> <clinit>
    240:241:void <init>() -> <init>
    247:255:void <init>(int) -> <init>
    359:402:boolean add(java.lang.Object) -> add
    719:724:boolean addAll(java.util.Collection) -> addAll
    160:196:void allocArrays(int) -> allocArrays
    282:288:void clear() -> clear
    315:315:boolean contains(java.lang.Object) -> contains
    705:710:boolean containsAll(java.util.Collection) -> containsAll
    295:305:void ensureCapacity(int) -> ensureCapacity
    559:582:boolean equals(java.lang.Object) -> equals
    200:233:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    634:682:androidx.collection.MapCollections getCollection() -> getCollection
    590:595:int hashCode() -> hashCode
    83:117:int indexOf(java.lang.Object,int) -> indexOf
    325:325:int indexOf(java.lang.Object) -> indexOf
    121:155:int indexOfNull() -> indexOfNull
    343:343:boolean isEmpty() -> isEmpty
    694:694:java.util.Iterator iterator() -> iterator
    433:438:boolean remove(java.lang.Object) -> remove
    734:738:boolean removeAll(java.util.Collection) -> removeAll
    447:494:java.lang.Object removeAt(int) -> removeAt
    749:756:boolean retainAll(java.util.Collection) -> retainAll
    522:522:int size() -> size
    528:530:java.lang.Object[] toArray() -> toArray
    536:545:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    607:625:java.lang.String toString() -> toString
    335:335:java.lang.Object valueAt(int) -> valueAt
androidx.collection.ArraySet$1 -> androidx.collection.ArraySet$1:
    635:635:void <init>(androidx.collection.ArraySet) -> <init>
    678:679:void colClear() -> colClear
    643:643:java.lang.Object colGetEntry(int,int) -> colGetEntry
    658:658:java.util.Map colGetMap() -> colGetMap
    638:638:int colGetSize() -> colGetSize
    648:648:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    653:653:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    663:664:void colPut(java.lang.Object,java.lang.Object) -> colPut
    673:674:void colRemoveAt(int) -> colRemoveAt
    668:668:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
androidx.collection.ContainerHelpers -> androidx.collection.ContainerHelpers:
    20:22:void <clinit>() -> <clinit>
    46:61:int binarySearch(int[],int,int) -> binarySearch
    65:80:int binarySearch(long[],int,long) -> binarySearch
    41:41:boolean equal(java.lang.Object,java.lang.Object) -> equal
    33:37:int idealByteArraySize(int) -> idealByteArraySize
    25:25:int idealIntArraySize(int) -> idealIntArraySize
    29:29:int idealLongArraySize(int) -> idealLongArraySize
androidx.collection.LongSparseArray -> androidx.collection.LongSparseArray:
    51:51:void <clinit>() -> <clinit>
    62:63:void <init>() -> <init>
    52:81:void <init>(int) -> <init>
    440:449:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:94:androidx.collection.LongSparseArray clone() -> clone
    217:240:void gc() -> gc
    109:109:java.lang.Object get(long) -> get
    118:123:java.lang.Object get(long,java.lang.Object) -> get
    399:403:int indexOfKey(long) -> indexOfKey
    353:357:long keyAt(int) -> keyAt
    248:292:void put(long,java.lang.Object) -> put
    139:147:void remove(long) -> remove
    171:175:void removeAt(int) -> removeAt
    327:331:int size() -> size
    494:515:java.lang.String toString() -> toString
    373:377:java.lang.Object valueAt(int) -> valueAt
androidx.collection.LruCache -> androidx.collection.LruCache:
    51:57:void <init>(int) -> <init>
    255:255:java.lang.Object create(java.lang.Object) -> create
    236:236:void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    83:126:java.lang.Object get(java.lang.Object) -> get
    138:157:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    259:263:int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    274:274:int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    347:351:java.lang.String toString() -> toString
    171:191:void trimToSize(int) -> trimToSize
androidx.collection.MapCollections -> androidx.collection.MapCollections:
    32:32:void <init>() -> <init>
    459:465:boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    515:529:boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    533:536:java.util.Set getEntrySet() -> getEntrySet
    540:543:java.util.Set getKeySet() -> getKeySet
    547:550:java.util.Collection getValues() -> getValues
    469:474:boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    478:485:boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    490:495:java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    499:511:java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
androidx.collection.MapCollections$ArrayIterator -> androidx.collection.MapCollections$ArrayIterator:
    41:46:void <init>(androidx.collection.MapCollections,int) -> <init>
    50:50:boolean hasNext() -> hasNext
    55:59:java.lang.Object next() -> next
    64:71:void remove() -> remove
androidx.collection.MapCollections$EntrySet -> androidx.collection.MapCollections$EntrySet:
    167:167:void <init>(androidx.collection.MapCollections) -> <init>
    167:167:boolean add(java.lang.Object) -> add
    170:170:boolean add(java.util.Map$Entry) -> add
    175:179:boolean addAll(java.util.Collection) -> addAll
    184:185:void clear() -> clear
    189:197:boolean contains(java.lang.Object) -> contains
    202:208:boolean containsAll(java.util.Collection) -> containsAll
    253:253:boolean equals(java.lang.Object) -> equals
    258:265:int hashCode() -> hashCode
    213:213:boolean isEmpty() -> isEmpty
    218:218:java.util.Iterator iterator() -> iterator
    223:223:boolean remove(java.lang.Object) -> remove
    228:228:boolean removeAll(java.util.Collection) -> removeAll
    233:233:boolean retainAll(java.util.Collection) -> retainAll
    238:238:int size() -> size
    243:243:java.lang.Object[] toArray() -> toArray
    248:248:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$KeySet -> androidx.collection.MapCollections$KeySet:
    269:269:void <init>(androidx.collection.MapCollections) -> <init>
    273:273:boolean add(java.lang.Object) -> add
    278:278:boolean addAll(java.util.Collection) -> addAll
    283:284:void clear() -> clear
    288:288:boolean contains(java.lang.Object) -> contains
    293:293:boolean containsAll(java.util.Collection) -> containsAll
    343:343:boolean equals(java.lang.Object) -> equals
    348:353:int hashCode() -> hashCode
    298:298:boolean isEmpty() -> isEmpty
    303:303:java.util.Iterator iterator() -> iterator
    308:313:boolean remove(java.lang.Object) -> remove
    318:318:boolean removeAll(java.util.Collection) -> removeAll
    323:323:boolean retainAll(java.util.Collection) -> retainAll
    328:328:int size() -> size
    333:333:java.lang.Object[] toArray() -> toArray
    338:338:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$MapIterator -> androidx.collection.MapCollections$MapIterator:
    77:82:void <init>(androidx.collection.MapCollections) -> <init>
    137:146:boolean equals(java.lang.Object) -> equals
    110:114:java.lang.Object getKey() -> getKey
    119:123:java.lang.Object getValue() -> getValue
    86:86:boolean hasNext() -> hasNext
    151:158:int hashCode() -> hashCode
    74:74:java.lang.Object next() -> next
    91:94:java.util.Map$Entry next() -> next
    99:106:void remove() -> remove
    128:132:java.lang.Object setValue(java.lang.Object) -> setValue
    163:163:java.lang.String toString() -> toString
androidx.collection.MapCollections$ValuesCollection -> androidx.collection.MapCollections$ValuesCollection:
    357:357:void <init>(androidx.collection.MapCollections) -> <init>
    361:361:boolean add(java.lang.Object) -> add
    366:366:boolean addAll(java.util.Collection) -> addAll
    371:372:void clear() -> clear
    376:376:boolean contains(java.lang.Object) -> contains
    381:387:boolean containsAll(java.util.Collection) -> containsAll
    392:392:boolean isEmpty() -> isEmpty
    397:397:java.util.Iterator iterator() -> iterator
    402:407:boolean remove(java.lang.Object) -> remove
    412:423:boolean removeAll(java.util.Collection) -> removeAll
    428:439:boolean retainAll(java.util.Collection) -> retainAll
    444:444:int size() -> size
    449:449:java.lang.Object[] toArray() -> toArray
    454:454:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.SimpleArrayMap -> androidx.collection.SimpleArrayMap:
    236:240:void <init>() -> <init>
    246:254:void <init>(int) -> <init>
    260:264:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    165:197:void allocArrays(int) -> allocArrays
    77:80:int binarySearchHashes(int[],int,int) -> binarySearchHashes
    270:282:void clear() -> clear
    312:312:boolean containsKey(java.lang.Object) -> containsKey
    352:352:boolean containsValue(java.lang.Object) -> containsValue
    289:303:void ensureCapacity(int) -> ensureCapacity
    681:735:boolean equals(java.lang.Object) -> equals
    201:230:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    369:369:java.lang.Object get(java.lang.Object) -> get
    380:381:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    743:750:int hashCode() -> hashCode
    88:122:int indexOf(java.lang.Object,int) -> indexOf
    322:322:int indexOfKey(java.lang.Object) -> indexOfKey
    126:160:int indexOfNull() -> indexOfNull
    326:341:int indexOfValue(java.lang.Object) -> indexOfValue
    419:419:boolean isEmpty() -> isEmpty
    390:390:java.lang.Object keyAt(int) -> keyAt
    432:490:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    498:511:void putAll(androidx.collection.SimpleArrayMap) -> putAll
    523:527:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    538:543:java.lang.Object remove(java.lang.Object) -> remove
    553:561:boolean remove(java.lang.Object,java.lang.Object) -> remove
    570:626:java.lang.Object removeAt(int) -> removeAt
    637:641:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    653:661:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    409:412:java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    668:668:int size() -> size
    762:787:java.lang.String toString() -> toString
    399:399:java.lang.Object valueAt(int) -> valueAt
androidx.collection.SparseArrayCompat -> androidx.collection.SparseArrayCompat:
    51:51:void <clinit>() -> <clinit>
    62:63:void <init>() -> <init>
    52:81:void <init>(int) -> <init>
    460:487:void append(int,java.lang.Object) -> append
    444:453:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:94:androidx.collection.SparseArrayCompat clone() -> clone
    230:253:void gc() -> gc
    109:109:java.lang.Object get(int) -> get
    118:123:java.lang.Object get(int,java.lang.Object) -> get
    419:427:int indexOfValue(java.lang.Object) -> indexOfValue
    361:365:int keyAt(int) -> keyAt
    261:305:void put(int,java.lang.Object) -> put
    171:175:void removeAt(int) -> removeAt
    340:344:int size() -> size
    498:519:java.lang.String toString() -> toString
    375:379:java.lang.Object valueAt(int) -> valueAt
androidx.concurrent.futures.AbstractResolvableFuture -> androidx.concurrent.futures.AbstractResolvableFuture:
    64:217:void <clinit>() -> <clinit>
    317:318:void <init>() -> <init>
    1026:1035:void addDoneString(java.lang.StringBuilder) -> addDoneString
    925:925:void afterDone() -> afterDone
    555:617:boolean cancel(boolean) -> cancel
    1195:1197:java.util.concurrent.CancellationException cancellationExceptionWithCause(java.lang.String,java.lang.Throwable) -> cancellationExceptionWithCause
    1203:1206:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    963:972:androidx.concurrent.futures.AbstractResolvableFuture$Listener clearListeners(androidx.concurrent.futures.AbstractResolvableFuture$Listener) -> clearListeners
    871:910:void complete(androidx.concurrent.futures.AbstractResolvableFuture) -> complete
    1056:1067:void executeListener(java.lang.Runnable,java.util.concurrent.Executor) -> executeListener
    359:456:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    470:506:java.lang.Object get() -> get
    513:524:java.lang.Object getDoneValue(java.lang.Object) -> getDoneValue
    800:841:java.lang.Object getFutureValue(com.google.common.util.concurrent.ListenableFuture) -> getFutureValue
    852:865:java.lang.Object getUninterruptibly(java.util.concurrent.Future) -> getUninterruptibly
    633:633:void interruptTask() -> interruptTask
    536:537:boolean isCancelled() -> isCancelled
    530:531:boolean isDone() -> isDone
    1013:1021:java.lang.String pendingToString() -> pendingToString
    942:948:void releaseWaiters() -> releaseWaiters
    171:198:void removeWaiter(androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> removeWaiter
    685:690:boolean set(java.lang.Object) -> set
    978:1002:java.lang.String toString() -> toString
    1044:1047:java.lang.String userObjectToString(java.lang.Object) -> userObjectToString
androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper -> androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper:
    1069:1069:void <init>() -> <init>
    1069:1069:void <init>(androidx.concurrent.futures.AbstractResolvableFuture$1) -> <init>
androidx.concurrent.futures.AbstractResolvableFuture$Cancellation -> androidx.concurrent.futures.AbstractResolvableFuture$Cancellation:
    243:250:void <clinit>() -> <clinit>
    256:259:void <init>(boolean,java.lang.Throwable) -> <init>
androidx.concurrent.futures.AbstractResolvableFuture$Failure -> androidx.concurrent.futures.AbstractResolvableFuture$Failure:
    221:221:void <clinit>() -> <clinit>
    231:233:void <init>(java.lang.Throwable) -> <init>
androidx.concurrent.futures.AbstractResolvableFuture$Failure$1 -> androidx.concurrent.futures.AbstractResolvableFuture$Failure$1:
    223:223:void <init>(java.lang.String) -> <init>
    226:226:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
androidx.concurrent.futures.AbstractResolvableFuture$Listener -> androidx.concurrent.futures.AbstractResolvableFuture$Listener:
    202:202:void <clinit>() -> <clinit>
    210:213:void <init>(java.lang.Runnable,java.util.concurrent.Executor) -> <init>
androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper -> androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper:
    1105:1111:void <init>(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater) -> <init>
    1130:1130:boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener) -> casListeners
    1135:1135:boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object) -> casValue
    1125:1125:boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> casWaiters
    1120:1121:void putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> putNext
    1115:1116:void putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread) -> putThread
androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0 -> androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$InternalSyntheticBackportWithForwarding$2$58dd097c22a157c6fc915c3ca83711e3efdab037cd14fe4274f47b3cf6d48957$0.m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.concurrent.futures.AbstractResolvableFuture$SetFuture -> androidx.concurrent.futures.AbstractResolvableFuture$SetFuture:
    274:282:void run() -> run
androidx.concurrent.futures.AbstractResolvableFuture$SynchronizedHelper -> androidx.concurrent.futures.AbstractResolvableFuture$SynchronizedHelper:
    1146:1147:void <init>() -> <init>
    1172:1178:boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener) -> casListeners
    1183:1189:boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object) -> casValue
    1161:1167:boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> casWaiters
    1156:1157:void putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> putNext
    1151:1152:void putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread) -> putThread
androidx.concurrent.futures.AbstractResolvableFuture$Waiter -> androidx.concurrent.futures.AbstractResolvableFuture$Waiter:
    121:121:void <clinit>() -> <clinit>
    132:133:void <init>(boolean) -> <init>
    135:138:void <init>() -> <init>
    143:144:void setNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> setNext
    151:156:void unpark() -> unpark
androidx.concurrent.futures.ResolvableFuture -> androidx.concurrent.futures.ResolvableFuture:
    63:64:void <init>() -> <init>
    45:45:androidx.concurrent.futures.ResolvableFuture create() -> create
    50:50:boolean set(java.lang.Object) -> set
androidx.constraintlayout.core.ArrayLinkedVariables -> androidx.constraintlayout.core.ArrayLinkedVariables:
    82:82:void <clinit>() -> <clinit>
    43:109:void <init>(androidx.constraintlayout.core.ArrayRow,androidx.constraintlayout.core.Cache) -> <init>
    226:340:void add(androidx.constraintlayout.core.SolverVariable,float,boolean) -> add
    409:423:void clear() -> clear
    432:443:boolean contains(androidx.constraintlayout.core.SolverVariable) -> contains
    500:506:void divideByAmount(float) -> divideByAmount
    593:602:float get(androidx.constraintlayout.core.SolverVariable) -> get
    509:509:int getCurrentSize() -> getCurrentSize
    558:566:androidx.constraintlayout.core.SolverVariable getVariable(int) -> getVariable
    576:584:float getVariableValue(int) -> getVariableValue
    485:491:void invert() -> invert
    118:214:void put(androidx.constraintlayout.core.SolverVariable,float) -> put
    369:402:float remove(androidx.constraintlayout.core.SolverVariable,boolean) -> remove
    633:642:java.lang.String toString() -> toString
    349:358:float use(androidx.constraintlayout.core.ArrayRow,boolean) -> use
androidx.constraintlayout.core.ArrayRow -> androidx.constraintlayout.core.ArrayRow:
    26:55:void <init>() -> <init>
    26:60:void <init>(androidx.constraintlayout.core.Cache) -> <init>
    349:351:androidx.constraintlayout.core.ArrayRow addError(androidx.constraintlayout.core.LinearSystem,int) -> addError
    690:703:void addError(androidx.constraintlayout.core.SolverVariable) -> addError
    178:179:androidx.constraintlayout.core.ArrayRow addSingleError(androidx.constraintlayout.core.SolverVariable,int) -> addSingleError
    431:442:boolean chooseSubject(androidx.constraintlayout.core.LinearSystem) -> chooseSubject
    457:504:androidx.constraintlayout.core.SolverVariable chooseSubjectInVariables(androidx.constraintlayout.core.LinearSystem) -> chooseSubjectInVariables
    665:668:void clear() -> clear
    303:345:androidx.constraintlayout.core.ArrayRow createRowCentering(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int,float,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int) -> createRowCentering
    139:143:androidx.constraintlayout.core.ArrayRow createRowDefinition(androidx.constraintlayout.core.SolverVariable,int) -> createRowDefinition
    356:358:androidx.constraintlayout.core.ArrayRow createRowDimensionPercent(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,float) -> createRowDimensionPercent
    375:379:androidx.constraintlayout.core.ArrayRow createRowDimensionRatio(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,float) -> createRowDimensionRatio
    240:268:androidx.constraintlayout.core.ArrayRow createRowEqualMatchDimensions(float,float,float,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable) -> createRowEqualMatchDimensions
    147:154:androidx.constraintlayout.core.ArrayRow createRowEquals(androidx.constraintlayout.core.SolverVariable,int) -> createRowEquals
    158:174:androidx.constraintlayout.core.ArrayRow createRowEquals(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int) -> createRowEquals
    185:203:androidx.constraintlayout.core.ArrayRow createRowGreaterThan(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int) -> createRowGreaterThan
    214:232:androidx.constraintlayout.core.ArrayRow createRowLowerThan(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int) -> createRowLowerThan
    393:398:androidx.constraintlayout.core.ArrayRow createRowWithAngle(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,float) -> createRowWithAngle
    415:420:void ensurePositiveConstant() -> ensurePositiveConstant
    707:707:androidx.constraintlayout.core.SolverVariable getKey() -> getKey
    660:660:androidx.constraintlayout.core.SolverVariable getPivotCandidate(androidx.constraintlayout.core.LinearSystem,boolean[]) -> getPivotCandidate
    63:63:boolean hasKeyVariable() -> hasKeyVariable
    135:135:boolean hasVariable(androidx.constraintlayout.core.SolverVariable) -> hasVariable
    676:686:void initFromRow(androidx.constraintlayout.core.LinearSystem$Row) -> initFromRow
    556:556:boolean isEmpty() -> isEmpty
    532:532:boolean isNew(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.LinearSystem) -> isNew
    655:655:androidx.constraintlayout.core.SolverVariable pickPivot(androidx.constraintlayout.core.SolverVariable) -> pickPivot
    610:649:androidx.constraintlayout.core.SolverVariable pickPivotInVariables(boolean[],androidx.constraintlayout.core.SolverVariable) -> pickPivotInVariables
    536:550:void pivot(androidx.constraintlayout.core.SolverVariable) -> pivot
    128:132:void reset() -> reset
    75:124:java.lang.String toReadableString() -> toReadableString
    71:71:java.lang.String toString() -> toString
    575:589:void updateFromFinalVariable(androidx.constraintlayout.core.LinearSystem,androidx.constraintlayout.core.SolverVariable,boolean) -> updateFromFinalVariable
    561:572:void updateFromRow(androidx.constraintlayout.core.LinearSystem,androidx.constraintlayout.core.ArrayRow,boolean) -> updateFromRow
    592:607:void updateFromSynonymVariable(androidx.constraintlayout.core.LinearSystem,androidx.constraintlayout.core.SolverVariable,boolean) -> updateFromSynonymVariable
    712:747:void updateFromSystem(androidx.constraintlayout.core.LinearSystem) -> updateFromSystem
androidx.constraintlayout.core.Cache -> androidx.constraintlayout.core.Cache:
    21:25:void <init>() -> <init>
androidx.constraintlayout.core.LinearSystem -> androidx.constraintlayout.core.LinearSystem:
    37:250:void <clinit>() -> <clinit>
    48:104:void <init>() -> <init>
    370:383:androidx.constraintlayout.core.SolverVariable acquireSolverVariable(androidx.constraintlayout.core.SolverVariable$Type,java.lang.String) -> acquireSolverVariable
    1445:1463:void addCenterPoint(androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.ConstraintWidget,float,int) -> addCenterPoint
    1288:1294:void addCentering(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int,float,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int,int) -> addCentering
    553:636:void addConstraint(androidx.constraintlayout.core.ArrayRow) -> addConstraint
    1336:1368:androidx.constraintlayout.core.ArrayRow addEquality(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int,int) -> addEquality
    1377:1413:void addEquality(androidx.constraintlayout.core.SolverVariable,int) -> addEquality
    1229:1234:void addGreaterBarrier(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int,boolean) -> addGreaterBarrier
    1214:1223:void addGreaterThan(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int,int) -> addGreaterThan
    1262:1267:void addLowerBarrier(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int,boolean) -> addLowerBarrier
    1247:1256:void addLowerThan(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int,int) -> addLowerThan
    1300:1306:void addRatio(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,float,int) -> addRatio
    639:684:void addRow(androidx.constraintlayout.core.ArrayRow) -> addRow
    314:325:void addSingleError(androidx.constraintlayout.core.ArrayRow,int,int) -> addSingleError
    1036:1040:void computeValues() -> computeValues
    348:361:androidx.constraintlayout.core.SolverVariable createErrorVariable(int,java.lang.String) -> createErrorVariable
    291:302:androidx.constraintlayout.core.SolverVariable createExtraVariable() -> createExtraVariable
    220:246:androidx.constraintlayout.core.SolverVariable createObjectVariable(java.lang.Object) -> createObjectVariable
    254:272:androidx.constraintlayout.core.ArrayRow createRow() -> createRow
    1430:1431:androidx.constraintlayout.core.ArrayRow createRowDimensionPercent(androidx.constraintlayout.core.LinearSystem,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,float) -> createRowDimensionPercent
    276:287:androidx.constraintlayout.core.SolverVariable createSlackVariable() -> createSlackVariable
    866:1032:int enforceBFS(androidx.constraintlayout.core.LinearSystem$Row) -> enforceBFS
    1171:1171:androidx.constraintlayout.core.Cache getCache() -> getCache
    111:111:androidx.constraintlayout.core.Metrics getMetrics() -> getMetrics
    409:419:int getObjectVariableValue(java.lang.Object) -> getObjectVariableValue
    140:151:void increaseTableSize() -> increaseTableSize
    448:487:void minimize() -> minimize
    494:520:void minimizeGoal(androidx.constraintlayout.core.LinearSystem$Row) -> minimizeGoal
    716:857:int optimize(androidx.constraintlayout.core.LinearSystem$Row,boolean) -> optimize
    157:174:void releaseRows() -> releaseRows
    185:213:void reset() -> reset
androidx.constraintlayout.core.LinearSystem$ValuesRow -> androidx.constraintlayout.core.LinearSystem$ValuesRow:
    89:91:void <init>(androidx.constraintlayout.core.LinearSystem,androidx.constraintlayout.core.Cache) -> <init>
androidx.constraintlayout.core.Pools$SimplePool -> androidx.constraintlayout.core.Pools$SimplePool:
    96:101:void <init>(int) -> <init>
    106:113:java.lang.Object acquire() -> acquire
    123:128:boolean release(java.lang.Object) -> release
    133:148:void releaseAll(java.lang.Object[],int) -> releaseAll
androidx.constraintlayout.core.PriorityGoalRow -> androidx.constraintlayout.core.PriorityGoalRow:
    29:156:void <init>(androidx.constraintlayout.core.Cache) -> <init>
    25:25:void access$000(androidx.constraintlayout.core.PriorityGoalRow,androidx.constraintlayout.core.SolverVariable) -> access$000
    190:194:void addError(androidx.constraintlayout.core.SolverVariable) -> addError
    197:221:void addToGoal(androidx.constraintlayout.core.SolverVariable) -> addToGoal
    147:149:void clear() -> clear
    167:185:androidx.constraintlayout.core.SolverVariable getPivotCandidate(androidx.constraintlayout.core.LinearSystem,boolean[]) -> getPivotCandidate
    160:160:boolean isEmpty() -> isEmpty
    224:234:void removeGoal(androidx.constraintlayout.core.SolverVariable) -> removeGoal
    259:266:java.lang.String toString() -> toString
    238:255:void updateFromRow(androidx.constraintlayout.core.LinearSystem,androidx.constraintlayout.core.ArrayRow,boolean) -> updateFromRow
androidx.constraintlayout.core.PriorityGoalRow$1 -> androidx.constraintlayout.core.PriorityGoalRow$1:
    208:208:void <init>(androidx.constraintlayout.core.PriorityGoalRow) -> <init>
    208:208:int compare(java.lang.Object,java.lang.Object) -> compare
    211:211:int compare(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable) -> compare
androidx.constraintlayout.core.PriorityGoalRow$GoalVariableAccessor -> androidx.constraintlayout.core.PriorityGoalRow$GoalVariableAccessor:
    39:41:void <init>(androidx.constraintlayout.core.PriorityGoalRow,androidx.constraintlayout.core.PriorityGoalRow) -> <init>
    48:77:boolean addToGoal(androidx.constraintlayout.core.SolverVariable,float) -> addToGoal
    44:45:void init(androidx.constraintlayout.core.SolverVariable) -> init
    91:100:boolean isNegative() -> isNegative
    104:116:boolean isSmallerThan(androidx.constraintlayout.core.SolverVariable) -> isSmallerThan
    129:130:void reset() -> reset
    133:140:java.lang.String toString() -> toString
androidx.constraintlayout.core.SolverVariable -> androidx.constraintlayout.core.SolverVariable:
    44:48:void <clinit>() -> <clinit>
    53:172:void <init>(androidx.constraintlayout.core.SolverVariable$Type,java.lang.String) -> <init>
    178:189:void addToRow(androidx.constraintlayout.core.ArrayRow) -> addToRow
    27:27:int compareTo(java.lang.Object) -> compareTo
    300:300:int compareTo(androidx.constraintlayout.core.SolverVariable) -> compareTo
    99:100:void increaseErrorId() -> increaseErrorId
    195:206:void removeFromRow(androidx.constraintlayout.core.ArrayRow) -> removeFromRow
    257:279:void reset() -> reset
    227:238:void setFinalValue(androidx.constraintlayout.core.LinearSystem,float) -> setFinalValue
    292:296:void setType(androidx.constraintlayout.core.SolverVariable$Type,java.lang.String) -> setType
    308:324:java.lang.String toString() -> toString
    215:221:void updateReferencesWithNewDefinition(androidx.constraintlayout.core.LinearSystem,androidx.constraintlayout.core.ArrayRow) -> updateReferencesWithNewDefinition
androidx.constraintlayout.core.SolverVariable$Type -> androidx.constraintlayout.core.SolverVariable$Type:
    75:95:void <clinit>() -> <clinit>
    75:75:void <init>(java.lang.String,int) -> <init>
    75:75:androidx.constraintlayout.core.SolverVariable$Type valueOf(java.lang.String) -> valueOf
    75:75:androidx.constraintlayout.core.SolverVariable$Type[] values() -> values
androidx.constraintlayout.core.SolverVariableValues -> androidx.constraintlayout.core.SolverVariableValues:
    28:28:void <clinit>() -> <clinit>
    29:50:void <init>(androidx.constraintlayout.core.ArrayRow,androidx.constraintlayout.core.Cache) -> <init>
    410:423:void add(androidx.constraintlayout.core.SolverVariable,float,boolean) -> add
    216:236:void addToHashMap(androidx.constraintlayout.core.SolverVariable,int) -> addToHashMap
    289:296:void addVariable(int,androidx.constraintlayout.core.SolverVariable,float) -> addVariable
    180:196:void clear() -> clear
    94:94:boolean contains(androidx.constraintlayout.core.SolverVariable) -> contains
    481:490:void divideByAmount(float) -> divideByAmount
    299:304:int findEmptySlot() -> findEmptySlot
    125:129:float get(androidx.constraintlayout.core.SolverVariable) -> get
    54:54:int getCurrentSize() -> getCurrentSize
    59:73:androidx.constraintlayout.core.SolverVariable getVariable(int) -> getVariable
    78:89:float getVariableValue(int) -> getVariableValue
    199:210:void increaseSize() -> increaseSize
    99:120:int indexOf(androidx.constraintlayout.core.SolverVariable) -> indexOf
    308:327:void insertVariable(int,androidx.constraintlayout.core.SolverVariable,float) -> insertVariable
    468:477:void invert() -> invert
    334:369:void put(androidx.constraintlayout.core.SolverVariable,float) -> put
    381:402:float remove(androidx.constraintlayout.core.SolverVariable,boolean) -> remove
    260:286:void removeFromHashMap(androidx.constraintlayout.core.SolverVariable) -> removeFromHashMap
    148:172:java.lang.String toString() -> toString
    427:463:float use(androidx.constraintlayout.core.ArrayRow,boolean) -> use
androidx.constraintlayout.core.motion.utils.Easing -> androidx.constraintlayout.core.motion.utils.Easing:
    27:43:void <clinit>() -> <clinit>
    26:28:void <init>() -> <init>
    80:80:double get(double) -> get
    88:88:double getDiff(double) -> getDiff
    84:84:java.lang.String toString() -> toString
androidx.constraintlayout.core.motion.utils.KeyCycleOscillator -> androidx.constraintlayout.core.motion.utils.KeyCycleOscillator:
    31:40:void <init>() -> <init>
    117:117:float get(float) -> get
    104:109:java.lang.String toString() -> toString
androidx.constraintlayout.core.motion.utils.SplineSet -> androidx.constraintlayout.core.motion.utils.SplineSet:
    33:37:void <init>() -> <init>
    61:61:float get(float) -> get
    47:53:java.lang.String toString() -> toString
androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet -> androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet:
    41:41:void <clinit>() -> <clinit>
    29:44:void <init>() -> <init>
    65:82:float calcWave(float) -> calcWave
    48:53:java.lang.String toString() -> toString
androidx.constraintlayout.core.state.WidgetFrame -> androidx.constraintlayout.core.state.WidgetFrame:
    52:52:void <clinit>() -> <clinit>
    34:79:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidget) -> <init>
androidx.constraintlayout.core.widgets.Barrier -> androidx.constraintlayout.core.widgets.Barrier:
    36:42:void <init>() -> <init>
    139:247:void addToSolver(androidx.constraintlayout.core.LinearSystem,boolean) -> addToSolver
    273:329:boolean allSolved() -> allSolved
    49:49:boolean allowedInBarrier() -> allowedInBarrier
    77:77:boolean getAllowsGoneWidget() -> getAllowsGoneWidget
    52:52:int getBarrierType() -> getBarrierType
    254:254:int getMargin() -> getMargin
    258:266:int getOrientation() -> getOrientation
    80:80:boolean isResolvedHorizontally() -> isResolvedHorizontally
    84:84:boolean isResolvedVertically() -> isResolvedVertically
    111:122:void markWidgets() -> markWidgets
    58:58:void setAllowsGoneWidget(boolean) -> setAllowsGoneWidget
    55:56:void setBarrierType(int) -> setBarrierType
    250:251:void setMargin(int) -> setMargin
    98:107:java.lang.String toString() -> toString
androidx.constraintlayout.core.widgets.Chain -> androidx.constraintlayout.core.widgets.Chain:
    47:69:void applyChainConstraints(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,androidx.constraintlayout.core.LinearSystem,java.util.ArrayList,int) -> applyChainConstraints
    83:458:void applyChainConstraints(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,androidx.constraintlayout.core.LinearSystem,int,int,androidx.constraintlayout.core.widgets.ChainHead) -> applyChainConstraints
androidx.constraintlayout.core.widgets.ChainHead -> androidx.constraintlayout.core.widgets.ChainHead:
    42:67:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidget,int,boolean) -> <init>
    234:238:void define() -> define
    84:199:void defineChainProperties() -> defineChainProperties
    77:77:boolean isMatchConstraintEqualityCandidate(androidx.constraintlayout.core.widgets.ConstraintWidget,int) -> isMatchConstraintEqualityCandidate
androidx.constraintlayout.core.widgets.ConstraintAnchor -> androidx.constraintlayout.core.widgets.ConstraintAnchor:
    36:134:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.ConstraintAnchor$Type) -> <init>
    215:231:boolean connect(androidx.constraintlayout.core.widgets.ConstraintAnchor,int,int,boolean) -> connect
    242:242:boolean connect(androidx.constraintlayout.core.widgets.ConstraintAnchor,int) -> connect
    41:46:void findDependents(int,java.util.ArrayList,androidx.constraintlayout.core.widgets.analyzer.WidgetGroup) -> findDependents
    48:48:java.util.HashSet getDependents() -> getDependents
    75:78:int getFinalValue() -> getFinalValue
    170:177:int getMargin() -> getMargin
    490:510:androidx.constraintlayout.core.widgets.ConstraintAnchor getOpposite() -> getOpposite
    157:157:androidx.constraintlayout.core.widgets.ConstraintWidget getOwner() -> getOwner
    140:140:androidx.constraintlayout.core.SolverVariable getSolverVariable() -> getSolverVariable
    184:184:androidx.constraintlayout.core.widgets.ConstraintAnchor getTarget() -> getTarget
    163:163:androidx.constraintlayout.core.widgets.ConstraintAnchor$Type getType() -> getType
    57:66:boolean hasCenteredDependents() -> hasCenteredDependents
    50:53:boolean hasDependents() -> hasDependents
    86:86:boolean hasFinalValue() -> hasFinalValue
    250:250:boolean isConnected() -> isConnected
    259:303:boolean isValidConnection(androidx.constraintlayout.core.widgets.ConstraintAnchor) -> isValidConnection
    190:202:void reset() -> reset
    82:84:void resetFinalResolution() -> resetFinalResolution
    146:151:void resetSolverVariable(androidx.constraintlayout.core.Cache) -> resetSolverVariable
    70:72:void setFinalValue(int) -> setFinalValue
    376:379:void setGoneMargin(int) -> setGoneMargin
    410:410:java.lang.String toString() -> toString
androidx.constraintlayout.core.widgets.ConstraintAnchor$1 -> androidx.constraintlayout.core.widgets.ConstraintAnchor$1:
    270:270:void <clinit>() -> <clinit>
androidx.constraintlayout.core.widgets.ConstraintAnchor$Type -> androidx.constraintlayout.core.widgets.ConstraintAnchor$Type:
    91:91:void <clinit>() -> <clinit>
    91:91:void <init>(java.lang.String,int) -> <init>
    91:91:androidx.constraintlayout.core.widgets.ConstraintAnchor$Type valueOf(java.lang.String) -> valueOf
    91:91:androidx.constraintlayout.core.widgets.ConstraintAnchor$Type[] values() -> values
androidx.constraintlayout.core.widgets.ConstraintWidget -> androidx.constraintlayout.core.widgets.ConstraintWidget:
    470:470:void <clinit>() -> <clinit>
    62:734:void <init>() -> <init>
    804:812:void addAnchors() -> addAnchors
    3542:3584:void addChildrenToSolverByDependency(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,androidx.constraintlayout.core.LinearSystem,java.util.HashSet,int,boolean) -> addChildrenToSolverByDependency
    2777:2777:boolean addFirst() -> addFirst
    2413:2770:void addToSolver(androidx.constraintlayout.core.LinearSystem,boolean) -> addToSolver
    1846:1846:boolean allowedInBarrier() -> allowedInBarrier
    2873:3343:void applyConstraints(androidx.constraintlayout.core.LinearSystem,boolean,boolean,boolean,boolean,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour,boolean,androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.widgets.ConstraintAnchor,int,int,int,int,float,boolean,boolean,boolean,boolean,boolean,int,int,int,int,float,boolean) -> applyConstraints
    1877:1880:void connect(androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.widgets.ConstraintAnchor,int) -> connect
    1909:2076:void connect(androidx.constraintlayout.core.widgets.ConstraintAnchor$Type,androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.ConstraintAnchor$Type,int) -> connect
    885:888:void connectCircularConstraint(androidx.constraintlayout.core.widgets.ConstraintWidget,float,int) -> connectCircularConstraint
    997:1004:void createObjectVariables(androidx.constraintlayout.core.LinearSystem) -> createObjectVariables
    773:779:void ensureWidgetRuns() -> ensureWidgetRuns
    2172:2200:androidx.constraintlayout.core.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.core.widgets.ConstraintAnchor$Type) -> getAnchor
    1282:1282:int getBaselineDistance() -> getBaselineDistance
    1258:1263:float getBiasPercent(int) -> getBiasPercent
    1199:1199:int getBottom() -> getBottom
    1292:1292:java.lang.Object getCompanionWidget() -> getCompanionWidget
    950:950:java.lang.String getDebugName() -> getDebugName
    2228:2233:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour getDimensionBehaviour(int) -> getDimensionBehaviour
    1535:1535:float getDimensionRatio() -> getDimensionRatio
    1544:1544:int getDimensionRatioSide() -> getDimensionRatioSide
    1106:1109:int getHeight() -> getHeight
    1237:1237:float getHorizontalBiasPercent() -> getHorizontalBiasPercent
    1819:1819:int getHorizontalChainStyle() -> getHorizontalChainStyle
    2209:2209:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour getHorizontalDimensionBehaviour() -> getHorizontalDimensionBehaviour
    1206:1213:int getHorizontalMargin() -> getHorizontalMargin
    400:400:int getLastHorizontalMeasureSpec() -> getLastHorizontalMeasureSpec
    401:401:int getLastVerticalMeasureSpec() -> getLastVerticalMeasureSpec
    1119:1124:int getLength(int) -> getLength
    321:321:int getMaxHeight() -> getMaxHeight
    325:325:int getMaxWidth() -> getMaxWidth
    1163:1163:int getMinHeight() -> getMinHeight
    1154:1154:int getMinWidth() -> getMinWidth
    2294:2303:androidx.constraintlayout.core.widgets.ConstraintWidget getNextChainMember(int) -> getNextChainMember
    829:829:androidx.constraintlayout.core.widgets.ConstraintWidget getParent() -> getParent
    2275:2284:androidx.constraintlayout.core.widgets.ConstraintWidget getPreviousChainMember(int) -> getPreviousChainMember
    1190:1190:int getRight() -> getRight
    84:89:androidx.constraintlayout.core.widgets.analyzer.WidgetRun getRun(int) -> getRun
    3588:3632:void getSceneString(java.lang.StringBuilder) -> getSceneString
    3639:3648:void getSceneString(java.lang.StringBuilder,java.lang.String,int,int,int,int,int,int,float,float) -> getSceneString
    3650:3668:void getSceneString(java.lang.StringBuilder,java.lang.String,androidx.constraintlayout.core.widgets.ConstraintAnchor) -> getSceneString
    1247:1247:float getVerticalBiasPercent() -> getVerticalBiasPercent
    1839:1839:int getVerticalChainStyle() -> getVerticalChainStyle
    2218:2218:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour getVerticalDimensionBehaviour() -> getVerticalDimensionBehaviour
    1220:1227:int getVerticalMargin() -> getVerticalMargin
    923:923:int getVisibility() -> getVisibility
    1058:1061:int getWidth() -> getWidth
    1034:1037:int getX() -> getX
    1046:1049:int getY() -> getY
    1273:1273:boolean hasBaseline() -> hasBaseline
    227:232:boolean hasDanglingDimension(int) -> hasDanglingDimension
    217:223:boolean hasDependencies() -> hasDependencies
    722:722:boolean hasDimensionOverride() -> hasDimensionOverride
    237:250:boolean hasResolvedTargets(int,int) -> hasResolvedTargets
    1864:1867:void immediateConnect(androidx.constraintlayout.core.widgets.ConstraintAnchor$Type,androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.ConstraintAnchor$Type,int,int) -> immediateConnect
    2385:2386:boolean isChainHead(int) -> isChainHead
    132:132:boolean isHorizontalSolvingPassDone() -> isHorizontalSolvingPassDone
    373:373:boolean isInBarrier(int) -> isInBarrier
    2261:2265:boolean isInHorizontalChain() -> isInHorizontalChain
    361:361:boolean isInPlaceholder() -> isInPlaceholder
    2342:2346:boolean isInVerticalChain() -> isInVerticalChain
    313:313:boolean isInVirtualLayout() -> isInVirtualLayout
    381:381:boolean isMeasureRequested() -> isMeasureRequested
    194:194:boolean isResolvedHorizontally() -> isResolvedHorizontally
    198:198:boolean isResolvedVertically() -> isResolvedVertically
    136:136:boolean isVerticalSolvingPassDone() -> isVerticalSolvingPassDone
    140:141:void markHorizontalSolvingPassDone() -> markHorizontalSolvingPassDone
    144:145:void markVerticalSolvingPassDone() -> markVerticalSolvingPassDone
    716:716:boolean oppositeDimensionsTied() -> oppositeDimensionsTied
    517:580:void reset() -> reset
    2152:2163:void resetAnchors() -> resetAnchors
    202:210:void resetFinalResolution() -> resetFinalResolution
    790:798:void resetSolverVariables(androidx.constraintlayout.core.Cache) -> resetSolverVariables
    614:621:void serializeAttribute(java.lang.StringBuilder,java.lang.String,float,float) -> serializeAttribute
    624:631:void serializeAttribute(java.lang.StringBuilder,java.lang.String,int,int) -> serializeAttribute
    634:644:void serializeDimensionRatio(java.lang.StringBuilder,java.lang.String,float,int) -> serializeDimensionRatio
    1745:1747:void setBaselineDistance(int) -> setBaselineDistance
    1756:1757:void setCompanionWidget(java.lang.Object) -> setCompanionWidget
    957:958:void setDebugName(java.lang.String) -> setDebugName
    1460:1514:void setDimensionRatio(java.lang.String) -> setDimensionRatio
    181:191:void setFinalBaseline(int) -> setFinalBaseline
    148:160:void setFinalHorizontal(int,int) -> setFinalHorizontal
    117:119:void setFinalLeft(int) -> setFinalLeft
    122:124:void setFinalTop(int) -> setFinalTop
    163:178:void setFinalVertical(int,int) -> setFinalVertical
    1619:1664:void setFrame(int,int,int,int) -> setFrame
    353:354:void setHasBaseline(boolean) -> setHasBaseline
    1398:1402:void setHeight(int) -> setHeight
    1554:1555:void setHorizontalBiasPercent(float) -> setHorizontalBiasPercent
    1809:1810:void setHorizontalChainStyle(int) -> setHorizontalChainStyle
    1688:1693:void setHorizontalDimension(int,int) -> setHorizontalDimension
    2243:2244:void setHorizontalDimensionBehaviour(androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) -> setHorizontalDimensionBehaviour
    1427:1434:void setHorizontalMatchStyle(int,int,int,float) -> setHorizontalMatchStyle
    1790:1791:void setHorizontalWeight(float) -> setHorizontalWeight
    369:370:void setInBarrier(int,boolean) -> setInBarrier
    365:366:void setInPlaceholder(boolean) -> setInPlaceholder
    317:318:void setInVirtualLayout(boolean) -> setInVirtualLayout
    403:406:void setLastMeasureSpec(int,int) -> setLastMeasureSpec
    333:334:void setMaxHeight(int) -> setMaxHeight
    329:330:void setMaxWidth(int) -> setMaxWidth
    377:378:void setMeasureRequested(boolean) -> setMeasureRequested
    1586:1591:void setMinHeight(int) -> setMinHeight
    1573:1578:void setMinWidth(int) -> setMinWidth
    1329:1331:void setOrigin(int,int) -> setOrigin
    838:839:void setParent(androidx.constraintlayout.core.widgets.ConstraintWidget) -> setParent
    1564:1565:void setVerticalBiasPercent(float) -> setVerticalBiasPercent
    1829:1830:void setVerticalChainStyle(int) -> setVerticalChainStyle
    1702:1707:void setVerticalDimension(int,int) -> setVerticalDimension
    2252:2253:void setVerticalDimensionBehaviour(androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) -> setVerticalDimensionBehaviour
    1445:1452:void setVerticalMatchStyle(int,int,int,float) -> setVerticalMatchStyle
    1799:1800:void setVerticalWeight(float) -> setVerticalWeight
    914:915:void setVisibility(int) -> setVisibility
    1386:1390:void setWidth(int) -> setWidth
    385:388:void setWrapBehaviorInParent(int) -> setWrapBehaviorInParent
    1310:1311:void setX(int) -> setX
    1319:1320:void setY(int) -> setY
    2790:2844:void setupDimensionRatio(boolean,boolean,boolean,boolean) -> setupDimensionRatio
    1013:1013:java.lang.String toString() -> toString
    3483:3539:void updateFromRuns(boolean,boolean) -> updateFromRuns
    3352:3382:void updateFromSolver(androidx.constraintlayout.core.LinearSystem,boolean) -> updateFromSolver
androidx.constraintlayout.core.widgets.ConstraintWidget$1 -> androidx.constraintlayout.core.widgets.ConstraintWidget$1:
    1351:2902:void <clinit>() -> <clinit>
androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour -> androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour:
    411:412:void <clinit>() -> <clinit>
    411:411:void <init>(java.lang.String,int) -> <init>
    411:411:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String) -> valueOf
    411:411:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[] values() -> values
androidx.constraintlayout.core.widgets.ConstraintWidgetContainer -> androidx.constraintlayout.core.widgets.ConstraintWidgetContainer:
    646:646:void <clinit>() -> <clinit>
    48:518:void <init>() -> <init>
    1059:1065:void addChain(androidx.constraintlayout.core.widgets.ConstraintWidget,int) -> addChain
    335:447:boolean addChildrenToSolver(androidx.constraintlayout.core.LinearSystem) -> addChildrenToSolver
    1074:1080:void addHorizontalChain(androidx.constraintlayout.core.widgets.ConstraintWidget) -> addHorizontalChain
    302:306:void addHorizontalWrapMaxVariable(androidx.constraintlayout.core.widgets.ConstraintAnchor) -> addHorizontalWrapMaxVariable
    288:292:void addHorizontalWrapMinVariable(androidx.constraintlayout.core.widgets.ConstraintAnchor) -> addHorizontalWrapMinVariable
    315:318:void addMaxWrap(androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.SolverVariable) -> addMaxWrap
    309:312:void addMinWrap(androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.SolverVariable) -> addMinWrap
    1089:1095:void addVerticalChain(androidx.constraintlayout.core.widgets.ConstraintWidget) -> addVerticalChain
    295:299:void addVerticalWrapMaxVariable(androidx.constraintlayout.core.widgets.ConstraintAnchor) -> addVerticalWrapMaxVariable
    281:285:void addVerticalWrapMinVariable(androidx.constraintlayout.core.widgets.ConstraintAnchor) -> addVerticalWrapMinVariable
    73:73:boolean directMeasure(boolean) -> directMeasure
    92:92:boolean directMeasureSetup(boolean) -> directMeasureSetup
    96:96:boolean directMeasureWithOrientation(boolean,int) -> directMeasureWithOrientation
    136:136:androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer getMeasurer() -> getMeasurer
    225:225:int getOptimizationLevel() -> getOptimizationLevel
    1107:1120:void getSceneString(java.lang.StringBuilder) -> getSceneString
    1037:1037:androidx.constraintlayout.core.LinearSystem getSystem() -> getSystem
    991:991:boolean handlesInternalConstraints() -> handlesInternalConstraints
    61:62:void invalidateGraph() -> invalidateGraph
    68:69:void invalidateMeasures() -> invalidateMeasures
    270:270:boolean isHeightMeasuredTooSmall() -> isHeightMeasuredTooSmall
    511:511:boolean isRtl() -> isRtl
    263:263:boolean isWidthMeasuredTooSmall() -> isWidthMeasuredTooSmall
    660:983:void layout() -> layout
    118:120:long measure(int,int,int,int,int,int,int,int,int) -> measure
    524:643:boolean measure(int,androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure,int) -> measure
    235:235:boolean optimizeFor(int) -> optimizeFor
    250:257:void reset() -> reset
    1048:1050:void resetChains() -> resetChains
    131:133:void setMeasurer(androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer) -> setMeasurer
    215:217:void setOptimizationLevel(int) -> setOptimizationLevel
    1102:1103:void setPass(int) -> setPass
    502:503:void setRtl(boolean) -> setRtl
    456:468:boolean updateChildrenFromSolver(androidx.constraintlayout.core.LinearSystem,boolean[]) -> updateChildrenFromSolver
    473:479:void updateFromRuns(boolean,boolean) -> updateFromRuns
    125:126:void updateHierarchy() -> updateHierarchy
androidx.constraintlayout.core.widgets.Flow -> androidx.constraintlayout.core.widgets.Flow:
    32:81:void <init>() -> <init>
    32:32:int access$000(androidx.constraintlayout.core.widgets.Flow) -> access$000
    32:32:int access$100(androidx.constraintlayout.core.widgets.Flow) -> access$100
    32:32:int access$1000(androidx.constraintlayout.core.widgets.Flow) -> access$1000
    32:32:float access$1100(androidx.constraintlayout.core.widgets.Flow) -> access$1100
    32:32:int access$1200(androidx.constraintlayout.core.widgets.Flow) -> access$1200
    32:32:float access$1300(androidx.constraintlayout.core.widgets.Flow) -> access$1300
    32:32:float access$1400(androidx.constraintlayout.core.widgets.Flow) -> access$1400
    32:32:int access$1500(androidx.constraintlayout.core.widgets.Flow) -> access$1500
    32:32:float access$1600(androidx.constraintlayout.core.widgets.Flow) -> access$1600
    32:32:int access$1700(androidx.constraintlayout.core.widgets.Flow) -> access$1700
    32:32:float access$1800(androidx.constraintlayout.core.widgets.Flow) -> access$1800
    32:32:int access$1900(androidx.constraintlayout.core.widgets.Flow) -> access$1900
    32:32:int access$200(androidx.constraintlayout.core.widgets.Flow,androidx.constraintlayout.core.widgets.ConstraintWidget,int) -> access$200
    32:32:int access$300(androidx.constraintlayout.core.widgets.Flow,androidx.constraintlayout.core.widgets.ConstraintWidget,int) -> access$300
    32:32:int access$400(androidx.constraintlayout.core.widgets.Flow) -> access$400
    32:32:androidx.constraintlayout.core.widgets.ConstraintWidget[] access$500(androidx.constraintlayout.core.widgets.Flow) -> access$500
    32:32:int access$600(androidx.constraintlayout.core.widgets.Flow) -> access$600
    32:32:int access$700(androidx.constraintlayout.core.widgets.Flow) -> access$700
    32:32:int access$800(androidx.constraintlayout.core.widgets.Flow) -> access$800
    32:32:float access$900(androidx.constraintlayout.core.widgets.Flow) -> access$900
    1392:1423:void addToSolver(androidx.constraintlayout.core.LinearSystem,boolean) -> addToSolver
    1293:1378:void createAlignedConstraints(boolean) -> createAlignedConstraints
    204:223:int getWidgetHeight(androidx.constraintlayout.core.widgets.ConstraintWidget,int) -> getWidgetHeight
    181:200:int getWidgetWidth(androidx.constraintlayout.core.widgets.ConstraintWidget,int) -> getWidgetWidth
    231:336:void measure(int,int,int,int) -> measure
    1139:1290:void measureAligned(androidx.constraintlayout.core.widgets.ConstraintWidget[],int,int,int,int[]) -> measureAligned
    793:931:void measureChainWrap(androidx.constraintlayout.core.widgets.ConstraintWidget[],int,int,int,int[]) -> measureChainWrap
    945:1088:void measureChainWrap_new(androidx.constraintlayout.core.widgets.ConstraintWidget[],int,int,int,int[]) -> measureChainWrap_new
    1103:1124:void measureNoWrap(androidx.constraintlayout.core.widgets.ConstraintWidget[],int,int,int,int[]) -> measureNoWrap
    147:147:void setFirstHorizontalBias(float) -> setFirstHorizontalBias
    123:123:void setFirstHorizontalStyle(int) -> setFirstHorizontalStyle
    149:149:void setFirstVerticalBias(float) -> setFirstVerticalBias
    125:125:void setFirstVerticalStyle(int) -> setFirstVerticalStyle
    156:157:void setHorizontalAlign(int) -> setHorizontalAlign
    140:141:void setHorizontalBias(float) -> setHorizontalBias
    167:167:void setHorizontalGap(int) -> setHorizontalGap
    132:133:void setHorizontalStyle(int) -> setHorizontalStyle
    151:151:void setLastHorizontalBias(float) -> setLastHorizontalBias
    127:127:void setLastHorizontalStyle(int) -> setLastHorizontalStyle
    153:153:void setLastVerticalBias(float) -> setLastVerticalBias
    129:129:void setLastVerticalStyle(int) -> setLastVerticalStyle
    171:171:void setMaxElementsWrap(int) -> setMaxElementsWrap
    120:121:void setOrientation(int) -> setOrientation
    160:161:void setVerticalAlign(int) -> setVerticalAlign
    144:145:void setVerticalBias(float) -> setVerticalBias
    169:169:void setVerticalGap(int) -> setVerticalGap
    136:137:void setVerticalStyle(int) -> setVerticalStyle
    164:165:void setWrapMode(int) -> setWrapMode
androidx.constraintlayout.core.widgets.Flow$WidgetsList -> androidx.constraintlayout.core.widgets.Flow$WidgetsList:
    343:375:void <init>(androidx.constraintlayout.core.widgets.Flow,int,androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.widgets.ConstraintAnchor,int) -> <init>
    342:342:androidx.constraintlayout.core.widgets.ConstraintWidget access$2000(androidx.constraintlayout.core.widgets.Flow$WidgetsList) -> access$2000
    420:456:void add(androidx.constraintlayout.core.widgets.ConstraintWidget) -> add
    394:401:void clear() -> clear
    459:707:void createConstraints(boolean,int,boolean) -> createConstraints
    413:416:int getHeight() -> getHeight
    406:409:int getWidth() -> getWidth
    710:735:void measureMatchConstraints(int) -> measureMatchConstraints
    738:776:void recomputeDimensions() -> recomputeDimensions
    403:403:void setStartIndex(int) -> setStartIndex
    381:391:void setup(int,androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.widgets.ConstraintAnchor,int,int,int,int,int) -> setup
androidx.constraintlayout.core.widgets.Guideline -> androidx.constraintlayout.core.widgets.Guideline:
    37:54:void <init>() -> <init>
    217:271:void addToSolver(androidx.constraintlayout.core.LinearSystem,boolean) -> addToSolver
    69:69:boolean allowedInBarrier() -> allowedInBarrier
    104:104:androidx.constraintlayout.core.widgets.ConstraintAnchor getAnchor() -> getAnchor
    127:149:androidx.constraintlayout.core.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.core.widgets.ConstraintAnchor$Type) -> getAnchor
    118:118:int getOrientation() -> getOrientation
    185:185:int getRelativeBegin() -> getRelativeBegin
    189:189:int getRelativeEnd() -> getRelativeEnd
    181:181:float getRelativePercent() -> getRelativePercent
    201:201:boolean isResolvedHorizontally() -> isResolvedHorizontally
    205:205:boolean isResolvedVertically() -> isResolvedVertically
    196:198:void setFinalValue(int) -> setFinalValue
    165:170:void setGuideBegin(int) -> setGuideBegin
    173:178:void setGuideEnd(int) -> setGuideEnd
    157:162:void setGuidePercent(float) -> setGuidePercent
    86:101:void setOrientation(int) -> setOrientation
    275:290:void updateFromSolver(androidx.constraintlayout.core.LinearSystem,boolean) -> updateFromSolver
androidx.constraintlayout.core.widgets.Guideline$1 -> androidx.constraintlayout.core.widgets.Guideline$1:
    127:127:void <clinit>() -> <clinit>
androidx.constraintlayout.core.widgets.HelperWidget -> androidx.constraintlayout.core.widgets.HelperWidget:
    29:31:void <init>() -> <init>
    44:52:void add(androidx.constraintlayout.core.widgets.ConstraintWidget) -> add
    74:82:void addDependents(java.util.ArrayList,int,androidx.constraintlayout.core.widgets.analyzer.WidgetGroup) -> addDependents
    85:94:int findGroupInDependents(int) -> findGroupInDependents
    69:71:void removeAllIds() -> removeAllIds
    36:36:void updateConstraints(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer) -> updateConstraints
androidx.constraintlayout.core.widgets.Optimizer -> androidx.constraintlayout.core.widgets.Optimizer:
    52:52:void <clinit>() -> <clinit>
    65:97:void checkMatchParent(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,androidx.constraintlayout.core.LinearSystem,androidx.constraintlayout.core.widgets.ConstraintWidget) -> checkMatchParent
    100:100:boolean enabled(int,int) -> enabled
androidx.constraintlayout.core.widgets.VirtualLayout -> androidx.constraintlayout.core.widgets.VirtualLayout:
    28:204:void <init>() -> <init>
    74:83:void applyRtl(boolean) -> applyRtl
    132:138:void captureWidgets() -> captureWidgets
    225:231:boolean contains(java.util.HashSet) -> contains
    145:145:int getMeasuredHeight() -> getMeasuredHeight
    141:141:int getMeasuredWidth() -> getMeasuredWidth
    100:100:int getPaddingBottom() -> getPaddingBottom
    102:102:int getPaddingLeft() -> getPaddingLeft
    104:104:int getPaddingRight() -> getPaddingRight
    98:98:int getPaddingTop() -> getPaddingTop
    124:124:void measure(int,int,int,int) -> measure
    209:222:void measure(androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour,int,androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour,int) -> measure
    154:201:boolean measureChildren() -> measureChildren
    115:115:boolean needSolverPass() -> needSolverPass
    111:112:void needsCallbackFromSolver(boolean) -> needsCallbackFromSolver
    149:151:void setMeasure(int,int) -> setMeasure
    50:56:void setPadding(int) -> setPadding
    95:96:void setPaddingBottom(int) -> setPaddingBottom
    65:66:void setPaddingEnd(int) -> setPaddingEnd
    69:71:void setPaddingLeft(int) -> setPaddingLeft
    90:92:void setPaddingRight(int) -> setPaddingRight
    59:62:void setPaddingStart(int) -> setPaddingStart
    86:87:void setPaddingTop(int) -> setPaddingTop
    128:129:void updateConstraints(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer) -> updateConstraints
androidx.constraintlayout.core.widgets.WidgetContainer -> androidx.constraintlayout.core.widgets.WidgetContainer:
    26:36:void <init>() -> <init>
    72:78:void add(androidx.constraintlayout.core.widgets.ConstraintWidget) -> add
    108:108:java.util.ArrayList getChildren() -> getChildren
    158:168:void layout() -> layout
    98:100:void remove(androidx.constraintlayout.core.widgets.ConstraintWidget) -> remove
    181:182:void removeAllChildren() -> removeAllChildren
    62:64:void reset() -> reset
    172:178:void resetSolverVariables(androidx.constraintlayout.core.Cache) -> resetSolverVariables
androidx.constraintlayout.core.widgets.analyzer.BaselineDimensionDependency -> androidx.constraintlayout.core.widgets.analyzer.BaselineDimensionDependency:
    22:23:void <init>(androidx.constraintlayout.core.widgets.analyzer.WidgetRun) -> <init>
androidx.constraintlayout.core.widgets.analyzer.BasicMeasure -> androidx.constraintlayout.core.widgets.analyzer.BasicMeasure:
    52:72:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer) -> <init>
    443:472:boolean measure(androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer,androidx.constraintlayout.core.widgets.ConstraintWidget,int) -> measure
    75:140:void measureChildren(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer) -> measureChildren
    148:165:void solveLinearSystem(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,java.lang.String,int,int,int) -> solveLinearSystem
    186:431:long solverMeasure(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,int,int,int,int,int,int,int,int,int) -> solverMeasure
    56:66:void updateHierarchy(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer) -> updateHierarchy
androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure -> androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure:
    481:483:void <clinit>() -> <clinit>
    480:480:void <init>() -> <init>
androidx.constraintlayout.core.widgets.analyzer.ChainRun -> androidx.constraintlayout.core.widgets.analyzer.ChainRun:
    32:39:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidget,int) -> <init>
    513:570:void apply() -> apply
    484:488:void applyToWidget() -> applyToWidget
    78:104:void build() -> build
    109:113:void clear() -> clear
    491:497:androidx.constraintlayout.core.widgets.ConstraintWidget getFirstVisibleWidget() -> getFirstVisibleWidget
    501:507:androidx.constraintlayout.core.widgets.ConstraintWidget getLastVisibleWidget() -> getLastVisibleWidget
    66:74:long getWrapDimension() -> getWrapDimension
    55:62:boolean supportsWrapComputation() -> supportsWrapComputation
    43:50:java.lang.String toString() -> toString
    123:481:void update(androidx.constraintlayout.core.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.core.widgets.analyzer.DependencyGraph -> androidx.constraintlayout.core.widgets.analyzer.DependencyGraph:
    44:626:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer) -> <init>
    710:756:void applyGroup(androidx.constraintlayout.core.widgets.analyzer.DependencyNode,int,int,androidx.constraintlayout.core.widgets.analyzer.DependencyNode,java.util.ArrayList,androidx.constraintlayout.core.widgets.analyzer.RunGroup) -> applyGroup
    388:561:boolean basicMeasureWidgets(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer) -> basicMeasureWidgets
    630:640:void buildGraph() -> buildGraph
    643:696:void buildGraph(java.util.ArrayList) -> buildGraph
    65:72:int computeWrap(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,int) -> computeWrap
    110:229:boolean directMeasure(boolean) -> directMeasure
    233:264:boolean directMeasureSetup(boolean) -> directMeasureSetup
    268:361:boolean directMeasureWithOrientation(boolean,int) -> directMeasureWithOrientation
    759:785:void findGroup(androidx.constraintlayout.core.widgets.analyzer.WidgetRun,int,java.util.ArrayList) -> findGroup
    616:617:void invalidateGraph() -> invalidateGraph
    623:624:void invalidateMeasures() -> invalidateMeasures
    376:385:void measure(androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour,int,androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour,int) -> measure
    565:610:void measureWidgets() -> measureWidgets
    61:62:void setMeasurer(androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer) -> setMeasurer
androidx.constraintlayout.core.widgets.analyzer.DependencyNode -> androidx.constraintlayout.core.widgets.analyzer.DependencyNode:
    23:41:void <init>(androidx.constraintlayout.core.widgets.analyzer.WidgetRun) -> <init>
    100:104:void addDependency(androidx.constraintlayout.core.widgets.analyzer.Dependency) -> addDependency
    119:125:void clear() -> clear
    50:59:void resolve(int) -> resolve
    45:46:java.lang.String toString() -> toString
    62:97:void update(androidx.constraintlayout.core.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type -> androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type:
    27:27:void <clinit>() -> <clinit>
    27:27:void <init>(java.lang.String,int) -> <init>
    27:27:androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type valueOf(java.lang.String) -> valueOf
    27:27:androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type[] values() -> values
androidx.constraintlayout.core.widgets.analyzer.DimensionDependency -> androidx.constraintlayout.core.widgets.analyzer.DimensionDependency:
    24:30:void <init>(androidx.constraintlayout.core.widgets.analyzer.WidgetRun) -> <init>
    33:41:void resolve(int) -> resolve
androidx.constraintlayout.core.widgets.analyzer.Direct -> androidx.constraintlayout.core.widgets.analyzer.Direct:
    46:50:void <clinit>() -> <clinit>
    763:799:boolean canMeasure(int,androidx.constraintlayout.core.widgets.ConstraintWidget) -> canMeasure
    310:428:void horizontalSolvingPass(int,androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer,boolean) -> horizontalSolvingPass
    278:285:void solveBarrier(int,androidx.constraintlayout.core.widgets.Barrier,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer,int,boolean) -> solveBarrier
    598:627:void solveHorizontalCenterConstraints(int,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer,androidx.constraintlayout.core.widgets.ConstraintWidget,boolean) -> solveHorizontalCenterConstraints
    682:711:void solveHorizontalMatchConstraint(int,androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer,androidx.constraintlayout.core.widgets.ConstraintWidget,boolean) -> solveHorizontalMatchConstraint
    640:669:void solveVerticalCenterConstraints(int,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer,androidx.constraintlayout.core.widgets.ConstraintWidget) -> solveVerticalCenterConstraints
    723:752:void solveVerticalMatchConstraint(int,androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer,androidx.constraintlayout.core.widgets.ConstraintWidget) -> solveVerticalMatchConstraint
    59:268:void solvingPass(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer) -> solvingPass
    439:584:void verticalSolvingPass(int,androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer) -> verticalSolvingPass
androidx.constraintlayout.core.widgets.analyzer.Grouping -> androidx.constraintlayout.core.widgets.analyzer.Grouping:
    367:444:androidx.constraintlayout.core.widgets.analyzer.WidgetGroup findDependents(androidx.constraintlayout.core.widgets.ConstraintWidget,int,java.util.ArrayList,androidx.constraintlayout.core.widgets.analyzer.WidgetGroup) -> findDependents
    356:363:androidx.constraintlayout.core.widgets.analyzer.WidgetGroup findGroup(java.util.ArrayList,int) -> findGroup
    63:352:boolean simpleSolvingPass(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer) -> simpleSolvingPass
    48:55:boolean validInGroup(androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour,androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour,androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour,androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) -> validInGroup
androidx.constraintlayout.core.widgets.analyzer.GuidelineReference -> androidx.constraintlayout.core.widgets.analyzer.GuidelineReference:
    25:29:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidget) -> <init>
    48:50:void addDependency(androidx.constraintlayout.core.widgets.analyzer.DependencyNode) -> addDependency
    69:108:void apply() -> apply
    112:118:void applyToWidget() -> applyToWidget
    33:34:void clear() -> clear
    44:44:boolean supportsWrapComputation() -> supportsWrapComputation
    54:65:void update(androidx.constraintlayout.core.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.core.widgets.analyzer.HelperReferences -> androidx.constraintlayout.core.widgets.analyzer.HelperReferences:
    24:25:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidget) -> <init>
    44:46:void addDependency(androidx.constraintlayout.core.widgets.analyzer.DependencyNode) -> addDependency
    50:118:void apply() -> apply
    144:154:void applyToWidget() -> applyToWidget
    29:31:void clear() -> clear
    40:40:boolean supportsWrapComputation() -> supportsWrapComputation
    122:141:void update(androidx.constraintlayout.core.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun -> androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun:
    37:37:void <clinit>() -> <clinit>
    40:44:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidget) -> <init>
    83:274:void apply() -> apply
    561:564:void applyToWidget() -> applyToWidget
    53:58:void clear() -> clear
    277:308:void computeInsetRatio(int[],int,int,int,int,float,int) -> computeInsetRatio
    62:68:void reset() -> reset
    72:78:boolean supportsWrapComputation() -> supportsWrapComputation
    48:48:java.lang.String toString() -> toString
    312:558:void update(androidx.constraintlayout.core.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun$1 -> androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun$1:
    312:312:void <clinit>() -> <clinit>
androidx.constraintlayout.core.widgets.analyzer.RunGroup -> androidx.constraintlayout.core.widgets.analyzer.RunGroup:
    33:49:void <init>(androidx.constraintlayout.core.widgets.analyzer.WidgetRun,int) -> <init>
    52:54:void add(androidx.constraintlayout.core.widgets.analyzer.WidgetRun) -> add
    121:182:long computeWrapSize(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,int) -> computeWrapSize
    89:117:long traverseEnd(androidx.constraintlayout.core.widgets.analyzer.DependencyNode,long) -> traverseEnd
    57:85:long traverseStart(androidx.constraintlayout.core.widgets.analyzer.DependencyNode,long) -> traverseStart
androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun -> androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun:
    34:43:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidget) -> <init>
    203:429:void apply() -> apply
    432:435:void applyToWidget() -> applyToWidget
    52:58:void clear() -> clear
    62:70:void reset() -> reset
    74:80:boolean supportsWrapComputation() -> supportsWrapComputation
    47:47:java.lang.String toString() -> toString
    85:199:void update(androidx.constraintlayout.core.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun$1 -> androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun$1:
    85:85:void <clinit>() -> <clinit>
androidx.constraintlayout.core.widgets.analyzer.WidgetGroup -> androidx.constraintlayout.core.widgets.analyzer.WidgetGroup:
    36:36:void <clinit>() -> <clinit>
    35:46:void <init>(int) -> <init>
    52:56:boolean add(androidx.constraintlayout.core.widgets.ConstraintWidget) -> add
    210:223:void cleanup(java.util.ArrayList) -> cleanup
    49:49:int getId() -> getId
    48:48:int getOrientation() -> getOrientation
    63:70:java.lang.String getOrientationString() -> getOrientationString
    119:124:int measureWrap(androidx.constraintlayout.core.LinearSystem,int) -> measureWrap
    87:96:void moveTo(int,androidx.constraintlayout.core.widgets.analyzer.WidgetGroup) -> moveTo
    59:59:void setAuthoritative(boolean) -> setAuthoritative
    175:176:void setOrientation(int) -> setOrientation
    128:170:int solverMeasure(androidx.constraintlayout.core.LinearSystem,java.util.ArrayList,int) -> solverMeasure
    75:80:java.lang.String toString() -> toString
androidx.constraintlayout.core.widgets.analyzer.WidgetGroup$MeasureResult -> androidx.constraintlayout.core.widgets.analyzer.WidgetGroup$MeasureResult:
    235:243:void <init>(androidx.constraintlayout.core.widgets.analyzer.WidgetGroup,androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.LinearSystem,int) -> <init>
androidx.constraintlayout.core.widgets.analyzer.WidgetRun -> androidx.constraintlayout.core.widgets.analyzer.WidgetRun:
    34:45:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidget) -> <init>
    283:286:void addTarget(androidx.constraintlayout.core.widgets.analyzer.DependencyNode,androidx.constraintlayout.core.widgets.analyzer.DependencyNode,int) -> addTarget
    289:295:void addTarget(androidx.constraintlayout.core.widgets.analyzer.DependencyNode,androidx.constraintlayout.core.widgets.analyzer.DependencyNode,int,androidx.constraintlayout.core.widgets.analyzer.DimensionDependency) -> addTarget
    235:256:int getLimitedDimension(int,int) -> getLimitedDimension
    95:124:androidx.constraintlayout.core.widgets.analyzer.DependencyNode getTarget(androidx.constraintlayout.core.widgets.ConstraintAnchor) -> getTarget
    260:279:androidx.constraintlayout.core.widgets.analyzer.DependencyNode getTarget(androidx.constraintlayout.core.widgets.ConstraintAnchor,int) -> getTarget
    298:301:long getWrapDimension() -> getWrapDimension
    304:304:boolean isResolved() -> isResolved
    172:222:void resolveDimension(int,int) -> resolveDimension
    232:232:void update(androidx.constraintlayout.core.widgets.analyzer.Dependency) -> update
    128:169:void updateRunCenter(androidx.constraintlayout.core.widgets.analyzer.Dependency,androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.widgets.ConstraintAnchor,int) -> updateRunCenter
    230:230:void updateRunEnd(androidx.constraintlayout.core.widgets.analyzer.Dependency) -> updateRunEnd
    226:226:void updateRunStart(androidx.constraintlayout.core.widgets.analyzer.Dependency) -> updateRunStart
androidx.constraintlayout.core.widgets.analyzer.WidgetRun$1 -> androidx.constraintlayout.core.widgets.analyzer.WidgetRun$1:
    101:101:void <clinit>() -> <clinit>
androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType -> androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType:
    306:306:void <clinit>() -> <clinit>
    306:306:void <init>(java.lang.String,int) -> <init>
    306:306:androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType valueOf(java.lang.String) -> valueOf
    306:306:androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType[] values() -> values
androidx.constraintlayout.helper.widget.Flow -> androidx.constraintlayout.helper.widget.Flow:
    127:128:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    198:268:void init(android.util.AttributeSet) -> init
    148:149:void onMeasure(int,int) -> onMeasure
    160:170:void onMeasure(androidx.constraintlayout.core.widgets.VirtualLayout,int,int) -> onMeasure
    142:143:void resolveRtl(androidx.constraintlayout.core.widgets.ConstraintWidget,boolean) -> resolveRtl
    454:456:void setFirstHorizontalBias(float) -> setFirstHorizontalBias
    434:436:void setFirstHorizontalStyle(int) -> setFirstHorizontalStyle
    464:466:void setFirstVerticalBias(float) -> setFirstVerticalBias
    444:446:void setFirstVerticalStyle(int) -> setFirstVerticalStyle
    479:481:void setHorizontalAlign(int) -> setHorizontalAlign
    414:416:void setHorizontalBias(float) -> setHorizontalBias
    505:507:void setHorizontalGap(int) -> setHorizontalGap
    390:392:void setHorizontalStyle(int) -> setHorizontalStyle
    353:355:void setLastHorizontalBias(float) -> setLastHorizontalBias
    335:337:void setLastHorizontalStyle(int) -> setLastHorizontalStyle
    362:364:void setLastVerticalBias(float) -> setLastVerticalBias
    344:346:void setLastVerticalStyle(int) -> setLastVerticalStyle
    525:527:void setMaxElementsWrap(int) -> setMaxElementsWrap
    276:278:void setOrientation(int) -> setOrientation
    286:288:void setPadding(int) -> setPadding
    326:328:void setPaddingBottom(int) -> setPaddingBottom
    296:298:void setPaddingLeft(int) -> setPaddingLeft
    316:318:void setPaddingRight(int) -> setPaddingRight
    306:308:void setPaddingTop(int) -> setPaddingTop
    495:497:void setVerticalAlign(int) -> setVerticalAlign
    424:426:void setVerticalBias(float) -> setVerticalBias
    515:517:void setVerticalGap(int) -> setVerticalGap
    404:406:void setVerticalStyle(int) -> setVerticalStyle
    376:378:void setWrapMode(int) -> setWrapMode
androidx.constraintlayout.motion.utils.CustomSupport -> androidx.constraintlayout.motion.utils.CustomSupport:
    77:82:int clamp(int) -> clamp
    18:74:void setInterpolatedValue(androidx.constraintlayout.widget.ConstraintAttribute,android.view.View,float[]) -> setInterpolatedValue
androidx.constraintlayout.motion.utils.CustomSupport$1 -> androidx.constraintlayout.motion.utils.CustomSupport$1:
    23:23:void <clinit>() -> <clinit>
androidx.constraintlayout.motion.utils.ViewOscillator -> androidx.constraintlayout.motion.utils.ViewOscillator:
    36:36:void <init>() -> <init>
androidx.constraintlayout.motion.utils.ViewOscillator$PathRotateSet -> androidx.constraintlayout.motion.utils.ViewOscillator$PathRotateSet:
    116:116:void <init>() -> <init>
    122:123:void setPathRotate(android.view.View,float,double,double) -> setPathRotate
    119:119:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.utils.ViewSpline -> androidx.constraintlayout.motion.utils.ViewSpline:
    32:32:void <init>() -> <init>
androidx.constraintlayout.motion.utils.ViewSpline$PathRotate -> androidx.constraintlayout.motion.utils.ViewSpline$PathRotate:
    133:133:void <init>() -> <init>
    139:140:void setPathRotate(android.view.View,float,double,double) -> setPathRotate
    136:136:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.utils.ViewTimeCycle -> androidx.constraintlayout.motion.utils.ViewTimeCycle:
    38:38:void <init>() -> <init>
    44:65:float get(float,long,android.view.View,androidx.constraintlayout.core.motion.utils.KeyCache) -> get
androidx.constraintlayout.motion.utils.ViewTimeCycle$PathRotate -> androidx.constraintlayout.motion.utils.ViewTimeCycle$PathRotate:
    160:160:void <init>() -> <init>
    167:168:boolean setPathRotate(android.view.View,androidx.constraintlayout.core.motion.utils.KeyCache,float,long,double,double) -> setPathRotate
    163:163:boolean setProperty(android.view.View,float,long,androidx.constraintlayout.core.motion.utils.KeyCache) -> setProperty
androidx.constraintlayout.motion.widget.Debug -> androidx.constraintlayout.motion.widget.Debug:
    87:90:java.lang.String getName(android.view.View) -> getName
    139:145:java.lang.String getName(android.content.Context,int) -> getName
androidx.constraintlayout.motion.widget.DesignTool -> androidx.constraintlayout.motion.widget.DesignTool:
    86:116:void <clinit>() -> <clinit>
    77:84:void <init>(androidx.constraintlayout.motion.widget.MotionLayout) -> <init>
androidx.constraintlayout.motion.widget.Key -> androidx.constraintlayout.motion.widget.Key:
    36:36:void <clinit>() -> <clinit>
androidx.constraintlayout.motion.widget.MotionController -> androidx.constraintlayout.motion.widget.MotionController:
    1175:1217:float getAdjustedPosition(float,float[]) -> getAdjustedPosition
    255:262:void getCenter(double,float[],float[]) -> getCenter
    1239:1382:boolean interpolate(android.view.View,float,long,androidx.constraintlayout.core.motion.utils.KeyCache) -> interpolate
    987:987:java.lang.String toString() -> toString
androidx.constraintlayout.motion.widget.MotionHelper -> androidx.constraintlayout.motion.widget.MotionHelper:
    98:98:float getProgress() -> getProgress
    60:74:void init(android.util.AttributeSet) -> init
    154:154:boolean isDecorator() -> isDecorator
    93:93:boolean isUseOnHide() -> isUseOnHide
    83:83:boolean isUsedOnShow() -> isUsedOnShow
    160:160:void onPreDraw(android.graphics.Canvas) -> onPreDraw
    141:141:void onTransitionChange(androidx.constraintlayout.motion.widget.MotionLayout,int,int,float) -> onTransitionChange
    145:145:void onTransitionCompleted(androidx.constraintlayout.motion.widget.MotionLayout,int) -> onTransitionCompleted
    137:137:void onTransitionStarted(androidx.constraintlayout.motion.widget.MotionLayout,int,int) -> onTransitionStarted
    103:123:void setProgress(float) -> setProgress
    133:133:void setProgress(android.view.View,float) -> setProgress
androidx.constraintlayout.motion.widget.MotionInterpolator -> androidx.constraintlayout.motion.widget.MotionInterpolator:
    21:21:void <init>() -> <init>
androidx.constraintlayout.motion.widget.MotionLayout -> androidx.constraintlayout.motion.widget.MotionLayout:
    995:995:androidx.constraintlayout.motion.widget.MotionLayout$StateCache access$000(androidx.constraintlayout.motion.widget.MotionLayout) -> access$000
    995:995:int access$100(androidx.constraintlayout.motion.widget.MotionLayout) -> access$100
    995:995:int access$200(androidx.constraintlayout.motion.widget.MotionLayout) -> access$200
    2086:2087:void animateTo(float) -> animateTo
    3467:3483:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    3593:3784:void evaluate(boolean) -> evaluate
    4387:4413:void fireTransitionChange() -> fireTransitionChange
    4421:4443:void fireTransitionCompleted() -> fireTransitionCompleted
    4547:4548:int[] getConstraintSetIds() -> getConstraintSetIds
    4221:4221:int getCurrentState() -> getCurrentState
    4681:4682:java.util.ArrayList getDefinedTransitions() -> getDefinedTransitions
    4467:4470:androidx.constraintlayout.motion.widget.DesignTool getDesignTool() -> getDesignTool
    4703:4703:int getEndState() -> getEndState
    1138:1138:long getNanoTime() -> getNanoTime
    4230:4230:float getProgress() -> getProgress
    3897:3897:androidx.constraintlayout.motion.widget.MotionScene getScene() -> getScene
    4694:4694:int getStartState() -> getStartState
    4713:4713:float getTargetPosition() -> getTargetPosition
    1693:1697:android.os.Bundle getTransitionState() -> getTransitionState
    4277:4280:long getTransitionTimeMs() -> getTransitionTimeMs
    2452:2452:float getVelocity() -> getVelocity
    1531:1532:boolean isAttachedToWindow() -> isAttachedToWindow
    4145:4186:void onAttachedToWindow() -> onAttachedToWindow
    4081:4082:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    3790:3815:void onLayout(boolean,int,int,int,int) -> onLayout
    2913:2915:void onMeasure(int,int) -> onMeasure
    3104:3104:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    3099:3099:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    3020:3095:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    3003:3008:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    3015:3015:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    2982:2986:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    4200:4201:void onNewStateAttachHandlers() -> onNewStateAttachHandlers
    4190:4193:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    2968:2972:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    2995:2996:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    4126:4140:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    4478:4505:void onViewAdded(android.view.View) -> onViewAdded
    4512:4519:void onViewRemoved(android.view.View) -> onViewRemoved
    3825:3826:void parseLayoutDescription(int) -> parseLayoutDescription
    4446:4461:void processTransitionCompleted() -> processTransitionCompleted
    2881:2899:void requestLayout() -> requestLayout
    3988:3990:void setDebugMode(int) -> setDebugMode
    4879:4880:void setDelayedApplicationOfInitialState(boolean) -> setDelayedApplicationOfInitialState
    4784:4785:void setInteractionEnabled(boolean) -> setInteractionEnabled
    1564:1573:void setInterpolatedProgress(float) -> setInterpolatedProgress
    4532:4539:void setOnHide(float) -> setOnHide
    4522:4529:void setOnShow(float) -> setOnShow
    1582:1598:void setProgress(float,float) -> setProgress
    1706:1747:void setProgress(float) -> setProgress
    3885:3887:void setScene(androidx.constraintlayout.motion.widget.MotionScene) -> setScene
    1312:1321:void setStartState(int) -> setStartState
    1199:1226:void setState(androidx.constraintlayout.motion.widget.MotionLayout$TransitionState) -> setState
    1547:1556:void setState(int,int,int) -> setState
    1330:1353:void setTransition(int,int) -> setTransition
    1362:1415:void setTransition(int) -> setTransition
    1418:1419:void setTransition(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> setTransition
    4722:4724:void setTransitionDuration(int) -> setTransitionDuration
    4290:4291:void setTransitionListener(androidx.constraintlayout.motion.widget.MotionLayout$TransitionListener) -> setTransitionListener
    1680:1687:void setTransitionState(android.os.Bundle) -> setTransitionState
    2903:2905:java.lang.String toString() -> toString
    2144:2146:void transitionToEnd() -> transitionToEnd
    2167:2175:void transitionToState(int) -> transitionToState
    2205:2206:void transitionToState(int,int,int) -> transitionToState
    2295:2363:void transitionToState(int,int,int,int) -> transitionToState
androidx.constraintlayout.motion.widget.MotionLayout$4 -> androidx.constraintlayout.motion.widget.MotionLayout$4:
    4168:4168:void <init>(androidx.constraintlayout.motion.widget.MotionLayout) -> <init>
    4171:4172:void run() -> run
androidx.constraintlayout.motion.widget.MotionLayout$5 -> androidx.constraintlayout.motion.widget.MotionLayout$5:
    1208:1208:void <clinit>() -> <clinit>
androidx.constraintlayout.motion.widget.MotionLayout$StateCache -> androidx.constraintlayout.motion.widget.MotionLayout$StateCache:
    1601:1609:void <init>(androidx.constraintlayout.motion.widget.MotionLayout) -> <init>
    1612:1634:void apply() -> apply
    1637:1642:android.os.Bundle getTransitionState() -> getTransitionState
    1669:1673:void recordState() -> recordState
    1657:1658:void setEndState(int) -> setEndState
    1653:1654:void setProgress(float) -> setProgress
    1665:1666:void setStartState(int) -> setStartState
    1646:1650:void setTransitionState(android.os.Bundle) -> setTransitionState
    1661:1662:void setVelocity(float) -> setVelocity
androidx.constraintlayout.motion.widget.MotionLayout$TransitionState -> androidx.constraintlayout.motion.widget.MotionLayout$TransitionState:
    1107:1107:androidx.constraintlayout.motion.widget.MotionLayout$TransitionState[] $values() -> $values
    1107:1111:void <clinit>() -> <clinit>
    1107:1107:void <init>(java.lang.String,int) -> <init>
    1107:1107:androidx.constraintlayout.motion.widget.MotionLayout$TransitionState valueOf(java.lang.String) -> valueOf
    1107:1107:androidx.constraintlayout.motion.widget.MotionLayout$TransitionState[] values() -> values
androidx.constraintlayout.motion.widget.MotionPaths -> androidx.constraintlayout.motion.widget.MotionPaths:
    54:54:void <clinit>() -> <clinit>
    56:489:void <init>() -> <init>
    39:39:int compareTo(java.lang.Object) -> compareTo
    911:911:int compareTo(androidx.constraintlayout.motion.widget.MotionPaths) -> compareTo
    359:418:void getCenter(double,int[],double[],float[],double[],float[]) -> getCenter
    493:646:void setView(float,android.view.View,int[],double[],double[],double[],boolean) -> setView
androidx.constraintlayout.widget.Barrier -> androidx.constraintlayout.widget.Barrier:
    118:120:void <init>(android.content.Context) -> <init>
    123:125:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    239:239:boolean getAllowsGoneWidget() -> getAllowsGoneWidget
    259:259:int getMargin() -> getMargin
    138:138:int getType() -> getType
    193:213:void init(android.util.AttributeSet) -> init
    184:185:void resolveRtl(androidx.constraintlayout.core.widgets.ConstraintWidget,boolean) -> resolveRtl
    216:217:void setAllowsGoneWidget(boolean) -> setAllowsGoneWidget
    248:251:void setDpMargin(int) -> setDpMargin
    268:269:void setMargin(int) -> setMargin
    147:148:void setType(int) -> setType
    151:180:void updateType(androidx.constraintlayout.core.widgets.ConstraintWidget,int,boolean) -> updateType
androidx.constraintlayout.widget.ConstraintAttribute -> androidx.constraintlayout.widget.ConstraintAttribute:
    44:264:void <init>(java.lang.String,androidx.constraintlayout.widget.ConstraintAttribute$AttributeType,java.lang.Object,boolean) -> <init>
    44:271:void <init>(androidx.constraintlayout.widget.ConstraintAttribute,java.lang.Object) -> <init>
    300:324:java.util.HashMap extractAttributes(java.util.HashMap,android.view.View) -> extractAttributes
    65:65:java.lang.String getName() -> getName
    93:93:androidx.constraintlayout.widget.ConstraintAttribute$AttributeType getType() -> getType
    452:509:void parse(android.content.Context,org.xmlpull.v1.XmlPullParser,java.util.HashMap) -> parse
    328:384:void setAttributes(android.view.View,java.util.HashMap) -> setAttributes
    274:296:void setValue(java.lang.Object) -> setValue
androidx.constraintlayout.widget.ConstraintAttribute$1 -> androidx.constraintlayout.widget.ConstraintAttribute$1:
    101:101:void <clinit>() -> <clinit>
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType -> androidx.constraintlayout.widget.ConstraintAttribute$AttributeType:
    53:53:androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] $values() -> $values
    53:61:void <clinit>() -> <clinit>
    53:53:void <init>(java.lang.String,int) -> <init>
    53:53:androidx.constraintlayout.widget.ConstraintAttribute$AttributeType valueOf(java.lang.String) -> valueOf
    53:53:androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] values() -> values
androidx.constraintlayout.widget.ConstraintHelper -> androidx.constraintlayout.widget.ConstraintHelper:
    64:102:void <init>(android.content.Context) -> <init>
    64:108:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    271:291:void addID(java.lang.String) -> addID
    222:230:void addRscID(int) -> addRscID
    297:330:void addTag(java.lang.String) -> addTag
    459:474:void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout) -> applyLayoutFeatures
    480:484:void applyLayoutFeatures() -> applyLayoutFeatures
    489:489:void applyLayoutFeaturesInConstraintSet(androidx.constraintlayout.widget.ConstraintLayout) -> applyLayoutFeaturesInConstraintSet
    338:375:int findId(java.lang.String) -> findId
    387:409:int findId(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String) -> findId
    204:204:int[] getReferencedIds() -> getReferencedIds
    538:546:android.view.View[] getViews(androidx.constraintlayout.widget.ConstraintLayout) -> getViews
    120:135:void init(android.util.AttributeSet) -> init
    139:146:void onAttachedToWindow() -> onAttachedToWindow
    238:238:void onDraw(android.graphics.Canvas) -> onDraw
    245:250:void onMeasure(int,int) -> onMeasure
    623:623:void resolveRtl(androidx.constraintlayout.core.widgets.ConstraintWidget,boolean) -> resolveRtl
    416:431:void setIds(java.lang.String) -> setIds
    437:452:void setReferenceTags(java.lang.String) -> setReferenceTags
    211:216:void setReferencedIds(int[]) -> setReferencedIds
    627:631:void setTag(int,java.lang.Object) -> setTag
    557:557:void updatePostLayout(androidx.constraintlayout.widget.ConstraintLayout) -> updatePostLayout
    565:565:void updatePostMeasure(androidx.constraintlayout.widget.ConstraintLayout) -> updatePostMeasure
    573:573:void updatePreDraw(androidx.constraintlayout.widget.ConstraintLayout) -> updatePreDraw
    498:524:void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout) -> updatePreLayout
    257:265:void validateParams() -> validateParams
androidx.constraintlayout.widget.ConstraintLayout -> androidx.constraintlayout.widget.ConstraintLayout:
    536:536:void <clinit>() -> <clinit>
    499:1550:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    499:1550:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    486:486:int access$000(androidx.constraintlayout.widget.ConstraintLayout) -> access$000
    486:486:java.util.ArrayList access$100(androidx.constraintlayout.widget.ConstraintLayout) -> access$100
    1257:1480:void applyConstraintsFromLayoutParams(boolean,android.view.View,androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams,android.util.SparseArray) -> applyConstraintsFromLayoutParams
    1958:1958:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1984:2075:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    3610:3612:void forceLayout() -> forceLayout
    486:486:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1942:1942:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    486:486:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1934:1934:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1950:1950:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    572:578:java.lang.Object getDesignInformation(int,java.lang.Object) -> getDesignInformation
    1128:1128:int getMaxHeight() -> getMaxHeight
    1118:1118:int getMaxWidth() -> getMaxWidth
    1081:1081:int getMinHeight() -> getMinHeight
    1071:1071:int getMinWidth() -> getMinWidth
    1926:1926:int getOptimizationLevel() -> getOptimizationLevel
    1734:1743:int getPaddingWidth() -> getPaddingWidth
    3642:3677:java.lang.String getSceneString() -> getSceneString
    544:547:androidx.constraintlayout.widget.SharedValues getSharedValues() -> getSharedValues
    1502:1515:androidx.constraintlayout.core.widgets.ConstraintWidget getTargetWidget(int) -> getTargetWidget
    1976:1976:android.view.View getViewById(int) -> getViewById
    1525:1537:androidx.constraintlayout.core.widgets.ConstraintWidget getViewWidget(android.view.View) -> getViewWidget
    944:986:void init(android.util.AttributeSet,int,int) -> init
    1722:1724:boolean isRtl() -> isRtl
    3615:3623:void markHierarchyDirty() -> markHierarchyDirty
    1839:1890:void onLayout(boolean,int,int,int,int) -> onLayout
    1641:1719:void onMeasure(int,int) -> onMeasure
    1002:1023:void onViewAdded(android.view.View) -> onViewAdded
    1030:1036:void onViewRemoved(android.view.View) -> onViewRemoved
    994:995:void parseLayoutDescription(int) -> parseLayoutDescription
    3604:3606:void requestLayout() -> requestLayout
    1611:1634:void resolveMeasuredDimension(int,int,int,int,boolean,boolean) -> resolveMeasuredDimension
    1562:1596:void resolveSystem(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,int,int,int) -> resolveSystem
    1149:1249:void setChildrenConstraints() -> setChildrenConstraints
    1967:1968:void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet) -> setConstraintSet
    554:566:void setDesignInformation(int,java.lang.Object,java.lang.Object) -> setDesignInformation
    607:610:void setId(int) -> setId
    1103:1108:void setMaxHeight(int) -> setMaxHeight
    1090:1095:void setMaxWidth(int) -> setMaxWidth
    1057:1062:void setMinHeight(int) -> setMinHeight
    1044:1049:void setMinWidth(int) -> setMinWidth
    2078:2082:void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener) -> setOnConstraintsChanged
    1915:1917:void setOptimizationLevel(int) -> setOptimizationLevel
    1748:1814:void setSelfDimensionBehaviour(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,int,int,int,int) -> setSelfDimensionBehaviour
    1483:1499:void setWidgetBaseline(androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams,android.util.SparseArray,int,androidx.constraintlayout.core.widgets.ConstraintAnchor$Type) -> setWidgetBaseline
    3632:3632:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    1132:1145:boolean updateHierarchy() -> updateHierarchy
androidx.constraintlayout.widget.ConstraintLayout$1 -> androidx.constraintlayout.widget.ConstraintLayout$1:
    679:679:void <clinit>() -> <clinit>
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams -> androidx.constraintlayout.widget.ConstraintLayout$LayoutParams:
    2216:3365:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2216:3427:void <init>(int,int) -> <init>
    2216:3431:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    3471:3586:void resolveLayoutDirection(int) -> resolveLayoutDirection
    3368:3423:void validate() -> validate
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams$Table -> androidx.constraintlayout.widget.ConstraintLayout$LayoutParams$Table:
    2806:2880:void <clinit>() -> <clinit>
androidx.constraintlayout.widget.ConstraintLayout$Measurer -> androidx.constraintlayout.widget.ConstraintLayout$Measurer:
    637:639:void <init>(androidx.constraintlayout.widget.ConstraintLayout,androidx.constraintlayout.widget.ConstraintLayout) -> <init>
    629:635:void captureLayoutInfo(int,int,int,int,int,int) -> captureLayoutInfo
    923:938:void didMeasures() -> didMeasures
    906:918:boolean isSimilarSpec(int,int,int) -> isSimilarSpec
    645:892:void measure(androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure) -> measure
androidx.constraintlayout.widget.ConstraintLayoutStates -> androidx.constraintlayout.widget.ConstraintLayoutStates:
    42:51:void <init>(android.content.Context,androidx.constraintlayout.widget.ConstraintLayout,int) -> <init>
    285:346:void load(android.content.Context,int) -> load
    349:377:void parseConstraintSet(android.content.Context,org.xmlpull.v1.XmlPullParser) -> parseConstraintSet
    133:134:void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener) -> setOnConstraintsChanged
    73:130:void updateConstraints(int,float,float) -> updateConstraints
androidx.constraintlayout.widget.ConstraintLayoutStates$State -> androidx.constraintlayout.widget.ConstraintLayoutStates$State:
    141:168:void <init>(android.content.Context,org.xmlpull.v1.XmlPullParser) -> <init>
    171:172:void add(androidx.constraintlayout.widget.ConstraintLayoutStates$Variant) -> add
    175:180:int findMatch(float,float) -> findMatch
androidx.constraintlayout.widget.ConstraintLayoutStates$Variant -> androidx.constraintlayout.widget.ConstraintLayoutStates$Variant:
    186:251:void <init>(android.content.Context,org.xmlpull.v1.XmlPullParser) -> <init>
    258:270:boolean match(float,float) -> match
androidx.constraintlayout.widget.ConstraintSet -> androidx.constraintlayout.widget.ConstraintSet:
    241:559:void <clinit>() -> <clinit>
    78:244:void <init>() -> <init>
    78:78:int access$100(android.content.res.TypedArray,int,int) -> access$100
    78:78:int[] access$200() -> access$200
    2285:2288:void applyTo(androidx.constraintlayout.widget.ConstraintLayout) -> applyTo
    2367:2497:void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean) -> applyToInternal
    2168:2169:void clone(android.content.Context,int) -> clone
    2193:2246:void clone(androidx.constraintlayout.widget.ConstraintLayout) -> clone
    2254:2277:void clone(androidx.constraintlayout.widget.Constraints) -> clone
    3511:3515:void constrainCircle(int,int,int,float) -> constrainCircle
    5255:5287:int[] convertReferenceString(android.view.View,java.lang.String) -> convertReferenceString
    4239:4243:androidx.constraintlayout.widget.ConstraintSet$Constraint fillFromAttributeList(android.content.Context,android.util.AttributeSet,boolean) -> fillFromAttributeList
    4053:4056:androidx.constraintlayout.widget.ConstraintSet$Constraint get(int) -> get
    4088:4124:void load(android.content.Context,int) -> load
    4133:4228:void load(android.content.Context,org.xmlpull.v1.XmlPullParser) -> load
    4231:4235:int lookupID(android.content.res.TypedArray,int,int) -> lookupID
    710:782:void parseDimensionConstraints(java.lang.Object,android.content.res.TypedArray,int,int) -> parseDimensionConstraints
    862:966:void parseDimensionConstraintsString(java.lang.Object,java.lang.String,int) -> parseDimensionConstraintsString
    790:840:void parseDimensionRatioString(androidx.constraintlayout.widget.ConstraintLayout$LayoutParams,java.lang.String) -> parseDimensionRatioString
    4862:5252:void populateConstraint(android.content.Context,androidx.constraintlayout.widget.ConstraintSet$Constraint,android.content.res.TypedArray,boolean) -> populateConstraint
    4264:4583:void populateOverride(android.content.Context,androidx.constraintlayout.widget.ConstraintSet$Constraint,android.content.res.TypedArray) -> populateOverride
androidx.constraintlayout.widget.ConstraintSet$Constraint -> androidx.constraintlayout.widget.ConstraintSet$Constraint:
    1827:1834:void <init>() -> <init>
    1827:1827:void access$000(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> access$000
    1827:1827:void access$700(androidx.constraintlayout.widget.ConstraintSet$Constraint,androidx.constraintlayout.widget.ConstraintHelper,int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> access$700
    1827:1827:void access$800(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> access$800
    2088:2157:void applyTo(androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> applyTo
    1827:1827:java.lang.Object clone() -> clone
    1979:1986:androidx.constraintlayout.widget.ConstraintSet$Constraint clone() -> clone
    2018:2085:void fillFrom(int,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> fillFrom
    1990:1998:void fillFromConstraints(androidx.constraintlayout.widget.ConstraintHelper,int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> fillFromConstraints
    2001:2015:void fillFromConstraints(int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> fillFromConstraints
androidx.constraintlayout.widget.ConstraintSet$Constraint$Delta -> androidx.constraintlayout.widget.ConstraintSet$Constraint$Delta:
    1837:1883:void <init>() -> <init>
    1847:1853:void add(int,int) -> add
    1860:1866:void add(int,float) -> add
    1873:1879:void add(int,java.lang.String) -> add
    1886:1892:void add(int,boolean) -> add
androidx.constraintlayout.widget.ConstraintSet$Layout -> androidx.constraintlayout.widget.ConstraintSet$Layout:
    1122:1261:void <clinit>() -> <clinit>
    971:1043:void <init>() -> <init>
    1046:1120:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$Layout) -> copyFrom
    1264:1489:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.ConstraintSet$Motion -> androidx.constraintlayout.widget.ConstraintSet$Motion:
    1731:1755:void <clinit>() -> <clinit>
    1700:1714:void <init>() -> <init>
    1721:1729:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$Motion) -> copyFrom
    1758:1821:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.ConstraintSet$PropertySet -> androidx.constraintlayout.widget.ConstraintSet$PropertySet:
    1660:1665:void <init>() -> <init>
    1668:1673:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$PropertySet) -> copyFrom
    1676:1694:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.ConstraintSet$Transform -> androidx.constraintlayout.widget.ConstraintSet$Transform:
    1571:1600:void <clinit>() -> <clinit>
    1538:1552:void <init>() -> <init>
    1555:1569:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$Transform) -> copyFrom
    1603:1654:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.Constraints -> androidx.constraintlayout.widget.Constraints:
    35:35:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    136:136:androidx.constraintlayout.widget.Constraints$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    35:35:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    62:62:androidx.constraintlayout.widget.Constraints$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    148:148:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    152:157:androidx.constraintlayout.widget.ConstraintSet getConstraintSet() -> getConstraintSet
    163:163:void onLayout(boolean,int,int,int,int) -> onLayout
androidx.constraintlayout.widget.Constraints$LayoutParams -> androidx.constraintlayout.widget.Constraints$LayoutParams:
    67:83:void <init>(int,int) -> <init>
    67:127:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.constraintlayout.widget.Guideline -> androidx.constraintlayout.widget.Guideline:
    54:58:void <init>(android.content.Context) -> <init>
    91:91:void draw(android.graphics.Canvas) -> draw
    98:99:void onMeasure(int,int) -> onMeasure
    152:153:void setFilterRedundantCalls(boolean) -> setFilterRedundantCalls
    107:113:void setGuidelineBegin(int) -> setGuidelineBegin
    121:127:void setGuidelineEnd(int) -> setGuidelineEnd
    134:140:void setGuidelinePercent(float) -> setGuidelinePercent
    80:80:void setVisibility(int) -> setVisibility
androidx.constraintlayout.widget.Placeholder -> androidx.constraintlayout.widget.Placeholder:
    114:114:android.view.View getContent() -> getContent
    106:106:int getEmptyVisibility() -> getEmptyVisibility
    125:147:void onDraw(android.graphics.Canvas) -> onDraw
    176:194:void setContentId(int) -> setContentId
    97:98:void setEmptyVisibility(int) -> setEmptyVisibility
    201:215:void updatePostMeasure(androidx.constraintlayout.widget.ConstraintLayout) -> updatePostMeasure
    154:168:void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout) -> updatePreLayout
androidx.constraintlayout.widget.SharedValues -> androidx.constraintlayout.widget.SharedValues:
    30:34:void <init>() -> <init>
androidx.constraintlayout.widget.VirtualLayout -> androidx.constraintlayout.widget.VirtualLayout:
    39:40:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    125:126:void applyLayoutFeaturesInConstraintSet(androidx.constraintlayout.widget.ConstraintLayout) -> applyLayoutFeaturesInConstraintSet
    48:62:void init(android.util.AttributeSet) -> init
    73:99:void onAttachedToWindow() -> onAttachedToWindow
    66:66:void onMeasure(androidx.constraintlayout.core.widgets.VirtualLayout,int,int) -> onMeasure
    115:117:void setElevation(float) -> setElevation
    106:108:void setVisibility(int) -> setVisibility
androidx.coordinatorlayout.widget.CoordinatorLayout -> androidx.coordinatorlayout.widget.CoordinatorLayout:
    118:152:void <clinit>() -> <clinit>
    211:212:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    168:255:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    156:160:android.graphics.Rect acquireTempRect() -> acquireTempRect
    1615:1627:void addPreDrawListener() -> addPreDrawListener
    1760:1760:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1281:1286:int clamp(int,int,int) -> clamp
    1066:1078:void constrainChildRect(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int) -> constrainChildRect
    854:875:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsetsToBehaviors(androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsetsToBehaviors
    1523:1535:void dispatchDependentViewsChanged(android.view.View) -> dispatchDependentViewsChanged
    1253:1277:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    332:345:void drawableStateChanged() -> drawableStateChanged
    1584:1601:void ensurePreDrawListener() -> ensurePreDrawListener
    112:112:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1755:1755:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    112:112:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    112:112:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1740:1740:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1745:1750:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    979:988:void getChildRect(android.view.View,boolean,android.graphics.Rect) -> getChildRect
    1547:1552:java.util.List getDependencies(android.view.View) -> getDependencies
    1576:1577:java.util.List getDependencySortedChildren() -> getDependencySortedChildren
    1566:1571:java.util.List getDependents(android.view.View) -> getDependents
    732:733:void getDescendantRect(android.view.View,android.graphics.Rect) -> getDescendantRect
    1090:1096:void getDesiredAnchoredChildRect(android.view.View,int,android.graphics.Rect,android.graphics.Rect) -> getDesiredAnchoredChildRect
    992:1063:void getDesiredAnchoredChildRectWithoutConstraints(android.view.View,int,android.graphics.Rect,android.graphics.Rect,androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,int,int) -> getDesiredAnchoredChildRectWithoutConstraints
    600:610:int getKeyline(int) -> getKeyline
    965:967:void getLastChildRect(android.view.View,android.graphics.Rect) -> getLastChildRect
    401:401:androidx.core.view.WindowInsetsCompat getLastWindowInsets() -> getLastWindowInsets
    2017:2017:int getNestedScrollAxes() -> getNestedScrollAxes
    654:685:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View) -> getResolvedLayoutParams
    327:327:android.graphics.drawable.Drawable getStatusBarBackground() -> getStatusBarBackground
    742:742:int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    737:737:int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    444:457:void getTopSortedChildren(java.util.List) -> getTopSortedChildren
    1607:1607:boolean hasDependencies(android.view.View) -> hasDependencies
    1704:1710:boolean isPointInChildBounds(android.view.View,int,int) -> isPointInChildBounds
    1193:1217:void layoutChild(android.view.View,int) -> layoutChild
    1106:1116:void layoutChildWithAnchor(android.view.View,android.view.View,int) -> layoutChildWithAnchor
    1130:1183:void layoutChildWithKeyline(android.view.View,int,int) -> layoutChildWithKeyline
    1413:1491:void offsetChildByInset(android.view.View,android.graphics.Rect,int) -> offsetChildByInset
    1653:1692:void offsetChildToAnchor(android.view.View,int) -> offsetChildToAnchor
    264:279:void onAttachedToWindow() -> onAttachedToWindow
    1307:1409:void onChildViewsChanged(int) -> onChildViewsChanged
    283:293:void onDetachedFromWindow() -> onDetachedFromWindow
    926:934:void onDraw(android.graphics.Canvas) -> onDraw
    532:545:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    906:922:void onLayout(boolean,int,int,int,int) -> onLayout
    889:901:void onLayoutChild(android.view.View,int) -> onLayoutChild
    767:850:void onMeasure(int,int) -> onMeasure
    760:762:void onMeasureChild(android.view.View,int,int,int,int) -> onMeasureChild
    1962:1986:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    1992:2012:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    1913:1914:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    1919:1957:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    1852:1854:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    1859:1861:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    1868:1909:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1796:1797:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    1802:1819:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    3241:3264:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    3269:3287:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1765:1765:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    1771:1791:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1823:1824:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    1829:1847:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    551:587:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    615:649:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String) -> parseBehavior
    461:527:boolean performIntercept(android.view.MotionEvent,int) -> performIntercept
    689:722:void prepareChildren() -> prepareChildren
    953:955:void recordLastChildRect(android.view.View,android.graphics.Rect) -> recordLastChildRect
    164:166:void releaseTempRect(android.graphics.Rect) -> releaseTempRect
    1634:1641:void removePreDrawListener() -> removePreDrawListener
    3293:3301:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    592:597:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    412:437:void resetTouchBehaviors(boolean) -> resetTouchBehaviors
    1247:1247:int resolveAnchoredChildGravity(int) -> resolveAnchoredChildGravity
    1225:1231:int resolveGravity(int) -> resolveGravity
    1239:1239:int resolveKeylineGravity(int) -> resolveKeylineGravity
    938:940:void setFitsSystemWindows(boolean) -> setFitsSystemWindows
    1494:1500:void setInsetOffsetX(android.view.View,int) -> setInsetOffsetX
    1503:1509:void setInsetOffsetY(android.view.View,int) -> setInsetOffsetY
    259:260:void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener) -> setOnHierarchyChangeListener
    302:318:void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    380:381:void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    369:370:void setStatusBarBackgroundResource(int) -> setStatusBarBackgroundResource
    354:360:void setVisibility(int) -> setVisibility
    384:393:androidx.core.view.WindowInsetsCompat setWindowInsets(androidx.core.view.WindowInsetsCompat) -> setWindowInsets
    3305:3329:void setupForInsets() -> setupForInsets
    349:349:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.coordinatorlayout.widget.CoordinatorLayout$1 -> androidx.coordinatorlayout.widget.CoordinatorLayout$1:
    3312:3312:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    3316:3316:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior -> androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior:
    2091:2092:void <init>() -> <init>
    2102:2103:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2229:2229:boolean blocksInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> blocksInteractionBelow
    2796:2796:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> getInsetDodgeRect
    2195:2195:int getScrimColor(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> getScrimColor
    2213:2213:float getScrimOpacity(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> getScrimOpacity
    2256:2256:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    2716:2716:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
    2114:2114:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    2286:2286:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    2305:2305:void onDependentViewRemoved(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewRemoved
    2124:2124:void onDetachedFromLayoutParams() -> onDetachedFromLayoutParams
    2151:2151:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    2359:2359:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    2330:2330:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    2668:2668:boolean onNestedFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float,boolean) -> onNestedFling
    2696:2696:boolean onNestedPreFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float) -> onNestedPreFling
    2599:2599:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[]) -> onNestedPreScroll
    2633:2636:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    2527:2527:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int) -> onNestedScroll
    2540:2544:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int) -> onNestedScroll
    2583:2587:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    2443:2443:void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    2469:2473:void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    2738:2738:boolean onRequestChildRectangleOnScreen(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean) -> onRequestChildRectangleOnScreen
    2756:2756:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    2778:2778:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    2398:2398:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> onStartNestedScroll
    2426:2430:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    2484:2484:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onStopNestedScroll
    2509:2512:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    2175:2175:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener -> androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener:
    3218:3219:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    3223:3226:void onChildViewAdded(android.view.View,android.view.View) -> onChildViewAdded
    3230:3235:void onChildViewRemoved(android.view.View,android.view.View) -> onChildViewRemoved
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams -> androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams:
    2809:2870:void <init>(int,int) -> <init>
    2809:2905:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2809:2909:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> <init>
    2809:2913:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2809:2917:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    3003:3003:boolean checkAnchorChanged() -> checkAnchorChanged
    3100:3102:boolean dependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> dependsOn
    3014:3017:boolean didBlockInteraction() -> didBlockInteraction
    3125:3133:android.view.View findAnchorView(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> findAnchorView
    2926:2926:int getAnchorId() -> getAnchorId
    2952:2952:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    3079:3079:boolean getChangedAfterNestedScroll() -> getChangedAfterNestedScroll
    2995:2995:android.graphics.Rect getLastChildRect() -> getLastChildRect
    3033:3038:boolean isBlockingInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> isBlockingInteractionBelow
    3069:3075:boolean isNestedScrollAccepted(int) -> isNestedScrollAccepted
    3087:3088:void resetChangedAfterNestedScroll() -> resetChangedAfterNestedScroll
    3054:3055:void resetNestedScroll(int) -> resetNestedScroll
    3050:3051:void resetTouchBehaviorTracking() -> resetTouchBehaviorTracking
    3141:3178:void resolveAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout) -> resolveAnchorView
    2965:2980:void setBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior) -> setBehavior
    3083:3084:void setChangedAfterNestedScroll(boolean) -> setChangedAfterNestedScroll
    2987:2988:void setLastChildRect(android.graphics.Rect) -> setLastChildRect
    3058:3066:void setNestedScrollAccepted(int,boolean) -> setNestedScrollAccepted
    3210:3213:boolean shouldDodge(android.view.View,int) -> shouldDodge
    3186:3203:boolean verifyAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout) -> verifyAnchorView
androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener -> androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener:
    2020:2020:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    2023:2024:boolean onPreDraw() -> onPreDraw
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState -> androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState:
    3373:3373:void <clinit>() -> <clinit>
    3335:3348:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    3351:3352:void <init>(android.os.Parcelable) -> <init>
    3356:3371:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1 -> androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1:
    3374:3374:void <init>() -> <init>
    3374:3374:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3374:3374:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3377:3377:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3382:3382:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3374:3374:java.lang.Object[] newArray(int) -> newArray
    3387:3387:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState[] newArray(int) -> newArray
androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator -> androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator:
    2031:2031:void <init>() -> <init>
    2031:2031:int compare(java.lang.Object,java.lang.Object) -> compare
    2034:2041:int compare(android.view.View,android.view.View) -> compare
androidx.coordinatorlayout.widget.DirectedAcyclicGraph -> androidx.coordinatorlayout.widget.DirectedAcyclicGraph:
    39:44:void <init>() -> <init>
    76:89:void addEdge(java.lang.Object,java.lang.Object) -> addEdge
    54:57:void addNode(java.lang.Object) -> addNode
    143:150:void clear() -> clear
    63:63:boolean contains(java.lang.Object) -> contains
    174:194:void dfs(java.lang.Object,java.util.ArrayList,java.util.HashSet) -> dfs
    205:209:java.util.ArrayList getEmptyList() -> getEmptyList
    98:98:java.util.List getIncomingEdges(java.lang.Object) -> getIncomingEdges
    109:119:java.util.List getOutgoingEdges(java.lang.Object) -> getOutgoingEdges
    162:170:java.util.ArrayList getSortedList() -> getSortedList
    130:136:boolean hasOutgoingEdges(java.lang.Object) -> hasOutgoingEdges
    213:215:void poolList(java.util.ArrayList) -> poolList
androidx.coordinatorlayout.widget.ViewGroupUtils -> androidx.coordinatorlayout.widget.ViewGroupUtils:
    35:36:void <clinit>() -> <clinit>
    77:79:void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> getDescendantRect
    82:94:void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> offsetDescendantMatrix
    48:67:void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> offsetDescendantRect
androidx.core.app.ActivityCompat -> androidx.core.app.ActivityCompat:
    void $r8$lambda$gwIVdSe1wJYEvrkKzQghxQatlNg(android.app.Activity) -> $r8$lambda$gwIVdSe1wJYEvrkKzQghxQatlNg
      # {"id":"com.android.tools.r8.synthesized"}
    302:307:void finishAffinity(android.app.Activity) -> finishAffinity
    319:324:void finishAfterTransition(android.app.Activity) -> finishAfterTransition
    679:683:void lambda$recreate$0(android.app.Activity) -> lambda$recreate$0
    427:430:void postponeEnterTransition(android.app.Activity) -> postponeEnterTransition
    670:685:void recreate(android.app.Activity) -> recreate
    521:582:void requestPermissions(android.app.Activity,java.lang.String[],int) -> requestPermissions
    399:405:void setEnterSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback) -> setEnterSharedElementCallback
    418:424:void setExitSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback) -> setExitSharedElementCallback
    597:607:boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String) -> shouldShowRequestPermissionRationale
    248:253:void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    285:292:void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    433:436:void startPostponedEnterTransition(android.app.Activity) -> startPostponedEnterTransition
androidx.core.app.ActivityCompat$$ExternalSyntheticLambda0 -> androidx.core.app.ActivityCompat$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.app.Activity androidx.core.app.ActivityCompat$$InternalSyntheticLambda$1$6e9d625f7499cc02f53fe1dade3df85b3b9ea91cb0138464c0ece30ad7359ed5$0.f$0 -> f$0
    void androidx.core.app.ActivityCompat$$InternalSyntheticLambda$1$6e9d625f7499cc02f53fe1dade3df85b3b9ea91cb0138464c0ece30ad7359ed5$0.<init>(android.app.Activity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.app.ActivityCompat$$InternalSyntheticLambda$1$6e9d625f7499cc02f53fe1dade3df85b3b9ea91cb0138464c0ece30ad7359ed5$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.app.ActivityCompat$Api16Impl -> androidx.core.app.ActivityCompat$Api16Impl:
    873:874:void finishAffinity(android.app.Activity) -> finishAffinity
    860:861:void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    867:869:void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
androidx.core.app.ActivityCompat$Api21Impl -> androidx.core.app.ActivityCompat$Api21Impl:
    885:886:void finishAfterTransition(android.app.Activity) -> finishAfterTransition
    902:903:void postponeEnterTransition(android.app.Activity) -> postponeEnterTransition
    891:892:void setEnterSharedElementCallback(android.app.Activity,android.app.SharedElementCallback) -> setEnterSharedElementCallback
    897:898:void setExitSharedElementCallback(android.app.Activity,android.app.SharedElementCallback) -> setExitSharedElementCallback
    907:908:void startPostponedEnterTransition(android.app.Activity) -> startPostponedEnterTransition
androidx.core.app.ActivityCompat$Api23Impl -> androidx.core.app.ActivityCompat$Api23Impl:
    954:956:void onSharedElementsReady(java.lang.Object) -> onSharedElementsReady
    944:945:void requestPermissions(android.app.Activity,java.lang.String[],int) -> requestPermissions
    949:949:boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String) -> shouldShowRequestPermissionRationale
androidx.core.app.ActivityCompat$Api31Impl -> androidx.core.app.ActivityCompat$Api31Impl:
    803:803:boolean isLaunchedFromBubble(android.app.Activity) -> isLaunchedFromBubble
    830:834:boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String) -> shouldShowRequestPermissionRationale
androidx.core.app.ActivityCompat$Api31Impl$$ExternalSyntheticApiModelOutline0 -> androidx.core.app.ActivityCompat$Api31Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean androidx.core.app.ActivityCompat$Api31Impl$$InternalSyntheticApiModelOutline$1$6d14dcc560477d1be0b42200bfc99fe49361b36df21f13ae93e707511914c848$0.m(android.app.Activity) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.app.ActivityCompat$Api32Impl -> androidx.core.app.ActivityCompat$Api32Impl:
    847:847:boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String) -> shouldShowRequestPermissionRationale
androidx.core.app.ActivityCompat$SharedElementCallback21Impl -> androidx.core.app.ActivityCompat$SharedElementCallback21Impl:
    728:730:void <init>(androidx.core.app.SharedElementCallback) -> <init>
    759:759:android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    765:765:android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
    753:754:void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    748:749:void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    742:744:void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    735:737:void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    772:774:void onSharedElementsArrived(java.util.List,java.util.List,android.app.SharedElementCallback$OnSharedElementsReadyListener) -> onSharedElementsArrived
androidx.core.app.ActivityCompat$SharedElementCallback21Impl$$ExternalSyntheticLambda0 -> androidx.core.app.ActivityCompat$SharedElementCallback21Impl$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.app.SharedElementCallback$OnSharedElementsReadyListener androidx.core.app.ActivityCompat$SharedElementCallback21Impl$$InternalSyntheticLambda$1$2ab7614b5519cfe70a7427768170a8a5734488ad0a4856ad36917ff51f7b2895$0.f$0 -> f$0
    void androidx.core.app.ActivityCompat$SharedElementCallback21Impl$$InternalSyntheticLambda$1$2ab7614b5519cfe70a7427768170a8a5734488ad0a4856ad36917ff51f7b2895$0.<init>(android.app.SharedElementCallback$OnSharedElementsReadyListener) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.app.ActivityRecreator -> androidx.core.app.ActivityRecreator:
    91:100:void <clinit>() -> <clinit>
    378:380:java.lang.Class getActivityThreadClass() -> getActivityThreadClass
    358:362:java.lang.reflect.Field getMainThreadField() -> getMainThreadField
    316:325:java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class) -> getPerformStopActivity2Params
    302:311:java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class) -> getPerformStopActivity3Params
    334:352:java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class) -> getRequestRelaunchActivityMethod
    368:372:java.lang.reflect.Field getTokenField() -> getTokenField
    330:330:boolean needsRelaunchCall() -> needsRelaunchCall
    257:297:boolean queueOnStopIfNecessary(java.lang.Object,int,android.app.Activity) -> queueOnStopIfNecessary
    109:171:boolean recreate(android.app.Activity) -> recreate
androidx.core.app.ActivityRecreator$1 -> androidx.core.app.ActivityRecreator$1:
    143:143:void <init>(androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks,java.lang.Object) -> <init>
    146:147:void run() -> run
androidx.core.app.ActivityRecreator$2 -> androidx.core.app.ActivityRecreator$2:
    159:159:void <init>(android.app.Application,androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks) -> <init>
    166:167:void run() -> run
androidx.core.app.ActivityRecreator$3 -> androidx.core.app.ActivityRecreator$3:
    269:269:void <init>(java.lang.Object,java.lang.Object) -> <init>
    273:292:void run() -> run
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks -> androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks:
    183:196:void <init>(android.app.Activity) -> <init>
    200:200:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    241:248:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    218:228:void onActivityPaused(android.app.Activity) -> onActivityPaused
    214:214:void onActivityResumed(android.app.Activity) -> onActivityResumed
    232:232:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    207:210:void onActivityStarted(android.app.Activity) -> onActivityStarted
    237:237:void onActivityStopped(android.app.Activity) -> onActivityStopped
androidx.core.app.AppOpsManagerCompat -> androidx.core.app.AppOpsManagerCompat:
    201:216:int checkOrNoteProxyOp(android.content.Context,int,java.lang.String,java.lang.String) -> checkOrNoteProxyOp
    178:180:int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String) -> noteProxyOpNoThrow
    78:79:java.lang.String permissionToOp(java.lang.String) -> permissionToOp
androidx.core.app.AppOpsManagerCompat$Api23Impl -> androidx.core.app.AppOpsManagerCompat$Api23Impl:
    271:271:java.lang.Object getSystemService(android.content.Context,java.lang.Class) -> getSystemService
    276:276:int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String) -> noteProxyOp
    282:282:int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String) -> noteProxyOpNoThrow
    266:266:java.lang.String permissionToOp(java.lang.String) -> permissionToOp
androidx.core.app.AppOpsManagerCompat$Api29Impl -> androidx.core.app.AppOpsManagerCompat$Api29Impl:
    242:246:int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String) -> checkOpNoThrow
    254:254:java.lang.String getOpPackageName(android.content.Context) -> getOpPackageName
    233:233:android.app.AppOpsManager getSystemService(android.content.Context) -> getSystemService
androidx.core.app.AppOpsManagerCompat$Api29Impl$$ExternalSyntheticApiModelOutline0 -> androidx.core.app.AppOpsManagerCompat$Api29Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.String androidx.core.app.AppOpsManagerCompat$Api29Impl$$InternalSyntheticApiModelOutline$1$e2524235c29db01338afcf75752809b43e947adf95df388df370e0168b81e812$0.m(android.content.Context) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.app.ComponentActivity -> androidx.core.app.ComponentActivity:
    51:66:void <init>() -> <init>
    140:144:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    131:135:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    110:110:androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class) -> getExtraData
    116:116:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    88:90:void onCreate(android.os.Bundle) -> onCreate
    95:97:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    82:83:void putExtraData(androidx.core.app.ComponentActivity$ExtraData) -> putExtraData
    169:169:boolean shouldDumpInternalState(java.lang.String[]) -> shouldDumpInternalState
    174:188:boolean shouldSkipDump(java.lang.String[]) -> shouldSkipDump
    126:126:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
androidx.core.app.ComponentActivity$ExtraData -> androidx.core.app.ComponentActivity$ExtraData:
    199:199:void <init>() -> <init>
androidx.core.app.CoreComponentFactory -> androidx.core.app.CoreComponentFactory:
    39:39:void <init>() -> <init>
    80:86:java.lang.Object checkCompatWrapper(java.lang.Object) -> checkCompatWrapper
    45:45:android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivity
    52:52:android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String) -> instantiateApplication
    67:67:android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String) -> instantiateProvider
    60:60:android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiver
    75:75:android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateService
androidx.core.app.MultiWindowModeChangedInfo -> androidx.core.app.MultiWindowModeChangedInfo:
    39:42:void <init>(boolean) -> <init>
    54:57:void <init>(boolean,android.content.res.Configuration) -> <init>
androidx.core.app.NavUtils -> androidx.core.app.NavUtils:
    131:152:android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    197:207:android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    222:225:java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    242:280:java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
    110:117:void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    62:63:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
androidx.core.app.NavUtils$Api16Impl -> androidx.core.app.NavUtils$Api16Impl:
    305:305:android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    300:300:boolean navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    295:295:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
androidx.core.app.NotificationManagerCompat -> androidx.core.app.NotificationManagerCompat:
    108:117:void <clinit>() -> <clinit>
    167:171:void <init>(android.content.Context) -> <init>
    238:239:boolean areNotificationsEnabled() -> areNotificationsEnabled
    164:164:androidx.core.app.NotificationManagerCompat from(android.content.Context) -> from
androidx.core.app.NotificationManagerCompat$Api24Impl -> androidx.core.app.NotificationManagerCompat$Api24Impl:
    1072:1072:boolean areNotificationsEnabled(android.app.NotificationManager) -> areNotificationsEnabled
    1077:1077:int getImportance(android.app.NotificationManager) -> getImportance
androidx.core.app.PictureInPictureModeChangedInfo -> androidx.core.app.PictureInPictureModeChangedInfo:
    39:42:void <init>(boolean) -> <init>
    54:57:void <init>(boolean,android.content.res.Configuration) -> <init>
androidx.core.app.RemoteActionCompat -> androidx.core.app.RemoteActionCompat:
    105:105:void <init>() -> <init>
androidx.core.app.RemoteActionCompatParcelizer -> androidx.core.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    14:21:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    26:33:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.app.TaskStackBuilder -> androidx.core.app.TaskStackBuilder:
    81:86:void <init>(android.content.Context) -> <init>
    123:124:androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    161:179:androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    204:215:androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    97:97:androidx.core.app.TaskStackBuilder create(android.content.Context) -> create
    260:260:java.util.Iterator iterator() -> iterator
    272:273:void startActivities() -> startActivities
    287:300:void startActivities(android.os.Bundle) -> startActivities
androidx.core.content.ContextCompat -> androidx.core.content.ContextCompat:
    172:175:void <clinit>() -> <clinit>
    594:601:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
    577:578:int getColor(android.content.Context,int) -> getColor
    558:558:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    521:522:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    500:501:java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    447:448:java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    290:295:boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    317:322:void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
androidx.core.content.ContextCompat$Api16Impl -> androidx.core.content.ContextCompat$Api16Impl:
    973:974:void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    978:979:void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
androidx.core.content.ContextCompat$Api19Impl -> androidx.core.content.ContextCompat$Api19Impl:
    990:990:java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    995:995:java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    1000:1000:java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
androidx.core.content.ContextCompat$Api21Impl -> androidx.core.content.ContextCompat$Api21Impl:
    1022:1022:java.io.File getCodeCacheDir(android.content.Context) -> getCodeCacheDir
    1012:1012:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    1017:1017:java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
androidx.core.content.ContextCompat$Api23Impl -> androidx.core.content.ContextCompat$Api23Impl:
    1034:1034:int getColor(android.content.Context,int) -> getColor
    1039:1039:java.lang.Object getSystemService(android.content.Context,java.lang.Class) -> getSystemService
    1044:1044:java.lang.String getSystemServiceName(android.content.Context,java.lang.Class) -> getSystemServiceName
androidx.core.content.FileProvider -> androidx.core.content.FileProvider:
    355:377:void <clinit>() -> <clinit>
    382:384:void <init>() -> <init>
    409:425:void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    900:906:java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    910:912:java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    916:918:java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
    606:607:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    663:680:android.content.res.XmlResourceParser getFileProviderPathsMetaData(android.content.Context,java.lang.String,android.content.pm.ProviderInfo,int) -> getFileProviderPathsMetaData
    641:656:androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String,int) -> getPathStrategy
    558:569:java.lang.String getType(android.net.Uri) -> getType
    449:450:android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    578:578:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    876:896:int modeToMode(java.lang.String) -> modeToMode
    396:396:boolean onCreate() -> onCreate
    630:632:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    691:739:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String,int) -> parsePathStrategy
    517:542:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    588:588:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
androidx.core.content.FileProvider$Api21Impl -> androidx.core.content.FileProvider$Api21Impl:
    930:930:java.io.File[] getExternalMediaDirs(android.content.Context) -> getExternalMediaDirs
androidx.core.content.FileProvider$SimplePathStrategy -> androidx.core.content.FileProvider$SimplePathStrategy:
    779:783:void <init>(java.lang.String) -> <init>
    790:803:void addRoot(java.lang.String,java.io.File) -> addRoot
    845:867:java.io.File getFileForUri(android.net.Uri) -> getFileForUri
    809:840:android.net.Uri getUriForFile(java.io.File) -> getUriForFile
androidx.core.content.PermissionChecker -> androidx.core.content.PermissionChecker:
    98:128:int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String) -> checkPermission
    143:144:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
androidx.core.content.res.CamColor -> androidx.core.content.res.CamColor:
    128:138:void <init>(float,float,float,float,float,float,float,float,float) -> <init>
    290:295:float distance(androidx.core.content.res.CamColor) -> distance
    483:534:androidx.core.content.res.CamColor findCamByJ(float,float,float) -> findCamByJ
    160:160:androidx.core.content.res.CamColor fromColor(int) -> fromColor
    171:242:androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions) -> fromColorInViewingConditions
    253:253:androidx.core.content.res.CamColor fromJch(float,float,float) -> fromJch
    264:280:androidx.core.content.res.CamColor fromJchInFrame(float,float,float,androidx.core.content.res.ViewingConditions) -> fromJchInFrame
    116:116:float getAStar() -> getAStar
    123:123:float getBStar() -> getBStar
    63:63:float getChroma() -> getChroma
    57:57:float getHue() -> getHue
    69:69:float getJ() -> getJ
    109:109:float getJStar() -> getJStar
    149:149:int toColor(float,float,float) -> toColor
    414:471:int toColor(float,float,float,androidx.core.content.res.ViewingConditions) -> toColor
    308:354:int viewed(androidx.core.content.res.ViewingConditions) -> viewed
    301:301:int viewedInSrgb() -> viewedInSrgb
androidx.core.content.res.CamUtils -> androidx.core.content.res.CamUtils:
    52:73:void <clinit>() -> <clinit>
    80:101:int intFromLStar(float) -> intFromLStar
    111:111:float lStarFromInt(int) -> lStarFromInt
    115:123:float lStarFromY(float) -> lStarFromY
    106:106:float lerp(float,float,float) -> lerp
    158:163:float linearized(int) -> linearized
    137:145:float[] xyzFromInt(int) -> xyzFromInt
    127:132:float yFromInt(int) -> yFromInt
    149:153:float yFromLStar(float) -> yFromLStar
androidx.core.content.res.ColorStateListInflaterCompat -> androidx.core.content.res.ColorStateListInflaterCompat:
    53:53:void <clinit>() -> <clinit>
    92:104:android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> createFromXml
    119:125:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    224:229:android.util.TypedValue getTypedValue() -> getTypedValue
    71:76:android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflate
    134:212:android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    216:218:boolean isColorInt(android.content.res.Resources,int) -> isColorInt
    242:255:int modulateColorAlpha(int,float,float) -> modulateColorAlpha
    234:235:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
androidx.core.content.res.ComplexColorCompat -> androidx.core.content.res.ComplexColorCompat:
    61:65:void <init>(android.graphics.Shader,android.content.res.ColorStateList,int) -> <init>
    152:171:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme) -> createFromXml
    68:68:androidx.core.content.res.ComplexColorCompat from(android.graphics.Shader) -> from
    72:72:androidx.core.content.res.ComplexColorCompat from(android.content.res.ColorStateList) -> from
    76:76:androidx.core.content.res.ComplexColorCompat from(int) -> from
    86:86:int getColor() -> getColor
    81:81:android.graphics.Shader getShader() -> getShader
    140:144:androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflate
    94:94:boolean isGradient() -> isGradient
    98:98:boolean isStateful() -> isStateful
    108:117:boolean onStateChanged(int[]) -> onStateChanged
    90:91:void setColor(int) -> setColor
    124:124:boolean willDraw() -> willDraw
androidx.core.content.res.FontResourcesParserCompat -> androidx.core.content.res.FontResourcesParserCompat:
    257:258:int getType(android.content.res.TypedArray,int) -> getType
    186:194:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> parse
    276:301:java.util.List readCerts(android.content.res.Resources,int) -> readCerts
    199:205:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamilies
    211:251:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamily
    315:343:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFont
    348:359:void skip(org.xmlpull.v1.XmlPullParser) -> skip
    306:310:java.util.List toByteArrayList(java.lang.String[]) -> toByteArrayList
androidx.core.content.res.FontResourcesParserCompat$Api21Impl -> androidx.core.content.res.FontResourcesParserCompat$Api21Impl:
    372:372:int getType(android.content.res.TypedArray,int) -> getType
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry:
    171:173:void <init>(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[]) -> <init>
    176:176:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries() -> getEntries
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry:
    131:138:void <init>(java.lang.String,int,boolean,java.lang.String,int,int) -> <init>
    141:141:java.lang.String getFileName() -> getFileName
    161:161:int getResourceId() -> getResourceId
    157:157:int getTtcIndex() -> getTtcIndex
    153:153:java.lang.String getVariationSettings() -> getVariationSettings
    145:145:int getWeight() -> getWeight
    149:149:boolean isItalic() -> isItalic
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry:
    88:93:void <init>(androidx.core.provider.FontRequest,int,int,java.lang.String) -> <init>
    105:105:int getFetchStrategy() -> getFetchStrategy
    101:101:androidx.core.provider.FontRequest getRequest() -> getRequest
    115:115:java.lang.String getSystemFontFamilyName() -> getSystemFontFamilyName
    109:109:int getTimeout() -> getTimeout
androidx.core.content.res.GradientColorInflaterCompat -> androidx.core.content.res.GradientColorInflaterCompat:
    192:197:androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int) -> checkColors
    90:142:android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    150:186:androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateChildElements
    202:209:android.graphics.Shader$TileMode parseTileMode(int) -> parseTileMode
androidx.core.content.res.GradientColorInflaterCompat$ColorStops -> androidx.core.content.res.GradientColorInflaterCompat$ColorStops:
    217:225:void <init>(java.util.List,java.util.List) -> <init>
    227:230:void <init>(int,int) -> <init>
    232:235:void <init>(int,int,int) -> <init>
androidx.core.content.res.GrowingArrayUtils -> androidx.core.content.res.GrowingArrayUtils:
    42:49:java.lang.Object[] append(java.lang.Object[],int,java.lang.Object) -> append
    56:62:int[] append(int[],int,int) -> append
    175:175:int growSize(int) -> growSize
androidx.core.content.res.ResourcesCompat -> androidx.core.content.res.ResourcesCompat:
    75:80:void <clinit>() -> <clinit>
    296:305:void addColorStateListToCache(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int,android.content.res.ColorStateList,android.content.res.Resources$Theme) -> addColorStateListToCache
    272:289:android.content.res.ColorStateList getCachedColorStateList(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int) -> getCachedColorStateList
    436:439:android.graphics.Typeface getCachedFont(android.content.Context,int) -> getCachedFont
    230:244:android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColorStateList
    136:137:android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
    169:170:android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    408:411:android.graphics.Typeface getFont(android.content.Context,int) -> getFont
    523:531:void getFont(android.content.Context,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler) -> getFont
    543:546:android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
    316:321:android.util.TypedValue getTypedValue() -> getTypedValue
    256:266:android.content.res.ColorStateList inflateColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflateColorStateList
    308:310:boolean isColorInt(android.content.res.Resources,int) -> isColorInt
    568:576:android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean) -> loadFont
    600:663:android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean) -> loadFont
androidx.core.content.res.ResourcesCompat$Api21Impl -> androidx.core.content.res.ResourcesCompat$Api21Impl:
    705:705:android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
    711:711:android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
androidx.core.content.res.ResourcesCompat$Api23Impl -> androidx.core.content.res.ResourcesCompat$Api23Impl:
    693:693:int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColor
    688:688:android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColorStateList
androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry -> androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry:
    355:359:void <init>(android.content.res.ColorStateList,android.content.res.Configuration,android.content.res.Resources$Theme) -> <init>
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey -> androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey:
    328:331:void <init>(android.content.res.Resources,android.content.res.Resources$Theme) -> <init>
    335:339:boolean equals(java.lang.Object) -> equals
    344:344:int hashCode() -> hashCode
androidx.core.content.res.ResourcesCompat$FontCallback -> androidx.core.content.res.ResourcesCompat$FontCallback:
    void $r8$lambda$3yv7dDJDSSH8XKTxkNkwYH6nK6w(androidx.core.content.res.ResourcesCompat$FontCallback,int) -> $r8$lambda$3yv7dDJDSSH8XKTxkNkwYH6nK6w
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$ogWJ7e4UAkgZnU7fNvmJ6umiBig(androidx.core.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface) -> $r8$lambda$ogWJ7e4UAkgZnU7fNvmJ6umiBig
      # {"id":"com.android.tools.r8.synthesized"}
    446:446:void <init>() -> <init>
    490:491:void callbackFailAsync(int,android.os.Handler) -> callbackFailAsync
    478:479:void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler) -> callbackSuccessAsync
    497:497:android.os.Handler getHandler(android.os.Handler) -> getHandler
    490:490:void lambda$callbackFailAsync$1(int) -> lambda$callbackFailAsync$1
    478:478:void lambda$callbackSuccessAsync$0(android.graphics.Typeface) -> lambda$callbackSuccessAsync$0
androidx.core.content.res.ResourcesCompat$FontCallback$$ExternalSyntheticLambda0 -> androidx.core.content.res.ResourcesCompat$FontCallback$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.graphics.Typeface androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$1$c2bd2b13acab29532b8305b19332e4b2946ea3f2308a446b41aca23adcb71af6$0.f$1 -> f$1
    androidx.core.content.res.ResourcesCompat$FontCallback androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$1$c2bd2b13acab29532b8305b19332e4b2946ea3f2308a446b41aca23adcb71af6$0.f$0 -> f$0
    void androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$1$c2bd2b13acab29532b8305b19332e4b2946ea3f2308a446b41aca23adcb71af6$0.<init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$1$c2bd2b13acab29532b8305b19332e4b2946ea3f2308a446b41aca23adcb71af6$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.content.res.ResourcesCompat$FontCallback$$ExternalSyntheticLambda1 -> androidx.core.content.res.ResourcesCompat$FontCallback$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.content.res.ResourcesCompat$FontCallback androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$1$eb024717ed4c535c671b8ebfdb6d8b6605f4b7bfdc73b1f041999a70ce54ed62$0.f$0 -> f$0
    int androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$1$eb024717ed4c535c671b8ebfdb6d8b6605f4b7bfdc73b1f041999a70ce54ed62$0.f$1 -> f$1
    void androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$1$eb024717ed4c535c671b8ebfdb6d8b6605f4b7bfdc73b1f041999a70ce54ed62$0.<init>(androidx.core.content.res.ResourcesCompat$FontCallback,int) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$1$eb024717ed4c535c671b8ebfdb6d8b6605f4b7bfdc73b1f041999a70ce54ed62$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.content.res.ResourcesCompat$ThemeCompat -> androidx.core.content.res.ResourcesCompat$ThemeCompat:
    753:758:void rebase(android.content.res.Resources$Theme) -> rebase
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api23Impl -> androidx.core.content.res.ResourcesCompat$ThemeCompat$Api23Impl:
    778:778:void <clinit>() -> <clinit>
    785:804:void rebase(android.content.res.Resources$Theme) -> rebase
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl -> androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl:
    768:769:void rebase(android.content.res.Resources$Theme) -> rebase
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl$$ExternalSyntheticApiModelOutline0 -> androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl$$InternalSyntheticApiModelOutline$1$785ff0439bc1f61a0eed04f6444fe7b17e105bbe5995a67f3771aa8b1bb2e8d8$0.m(android.content.res.Resources$Theme) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.content.res.TypedArrayUtils -> androidx.core.content.res.TypedArrayUtils:
    87:91:boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean) -> getNamedBoolean
    122:126:int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedColor
    168:182:android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int) -> getNamedColorStateList
    190:190:android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue) -> getNamedColorStateListFromInt
    140:154:androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int) -> getNamedComplexColor
    70:74:float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float) -> getNamedFloat
    104:108:int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedInt
    58:58:boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String) -> hasAttribute
    252:255:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
androidx.core.content.res.ViewingConditions -> androidx.core.content.res.ViewingConditions:
    53:56:void <clinit>() -> <clinit>
    112:123:void <init>(float,float,float,float,float,float,float[],float,float,float) -> <init>
    71:71:float getAw() -> getAw
    87:87:float getC() -> getC
    100:100:float getFl() -> getFl
    104:104:float getFlRoot() -> getFlRoot
    75:75:float getN() -> getN
    79:79:float getNbb() -> getNbb
    91:91:float getNc() -> getNc
    83:83:float getNcb() -> getNcb
    96:96:float[] getRgbD() -> getRgbD
    108:108:float getZ() -> getZ
    130:191:androidx.core.content.res.ViewingConditions make(float[],float,float,float,boolean) -> make
androidx.core.graphics.ColorUtils -> androidx.core.graphics.ColorUtils:
    46:46:void <clinit>() -> <clinit>
    457:471:void RGBToXYZ(int,int,int,double[]) -> RGBToXYZ
    557:568:int XYZToColor(double,double,double) -> XYZToColor
    158:161:double calculateLuminance(int) -> calculateLuminance
    434:435:void colorToXYZ(int,double[]) -> colorToXYZ
    144:144:int compositeAlpha(int,int) -> compositeAlpha
    54:65:int compositeColors(int,int) -> compositeColors
    148:149:int compositeComponent(int,int,int,int,int) -> compositeComponent
    605:605:int constrain(int,int,int) -> constrain
    697:702:double[] getTempDouble3Array() -> getTempDouble3Array
    378:381:int setAlphaComponent(int,int) -> setAlphaComponent
androidx.core.graphics.Insets -> androidx.core.graphics.Insets:
    37:37:void <clinit>() -> <clinit>
    44:49:void <init>(int,int,int,int) -> <init>
    144:154:boolean equals(java.lang.Object) -> equals
    159:163:int hashCode() -> hashCode
    116:117:androidx.core.graphics.Insets max(androidx.core.graphics.Insets,androidx.core.graphics.Insets) -> max
    64:67:androidx.core.graphics.Insets of(int,int,int,int) -> of
    78:78:androidx.core.graphics.Insets of(android.graphics.Rect) -> of
    192:192:androidx.core.graphics.Insets toCompatInsets(android.graphics.Insets) -> toCompatInsets
    202:202:android.graphics.Insets toPlatformInsets() -> toPlatformInsets
    169:169:java.lang.String toString() -> toString
androidx.core.graphics.Insets$Api29Impl -> androidx.core.graphics.Insets$Api29Impl:
    213:213:android.graphics.Insets of(int,int,int,int) -> of
androidx.core.graphics.PaintCompat -> androidx.core.graphics.PaintCompat:
    42:42:void <clinit>() -> <clinit>
    53:54:boolean hasGlyph(android.graphics.Paint,java.lang.String) -> hasGlyph
androidx.core.graphics.PaintCompat$Api23Impl -> androidx.core.graphics.PaintCompat$Api23Impl:
    183:183:boolean hasGlyph(android.graphics.Paint,java.lang.String) -> hasGlyph
androidx.core.graphics.PathParser -> androidx.core.graphics.PathParser:
    190:191:void addNode(java.util.ArrayList,char,float[]) -> addNode
    137:151:boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> canMorph
    54:65:float[] copyOfRange(float[],int,int) -> copyOfRange
    91:112:androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String) -> createNodesFromPathData
    73:83:android.graphics.Path createPathFromPathData(java.lang.String) -> createPathFromPathData
    120:127:androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[]) -> deepCopyNodes
    258:300:void extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult) -> extract
    211:244:float[] getFloats(java.lang.String) -> getFloats
    174:186:int nextStart(java.lang.String,int) -> nextStart
    163:169:void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> updateNodes
androidx.core.graphics.PathParser$ExtractFloatResult -> androidx.core.graphics.PathParser$ExtractFloatResult:
    199:200:void <init>() -> <init>
androidx.core.graphics.PathParser$PathDataNode -> androidx.core.graphics.PathParser$PathDataNode:
    352:355:void <init>(char,float[]) -> <init>
    357:360:void <init>(androidx.core.graphics.PathParser$PathDataNode) -> <init>
    398:643:void addCommand(android.graphics.Path,float[],char,char,float[]) -> addCommand
    750:792:void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double) -> arcToBezier
    657:720:void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean) -> drawArc
    369:375:void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path) -> nodesToPath
androidx.core.graphics.TypefaceCompat -> androidx.core.graphics.TypefaceCompat:
    50:69:void <clinit>() -> <clinit>
    285:297:android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int) -> create
    255:255:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    152:191:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> createFromResourcesFamilyXml
    223:229:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int,int) -> createFromResourcesFontFile
    110:120:java.lang.String createResourceUid(android.content.res.Resources,int,java.lang.String,int,int) -> createResourceUid
    83:83:android.graphics.Typeface findFromCache(android.content.res.Resources,int,java.lang.String,int,int) -> findFromCache
    131:134:android.graphics.Typeface getSystemFontFamily(java.lang.String) -> getSystemFontFamily
androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter -> androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter:
    371:373:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback) -> <init>
    384:387:void onTypefaceRequestFailed(int) -> onTypefaceRequestFailed
    377:380:void onTypefaceRetrieved(android.graphics.Typeface) -> onTypefaceRetrieved
androidx.core.graphics.TypefaceCompatApi21Impl -> androidx.core.graphics.TypefaceCompatApi21Impl:
    65:65:void <clinit>() -> <clinit>
    54:54:void <init>() -> <init>
    136:142:boolean addFontWeightStyle(java.lang.Object,java.lang.String,int,boolean) -> addFontWeightStyle
    123:130:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    176:199:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    149:169:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    101:109:java.io.File getFile(android.os.ParcelFileDescriptor) -> getFile
    68:97:void init() -> init
    114:118:java.lang.Object newFamily() -> newFamily
androidx.core.graphics.TypefaceCompatApi24Impl -> androidx.core.graphics.TypefaceCompatApi24Impl:
    69:88:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    112:116:boolean addFontWeightStyle(java.lang.Object,java.nio.ByteBuffer,int,int,boolean) -> addFontWeightStyle
    122:127:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    167:181:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    135:160:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    94:98:boolean isUsable() -> isUsable
    103:105:java.lang.Object newFamily() -> newFamily
androidx.core.graphics.TypefaceCompatApi26Impl -> androidx.core.graphics.TypefaceCompatApi26Impl:
    74:108:void <init>() -> <init>
    194:196:void abortCreation(java.lang.Object) -> abortCreation
    140:144:boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[]) -> addFontFromAssetManager
    155:158:boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int) -> addFontFromBuffer
    169:174:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    203:221:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    229:281:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    291:307:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    183:185:boolean freeze(java.lang.Object) -> freeze
    114:118:boolean isFontFamilyPrivateAPIAvailable() -> isFontFamilyPrivateAPIAvailable
    127:129:java.lang.Object newFamily() -> newFamily
    343:343:java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class) -> obtainAbortCreationMethod
    326:326:java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class) -> obtainAddFontFromAssetManagerMethod
    333:333:java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class) -> obtainAddFontFromBufferMethod
    348:352:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
    316:316:java.lang.Class obtainFontFamily() -> obtainFontFamily
    321:321:java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class) -> obtainFontFamilyCtor
    339:339:java.lang.reflect.Method obtainFreezeMethod(java.lang.Class) -> obtainFreezeMethod
androidx.core.graphics.TypefaceCompatApi28Impl -> androidx.core.graphics.TypefaceCompatApi28Impl:
    38:38:void <init>() -> <init>
    51:56:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    63:67:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
androidx.core.graphics.TypefaceCompatApi29Impl -> androidx.core.graphics.TypefaceCompatApi29Impl:
    44:44:void <init>() -> <init>
    131:158:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    89:121:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    169:179:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    53:69:android.graphics.fonts.Font findBaseFont(android.graphics.fonts.FontFamily,int) -> findBaseFont
    75:75:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int) -> findBestInfo
    48:49:int getMatchScore(android.graphics.fonts.FontStyle,android.graphics.fonts.FontStyle) -> getMatchScore
androidx.core.graphics.TypefaceCompatBaseImpl -> androidx.core.graphics.TypefaceCompatBaseImpl:
    45:52:void <init>() -> <init>
    119:135:android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream) -> createFromInputStream
    223:239:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    62:64:java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor) -> findBestFont
    69:81:java.lang.Object findBestFont(java.lang.Object[],int,boolean,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor) -> findBestFont
    104:104:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int) -> findBestInfo
androidx.core.graphics.TypefaceCompatBaseImpl$1 -> androidx.core.graphics.TypefaceCompatBaseImpl$1:
    104:104:void <init>(androidx.core.graphics.TypefaceCompatBaseImpl) -> <init>
    104:104:int getWeight(java.lang.Object) -> getWeight
    107:107:int getWeight(androidx.core.provider.FontsContractCompat$FontInfo) -> getWeight
    104:104:boolean isItalic(java.lang.Object) -> isItalic
    112:112:boolean isItalic(androidx.core.provider.FontsContractCompat$FontInfo) -> isItalic
androidx.core.graphics.TypefaceCompatUtil -> androidx.core.graphics.TypefaceCompatUtil:
    193:200:void closeQuietly(java.io.Closeable) -> closeQuietly
    136:147:java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int) -> copyToDirectBuffer
    154:170:boolean copyToFile(java.io.File,java.io.InputStream) -> copyToFile
    178:184:boolean copyToFile(java.io.File,android.content.res.Resources,int) -> copyToFile
    71:87:java.io.File getTempFile(android.content.Context) -> getTempFile
    96:101:java.nio.ByteBuffer mmap(java.io.File) -> mmap
    112:124:java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri) -> mmap
    221:236:java.util.Map readFontInfoIntoByteBuffer(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal) -> readFontInfoIntoByteBuffer
androidx.core.graphics.TypefaceCompatUtil$Api19Impl -> androidx.core.graphics.TypefaceCompatUtil$Api19Impl:
    249:249:android.os.ParcelFileDescriptor openFileDescriptor(android.content.ContentResolver,android.net.Uri,java.lang.String,android.os.CancellationSignal) -> openFileDescriptor
androidx.core.graphics.drawable.DrawableCompat -> androidx.core.graphics.drawable.DrawableCompat:
    192:195:void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme) -> applyTheme
    202:203:boolean canApplyTheme(android.graphics.drawable.Drawable) -> canApplyTheme
    229:260:void clearColorFilter(android.graphics.drawable.Drawable) -> clearColorFilter
    180:181:int getAlpha(android.graphics.drawable.Drawable) -> getAlpha
    217:218:android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable) -> getColorFilter
    401:402:int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
    276:281:void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    97:98:boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    64:65:void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    80:83:void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    112:115:void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    125:128:void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    363:364:boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    137:142:void setTint(android.graphics.drawable.Drawable,int) -> setTint
    151:156:void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    165:170:void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    343:346:android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable) -> unwrap
    316:317:android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
androidx.core.graphics.drawable.DrawableCompat$Api19Impl -> androidx.core.graphics.drawable.DrawableCompat$Api19Impl:
    450:450:int getAlpha(android.graphics.drawable.Drawable) -> getAlpha
    456:456:android.graphics.drawable.Drawable getChild(android.graphics.drawable.DrawableContainer$DrawableContainerState,int) -> getChild
    461:461:android.graphics.drawable.Drawable getDrawable(android.graphics.drawable.InsetDrawable) -> getDrawable
    445:445:boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    440:441:void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
androidx.core.graphics.drawable.DrawableCompat$Api21Impl -> androidx.core.graphics.drawable.DrawableCompat$Api21Impl:
    493:494:void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme) -> applyTheme
    498:498:boolean canApplyTheme(android.graphics.drawable.Drawable) -> canApplyTheme
    503:503:android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable) -> getColorFilter
    510:511:void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    473:474:void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    515:516:void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    478:479:void setTint(android.graphics.drawable.Drawable,int) -> setTint
    483:484:void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    488:489:void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
androidx.core.graphics.drawable.DrawableCompat$Api23Impl -> androidx.core.graphics.drawable.DrawableCompat$Api23Impl:
    532:532:int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
    527:527:boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
    213:213:void <clinit>() -> <clinit>
    157:377:void <init>() -> <init>
    1024:1059:android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean) -> createLegacyIconFromAdaptiveIcon
    433:439:int getResId() -> getResId
    406:420:java.lang.String getResPackage() -> getResPackage
    478:484:android.net.Uri getUri() -> getUri
    666:682:java.io.InputStream getUriInputStream(android.content.Context) -> getUriInputStream
    888:927:void onPostParceling() -> onPostParceling
    851:884:void onPreParceling(boolean) -> onPreParceling
    809:846:java.lang.String toString() -> toString
    930:937:java.lang.String typeToString(int) -> typeToString
androidx.core.graphics.drawable.IconCompat$Api23Impl -> androidx.core.graphics.drawable.IconCompat$Api23Impl:
    1231:1244:int getResId(java.lang.Object) -> getResId
    1184:1197:java.lang.String getResPackage(java.lang.Object) -> getResPackage
    1260:1273:android.net.Uri getUri(java.lang.Object) -> getUri
    1342:1342:android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context) -> loadDrawable
    1281:1337:android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context) -> toIcon
androidx.core.graphics.drawable.IconCompat$Api26Impl -> androidx.core.graphics.drawable.IconCompat$Api26Impl:
    1098:1098:android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> createAdaptiveIconDrawable
    1103:1103:android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap) -> createWithAdaptiveBitmap
androidx.core.graphics.drawable.IconCompat$Api26Impl$$ExternalSyntheticApiModelOutline0 -> androidx.core.graphics.drawable.IconCompat$Api26Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.graphics.drawable.Icon androidx.core.graphics.drawable.IconCompat$Api26Impl$$InternalSyntheticApiModelOutline$1$3a1863954de92d345fea86dfae7f369931cf45f524cdaf33c34d0f40a283b310$0.m(android.graphics.Bitmap) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.drawable.IconCompat$Api28Impl -> androidx.core.graphics.drawable.IconCompat$Api28Impl:
    1080:1080:int getResId(java.lang.Object) -> getResId
    1070:1070:java.lang.String getResPackage(java.lang.Object) -> getResPackage
    1075:1075:int getType(java.lang.Object) -> getType
    1085:1085:android.net.Uri getUri(java.lang.Object) -> getUri
androidx.core.graphics.drawable.IconCompat$Api28Impl$$ExternalSyntheticApiModelOutline0 -> androidx.core.graphics.drawable.IconCompat$Api28Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int androidx.core.graphics.drawable.IconCompat$Api28Impl$$InternalSyntheticApiModelOutline$1$0cc1fb17db561c5ba334428991ab275abe874bc3f63f42e6ae00a455df2f29af$0.m(android.graphics.drawable.Icon) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.drawable.IconCompat$Api28Impl$$ExternalSyntheticApiModelOutline1 -> androidx.core.graphics.drawable.IconCompat$Api28Impl$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.net.Uri androidx.core.graphics.drawable.IconCompat$Api28Impl$$InternalSyntheticApiModelOutline$1$1d5cd78ab5bc2ba7c5847bdfe6baf67c823a02789768df43e179f05a9e3c22c3$0.m(android.graphics.drawable.Icon) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.drawable.IconCompat$Api28Impl$$ExternalSyntheticApiModelOutline2 -> androidx.core.graphics.drawable.IconCompat$Api28Impl$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int androidx.core.graphics.drawable.IconCompat$Api28Impl$$InternalSyntheticApiModelOutline$1$40b39641b9d6ef68de58f9b92a6906fe9b99705bdf062dc89a3ea0a21d65018d$0.m(android.graphics.drawable.Icon) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.drawable.IconCompat$Api28Impl$$ExternalSyntheticApiModelOutline3 -> androidx.core.graphics.drawable.IconCompat$Api28Impl$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.String androidx.core.graphics.drawable.IconCompat$Api28Impl$$InternalSyntheticApiModelOutline$1$425daee209e8ac6dbaf4d4161c4994372512a53b633026f0a72c7baf9f5b568e$0.m(android.graphics.drawable.Icon) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.drawable.IconCompat$Api30Impl -> androidx.core.graphics.drawable.IconCompat$Api30Impl:
    1115:1115:android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri) -> createWithAdaptiveBitmapContentUri
androidx.core.graphics.drawable.IconCompat$Api30Impl$$ExternalSyntheticApiModelOutline0 -> androidx.core.graphics.drawable.IconCompat$Api30Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.graphics.drawable.Icon androidx.core.graphics.drawable.IconCompat$Api30Impl$$InternalSyntheticApiModelOutline$1$181d250257b606f3a0952ed61d731be99dd28d4f22e07105279bf0946c8d21f1$0.m(android.net.Uri) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    14:24:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    29:55:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.math.MathUtils -> androidx.core.math.MathUtils:
    208:213:float clamp(float,float,float) -> clamp
    250:255:int clamp(int,int,int) -> clamp
androidx.core.os.BuildCompat -> androidx.core.os.BuildCompat:
    256:298:void <clinit>() -> <clinit>
    58:66:boolean isAtLeastPreReleaseCodename(java.lang.String,java.lang.String) -> isAtLeastPreReleaseCodename
    164:164:boolean isAtLeastR() -> isAtLeastR
    213:215:boolean isAtLeastT() -> isAtLeastT
androidx.core.os.BuildCompat$Extensions30Impl -> androidx.core.os.BuildCompat$Extensions30Impl:
    302:305:void <clinit>() -> <clinit>
androidx.core.os.BundleApi18ImplKt -> androidx.core.os.BundleApi18ImplKt:
# {"id":"sourceFile","fileName":"Bundle.kt"}
    114:114:void <init>() -> <init>
    118:118:void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder) -> putBinder
androidx.core.os.BundleApi21ImplKt -> androidx.core.os.BundleApi21ImplKt:
# {"id":"sourceFile","fileName":"Bundle.kt"}
    121:121:void <init>() -> <init>
    125:125:void putSize(android.os.Bundle,java.lang.String,android.util.Size) -> putSize
    129:129:void putSizeF(android.os.Bundle,java.lang.String,android.util.SizeF) -> putSizeF
androidx.core.os.BundleKt -> androidx.core.os.BundleKt:
# {"id":"sourceFile","fileName":"Bundle.kt"}
    34:107:android.os.Bundle bundleOf(kotlin.Pair[]) -> bundleOf
androidx.core.os.CancellationSignal -> androidx.core.os.CancellationSignal:
    39:40:void <init>() -> <init>
    71:94:void cancel() -> cancel
    48:50:boolean isCanceled() -> isCanceled
    113:125:void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener) -> setOnCancelListener
    155:162:void waitForCancelFinishedLocked() -> waitForCancelFinishedLocked
androidx.core.os.CancellationSignal$Api16Impl -> androidx.core.os.CancellationSignal$Api16Impl:
    182:183:void cancel(java.lang.Object) -> cancel
    187:187:android.os.CancellationSignal createCancellationSignal() -> createCancellationSignal
androidx.core.os.TraceCompat -> androidx.core.os.TraceCompat:
    53:69:void <clinit>() -> <clinit>
    108:111:void beginSection(java.lang.String) -> beginSection
    121:124:void endSection() -> endSection
androidx.core.os.TraceCompat$Api18Impl -> androidx.core.os.TraceCompat$Api18Impl:
    225:226:void beginSection(java.lang.String) -> beginSection
    230:231:void endSection() -> endSection
androidx.core.provider.CallbackWithHandler -> androidx.core.provider.CallbackWithHandler:
    40:43:void <init>(androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler) -> <init>
    67:74:void onTypefaceRequestFailed(int) -> onTypefaceRequestFailed
    80:85:void onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult) -> onTypefaceResult
    54:61:void onTypefaceRetrieved(android.graphics.Typeface) -> onTypefaceRetrieved
androidx.core.provider.CallbackWithHandler$1 -> androidx.core.provider.CallbackWithHandler$1:
    55:55:void <init>(androidx.core.provider.CallbackWithHandler,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.graphics.Typeface) -> <init>
    58:59:void run() -> run
androidx.core.provider.CallbackWithHandler$2 -> androidx.core.provider.CallbackWithHandler$2:
    68:68:void <init>(androidx.core.provider.CallbackWithHandler,androidx.core.provider.FontsContractCompat$FontRequestCallback,int) -> <init>
    71:72:void run() -> run
androidx.core.provider.CalleeHandler -> androidx.core.provider.CalleeHandler:
    36:41:android.os.Handler create() -> create
androidx.core.provider.FontProvider -> androidx.core.provider.FontProvider:
    int $r8$lambda$Wi4h7Y1RxUrqSUowKMegxTqKvJo(byte[],byte[]) -> $r8$lambda$Wi4h7Y1RxUrqSUowKMegxTqKvJo
      # {"id":"com.android.tools.r8.synthesized"}
    197:197:void <clinit>() -> <clinit>
    223:227:java.util.List convertToByteArrayList(android.content.pm.Signature[]) -> convertToByteArrayList
    211:219:boolean equalsByteArrayList(java.util.List,java.util.List) -> equalsByteArrayList
    190:194:java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources) -> getCertificates
    55:63:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal) -> getFontFamilyResult
    77:106:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources) -> getProvider
    198:206:int lambda$static$0(byte[],byte[]) -> lambda$static$0
    120:186:androidx.core.provider.FontsContractCompat$FontInfo[] query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal) -> query
androidx.core.provider.FontProvider$$ExternalSyntheticLambda0 -> androidx.core.provider.FontProvider$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.provider.FontProvider$$InternalSyntheticLambda$1$dea2eb8be429cfd62f5acef186358e480674e03c0f86125880269ad68ae94a4b$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    int androidx.core.provider.FontProvider$$InternalSyntheticLambda$1$dea2eb8be429cfd62f5acef186358e480674e03c0f86125880269ad68ae94a4b$0.compare(java.lang.Object,java.lang.Object) -> compare
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.provider.FontProvider$Api16Impl -> androidx.core.provider.FontProvider$Api16Impl:
    241:241:android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.Object) -> query
androidx.core.provider.FontRequest -> androidx.core.provider.FontRequest:
    57:64:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> <init>
    93:94:java.lang.String createIdentifier(java.lang.String,java.lang.String,java.lang.String) -> createIdentifier
    133:133:java.util.List getCertificates() -> getCertificates
    145:145:int getCertificatesArrayResId() -> getCertificatesArrayResId
    164:164:java.lang.String getId() -> getId
    103:103:java.lang.String getProviderAuthority() -> getProviderAuthority
    112:112:java.lang.String getProviderPackage() -> getProviderPackage
    121:121:java.lang.String getQuery() -> getQuery
    169:188:java.lang.String toString() -> toString
androidx.core.provider.FontRequestWorker -> androidx.core.provider.FontRequestWorker:
    58:72:void <clinit>() -> <clinit>
    227:227:java.lang.String createCacheId(androidx.core.provider.FontRequest,int) -> createCacheId
    269:293:int getFontFamilyResultStatus(androidx.core.provider.FontsContractCompat$FontFamilyResult) -> getFontFamilyResultStatus
    238:262:androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int) -> getFontSync
    164:223:android.graphics.Typeface requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler) -> requestFontAsync
    102:134:android.graphics.Typeface requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int) -> requestFontSync
androidx.core.provider.FontRequestWorker$1 -> androidx.core.provider.FontRequestWorker$1:
    117:117:void <init>(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int) -> <init>
    117:117:java.lang.Object call() -> call
    120:120:androidx.core.provider.FontRequestWorker$TypefaceResult call() -> call
androidx.core.provider.FontRequestWorker$2 -> androidx.core.provider.FontRequestWorker$2:
    171:171:void <init>(androidx.core.provider.CallbackWithHandler) -> <init>
    171:171:void accept(java.lang.Object) -> accept
    174:178:void accept(androidx.core.provider.FontRequestWorker$TypefaceResult) -> accept
androidx.core.provider.FontRequestWorker$3 -> androidx.core.provider.FontRequestWorker$3:
    194:194:void <init>(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int) -> <init>
    194:194:java.lang.Object call() -> call
    198:200:androidx.core.provider.FontRequestWorker$TypefaceResult call() -> call
androidx.core.provider.FontRequestWorker$4 -> androidx.core.provider.FontRequestWorker$4:
    206:206:void <init>(java.lang.String) -> <init>
    206:206:void accept(java.lang.Object) -> accept
    210:220:void accept(androidx.core.provider.FontRequestWorker$TypefaceResult) -> accept
androidx.core.provider.FontRequestWorker$TypefaceResult -> androidx.core.provider.FontRequestWorker$TypefaceResult:
    301:304:void <init>(int) -> <init>
    307:310:void <init>(android.graphics.Typeface) -> <init>
    314:314:boolean isSuccess() -> isSuccess
androidx.core.provider.FontsContractCompat -> androidx.core.provider.FontsContractCompat:
    76:76:android.graphics.Typeface buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[]) -> buildTypeface
    102:102:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest) -> fetchFonts
    163:169:android.graphics.Typeface requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback) -> requestFont
androidx.core.provider.FontsContractCompat$FontFamilyResult -> androidx.core.provider.FontsContractCompat$FontFamilyResult:
    390:393:void <init>(int,androidx.core.provider.FontsContractCompat$FontInfo[]) -> <init>
    407:407:androidx.core.provider.FontsContractCompat$FontFamilyResult create(int,androidx.core.provider.FontsContractCompat$FontInfo[]) -> create
    400:400:androidx.core.provider.FontsContractCompat$FontInfo[] getFonts() -> getFonts
    396:396:int getStatusCode() -> getStatusCode
androidx.core.provider.FontsContractCompat$FontInfo -> androidx.core.provider.FontsContractCompat$FontInfo:
    292:298:void <init>(android.net.Uri,int,int,boolean,int) -> <init>
    308:308:androidx.core.provider.FontsContractCompat$FontInfo create(android.net.Uri,int,int,boolean,int) -> create
    345:345:int getResultCode() -> getResultCode
    322:322:int getTtcIndex() -> getTtcIndex
    315:315:android.net.Uri getUri() -> getUri
    329:329:int getWeight() -> getWeight
    336:336:boolean isItalic() -> isItalic
androidx.core.provider.FontsContractCompat$FontRequestCallback -> androidx.core.provider.FontsContractCompat$FontRequestCallback:
    478:478:void <init>() -> <init>
androidx.core.provider.RequestExecutor -> androidx.core.provider.RequestExecutor:
    82:94:java.util.concurrent.ThreadPoolExecutor createDefaultExecutor(java.lang.String,int,int) -> createDefaultExecutor
    56:58:void execute(java.util.concurrent.Executor,java.util.concurrent.Callable,androidx.core.util.Consumer) -> execute
    65:73:java.lang.Object submit(java.util.concurrent.ExecutorService,java.util.concurrent.Callable,int) -> submit
androidx.core.provider.RequestExecutor$DefaultThreadFactory -> androidx.core.provider.RequestExecutor$DefaultThreadFactory:
    164:167:void <init>(java.lang.String,int) -> <init>
    171:171:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread -> androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread:
    178:180:void <init>(java.lang.Runnable,java.lang.String,int) -> <init>
    184:186:void run() -> run
androidx.core.provider.RequestExecutor$ReplyRunnable -> androidx.core.provider.RequestExecutor$ReplyRunnable:
    135:139:void <init>(android.os.Handler,java.util.concurrent.Callable,androidx.core.util.Consumer) -> <init>
    145:157:void run() -> run
androidx.core.provider.RequestExecutor$ReplyRunnable$1 -> androidx.core.provider.RequestExecutor$ReplyRunnable$1:
    151:151:void <init>(androidx.core.provider.RequestExecutor$ReplyRunnable,androidx.core.util.Consumer,java.lang.Object) -> <init>
    154:155:void run() -> run
androidx.core.text.BidiFormatter -> androidx.core.text.BidiFormatter:
    85:222:void <clinit>() -> <clinit>
    262:266:void <init>(boolean,int,androidx.core.text.TextDirectionHeuristicCompat) -> <init>
    558:558:int getEntryDir(java.lang.CharSequence) -> getEntryDir
    541:541:int getExitDir(java.lang.CharSequence) -> getExitDir
    236:236:androidx.core.text.BidiFormatter getInstance() -> getInstance
    280:280:boolean getStereoReset() -> getStereoReset
    516:516:boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    300:308:java.lang.String markAfter(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> markAfter
    328:336:java.lang.String markBefore(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> markBefore
    391:392:java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    411:429:java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    494:494:java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    506:506:java.lang.CharSequence unicodeWrap(java.lang.CharSequence) -> unicodeWrap
androidx.core.text.BidiFormatter$Builder -> androidx.core.text.BidiFormatter$Builder:
    139:141:void <init>() -> <init>
    205:209:androidx.core.text.BidiFormatter build() -> build
    198:198:androidx.core.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    167:170:void initialize(boolean) -> initialize
androidx.core.text.BidiFormatter$DirectionalityEstimator -> androidx.core.text.BidiFormatter$DirectionalityEstimator:
    584:588:void <clinit>() -> <clinit>
    628:632:void <init>(java.lang.CharSequence,boolean) -> <init>
    846:862:byte dirTypeBackward() -> dirTypeBackward
    816:832:byte dirTypeForward() -> dirTypeForward
    803:803:byte getCachedDirectionality(char) -> getCachedDirectionality
    646:728:int getEntryDir() -> getEntryDir
    744:792:int getExitDir() -> getExitDir
    944:956:byte skipEntityBackward() -> skipEntityBackward
    929:930:byte skipEntityForward() -> skipEntityForward
    901:920:byte skipTagBackward() -> skipTagBackward
    872:888:byte skipTagForward() -> skipTagForward
androidx.core.text.PrecomputedTextCompat -> androidx.core.text.PrecomputedTextCompat:
    73:74:void <clinit>() -> <clinit>
    747:747:char charAt(int) -> charAt
    522:522:androidx.core.text.PrecomputedTextCompat$Params getParams() -> getParams
    511:514:android.text.PrecomputedText getPrecomputedText() -> getPrecomputedText
    722:722:int getSpanEnd(java.lang.Object) -> getSpanEnd
    727:727:int getSpanFlags(java.lang.Object) -> getSpanFlags
    717:717:int getSpanStart(java.lang.Object) -> getSpanStart
    707:710:java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    742:742:int length() -> length
    732:732:int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    689:698:void removeSpan(java.lang.Object) -> removeSpan
    673:682:void setSpan(java.lang.Object,int,int,int) -> setSpan
    752:752:java.lang.CharSequence subSequence(int,int) -> subSequence
    758:758:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params -> androidx.core.text.PrecomputedTextCompat$Params:
    196:210:void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int) -> <init>
    213:219:void <init>(android.text.PrecomputedText$Params) -> <init>
    331:346:boolean equals(java.lang.Object) -> equals
    274:321:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params) -> equalsWithoutTextDirection
    252:252:int getBreakStrategy() -> getBreakStrategy
    264:264:int getHyphenationFrequency() -> getHyphenationFrequency
    240:240:android.text.TextDirectionHeuristic getTextDirection() -> getTextDirection
    227:227:android.text.TextPaint getTextPaint() -> getTextPaint
    351:355:int hashCode() -> hashCode
    378:399:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline0 -> androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.String androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$1$07a33788f0340d46167a52a800a185e7f3ff39fe498d2f890acfcd77d2b8ff76$0.m(android.text.TextPaint) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$Builder -> androidx.core.text.PrecomputedTextCompat$Params$Builder:
    116:129:void <init>(android.text.TextPaint) -> <init>
    191:191:androidx.core.text.PrecomputedTextCompat$Params build() -> build
    145:146:androidx.core.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int) -> setBreakStrategy
    163:164:androidx.core.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int) -> setHyphenationFrequency
    181:182:androidx.core.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic) -> setTextDirection
androidx.core.text.TextDirectionHeuristicsCompat -> androidx.core.text.TextDirectionHeuristicsCompat:
    33:68:void <clinit>() -> <clinit>
    79:86:int isRtlText(int) -> isRtlText
    91:102:int isRtlTextOrFormat(int) -> isRtlTextOrFormat
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong -> androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong:
    235:235:void <clinit>() -> <clinit>
    231:233:void <init>(boolean) -> <init>
    206:228:int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong -> androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong:
    193:193:void <clinit>() -> <clinit>
    190:191:void <init>() -> <init>
    183:187:int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    114:116:void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm) -> <init>
    140:146:boolean doCheck(java.lang.CharSequence,int,int) -> doCheck
    130:136:boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    156:158:void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm,boolean) -> <init>
    162:162:boolean defaultIsRtl() -> defaultIsRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    253:253:void <clinit>() -> <clinit>
    244:245:void <init>() -> <init>
    249:250:boolean defaultIsRtl() -> defaultIsRtl
androidx.core.text.TextUtilsCompat -> androidx.core.text.TextUtilsCompat:
    35:35:void <clinit>() -> <clinit>
    92:93:int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
androidx.core.text.TextUtilsCompat$Api17Impl -> androidx.core.text.TextUtilsCompat$Api17Impl:
    143:143:int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
androidx.core.util.DebugUtils -> androidx.core.util.DebugUtils:
    32:47:void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
androidx.core.util.ObjectsCompat -> androidx.core.util.ObjectsCompat:
    54:55:boolean equals(java.lang.Object,java.lang.Object) -> equals
    96:97:int hash(java.lang.Object[]) -> hash
    159:160:java.lang.Object requireNonNull(java.lang.Object,java.lang.String) -> requireNonNull
androidx.core.util.ObjectsCompat$Api19Impl -> androidx.core.util.ObjectsCompat$Api19Impl:
    171:171:boolean equals(java.lang.Object,java.lang.Object) -> equals
    176:176:int hash(java.lang.Object[]) -> hash
androidx.core.util.Pair -> androidx.core.util.Pair:
    52:56:boolean equals(java.lang.Object) -> equals
    66:66:int hashCode() -> hashCode
    72:72:java.lang.String toString() -> toString
androidx.core.util.Pools$SimplePool -> androidx.core.util.Pools$SimplePool:
    94:99:void <init>(int) -> <init>
    104:111:java.lang.Object acquire() -> acquire
    128:133:boolean isInPool(java.lang.Object) -> isInPool
    116:124:boolean release(java.lang.Object) -> release
androidx.core.util.Pools$SynchronizedPool -> androidx.core.util.Pools$SynchronizedPool:
    143:154:void <init>(int) -> <init>
    158:160:java.lang.Object acquire() -> acquire
    165:167:boolean release(java.lang.Object) -> release
androidx.core.util.Preconditions -> androidx.core.util.Preconditions:
    51:54:void checkArgument(boolean,java.lang.Object) -> checkArgument
    245:255:int checkArgumentInRange(int,int,int,java.lang.String) -> checkArgumentInRange
    208:212:int checkArgumentNonnegative(int,java.lang.String) -> checkArgumentNonnegative
    224:228:int checkArgumentNonnegative(int) -> checkArgumentNonnegative
    190:195:int checkFlagsArgument(int,int) -> checkFlagsArgument
    136:139:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    153:156:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    168:171:void checkState(boolean,java.lang.String) -> checkState
androidx.core.view.AccessibilityDelegateCompat -> androidx.core.view.AccessibilityDelegateCompat:
    135:135:void <clinit>() -> <clinit>
    144:145:void <init>() -> <init>
    151:154:void <init>(android.view.View$AccessibilityDelegate) -> <init>
    223:223:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    329:335:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    411:413:java.util.List getActionList(android.view.View) -> getActionList
    160:160:android.view.View$AccessibilityDelegate getBridge() -> getBridge
    397:406:boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View) -> isSpanStillValid
    265:266:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    285:287:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    244:245:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    310:310:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    359:375:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    380:393:boolean performClickableSpanAction(int,android.view.View) -> performClickableSpanAction
    178:179:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    201:202:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter -> androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter:
    68:70:void <init>(androidx.core.view.AccessibilityDelegateCompat) -> <init>
    75:75:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    123:126:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    80:81:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    86:97:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    101:102:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    107:107:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    131:131:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    112:113:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    117:118:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.AccessibilityDelegateCompat$Api16Impl -> androidx.core.view.AccessibilityDelegateCompat$Api16Impl:
    425:425:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View$AccessibilityDelegate,android.view.View) -> getAccessibilityNodeProvider
    431:431:boolean performAccessibilityAction(android.view.View$AccessibilityDelegate,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.core.view.ActionProvider -> androidx.core.view.ActionProvider:
    135:137:void <init>(android.content.Context) -> <init>
    256:256:boolean hasSubMenu() -> hasSubMenu
    196:196:boolean isVisible() -> isVisible
    170:170:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    243:243:boolean onPerformDefaultAction() -> onPerformDefaultAction
    270:270:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    182:182:boolean overridesItemVisibility() -> overridesItemVisibility
    313:315:void reset() -> reset
    290:291:void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    300:306:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> setVisibilityListener
androidx.core.view.ContentInfoCompat -> androidx.core.view.ContentInfoCompat:
    151:153:void <init>(androidx.core.view.ContentInfoCompat$Compat) -> <init>
    142:145:java.lang.String flagsToString(int) -> flagsToString
    196:196:android.content.ClipData getClip() -> getClip
    213:213:int getFlags() -> getFlags
    205:205:int getSource() -> getSource
    106:114:java.lang.String sourceToString(int) -> sourceToString
    182:182:android.view.ContentInfo toContentInfo() -> toContentInfo
    167:167:androidx.core.view.ContentInfoCompat toContentInfoCompat(android.view.ContentInfo) -> toContentInfoCompat
    188:188:java.lang.String toString() -> toString
androidx.core.view.ContentInfoCompat$Builder -> androidx.core.view.ContentInfoCompat$Builder:
    517:523:void <init>(android.content.ClipData,int) -> <init>
    592:592:androidx.core.view.ContentInfoCompat build() -> build
    583:584:androidx.core.view.ContentInfoCompat$Builder setExtras(android.os.Bundle) -> setExtras
    558:559:androidx.core.view.ContentInfoCompat$Builder setFlags(int) -> setFlags
    571:572:androidx.core.view.ContentInfoCompat$Builder setLinkUri(android.net.Uri) -> setLinkUri
androidx.core.view.ContentInfoCompat$BuilderCompat31Impl -> androidx.core.view.ContentInfoCompat$BuilderCompat31Impl:
    668:670:void <init>(android.content.ClipData,int) -> <init>
    704:704:androidx.core.view.ContentInfoCompat build() -> build
    698:699:void setExtras(android.os.Bundle) -> setExtras
    688:689:void setFlags(int) -> setFlags
    693:694:void setLinkUri(android.net.Uri) -> setLinkUri
androidx.core.view.ContentInfoCompat$BuilderCompatImpl -> androidx.core.view.ContentInfoCompat$BuilderCompatImpl:
    618:621:void <init>(android.content.ClipData,int) -> <init>
    659:659:androidx.core.view.ContentInfoCompat build() -> build
    653:654:void setExtras(android.os.Bundle) -> setExtras
    643:644:void setFlags(int) -> setFlags
    648:649:void setLinkUri(android.net.Uri) -> setLinkUri
androidx.core.view.ContentInfoCompat$Compat31Impl -> androidx.core.view.ContentInfoCompat$Compat31Impl:
    446:448:void <init>(android.view.ContentInfo) -> <init>
    459:459:android.content.ClipData getClip() -> getClip
    471:471:int getFlags() -> getFlags
    465:465:int getSource() -> getSource
    453:453:android.view.ContentInfo getWrapped() -> getWrapped
    489:489:java.lang.String toString() -> toString
androidx.core.view.ContentInfoCompat$CompatImpl -> androidx.core.view.ContentInfoCompat$CompatImpl:
    383:390:void <init>(androidx.core.view.ContentInfoCompat$BuilderCompatImpl) -> <init>
    401:401:android.content.ClipData getClip() -> getClip
    413:413:int getFlags() -> getFlags
    407:407:int getSource() -> getSource
    395:395:android.view.ContentInfo getWrapped() -> getWrapped
    431:436:java.lang.String toString() -> toString
androidx.core.view.DisplayCutoutCompat -> androidx.core.view.DisplayCutoutCompat:
    112:114:void <init>(android.view.DisplayCutout) -> <init>
    191:198:boolean equals(java.lang.Object) -> equals
    127:130:int getSafeInsetBottom() -> getSafeInsetBottom
    136:139:int getSafeInsetLeft() -> getSafeInsetLeft
    145:148:int getSafeInsetRight() -> getSafeInsetRight
    118:121:int getSafeInsetTop() -> getSafeInsetTop
    203:203:int hashCode() -> hashCode
    209:209:java.lang.String toString() -> toString
    213:213:androidx.core.view.DisplayCutoutCompat wrap(android.view.DisplayCutout) -> wrap
androidx.core.view.DisplayCutoutCompat$Api28Impl -> androidx.core.view.DisplayCutoutCompat$Api28Impl:
    229:229:android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List) -> createDisplayCutout
    254:254:java.util.List getBoundingRects(android.view.DisplayCutout) -> getBoundingRects
    239:239:int getSafeInsetBottom(android.view.DisplayCutout) -> getSafeInsetBottom
    244:244:int getSafeInsetLeft(android.view.DisplayCutout) -> getSafeInsetLeft
    249:249:int getSafeInsetRight(android.view.DisplayCutout) -> getSafeInsetRight
    234:234:int getSafeInsetTop(android.view.DisplayCutout) -> getSafeInsetTop
androidx.core.view.GravityCompat -> androidx.core.view.GravityCompat:
    68:73:void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    150:151:int getAbsoluteGravity(int,int) -> getAbsoluteGravity
androidx.core.view.GravityCompat$Api17Impl -> androidx.core.view.GravityCompat$Api17Impl:
    170:171:void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    176:177:void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    181:182:void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
androidx.core.view.KeyEventDispatcher -> androidx.core.view.KeyEventDispatcher:
    47:50:void <clinit>() -> <clinit>
    98:117:boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent) -> actionBarOnMenuKeyEventPre28
    121:144:boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent) -> activitySuperDispatchKeyEventPre28
    168:181:boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent) -> dialogSuperDispatchKeyEventPre28
    64:64:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchBeforeHierarchy
    82:94:boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent) -> dispatchKeyEvent
    149:164:android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog) -> getDialogKeyListenerPre28
androidx.core.view.LayoutInflaterCompat -> androidx.core.view.LayoutInflaterCompat:
    141:154:void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> setFactory2
androidx.core.view.MarginLayoutParamsCompat -> androidx.core.view.MarginLayoutParamsCompat:
    66:67:int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    47:48:int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    104:109:void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    85:90:void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
androidx.core.view.MarginLayoutParamsCompat$Api17Impl -> androidx.core.view.MarginLayoutParamsCompat$Api17Impl:
    208:208:int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    188:188:int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    183:183:int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    203:203:boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    220:221:void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
    214:215:void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    198:199:void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    193:194:void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
androidx.core.view.MenuHostHelper -> androidx.core.view.MenuHostHelper:
    void $r8$lambda$VnUJXnvHt4N_mEoh2slqiieT0pg(androidx.core.view.MenuHostHelper,androidx.lifecycle.Lifecycle$State,androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> $r8$lambda$VnUJXnvHt4N_mEoh2slqiieT0pg
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$yJLrCbQs1VMDQOb-UI1XiFiSaTs(androidx.core.view.MenuHostHelper,androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> $r8$lambda$yJLrCbQs1VMDQOb-UI1XiFiSaTs
      # {"id":"com.android.tools.r8.synthesized"}
    56:68:void <init>(java.lang.Runnable) -> <init>
    132:134:void addMenuProvider(androidx.core.view.MenuProvider) -> addMenuProvider
    146:158:void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner) -> addMenuProvider
    175:191:void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$State) -> addMenuProvider
    153:156:void lambda$addMenuProvider$0(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> lambda$addMenuProvider$0
    181:189:void lambda$addMenuProvider$1(androidx.lifecycle.Lifecycle$State,androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> lambda$addMenuProvider$1
    92:95:void onCreateMenu(android.view.Menu,android.view.MenuInflater) -> onCreateMenu
    121:124:void onMenuClosed(android.view.Menu) -> onMenuClosed
    106:111:boolean onMenuItemSelected(android.view.MenuItem) -> onMenuItemSelected
    79:82:void onPrepareMenu(android.view.Menu) -> onPrepareMenu
    199:205:void removeMenuProvider(androidx.core.view.MenuProvider) -> removeMenuProvider
androidx.core.view.MenuHostHelper$$ExternalSyntheticLambda0 -> androidx.core.view.MenuHostHelper$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.view.MenuHostHelper androidx.core.view.MenuHostHelper$$InternalSyntheticLambda$2$6a92f7f5d37ff5956e7ee4bbcd590239f6514935218ddf0fada9719f887c4804$0.f$0 -> f$0
    androidx.core.view.MenuProvider androidx.core.view.MenuHostHelper$$InternalSyntheticLambda$2$6a92f7f5d37ff5956e7ee4bbcd590239f6514935218ddf0fada9719f887c4804$0.f$1 -> f$1
    void androidx.core.view.MenuHostHelper$$InternalSyntheticLambda$2$6a92f7f5d37ff5956e7ee4bbcd590239f6514935218ddf0fada9719f887c4804$0.<init>(androidx.core.view.MenuHostHelper,androidx.core.view.MenuProvider) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.MenuHostHelper$$InternalSyntheticLambda$2$6a92f7f5d37ff5956e7ee4bbcd590239f6514935218ddf0fada9719f887c4804$0.onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.MenuHostHelper$$ExternalSyntheticLambda1 -> androidx.core.view.MenuHostHelper$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.lifecycle.Lifecycle$State androidx.core.view.MenuHostHelper$$InternalSyntheticLambda$2$d2c8f256a0c209ab12b9a1dce38b11febc3c4a164c132fa1b1a214513d41b81a$0.f$1 -> f$1
    androidx.core.view.MenuHostHelper androidx.core.view.MenuHostHelper$$InternalSyntheticLambda$2$d2c8f256a0c209ab12b9a1dce38b11febc3c4a164c132fa1b1a214513d41b81a$0.f$0 -> f$0
    androidx.core.view.MenuProvider androidx.core.view.MenuHostHelper$$InternalSyntheticLambda$2$d2c8f256a0c209ab12b9a1dce38b11febc3c4a164c132fa1b1a214513d41b81a$0.f$2 -> f$2
    void androidx.core.view.MenuHostHelper$$InternalSyntheticLambda$2$d2c8f256a0c209ab12b9a1dce38b11febc3c4a164c132fa1b1a214513d41b81a$0.<init>(androidx.core.view.MenuHostHelper,androidx.lifecycle.Lifecycle$State,androidx.core.view.MenuProvider) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.MenuHostHelper$$InternalSyntheticLambda$2$d2c8f256a0c209ab12b9a1dce38b11febc3c4a164c132fa1b1a214513d41b81a$0.onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.MenuHostHelper$LifecycleContainer -> androidx.core.view.MenuHostHelper$LifecycleContainer:
    211:215:void <init>(androidx.lifecycle.Lifecycle,androidx.lifecycle.LifecycleEventObserver) -> <init>
    218:220:void clearObservers() -> clearObservers
androidx.core.view.MenuItemCompat -> androidx.core.view.MenuItemCompat:
    214:219:android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider) -> setActionProvider
    487:493:void setAlphabeticShortcut(android.view.MenuItem,char,int) -> setAlphabeticShortcut
    331:336:void setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> setContentDescription
    531:537:void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> setIconTintList
    567:573:void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> setIconTintMode
    437:443:void setNumericShortcut(android.view.MenuItem,char,int) -> setNumericShortcut
    363:368:void setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> setTooltipText
androidx.core.view.MenuItemCompat$Api26Impl -> androidx.core.view.MenuItemCompat$Api26Impl:
    647:647:int getAlphabeticModifiers(android.view.MenuItem) -> getAlphabeticModifiers
    609:609:java.lang.CharSequence getContentDescription(android.view.MenuItem) -> getContentDescription
    657:657:android.content.res.ColorStateList getIconTintList(android.view.MenuItem) -> getIconTintList
    667:667:android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem) -> getIconTintMode
    636:636:int getNumericModifiers(android.view.MenuItem) -> getNumericModifiers
    619:619:java.lang.CharSequence getTooltipText(android.view.MenuItem) -> getTooltipText
    642:642:android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int) -> setAlphabeticShortcut
    604:604:android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> setContentDescription
    652:652:android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> setIconTintList
    662:662:android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> setIconTintMode
    631:631:android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int) -> setNumericShortcut
    625:625:android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int) -> setShortcut
    614:614:android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> setTooltipText
androidx.core.view.MenuItemCompat$Api26Impl$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.MenuItemCompat$Api26Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.MenuItem androidx.core.view.MenuItemCompat$Api26Impl$$InternalSyntheticApiModelOutline$1$17c3b295bfab416496571a6acfe3af57d36c9e791c1092b8756f3a127b554ae4$0.m(android.view.MenuItem,char,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.MenuItemCompat$Api26Impl$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.MenuItemCompat$Api26Impl$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.MenuItem androidx.core.view.MenuItemCompat$Api26Impl$$InternalSyntheticApiModelOutline$1$1ad1925414ff1e757538eb3462d87f71544c1ef0c1ff603bd8eaf19d90825415$0.m(android.view.MenuItem,java.lang.CharSequence) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.MenuItemCompat$Api26Impl$$ExternalSyntheticApiModelOutline10 -> androidx.core.view.MenuItemCompat$Api26Impl$$ExternalSyntheticApiModelOutline10:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.MenuItem androidx.core.view.MenuItemCompat$Api26Impl$$InternalSyntheticApiModelOutline$1$c7f5a0a93b3169673f7e703e955eb3316d02a3b687a6583f4facd0c53aa52110$0.m(android.view.MenuItem,android.content.res.ColorStateList) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.MenuItemCompat$Api26Impl$$ExternalSyntheticApiModelOutline11 -> androidx.core.view.MenuItemCompat$Api26Impl$$ExternalSyntheticApiModelOutline11:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.MenuItem androidx.core.view.MenuItemCompat$Api26Impl$$InternalSyntheticApiModelOutline$1$ec15ecd635a1337055a5df8d477fc85db2d734801bea4517786cbfe43edbd7ed$0.m(android.view.MenuItem,char,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.MenuItemCompat$Api26Impl$$ExternalSyntheticApiModelOutline12 -> androidx.core.view.MenuItemCompat$Api26Impl$$ExternalSyntheticApiModelOutline12:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.res.ColorStateList androidx.core.view.MenuItemCompat$Api26Impl$$InternalSyntheticApiModelOutline$1$fd0384af7388f445d9a062449bf12f8f61ab64d886c0d40df905d95af73e4049$0.m(android.view.MenuItem) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.MenuItemCompat$Api26Impl$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.MenuItemCompat$Api26Impl$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence androidx.core.view.MenuItemCompat$Api26Impl$$InternalSyntheticApiModelOutline$1$2a5fd8694a9bf5c9850f75f200297b60a48bfdf0dbf9eb21d4e82f1b679f4f89$0.m(android.view.MenuItem) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.MenuItemCompat$Api26Impl$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.MenuItemCompat$Api26Impl$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.MenuItem androidx.core.view.MenuItemCompat$Api26Impl$$InternalSyntheticApiModelOutline$1$2f32a593dfa3d4f44b520721e8245c1a451905f4640b129d6bd993599dbbe7b8$0.m(android.view.MenuItem,char,char,int,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.MenuItemCompat$Api26Impl$$ExternalSyntheticApiModelOutline4 -> androidx.core.view.MenuItemCompat$Api26Impl$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.graphics.PorterDuff$Mode androidx.core.view.MenuItemCompat$Api26Impl$$InternalSyntheticApiModelOutline$1$381da554ac1158724821c23f47b4fa3a5f6050db3f5a693c00aab7a33c96bf8d$0.m(android.view.MenuItem) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.MenuItemCompat$Api26Impl$$ExternalSyntheticApiModelOutline5 -> androidx.core.view.MenuItemCompat$Api26Impl$$ExternalSyntheticApiModelOutline5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int androidx.core.view.MenuItemCompat$Api26Impl$$InternalSyntheticApiModelOutline$1$5bcd1a394a9ae3dc6ea8b1f773ad073745796df4d1ddce640842f689d4dc26b9$0.m(android.view.MenuItem) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.MenuItemCompat$Api26Impl$$ExternalSyntheticApiModelOutline6 -> androidx.core.view.MenuItemCompat$Api26Impl$$ExternalSyntheticApiModelOutline6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.MenuItem androidx.core.view.MenuItemCompat$Api26Impl$$InternalSyntheticApiModelOutline$1$5dafa4736cb031702c9f1526473e90b7972488161c5ac3b5d3aa4dce34dfb8ef$0.m(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.MenuItemCompat$Api26Impl$$ExternalSyntheticApiModelOutline7 -> androidx.core.view.MenuItemCompat$Api26Impl$$ExternalSyntheticApiModelOutline7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence androidx.core.view.MenuItemCompat$Api26Impl$$InternalSyntheticApiModelOutline$1$94edf61647835ee947275c9fd7b89842e2be04130601c4a6cbe72afe71cc8e51$0.m(android.view.MenuItem) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.MenuItemCompat$Api26Impl$$ExternalSyntheticApiModelOutline8 -> androidx.core.view.MenuItemCompat$Api26Impl$$ExternalSyntheticApiModelOutline8:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.MenuItem androidx.core.view.MenuItemCompat$Api26Impl$$InternalSyntheticApiModelOutline$1$9c922fcee9b513c01013763648e40264c08ab9f2d0fc4af2c67b78eb2c7aec67$0.m(android.view.MenuItem,java.lang.CharSequence) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.MenuItemCompat$Api26Impl$$ExternalSyntheticApiModelOutline9 -> androidx.core.view.MenuItemCompat$Api26Impl$$ExternalSyntheticApiModelOutline9:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int androidx.core.view.MenuItemCompat$Api26Impl$$InternalSyntheticApiModelOutline$1$c0a180adb1b845e9993f115cacaf690840c5a4ee06377cdeb1c7b26b3eefe745$0.m(android.view.MenuItem) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.MenuProvider -> androidx.core.view.MenuProvider:
    63:63:void onMenuClosed(android.view.Menu) -> onMenuClosed
    38:38:void onPrepareMenu(android.view.Menu) -> onPrepareMenu
androidx.core.view.MotionEventCompat -> androidx.core.view.MotionEventCompat:
    555:555:boolean isFromSource(android.view.MotionEvent,int) -> isFromSource
androidx.core.view.NestedScrollingChildHelper -> androidx.core.view.NestedScrollingChildHelper:
    56:58:void <init>(android.view.View) -> <init>
    348:355:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    368:375:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    288:288:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    302:335:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    204:204:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    231:233:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    238:274:boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[]) -> dispatchNestedScrollInternal
    404:410:android.view.ViewParent getNestedScrollingParentForType(int) -> getNestedScrollingParentForType
    425:428:int[] getTempNestedScrollConsumed() -> getTempNestedScrollConsumed
    100:100:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    114:114:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    86:86:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    70:74:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    414:422:void setNestedScrollingParentForType(int,android.view.ViewParent) -> setNestedScrollingParentForType
    129:129:boolean startNestedScroll(int) -> startNestedScroll
    145:164:boolean startNestedScroll(int,int) -> startNestedScroll
    175:176:void stopNestedScroll() -> stopNestedScroll
    186:191:void stopNestedScroll(int) -> stopNestedScroll
androidx.core.view.NestedScrollingParentHelper -> androidx.core.view.NestedScrollingParentHelper:
    50:51:void <init>(android.view.ViewGroup) -> <init>
    92:92:int getNestedScrollAxes() -> getNestedScrollAxes
    63:64:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    76:81:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    114:119:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
androidx.core.view.OneShotPreDrawListener -> androidx.core.view.OneShotPreDrawListener:
    43:47:void <init>(android.view.View,java.lang.Runnable) -> <init>
    59:65:androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable) -> add
    70:72:boolean onPreDraw() -> onPreDraw
    90:91:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    95:96:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    80:86:void removeListener() -> removeListener
androidx.core.view.ViewCompat -> androidx.core.view.ViewCompat:
    androidx.core.view.ContentInfoCompat $r8$lambda$wxf3s7r4ODqhaNnVVlzx9IRcwjg(androidx.core.view.ContentInfoCompat) -> $r8$lambda$wxf3s7r4ODqhaNnVVlzx9IRcwjg
      # {"id":"com.android.tools.r8.synthesized"}
    477:4541:void <clinit>() -> <clinit>
    4386:4386:androidx.core.view.ViewCompat$AccessibilityViewProperty accessibilityHeadingProperty() -> accessibilityHeadingProperty
    1234:1240:int addAccessibilityAction(android.view.View,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> addAccessibilityAction
    1328:1335:void addAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAccessibilityAction
    2082:2090:androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    2663:2664:androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect) -> computeSystemWindowInsets
    2584:2594:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    4184:4187:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeCallback
    4176:4179:boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeHierarchy
    939:944:void ensureAccessibilityDelegateCompat(android.view.View) -> ensureAccessibilityDelegateCompat
    4084:4085:int generateViewId() -> generateViewId
    928:935:androidx.core.view.AccessibilityDelegateCompat getAccessibilityDelegate(android.view.View) -> getAccessibilityDelegate
    948:951:android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View) -> getAccessibilityDelegateInternal
    959:980:android.view.View$AccessibilityDelegate getAccessibilityDelegateThroughReflection(android.view.View) -> getAccessibilityDelegateThroughReflection
    1799:1800:int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    4302:4302:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View) -> getAccessibilityPaneTitle
    1364:1370:java.util.List getActionList(android.view.View) -> getActionList
    1278:1298:int getAvailableActionIdFromResources(android.view.View,java.lang.CharSequence) -> getAvailableActionIdFromResources
    3011:3012:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    3058:3059:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    3739:3740:android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    3861:3862:android.view.Display getDisplay(android.view.View) -> getDisplay
    2366:2367:float getElevation(android.view.View) -> getElevation
    2851:2854:androidx.core.view.OnReceiveContentViewBehavior getFallback(android.view.View) -> getFallback
    2497:2498:boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    1107:1108:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    788:791:int getImportantForAutofill(android.view.View) -> getImportantForAutofill
    1620:1621:int getLayoutDirection(android.view.View) -> getLayoutDirection
    2048:2049:int getMinimumHeight(android.view.View) -> getMinimumHeight
    2012:2013:int getMinimumWidth(android.view.View) -> getMinimumWidth
    2808:2811:java.lang.String[] getOnReceiveContentMimeTypes(android.view.View) -> getOnReceiveContentMimeTypes
    1866:1867:int getPaddingEnd(android.view.View) -> getPaddingEnd
    1850:1851:int getPaddingStart(android.view.View) -> getPaddingStart
    2641:2642:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
    1407:1407:java.lang.CharSequence getStateDescription(android.view.View) -> getStateDescription
    2423:2424:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    2440:2441:int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    3586:3587:float getZ(android.view.View) -> getZ
    914:914:boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    3761:3762:boolean hasOnClickListeners(android.view.View) -> hasOnClickListeners
    2970:2971:boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    993:994:boolean hasTransientState(android.view.View) -> hasTransientState
    4365:4366:boolean isAccessibilityHeading(android.view.View) -> isAccessibilityHeading
    3749:3750:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    3555:3556:boolean isLaidOut(android.view.View) -> isLaidOut
    3137:3138:boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    2983:2984:boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    4227:4228:boolean isScreenReaderFocusable(android.view.View) -> isScreenReaderFocusable
    2858:2858:androidx.core.view.ContentInfoCompat lambda$static$0(androidx.core.view.ContentInfoCompat) -> lambda$static$0
    4481:4520:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int) -> notifyViewAccessibilityStateChangedIfNeeded
    3664:3692:void offsetLeftAndRight(android.view.View,int) -> offsetLeftAndRight
    3616:3644:void offsetTopAndBottom(android.view.View,int) -> offsetTopAndBottom
    2556:2566:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
    700:701:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    4306:4306:androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty() -> paneTitleProperty
    1208:1209:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    2834:2847:androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat) -> performReceiveContent
    1022:1027:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    1062:1067:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    1085:1090:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    1345:1350:void removeAccessibilityAction(android.view.View,int) -> removeAccessibilityAction
    1353:1360:void removeActionWithId(int,android.view.View) -> removeActionWithId
    1319:1324:void replaceAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> replaceAccessibilityAction
    2451:2456:void requestApplyInsets(android.view.View) -> requestApplyInsets
    529:533:void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int) -> saveAttributeDataForStyleable
    4232:4232:androidx.core.view.ViewCompat$AccessibilityViewProperty screenReaderFocusableProperty() -> screenReaderFocusableProperty
    730:735:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    4382:4383:void setAccessibilityHeading(android.view.View,boolean) -> setAccessibilityHeading
    1835:1838:void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    4275:4283:void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence) -> setAccessibilityPaneTitle
    2996:3001:void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    3028:3047:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    3076:3095:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    3724:3727:void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
    2355:2358:void setElevation(android.view.View,float) -> setElevation
    1007:1010:void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    1135:1147:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    832:835:void setImportantForAutofill(android.view.View,int) -> setImportantForAutofill
    1561:1564:void setLabelFor(android.view.View,int) -> setLabelFor
    2536:2539:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    1887:1892:void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    4208:4209:void setScreenReaderFocusable(android.view.View,boolean) -> setScreenReaderFocusable
    3813:3816:void setScrollIndicators(android.view.View,int,int) -> setScrollIndicators
    2401:2409:void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    4523:4539:void setViewImportanceForAccessibilityIfNeeded(android.view.View) -> setViewImportanceForAccessibilityIfNeeded
    4329:4329:androidx.core.view.ViewCompat$AccessibilityViewProperty stateDescriptionProperty() -> stateDescriptionProperty
    3178:3183:void stopNestedScroll(android.view.View) -> stopNestedScroll
androidx.core.view.ViewCompat$$ExternalSyntheticLambda0 -> androidx.core.view.ViewCompat$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.ViewCompat$$InternalSyntheticLambda$1$32a2c537725442ee4ae90f16773237f2371bb9b4d0e5fb29df8b99d9c001b7e2$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    androidx.core.view.ContentInfoCompat androidx.core.view.ViewCompat$$InternalSyntheticLambda$1$32a2c537725442ee4ae90f16773237f2371bb9b4d0e5fb29df8b99d9c001b7e2$0.onReceiveContent(androidx.core.view.ContentInfoCompat) -> onReceiveContent
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$1 -> androidx.core.view.ViewCompat$1:
    4233:4233:void <init>(int,java.lang.Class,int) -> <init>
    4233:4233:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4238:4238:java.lang.Boolean frameworkGet(android.view.View) -> frameworkGet
    4233:4233:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4244:4245:void frameworkSet(android.view.View,java.lang.Boolean) -> frameworkSet
    4233:4233:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4249:4249:boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean) -> shouldUpdate
androidx.core.view.ViewCompat$2 -> androidx.core.view.ViewCompat$2:
    4307:4307:void <init>(int,java.lang.Class,int,int) -> <init>
    4307:4307:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4312:4312:java.lang.CharSequence frameworkGet(android.view.View) -> frameworkGet
    4307:4307:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4318:4319:void frameworkSet(android.view.View,java.lang.CharSequence) -> frameworkSet
    4307:4307:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4323:4323:boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence) -> shouldUpdate
androidx.core.view.ViewCompat$3 -> androidx.core.view.ViewCompat$3:
    4330:4330:void <init>(int,java.lang.Class,int,int) -> <init>
    4330:4330:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4335:4335:java.lang.CharSequence frameworkGet(android.view.View) -> frameworkGet
    4330:4330:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4341:4342:void frameworkSet(android.view.View,java.lang.CharSequence) -> frameworkSet
    4330:4330:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4346:4346:boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence) -> shouldUpdate
androidx.core.view.ViewCompat$4 -> androidx.core.view.ViewCompat$4:
    4387:4387:void <init>(int,java.lang.Class,int) -> <init>
    4387:4387:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4392:4392:java.lang.Boolean frameworkGet(android.view.View) -> frameworkGet
    4387:4387:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4398:4399:void frameworkSet(android.view.View,java.lang.Boolean) -> frameworkSet
    4387:4387:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4403:4403:boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean) -> shouldUpdate
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager -> androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager:
    4544:4546:void <init>() -> <init>
    4572:4577:void addAccessibilityPane(android.view.View) -> addAccessibilityPane
    4588:4596:void checkPaneVisibility(android.view.View,boolean) -> checkPaneVisibility
    4551:4556:void onGlobalLayout() -> onGlobalLayout
    4562:4563:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    4568:4568:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    4600:4601:void registerForLayoutCallback(android.view.View) -> registerForLayoutCallback
    4581:4584:void removeAccessibilityPane(android.view.View) -> removeAccessibilityPane
    4605:4607:void unregisterForLayoutCallback(android.view.View) -> unregisterForLayoutCallback
androidx.core.view.ViewCompat$AccessibilityViewProperty -> androidx.core.view.ViewCompat$AccessibilityViewProperty:
    4416:4418:void <init>(int,java.lang.Class,int) -> <init>
    4421:4427:void <init>(int,java.lang.Class,int,int) -> <init>
    4473:4475:boolean booleanNullToFalseEquals(java.lang.Boolean,java.lang.Boolean) -> booleanNullToFalseEquals
    4460:4460:boolean extrasAvailable() -> extrasAvailable
    4456:4456:boolean frameworkAvailable() -> frameworkAvailable
    4444:4452:java.lang.Object get(android.view.View) -> get
    4430:4440:void set(android.view.View,java.lang.Object) -> set
androidx.core.view.ViewCompat$Api15Impl -> androidx.core.view.ViewCompat$Api15Impl:
    5257:5257:boolean hasOnClickListeners(android.view.View) -> hasOnClickListeners
androidx.core.view.ViewCompat$Api16Impl -> androidx.core.view.ViewCompat$Api16Impl:
    5411:5411:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    5441:5441:boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    5401:5401:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    5426:5426:int getMinimumHeight(android.view.View) -> getMinimumHeight
    5421:5421:int getMinimumWidth(android.view.View) -> getMinimumWidth
    5416:5416:android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    5431:5431:int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    5451:5451:boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    5371:5371:boolean hasTransientState(android.view.View) -> hasTransientState
    5446:5446:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    5381:5382:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    5386:5387:void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    5391:5392:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    5396:5397:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    5462:5463:void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> removeOnGlobalLayoutListener
    5436:5437:void requestFitSystemWindows(android.view.View) -> requestFitSystemWindows
    5456:5457:void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    5376:5377:void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    5406:5407:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
androidx.core.view.ViewCompat$Api17Impl -> androidx.core.view.ViewCompat$Api17Impl:
    5314:5314:int generateViewId() -> generateViewId
    5309:5309:android.view.Display getDisplay(android.view.View) -> getDisplay
    5319:5319:int getLabelFor(android.view.View) -> getLabelFor
    5334:5334:int getLayoutDirection(android.view.View) -> getLayoutDirection
    5349:5349:int getPaddingEnd(android.view.View) -> getPaddingEnd
    5344:5344:int getPaddingStart(android.view.View) -> getPaddingStart
    5359:5359:boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    5324:5325:void setLabelFor(android.view.View,int) -> setLabelFor
    5329:5330:void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    5339:5340:void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    5354:5355:void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
androidx.core.view.ViewCompat$Api18Impl -> androidx.core.view.ViewCompat$Api18Impl:
    5202:5202:android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    5192:5192:boolean isInLayout(android.view.View) -> isInLayout
    5197:5198:void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
androidx.core.view.ViewCompat$Api19Impl -> androidx.core.view.ViewCompat$Api19Impl:
    5229:5229:int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    5219:5219:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    5214:5214:boolean isLaidOut(android.view.View) -> isLaidOut
    5224:5224:boolean isLayoutDirectionResolved(android.view.View) -> isLayoutDirectionResolved
    5245:5246:void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
    5234:5235:void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    5239:5240:void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
androidx.core.view.ViewCompat$Api20Impl -> androidx.core.view.ViewCompat$Api20Impl:
    5564:5564:android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets) -> dispatchApplyWindowInsets
    5559:5559:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
    5554:5555:void requestApplyInsets(android.view.View) -> requestApplyInsets
androidx.core.view.ViewCompat$Api21Impl -> androidx.core.view.ViewCompat$Api21Impl:
    4886:4892:void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View) -> callCompatInsetAnimationCallback
    4811:4817:androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect) -> computeSystemWindowInsets
    4897:4897:boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    4903:4903:boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    5006:5006:boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    4999:4999:boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    4958:4958:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    4963:4963:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    4943:4943:float getElevation(android.view.View) -> getElevation
    4805:4805:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
    4948:4948:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    4928:4928:float getTranslationZ(android.view.View) -> getTranslationZ
    4908:4908:float getZ(android.view.View) -> getZ
    4993:4993:boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    4938:4938:boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    4978:4978:boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    4953:4954:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    4968:4969:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    4918:4919:void setElevation(android.view.View,float) -> setElevation
    4973:4974:void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    4826:4875:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    4933:4934:void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    4923:4924:void setTranslationZ(android.view.View,float) -> setTranslationZ
    4913:4914:void setZ(android.view.View,float) -> setZ
    4983:4983:boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    4988:4989:void stopNestedScroll(android.view.View) -> stopNestedScroll
androidx.core.view.ViewCompat$Api21Impl$1 -> androidx.core.view.ViewCompat$Api21Impl$1:
    4840:4841:void <init>(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> <init>
    4846:4872:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.core.view.ViewCompat$Api23Impl -> androidx.core.view.ViewCompat$Api23Impl:
    5018:5026:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
    5041:5041:int getScrollIndicators(android.view.View) -> getScrollIndicators
    5031:5032:void setScrollIndicators(android.view.View,int) -> setScrollIndicators
    5036:5037:void setScrollIndicators(android.view.View,int,int) -> setScrollIndicators
androidx.core.view.ViewCompat$Api26Impl -> androidx.core.view.ViewCompat$Api26Impl:
    5155:5156:void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int) -> addKeyboardNavigationClusters
    5170:5170:int getImportantForAutofill(android.view.View) -> getImportantForAutofill
    5118:5118:int getNextClusterForwardId(android.view.View) -> getNextClusterForwardId
    5165:5165:boolean hasExplicitFocusable(android.view.View) -> hasExplicitFocusable
    5138:5138:boolean isFocusedByDefault(android.view.View) -> isFocusedByDefault
    5180:5180:boolean isImportantForAutofill(android.view.View) -> isImportantForAutofill
    5128:5128:boolean isKeyboardNavigationCluster(android.view.View) -> isKeyboardNavigationCluster
    5149:5149:android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int) -> keyboardNavigationClusterSearch
    5160:5160:boolean restoreDefaultFocus(android.view.View) -> restoreDefaultFocus
    5108:5109:void setAutofillHints(android.view.View,java.lang.String[]) -> setAutofillHints
    5143:5144:void setFocusedByDefault(android.view.View,boolean) -> setFocusedByDefault
    5175:5176:void setImportantForAutofill(android.view.View,int) -> setImportantForAutofill
    5133:5134:void setKeyboardNavigationCluster(android.view.View,boolean) -> setKeyboardNavigationCluster
    5123:5124:void setNextClusterForwardId(android.view.View,int) -> setNextClusterForwardId
    5113:5114:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
androidx.core.view.ViewCompat$Api26Impl$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.ViewCompat$Api26Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int androidx.core.view.ViewCompat$Api26Impl$$InternalSyntheticApiModelOutline$1$0e93dd16a582ab502b74657df17d226060c656e8d8301075698a1f293893b979$0.m(android.view.View) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api26Impl$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.ViewCompat$Api26Impl$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int androidx.core.view.ViewCompat$Api26Impl$$InternalSyntheticApiModelOutline$1$18895bc4dc1ecf20173fc670cfa71cb0391c4387e00963e24797379cbad292c6$0.m(android.view.View) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api26Impl$$ExternalSyntheticApiModelOutline10 -> androidx.core.view.ViewCompat$Api26Impl$$ExternalSyntheticApiModelOutline10:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.ViewCompat$Api26Impl$$InternalSyntheticApiModelOutline$1$9160985ef95134b8da954a78041d1ca68e502f94b46356cd7a03d26961bc1746$0.m(android.view.View,boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api26Impl$$ExternalSyntheticApiModelOutline11 -> androidx.core.view.ViewCompat$Api26Impl$$ExternalSyntheticApiModelOutline11:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean androidx.core.view.ViewCompat$Api26Impl$$InternalSyntheticApiModelOutline$1$b36dcdff231c9e6c62ae016654d1304087f228c1a3f24b3e87ee8492b7cde458$0.m(android.view.View) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api26Impl$$ExternalSyntheticApiModelOutline12 -> androidx.core.view.ViewCompat$Api26Impl$$ExternalSyntheticApiModelOutline12:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.View androidx.core.view.ViewCompat$Api26Impl$$InternalSyntheticApiModelOutline$1$b62ff5f5f7304d7af10f74b1d946b53811b1a76b89a7adb8a56d2d353f039706$0.m(android.view.View,android.view.View,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api26Impl$$ExternalSyntheticApiModelOutline13 -> androidx.core.view.ViewCompat$Api26Impl$$ExternalSyntheticApiModelOutline13:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean androidx.core.view.ViewCompat$Api26Impl$$InternalSyntheticApiModelOutline$1$f9204df0b7ed64821d702a65130ef74abdb157302f1ae7f0bf60e8aea8e6fdeb$0.m(android.view.View) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api26Impl$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.ViewCompat$Api26Impl$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.ViewCompat$Api26Impl$$InternalSyntheticApiModelOutline$1$1e0b091874f33f54ded8234d0bf7916e3a04eb06b0b52ede476b313995f399dc$0.m(android.view.View,boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api26Impl$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.ViewCompat$Api26Impl$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.ViewCompat$Api26Impl$$InternalSyntheticApiModelOutline$1$377860e60b006da701dc3154cdd41ccf6218e987a04c31ae92c84033673a7c80$0.m(android.view.View,java.lang.String[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api26Impl$$ExternalSyntheticApiModelOutline4 -> androidx.core.view.ViewCompat$Api26Impl$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.ViewCompat$Api26Impl$$InternalSyntheticApiModelOutline$1$388b9fe436fb537411b1fbbac91ddb6260324c91550560935fc3eb4711061770$0.m(android.view.View,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api26Impl$$ExternalSyntheticApiModelOutline5 -> androidx.core.view.ViewCompat$Api26Impl$$ExternalSyntheticApiModelOutline5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.ViewCompat$Api26Impl$$InternalSyntheticApiModelOutline$1$40a606da722a044b0f84c99dcc11903e90822d88270e881ab3279549d9c8757e$0.m(android.view.View,java.util.Collection,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api26Impl$$ExternalSyntheticApiModelOutline6 -> androidx.core.view.ViewCompat$Api26Impl$$ExternalSyntheticApiModelOutline6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean androidx.core.view.ViewCompat$Api26Impl$$InternalSyntheticApiModelOutline$1$4735c1264902e12221f589671ff77cc6e18268950f9edabf50caa24aa047ff68$0.m(android.view.View) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api26Impl$$ExternalSyntheticApiModelOutline7 -> androidx.core.view.ViewCompat$Api26Impl$$ExternalSyntheticApiModelOutline7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.ViewCompat$Api26Impl$$InternalSyntheticApiModelOutline$1$54421fd464bff53510f4117c5c1d6945fd8ee02afd8465e55e80020810a7889a$0.m(android.view.View,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api26Impl$$ExternalSyntheticApiModelOutline8 -> androidx.core.view.ViewCompat$Api26Impl$$ExternalSyntheticApiModelOutline8:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean androidx.core.view.ViewCompat$Api26Impl$$InternalSyntheticApiModelOutline$1$56eef8eeab492a5d380d165636b9ab0f2f8dbd410af8b47453726071077241e7$0.m(android.view.View) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api26Impl$$ExternalSyntheticApiModelOutline9 -> androidx.core.view.ViewCompat$Api26Impl$$ExternalSyntheticApiModelOutline9:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean androidx.core.view.ViewCompat$Api26Impl$$InternalSyntheticApiModelOutline$1$90c2cee63c02dc8de29398dff883286edfb6f37a520571eca3da4747fa19d83e$0.m(android.view.View) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api28Impl -> androidx.core.view.ViewCompat$Api28Impl:
    5514:5526:void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> addOnUnhandledKeyEventListener
    5480:5480:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View) -> getAccessibilityPaneTitle
    5496:5496:boolean isAccessibilityHeading(android.view.View) -> isAccessibilityHeading
    5501:5501:boolean isScreenReaderFocusable(android.view.View) -> isScreenReaderFocusable
    5533:5543:void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> removeOnUnhandledKeyEventListener
    5475:5475:java.lang.Object requireViewById(android.view.View,int) -> requireViewById
    5491:5492:void setAccessibilityHeading(android.view.View,boolean) -> setAccessibilityHeading
    5486:5487:void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence) -> setAccessibilityPaneTitle
    5506:5507:void setScreenReaderFocusable(android.view.View,boolean) -> setScreenReaderFocusable
androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticApiModelOutline$1$033abd8ccb945e8c0b596674aaf92f2c24c117c51a1733adca4afb57c1b4bc4c$0.m(android.view.View) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticApiModelOutline$1$091133f26920f0c1778f6311f3f5d02277b3e389bac102f50b00a42ee1d83bfd$0.m(android.view.View,boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticApiModelOutline$1$2681dfbdcb67c35f98eab0e2bfd7b6e0f40bc9ea41db120cd68736076963a523$1.m(android.view.View,android.view.View$OnUnhandledKeyEventListener) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticApiModelOutline$1$44714577a8b2dd7042c738df56b039956f61ce8c8b561cf81e07974fea4e8341$0.m(android.view.View) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticApiModelOutline4 -> androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticApiModelOutline$1$657ef64fd24e1b66d606f1a5d9a799d02c5f915e44fa84d1397bff9e04ec0086$0.m(android.view.View,boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticApiModelOutline5 -> androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticApiModelOutline5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticApiModelOutline$1$7bcb508404cc0bb7da9c4d04e241d36a3ebb6b3d64267580832b347b1df4f6cf$0.m(android.view.View,java.lang.CharSequence) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticApiModelOutline6 -> androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticApiModelOutline6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticApiModelOutline$1$8aa4b7f1fd7fdf77b8072569f4cd908bb3e92351c83ac8e3795e4d084b195b3b$0.m(android.view.View,android.view.View$OnUnhandledKeyEventListener) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticApiModelOutline7 -> androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticApiModelOutline7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.View androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticApiModelOutline$1$c0fedfceb5ef76be9690f857a7bd102f7436623b22bc234c70551fe4953bb83d$0.m(android.view.View,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticApiModelOutline8 -> androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticApiModelOutline8:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticApiModelOutline$1$dd1daaa807169504acfb084eba89696c091f8a7a69f0ee1079bbfbad4ea9abd5$0.m(android.view.View) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticLambda9 -> androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticLambda9:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticLambda$1$2681dfbdcb67c35f98eab0e2bfd7b6e0f40bc9ea41db120cd68736076963a523$0.f$0 -> f$0
    void androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticLambda$1$2681dfbdcb67c35f98eab0e2bfd7b6e0f40bc9ea41db120cd68736076963a523$0.<init>(androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticLambda$1$2681dfbdcb67c35f98eab0e2bfd7b6e0f40bc9ea41db120cd68736076963a523$0.onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api29Impl -> androidx.core.view.ViewCompat$Api29Impl:
    5061:5061:android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View) -> getAccessibilityDelegate
    5071:5071:java.util.List getSystemGestureExclusionRects(android.view.View) -> getSystemGestureExclusionRects
    5055:5057:void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int) -> saveAttributeDataForStyleable
    5066:5067:void setSystemGestureExclusionRects(android.view.View,java.util.List) -> setSystemGestureExclusionRects
androidx.core.view.ViewCompat$Api29Impl$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.ViewCompat$Api29Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.util.List androidx.core.view.ViewCompat$Api29Impl$$InternalSyntheticApiModelOutline$1$223a233abe3ebf8e83965ea814a29e0a7c798e0f8f76725e1d3ee6030c248060$0.m(android.view.View) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api29Impl$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.ViewCompat$Api29Impl$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.ViewCompat$Api29Impl$$InternalSyntheticApiModelOutline$1$6e37d391839b0b94eb77737ea8d5dd5f943dc8b3e46563640a49801711bb1179$0.m(android.view.View,java.util.List) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api29Impl$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.ViewCompat$Api29Impl$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.View$AccessibilityDelegate androidx.core.view.ViewCompat$Api29Impl$$InternalSyntheticApiModelOutline$1$76702b1bac4d0730d1659c889cca909639e793d787d4ba424751a766f694b14b$0.m(android.view.View) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api29Impl$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.ViewCompat$Api29Impl$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.ViewCompat$Api29Impl$$InternalSyntheticApiModelOutline$1$e20bcf30103d095b875022cc4094d0de3497abf395ceb32919eebda5e95ebd61$0.m(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api30Impl -> androidx.core.view.ViewCompat$Api30Impl:
    5096:5096:java.lang.CharSequence getStateDescription(android.view.View) -> getStateDescription
    5091:5092:void setStateDescription(android.view.View,java.lang.CharSequence) -> setStateDescription
androidx.core.view.ViewCompat$Api30Impl$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.ViewCompat$Api30Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.ViewCompat$Api30Impl$$InternalSyntheticApiModelOutline$1$7694290ee754b5e033a8206ee327f5d5dd2a0a0cbc09f8947914fe4918cbe517$0.m(android.view.View,java.lang.CharSequence) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api30Impl$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.ViewCompat$Api30Impl$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.CharSequence androidx.core.view.ViewCompat$Api30Impl$$InternalSyntheticApiModelOutline$1$a2c767eb36b2d66f3f99451d68967ab31ef1c3e69da426002a5e4cd8d21b266c$0.m(android.view.View) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api31Impl -> androidx.core.view.ViewCompat$Api31Impl:
    2878:2878:java.lang.String[] getReceiveContentMimeTypes(android.view.View) -> getReceiveContentMimeTypes
    2885:2894:androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat) -> performReceiveContent
    2867:2873:void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener) -> setOnReceiveContentListener
androidx.core.view.ViewCompat$Api31Impl$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.ViewCompat$Api31Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.ContentInfo androidx.core.view.ViewCompat$Api31Impl$$InternalSyntheticApiModelOutline$1$03bb676ae3707ff6fb24bc69a97cc9300311f83cfcf50dd8c6230a1f9ac9adcc$0.m(android.view.View,android.view.ContentInfo) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api31Impl$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.ViewCompat$Api31Impl$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.String[] androidx.core.view.ViewCompat$Api31Impl$$InternalSyntheticApiModelOutline$1$5845793f08cac466d3775c20e517e3219a6472d049e4a1f4668f9c80940dc555$0.m(android.view.View) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api31Impl$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.ViewCompat$Api31Impl$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.ViewCompat$Api31Impl$$InternalSyntheticApiModelOutline$1$d9fcf2021ad0e07600b5440b3ebb14df83e327ea3e1a8be0f6d60a8b5111f78d$0.m(android.view.View,java.lang.String[],android.view.OnReceiveContentListener) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$OnReceiveContentListenerAdapter -> androidx.core.view.ViewCompat$OnReceiveContentListenerAdapter:
    2905:2907:void <init>(androidx.core.view.OnReceiveContentListener) -> <init>
    2912:2921:android.view.ContentInfo onReceiveContent(android.view.View,android.view.ContentInfo) -> onReceiveContent
androidx.core.view.ViewCompat$UnhandledKeyEventManager -> androidx.core.view.ViewCompat$UnhandledKeyEventManager:
    4614:4614:void <clinit>() -> <clinit>
    4610:4629:void <init>() -> <init>
    4639:4645:androidx.core.view.ViewCompat$UnhandledKeyEventManager at(android.view.View) -> at
    4649:4663:boolean dispatch(android.view.View,android.view.KeyEvent) -> dispatch
    4668:4685:android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent) -> dispatchInOrder
    4632:4635:android.util.SparseArray getCapturedKeys() -> getCapturedKeys
    4727:4737:boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
    4694:4722:boolean preDispatch(android.view.KeyEvent) -> preDispatch
    4767:4792:void recalcViewsWithUnhandled() -> recalcViewsWithUnhandled
androidx.core.view.ViewConfigurationCompat -> androidx.core.view.ViewConfigurationCompat:
    42:50:void <clinit>() -> <clinit>
    110:123:float getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getLegacyScrollFactor
    84:87:float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledHorizontalScrollFactor
    132:135:int getScaledHoverSlop(android.view.ViewConfiguration) -> getScaledHoverSlop
    101:104:float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledVerticalScrollFactor
    146:152:boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context) -> shouldShowMenuShortcutsWhenKeyboardPresent
androidx.core.view.ViewConfigurationCompat$Api26Impl -> androidx.core.view.ViewConfigurationCompat$Api26Impl:
    166:166:float getScaledHorizontalScrollFactor(android.view.ViewConfiguration) -> getScaledHorizontalScrollFactor
    171:171:float getScaledVerticalScrollFactor(android.view.ViewConfiguration) -> getScaledVerticalScrollFactor
androidx.core.view.ViewConfigurationCompat$Api26Impl$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.ViewConfigurationCompat$Api26Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    float androidx.core.view.ViewConfigurationCompat$Api26Impl$$InternalSyntheticApiModelOutline$1$b21cc8d2e87521a1f9e1b69c49d8fded3d07985012ec2a4072c9b482cbf079da$0.m(android.view.ViewConfiguration) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewConfigurationCompat$Api26Impl$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.ViewConfigurationCompat$Api26Impl$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    float androidx.core.view.ViewConfigurationCompat$Api26Impl$$InternalSyntheticApiModelOutline$1$e650dfb40add365dadae3934c3790f1866b2cd719de047285441dc4032a6e43b$0.m(android.view.ViewConfiguration) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewConfigurationCompat$Api28Impl -> androidx.core.view.ViewConfigurationCompat$Api28Impl:
    183:183:int getScaledHoverSlop(android.view.ViewConfiguration) -> getScaledHoverSlop
    189:189:boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration) -> shouldShowMenuShortcutsWhenKeyboardPresent
androidx.core.view.ViewConfigurationCompat$Api28Impl$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.ViewConfigurationCompat$Api28Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean androidx.core.view.ViewConfigurationCompat$Api28Impl$$InternalSyntheticApiModelOutline$1$0974bde20ce5891b3c2b025234599b54385e67bfc3028d1ec3cfd8a0d13da1ad$0.m(android.view.ViewConfiguration) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewConfigurationCompat$Api28Impl$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.ViewConfigurationCompat$Api28Impl$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int androidx.core.view.ViewConfigurationCompat$Api28Impl$$InternalSyntheticApiModelOutline$1$85da081679ce9581dc25182e3de3e081761e65d6251ebf06b3a1650765c091ed$0.m(android.view.ViewConfiguration) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewGroupCompat -> androidx.core.view.ViewGroupCompat:
    159:160:boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
androidx.core.view.ViewGroupCompat$Api21Impl -> androidx.core.view.ViewGroupCompat$Api21Impl:
    227:227:int getNestedScrollAxes(android.view.ViewGroup) -> getNestedScrollAxes
    222:222:boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    217:218:void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
androidx.core.view.ViewParentCompat -> androidx.core.view.ViewParentCompat:
    427:438:boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    464:475:boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    387:403:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int) -> onNestedPreScroll
    332:361:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    250:268:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    209:227:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    285:301:void onStopNestedScroll(android.view.ViewParent,android.view.View,int) -> onStopNestedScroll
androidx.core.view.ViewParentCompat$Api21Impl -> androidx.core.view.ViewParentCompat$Api21Impl:
    558:558:boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    563:563:boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    552:553:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    547:548:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    536:537:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    531:531:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    541:542:void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
androidx.core.view.ViewPropertyAnimatorCompat -> androidx.core.view.ViewPropertyAnimatorCompat:
    void $r8$lambda$-X-OeeZ3zgiQP_YgN-Cy4Y7jVqc(androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View,android.animation.ValueAnimator) -> $r8$lambda$-X-OeeZ3zgiQP_YgN-Cy4Y7jVqc
      # {"id":"com.android.tools.r8.synthesized"}
    38:47:void <init>(android.view.View) -> <init>
    148:151:androidx.core.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    493:496:void cancel() -> cancel
    252:255:long getDuration() -> getDuration
    830:830:void lambda$setUpdateListener$0(androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View,android.animation.ValueAnimator) -> lambda$setUpdateListener$0
    132:135:androidx.core.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    270:273:androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    778:786:androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    790:810:void setListenerInternal(android.view.View,androidx.core.view.ViewPropertyAnimatorListener) -> setListenerInternal
    305:308:androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    826:836:androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    687:690:void start() -> start
    196:199:androidx.core.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
androidx.core.view.ViewPropertyAnimatorCompat$$ExternalSyntheticLambda0 -> androidx.core.view.ViewPropertyAnimatorCompat$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.view.ViewPropertyAnimatorUpdateListener androidx.core.view.ViewPropertyAnimatorCompat$$InternalSyntheticLambda$1$56b5ddebd4eed0da034de87f77c6e02d47cd4c786473978faa1193e25da055e5$0.f$0 -> f$0
    android.view.View androidx.core.view.ViewPropertyAnimatorCompat$$InternalSyntheticLambda$1$56b5ddebd4eed0da034de87f77c6e02d47cd4c786473978faa1193e25da055e5$0.f$1 -> f$1
    void androidx.core.view.ViewPropertyAnimatorCompat$$InternalSyntheticLambda$1$56b5ddebd4eed0da034de87f77c6e02d47cd4c786473978faa1193e25da055e5$0.<init>(androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.ViewPropertyAnimatorCompat$$InternalSyntheticLambda$1$56b5ddebd4eed0da034de87f77c6e02d47cd4c786473978faa1193e25da055e5$0.onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewPropertyAnimatorCompat$1 -> androidx.core.view.ViewPropertyAnimatorCompat$1:
    791:791:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorListener,android.view.View) -> <init>
    794:795:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    799:800:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    804:805:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.core.view.ViewPropertyAnimatorCompat$Api19Impl -> androidx.core.view.ViewPropertyAnimatorCompat$Api19Impl:
    914:914:android.view.ViewPropertyAnimator setUpdateListener(android.view.ViewPropertyAnimator,android.animation.ValueAnimator$AnimatorUpdateListener) -> setUpdateListener
androidx.core.view.ViewPropertyAnimatorListenerAdapter -> androidx.core.view.ViewPropertyAnimatorListenerAdapter:
    29:29:void <init>() -> <init>
    51:51:void onAnimationCancel(android.view.View) -> onAnimationCancel
    36:36:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.core.view.WindowCompat -> androidx.core.view.WindowCompat:
    135:135:androidx.core.view.WindowInsetsControllerCompat getInsetsController(android.view.Window,android.view.View) -> getInsetsController
    118:123:void setDecorFitsSystemWindows(android.view.Window,boolean) -> setDecorFitsSystemWindows
androidx.core.view.WindowCompat$Api16Impl -> androidx.core.view.WindowCompat$Api16Impl:
    147:156:void setDecorFitsSystemWindows(android.view.Window,boolean) -> setDecorFitsSystemWindows
androidx.core.view.WindowCompat$Api30Impl -> androidx.core.view.WindowCompat$Api30Impl:
    168:169:void setDecorFitsSystemWindows(android.view.Window,boolean) -> setDecorFitsSystemWindows
androidx.core.view.WindowCompat$Api30Impl$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.WindowCompat$Api30Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.WindowCompat$Api30Impl$$InternalSyntheticApiModelOutline$1$e0ec5aa1a816e1b5f7958b08eeadcf09cf1365e671034f3ccb121d8328a11acf$0.m(android.view.Window,boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat -> androidx.core.view.WindowInsetsCompat:
    78:83:void <clinit>() -> <clinit>
    88:102:void <init>(android.view.WindowInsets) -> <init>
    109:131:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    506:506:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    477:477:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    318:318:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    2114:2115:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    718:725:boolean equals(java.lang.Object) -> equals
    490:490:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    668:668:androidx.core.graphics.Insets getInsets(int) -> getInsets
    549:549:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    239:239:int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    191:191:int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    223:223:int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    207:207:int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    730:730:int hashCode() -> hashCode
    651:651:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    1337:1344:androidx.core.graphics.Insets insetInsets(androidx.core.graphics.Insets,int,int,int,int) -> insetInsets
    286:286:boolean isConsumed() -> isConsumed
    339:341:androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    1706:1707:void setOverriddenInsets(androidx.core.graphics.Insets[]) -> setOverriddenInsets
    2110:2111:void setRootViewData(androidx.core.graphics.Insets) -> setRootViewData
    2106:2107:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat) -> setRootWindowInsets
    1804:1805:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    741:741:android.view.WindowInsets toWindowInsets() -> toWindowInsets
    148:148:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets) -> toWindowInsetsCompat
    168:175:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View) -> toWindowInsetsCompat
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder -> androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder:
    2133:2144:void <clinit>() -> <clinit>
    2150:2176:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
androidx.core.view.WindowInsetsCompat$Builder -> androidx.core.view.WindowInsetsCompat$Builder:
    1399:1409:void <init>() -> <init>
    1416:1426:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1613:1613:androidx.core.view.WindowInsetsCompat build() -> build
    1587:1588:androidx.core.view.WindowInsetsCompat$Builder setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1442:1443:androidx.core.view.WindowInsetsCompat$Builder setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl -> androidx.core.view.WindowInsetsCompat$BuilderImpl:
    1623:1624:void <init>() -> <init>
    1626:1628:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1672:1696:void applyInsetTypes() -> applyInsetTypes
    1634:1634:void setMandatorySystemGestureInsets(androidx.core.graphics.Insets) -> setMandatorySystemGestureInsets
    1632:1632:void setSystemGestureInsets(androidx.core.graphics.Insets) -> setSystemGestureInsets
    1636:1636:void setTappableElementInsets(androidx.core.graphics.Insets) -> setTappableElementInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl20 -> androidx.core.view.WindowInsetsCompat$BuilderImpl20:
    1712:1715:void <clinit>() -> <clinit>
    1720:1722:void <init>() -> <init>
    1725:1727:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1745:1750:androidx.core.view.WindowInsetsCompat build() -> build
    1761:1799:android.view.WindowInsets createWindowInsetsInstance() -> createWindowInsetsInstance
    1739:1740:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1731:1735:void setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl29 -> androidx.core.view.WindowInsetsCompat$BuilderImpl29:
    1812:1814:void <init>() -> <init>
    1817:1822:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1857:1861:androidx.core.view.WindowInsetsCompat build() -> build
    1836:1837:void setMandatorySystemGestureInsets(androidx.core.graphics.Insets) -> setMandatorySystemGestureInsets
    1846:1847:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1831:1832:void setSystemGestureInsets(androidx.core.graphics.Insets) -> setSystemGestureInsets
    1826:1827:void setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
    1841:1842:void setTappableElementInsets(androidx.core.graphics.Insets) -> setTappableElementInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl30 -> androidx.core.view.WindowInsetsCompat$BuilderImpl30:
    1868:1869:void <init>() -> <init>
    1872:1873:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
androidx.core.view.WindowInsetsCompat$Impl -> androidx.core.view.WindowInsetsCompat$Impl:
    747:751:void <clinit>() -> <clinit>
    755:757:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    784:784:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    774:774:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    769:769:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    864:864:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    867:867:void copyWindowDataInto(androidx.core.view.WindowInsetsCompat) -> copyWindowDataInto
    840:847:boolean equals(java.lang.Object) -> equals
    779:779:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    822:822:androidx.core.graphics.Insets getInsets(int) -> getInsets
    806:806:androidx.core.graphics.Insets getMandatorySystemGestureInsets() -> getMandatorySystemGestureInsets
    794:794:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    800:800:androidx.core.graphics.Insets getSystemGestureInsets() -> getSystemGestureInsets
    789:789:androidx.core.graphics.Insets getSystemWindowInsets() -> getSystemWindowInsets
    812:812:androidx.core.graphics.Insets getTappableElementInsets() -> getTappableElementInsets
    853:854:int hashCode() -> hashCode
    817:817:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    764:764:boolean isConsumed() -> isConsumed
    760:760:boolean isRound() -> isRound
    870:870:void setOverriddenInsets(androidx.core.graphics.Insets[]) -> setOverriddenInsets
    861:861:void setRootViewData(androidx.core.graphics.Insets) -> setRootViewData
    858:858:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat) -> setRootWindowInsets
    873:873:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
androidx.core.view.WindowInsetsCompat$Impl20 -> androidx.core.view.WindowInsetsCompat$Impl20:
    879:879:void <clinit>() -> <clinit>
    892:900:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    903:904:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20) -> <init>
    1111:1116:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    1086:1088:void copyWindowDataInto(androidx.core.view.WindowInsetsCompat) -> copyWindowDataInto
    1187:1189:boolean equals(java.lang.Object) -> equals
    914:914:androidx.core.graphics.Insets getInsets(int) -> getInsets
    940:947:androidx.core.graphics.Insets getInsets(int,boolean) -> getInsets
    953:1042:androidx.core.graphics.Insets getInsetsForType(int,boolean) -> getInsetsForType
    1102:1105:androidx.core.graphics.Insets getRootStableInsets() -> getRootStableInsets
    1064:1071:androidx.core.graphics.Insets getSystemWindowInsets() -> getSystemWindowInsets
    1126:1159:androidx.core.graphics.Insets getVisibleInsets(android.view.View) -> getVisibleInsets
    1078:1081:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    908:908:boolean isRound() -> isRound
    1171:1183:void loadReflectionField() -> loadReflectionField
    1164:1165:void setOverriddenInsets(androidx.core.graphics.Insets[]) -> setOverriddenInsets
    1097:1098:void setRootViewData(androidx.core.graphics.Insets) -> setRootViewData
    1092:1093:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat) -> setRootWindowInsets
androidx.core.view.WindowInsetsCompat$Impl21 -> androidx.core.view.WindowInsetsCompat$Impl21:
    1195:1199:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1195:1204:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21) -> <init>
    1214:1214:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    1220:1220:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    1226:1233:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    1208:1208:boolean isConsumed() -> isConsumed
    1238:1239:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
androidx.core.view.WindowInsetsCompat$Impl28 -> androidx.core.view.WindowInsetsCompat$Impl28:
    1246:1247:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1250:1251:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28) -> <init>
    1262:1262:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    1267:1272:boolean equals(java.lang.Object) -> equals
    1256:1256:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    1277:1277:int hashCode() -> hashCode
androidx.core.view.WindowInsetsCompat$Impl28$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.WindowInsetsCompat$Impl28$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.DisplayCutout androidx.core.view.WindowInsetsCompat$Impl28$$InternalSyntheticApiModelOutline$1$1ac87aafd592b5506d107ed040b16d853d1a131cdb8856d2e13ed11b9a207052$0.m(android.view.WindowInsets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl28$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.WindowInsetsCompat$Impl28$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.WindowInsets androidx.core.view.WindowInsetsCompat$Impl28$$InternalSyntheticApiModelOutline$1$9207719b7ce5d8db03f418025a4671b26e9b85828127b36d45b1560d40c7fc23$0.m(android.view.WindowInsets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl29 -> androidx.core.view.WindowInsetsCompat$Impl29:
    1284:1290:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1284:1294:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29) -> <init>
    1308:1312:androidx.core.graphics.Insets getMandatorySystemGestureInsets() -> getMandatorySystemGestureInsets
    1299:1302:androidx.core.graphics.Insets getSystemGestureInsets() -> getSystemGestureInsets
    1318:1321:androidx.core.graphics.Insets getTappableElementInsets() -> getTappableElementInsets
    1327:1327:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    1333:1333:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.graphics.Insets androidx.core.view.WindowInsetsCompat$Impl29$$InternalSyntheticApiModelOutline$1$463f5d2e905bee7a94c5e1e784176828b7f74fb1bd3f21ce4d1229a6ccfdd624$0.m(android.view.WindowInsets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.graphics.Insets androidx.core.view.WindowInsetsCompat$Impl29$$InternalSyntheticApiModelOutline$1$8f53c81c8f092140ac3e804e5c1bbe674a9a15bae1dde5747b904aef74c08e69$0.m(android.view.WindowInsets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.graphics.Insets androidx.core.view.WindowInsetsCompat$Impl29$$InternalSyntheticApiModelOutline$1$a095b61c286ceceac8def73d5e6718b1c88d3a7c271856e1785f04ff68e4f101$0.m(android.view.WindowInsets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.WindowInsets androidx.core.view.WindowInsetsCompat$Impl29$$InternalSyntheticApiModelOutline$1$f664a1d55d0eb033fb74a33efb760cefd4a66acac9fd2d520010b680a8b11057$0.m(android.view.WindowInsets,int,int,int,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl30 -> androidx.core.view.WindowInsetsCompat$Impl30:
    1350:1350:void <clinit>() -> <clinit>
    1353:1354:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1357:1358:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30) -> <init>
    1387:1387:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    1363:1364:androidx.core.graphics.Insets getInsets(int) -> getInsets
androidx.core.view.WindowInsetsCompat$Impl30$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.WindowInsetsCompat$Impl30$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.graphics.Insets androidx.core.view.WindowInsetsCompat$Impl30$$InternalSyntheticApiModelOutline$1$f14b93863108dc0e407f09f9bde286f72e692d6f9a2448abe9587c9d544bc2bf$0.m(android.view.WindowInsets,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Type -> androidx.core.view.WindowInsetsCompat$Type:
    2026:2046:int indexOf(int) -> indexOf
    1979:1979:int mandatorySystemGestures() -> mandatorySystemGestures
    2011:2011:int systemBars() -> systemBars
androidx.core.view.WindowInsetsCompat$TypeImpl30 -> androidx.core.view.WindowInsetsCompat$TypeImpl30:
    2070:2101:int toPlatformType(int) -> toPlatformType
androidx.core.view.WindowInsetsControllerCompat -> androidx.core.view.WindowInsetsControllerCompat:
    121:133:void <init>(android.view.Window,android.view.View) -> <init>
    237:238:void setAppearanceLightNavigationBars(boolean) -> setAppearanceLightNavigationBars
    213:214:void setAppearanceLightStatusBars(boolean) -> setAppearanceLightStatusBars
androidx.core.view.WindowInsetsControllerCompat$Impl -> androidx.core.view.WindowInsetsControllerCompat$Impl:
    368:370:void <init>() -> <init>
    402:402:void setAppearanceLightNavigationBars(boolean) -> setAppearanceLightNavigationBars
androidx.core.view.WindowInsetsControllerCompat$Impl20 -> androidx.core.view.WindowInsetsControllerCompat$Impl20:
    423:426:void <init>(android.view.Window,android.view.View) -> <init>
    508:512:void setSystemUiFlag(int) -> setSystemUiFlag
    522:523:void setWindowFlag(int) -> setWindowFlag
    515:519:void unsetSystemUiFlag(int) -> unsetSystemUiFlag
    526:527:void unsetWindowFlag(int) -> unsetWindowFlag
androidx.core.view.WindowInsetsControllerCompat$Impl23 -> androidx.core.view.WindowInsetsControllerCompat$Impl23:
    574:575:void <init>(android.view.Window,android.view.View) -> <init>
    585:592:void setAppearanceLightStatusBars(boolean) -> setAppearanceLightStatusBars
androidx.core.view.WindowInsetsControllerCompat$Impl26 -> androidx.core.view.WindowInsetsControllerCompat$Impl26:
    599:600:void <init>(android.view.Window,android.view.View) -> <init>
    610:617:void setAppearanceLightNavigationBars(boolean) -> setAppearanceLightNavigationBars
androidx.core.view.WindowInsetsControllerCompat$Impl30 -> androidx.core.view.WindowInsetsControllerCompat$Impl30:
    633:635:void <init>(android.view.Window,androidx.core.view.WindowInsetsControllerCompat) -> <init>
    625:641:void <init>(android.view.WindowInsetsController,androidx.core.view.WindowInsetsControllerCompat) -> <init>
    702:719:void setAppearanceLightNavigationBars(boolean) -> setAppearanceLightNavigationBars
    675:692:void setAppearanceLightStatusBars(boolean) -> setAppearanceLightStatusBars
    823:827:void setSystemUiFlag(int) -> setSystemUiFlag
    816:820:void unsetSystemUiFlag(int) -> unsetSystemUiFlag
androidx.core.view.WindowInsetsControllerCompat$Impl30$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.WindowInsetsControllerCompat$Impl30$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.WindowInsetsController androidx.core.view.WindowInsetsControllerCompat$Impl30$$InternalSyntheticApiModelOutline$1$e51a200b697bfb4d6155e4ad6744e47698f53e8b6d3d57e5cc6e876a3b3d93d4$0.m(android.view.Window) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityClickableSpanCompat -> androidx.core.view.accessibility.AccessibilityClickableSpanCompat:
    55:59:void <init>(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,int) -> <init>
    69:72:void onClick(android.view.View) -> onClick
androidx.core.view.accessibility.AccessibilityEventCompat -> androidx.core.view.accessibility.AccessibilityEventCompat:
    403:404:int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
    382:385:void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
androidx.core.view.accessibility.AccessibilityEventCompat$Api19Impl -> androidx.core.view.accessibility.AccessibilityEventCompat$Api19Impl:
    485:485:int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
    480:481:void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
androidx.core.view.accessibility.AccessibilityManagerCompat -> androidx.core.view.accessibility.AccessibilityManagerCompat:
    170:171:boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> addTouchExplorationStateChangeListener
    186:187:boolean removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> removeTouchExplorationStateChangeListener
androidx.core.view.accessibility.AccessibilityManagerCompat$Api19Impl -> androidx.core.view.accessibility.AccessibilityManagerCompat$Api19Impl:
    286:286:boolean addTouchExplorationStateChangeListenerWrapper(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> addTouchExplorationStateChangeListenerWrapper
    294:294:boolean removeTouchExplorationStateChangeListenerWrapper(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> removeTouchExplorationStateChangeListenerWrapper
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper -> androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper:
    199:201:void <init>(androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> <init>
    210:218:boolean equals(java.lang.Object) -> equals
    205:205:int hashCode() -> hashCode
    223:224:void onTouchExplorationStateChanged(boolean) -> onTouchExplorationStateChanged
androidx.core.view.accessibility.AccessibilityNodeInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat:
    1801:1801:void <clinit>() -> <clinit>
    1336:1832:void <init>(android.view.accessibility.AccessibilityNodeInfo) -> <init>
    2125:2126:void addAction(int) -> addAction
    2158:2161:void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAction
    2052:2055:void addChild(android.view.View,int) -> addChild
    2969:2973:void addSpanLocationToExtras(android.text.style.ClickableSpan,android.text.Spanned,int) -> addSpanLocationToExtras
    2898:2913:void addSpansToExtras(java.lang.CharSequence,android.view.View) -> addSpansToExtras
    2960:2966:void clearExtrasSpans() -> clearExtrasSpans
    4389:4412:boolean equals(java.lang.Object) -> equals
    2129:2138:java.util.List extrasIntList(java.lang.String) -> extrasIntList
    3321:3334:java.util.List getActionList() -> getActionList
    4494:4578:java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
    2110:2110:int getActions() -> getActions
    4488:4490:boolean getBooleanProperty(int) -> getBooleanProperty
    2345:2346:void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    2377:2378:void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    2007:2007:int getChildCount() -> getChildCount
    2836:2836:java.lang.CharSequence getClassName() -> getClassName
    2935:2939:android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence) -> getClickableSpans
    2996:2996:java.lang.CharSequence getContentDescription() -> getContentDescription
    3637:3638:android.os.Bundle getExtras() -> getExtras
    2916:2921:android.util.SparseArray getOrCreateSpansFromViewTags(android.view.View) -> getOrCreateSpansFromViewTags
    2812:2812:java.lang.CharSequence getPackageName() -> getPackageName
    2926:2926:android.util.SparseArray getSpansFromViewTags(android.view.View) -> getSpansFromViewTags
    2860:2874:java.lang.CharSequence getText() -> getText
    3056:3059:java.lang.String getUniqueId() -> getUniqueId
    3125:3126:java.lang.String getViewIdResourceName() -> getViewIdResourceName
    2956:2956:boolean hasSpans() -> hasSpans
    4384:4384:int hashCode() -> hashCode
    2944:2952:int idForClickableSpan(android.text.style.ClickableSpan,android.util.SparseArray) -> idForClickableSpan
    2401:2401:boolean isCheckable() -> isCheckable
    2425:2425:boolean isChecked() -> isChecked
    2583:2583:boolean isClickable() -> isClickable
    2631:2631:boolean isEnabled() -> isEnabled
    2449:2449:boolean isFocusable() -> isFocusable
    2473:2473:boolean isFocused() -> isFocused
    2607:2607:boolean isLongClickable() -> isLongClickable
    2655:2655:boolean isPassword() -> isPassword
    2679:2679:boolean isScrollable() -> isScrollable
    2559:2559:boolean isSelected() -> isSelected
    4146:4149:boolean isShowingHintText() -> isShowingHintText
    1869:1869:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    1897:1897:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    1908:1908:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    2220:2221:boolean performAction(int,android.os.Bundle) -> performAction
    3093:3093:void recycle() -> recycle
    2976:2988:void removeCollectedSpans(android.view.View) -> removeCollectedSpans
    2548:2551:void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    4478:4485:void setBooleanProperty(int,boolean) -> setBooleanProperty
    2368:2369:void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    2392:2393:void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    2416:2417:void setCheckable(boolean) -> setCheckable
    2440:2441:void setChecked(boolean) -> setChecked
    2851:2852:void setClassName(java.lang.CharSequence) -> setClassName
    2598:2599:void setClickable(boolean) -> setClickable
    3229:3235:void setCollectionInfo(java.lang.Object) -> setCollectionInfo
    3238:3243:void setCollectionItemInfo(java.lang.Object) -> setCollectionItemInfo
    3026:3027:void setContentDescription(java.lang.CharSequence) -> setContentDescription
    2646:2647:void setEnabled(boolean) -> setEnabled
    3448:3451:void setError(java.lang.CharSequence) -> setError
    2464:2465:void setFocusable(boolean) -> setFocusable
    2488:2489:void setFocused(boolean) -> setFocused
    4203:4208:void setHeading(boolean) -> setHeading
    3427:3432:void setHintText(java.lang.CharSequence) -> setHintText
    3473:3476:void setLabelFor(android.view.View) -> setLabelFor
    3734:3737:void setMaxTextLength(int) -> setMaxTextLength
    2827:2828:void setPackageName(java.lang.CharSequence) -> setPackageName
    4079:4084:void setPaneTitle(java.lang.CharSequence) -> setPaneTitle
    2298:2301:void setParent(android.view.View) -> setParent
    2325:2330:void setParent(android.view.View,int) -> setParent
    4131:4136:void setScreenReaderFocusable(boolean) -> setScreenReaderFocusable
    2694:2695:void setScrollable(boolean) -> setScrollable
    4166:4171:void setShowingHintText(boolean) -> setShowingHintText
    1944:1949:void setSource(android.view.View,int) -> setSource
    3041:3046:void setStateDescription(java.lang.CharSequence) -> setStateDescription
    2890:2891:void setText(java.lang.CharSequence) -> setText
    3895:3898:void setTraversalAfter(android.view.View) -> setTraversalAfter
    2517:2520:void setVisibleToUser(boolean) -> setVisibleToUser
    4419:4474:java.lang.String toString() -> toString
    1848:1848:android.view.accessibility.AccessibilityNodeInfo unwrap() -> unwrap
    1841:1841:androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo) -> wrap
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$InternalSyntheticApiModelOutline$1$158b7f276cfaf6c373f3df9403abf1ad8426faae8d0f152b72b92b2d03c14609$0.m(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$InternalSyntheticApiModelOutline$1$4d38159007d0b31eda46da8085292a0315e0f0fbdefb2f40a583a39f67825376$0.m(android.view.accessibility.AccessibilityNodeInfo,boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$InternalSyntheticApiModelOutline$1$8d12ce1004cec7cc3110efed7cdf52738f26796c558e4eabb0bcd23b154c19e1$0.m(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$InternalSyntheticApiModelOutline$1$bb9fd610a63e02320be8d299acf7b4380bf37d6c12d8cd670fe3ab5c7e6f4dfe$0.m(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline4 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$InternalSyntheticApiModelOutline$1$cd72e59e9f21cc9debd5dd8bba9b036b76ce6817728da61a544fd531bd7d28d5$0.m(android.view.accessibility.AccessibilityNodeInfo,boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline5 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$InternalSyntheticApiModelOutline$1$d7f0b69eabd3b8255e511b271003f9cf6c4e31c2bb69b88140c248916e27199c$0.m(android.view.accessibility.AccessibilityNodeInfo,boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline6 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$InternalSyntheticApiModelOutline$2$1aafc8a7e540efc36d9606a211722f1ebcefa94800f4f6843831897e7114e21a$0.m(android.view.accessibility.AccessibilityNodeInfo) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
    112:654:void <clinit>() -> <clinit>
    674:675:void <init>(int,java.lang.CharSequence) -> <init>
    688:689:void <init>(int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> <init>
    692:693:void <init>(java.lang.Object) -> <init>
    697:698:void <init>(int,java.lang.CharSequence,java.lang.Class) -> <init>
    702:711:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class) -> <init>
    774:774:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat createReplacementAction(java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> createReplacementAction
    785:800:boolean equals(java.lang.Object) -> equals
    719:720:int getId() -> getId
    733:734:java.lang.CharSequence getLabel() -> getLabel
    780:780:int hashCode() -> hashCode
    749:765:boolean perform(android.view.View,android.os.Bundle) -> perform
    806:814:java.lang.String toString() -> toString
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api19Impl -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api19Impl:
    4613:4613:android.os.Bundle getExtras(android.view.accessibility.AccessibilityNodeInfo) -> getExtras
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
    892:894:void <init>(java.lang.Object) -> <init>
    862:863:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> obtain
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat:
    1016:1018:void <init>(java.lang.Object) -> <init>
    983:984:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> obtain
androidx.core.view.accessibility.AccessibilityNodeProviderCompat -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat:
    120:130:void <init>() -> <init>
    138:140:void <init>(java.lang.Object) -> <init>
    254:254:void addExtraDataToAccessibilityNodeInfo(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,java.lang.String,android.os.Bundle) -> addExtraDataToAccessibilityNodeInfo
    174:174:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    213:213:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    230:230:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    147:147:java.lang.Object getProvider() -> getProvider
    192:192:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16:
    39:41:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    45:50:android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    57:68:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    74:74:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19:
    81:82:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    86:90:android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi26 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi26:
    98:99:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    104:106:void addExtraDataToAccessibilityNodeInfo(int,android.view.accessibility.AccessibilityNodeInfo,java.lang.String,android.os.Bundle) -> addExtraDataToAccessibilityNodeInfo
androidx.core.view.accessibility.AccessibilityRecordCompat -> androidx.core.view.accessibility.AccessibilityRecordCompat:
    515:518:void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollX
    565:568:void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollY
    145:148:void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int) -> setSource
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl -> androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl:
    805:805:int getMaxScrollX(android.view.accessibility.AccessibilityRecord) -> getMaxScrollX
    815:815:int getMaxScrollY(android.view.accessibility.AccessibilityRecord) -> getMaxScrollY
    810:811:void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollX
    820:821:void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollY
androidx.core.view.accessibility.AccessibilityRecordCompat$Api16Impl -> androidx.core.view.accessibility.AccessibilityRecordCompat$Api16Impl:
    792:793:void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int) -> setSource
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments:
    46:46:void <init>() -> <init>
    54:55:void setBundle(android.os.Bundle) -> setBundle
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments:
    64:64:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments:
    98:98:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments:
    185:185:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments:
    150:150:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments:
    171:171:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments:
    114:114:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments:
    134:134:void <init>() -> <init>
androidx.core.view.animation.PathInterpolatorCompat -> androidx.core.view.animation.PathInterpolatorCompat:
    53:54:android.view.animation.Interpolator create(android.graphics.Path) -> create
    88:89:android.view.animation.Interpolator create(float,float,float,float) -> create
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl -> androidx.core.view.animation.PathInterpolatorCompat$Api21Impl:
    102:102:android.view.animation.PathInterpolator createPathInterpolator(android.graphics.Path) -> createPathInterpolator
    107:107:android.view.animation.PathInterpolator createPathInterpolator(float,float) -> createPathInterpolator
    113:113:android.view.animation.PathInterpolator createPathInterpolator(float,float,float,float) -> createPathInterpolator
androidx.core.view.inputmethod.EditorInfoCompat -> androidx.core.view.inputmethod.EditorInfoCompat:
    93:93:void <clinit>() -> <clinit>
    183:194:java.lang.String[] getContentMimeTypes(android.view.inputmethod.EditorInfo) -> getContentMimeTypes
    461:467:boolean isCutOnSurrogate(java.lang.CharSequence,int,int) -> isCutOnSurrogate
    472:474:boolean isPasswordInputType(int) -> isPasswordInputType
    160:169:void setContentMimeTypes(android.view.inputmethod.EditorInfo,java.lang.String[]) -> setContentMimeTypes
    237:270:void setInitialSurroundingSubText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int) -> setInitialSurroundingSubText
    214:219:void setInitialSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence) -> setInitialSurroundingText
    485:494:void setSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int,int) -> setSurroundingText
    291:341:void trimLongSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int,int) -> trimLongSurroundingText
androidx.core.view.inputmethod.EditorInfoCompat$Api30Impl -> androidx.core.view.inputmethod.EditorInfoCompat$Api30Impl:
    536:537:void setInitialSurroundingSubText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int) -> setInitialSurroundingSubText
androidx.core.view.inputmethod.EditorInfoCompat$Api30Impl$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.inputmethod.EditorInfoCompat$Api30Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.inputmethod.EditorInfoCompat$Api30Impl$$InternalSyntheticApiModelOutline$1$6188183556d2be0605847322cb0e58a70caf1d163ac8db0d5bec05a70fbd3d2a$0.m(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.inputmethod.InputConnectionCompat -> androidx.core.view.inputmethod.InputConnectionCompat:
    boolean $r8$lambda$KpUNHX7G_3SrNfrFIzMfcFEp1Cw(android.view.View,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle) -> $r8$lambda$KpUNHX7G_3SrNfrFIzMfcFEp1Cw
      # {"id":"com.android.tools.r8.synthesized"}
    360:361:androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener createOnCommitContentListenerUsingPerformReceiveContent(android.view.View) -> createOnCommitContentListenerUsingPerformReceiveContent
    272:297:android.view.inputmethod.InputConnection createWrapper(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> createWrapper
    347:349:android.view.inputmethod.InputConnection createWrapper(android.view.View,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> createWrapper
    91:134:boolean handlePerformPrivateCommand(java.lang.String,android.os.Bundle,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> handlePerformPrivateCommand
    362:388:boolean lambda$createOnCommitContentListenerUsingPerformReceiveContent$0(android.view.View,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle) -> lambda$createOnCommitContentListenerUsingPerformReceiveContent$0
androidx.core.view.inputmethod.InputConnectionCompat$$ExternalSyntheticLambda0 -> androidx.core.view.inputmethod.InputConnectionCompat$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.View androidx.core.view.inputmethod.InputConnectionCompat$$InternalSyntheticLambda$1$9ca49cbbfd3efba151d118d3a92f0eaa941bc2c8d62e7c5cde2c2e096aa30913$0.f$0 -> f$0
    void androidx.core.view.inputmethod.InputConnectionCompat$$InternalSyntheticLambda$1$9ca49cbbfd3efba151d118d3a92f0eaa941bc2c8d62e7c5cde2c2e096aa30913$0.<init>(android.view.View) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean androidx.core.view.inputmethod.InputConnectionCompat$$InternalSyntheticLambda$1$9ca49cbbfd3efba151d118d3a92f0eaa941bc2c8d62e7c5cde2c2e096aa30913$0.onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle) -> onCommitContent
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.inputmethod.InputConnectionCompat$1 -> androidx.core.view.inputmethod.InputConnectionCompat$1:
    279:279:void <init>(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> <init>
    284:288:boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle) -> commitContent
androidx.core.view.inputmethod.InputConnectionCompat$2 -> androidx.core.view.inputmethod.InputConnectionCompat$2:
    297:297:void <init>(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> <init>
    300:303:boolean performPrivateCommand(java.lang.String,android.os.Bundle) -> performPrivateCommand
androidx.core.view.inputmethod.InputContentInfoCompat -> androidx.core.view.inputmethod.InputContentInfoCompat:
    167:173:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    175:177:void <init>(androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl) -> <init>
    184:184:android.net.Uri getContentUri() -> getContentUri
    194:194:android.content.ClipDescription getDescription() -> getDescription
    202:202:android.net.Uri getLinkUri() -> getLinkUri
    249:250:void requestPermission() -> requestPermission
    236:236:java.lang.Object unwrap() -> unwrap
    217:223:androidx.core.view.inputmethod.InputContentInfoCompat wrap(java.lang.Object) -> wrap
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl -> androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl:
    107:109:void <init>(java.lang.Object) -> <init>
    112:114:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    119:119:android.net.Uri getContentUri() -> getContentUri
    125:125:android.content.ClipDescription getDescription() -> getDescription
    137:137:java.lang.Object getInputContentInfo() -> getInputContentInfo
    131:131:android.net.Uri getLinkUri() -> getLinkUri
    142:143:void requestPermission() -> requestPermission
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl -> androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl:
    62:66:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    71:71:android.net.Uri getContentUri() -> getContentUri
    77:77:android.content.ClipDescription getDescription() -> getDescription
    89:89:java.lang.Object getInputContentInfo() -> getInputContentInfo
    83:83:android.net.Uri getLinkUri() -> getLinkUri
    94:94:void requestPermission() -> requestPermission
androidx.core.widget.AutoScrollHelper -> androidx.core.widget.AutoScrollHelper:
    195:195:void <clinit>() -> <clinit>
    138:226:void <init>(android.view.View) -> <init>
    687:692:void cancelTargetTouch() -> cancelTargetTouch
    549:568:float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    663:668:int constrain(int,int,int) -> constrain
    673:678:float constrain(float,float,float) -> constrain
    634:659:float constrainEdgeValue(float,float) -> constrainEdgeValue
    617:630:float getEdgeValue(float,float,float,float) -> getEdgeValue
    466:495:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    538:545:void requestStop() -> requestStop
    420:421:androidx.core.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    359:360:androidx.core.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    236:241:androidx.core.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    402:404:androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    296:298:androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    315:317:androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    452:453:androidx.core.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    436:437:androidx.core.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    379:381:androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    337:339:androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    502:507:boolean shouldAnimate() -> shouldAnimate
    514:530:void startAnimating() -> startAnimating
androidx.core.widget.AutoScrollHelper$ClampedScroller -> androidx.core.widget.AutoScrollHelper$ClampedScroller:
    756:762:void <init>() -> <init>
    831:843:void computeScrollDelta() -> computeScrollDelta
    869:869:int getDeltaX() -> getDeltaX
    877:877:int getDeltaY() -> getDeltaY
    857:857:int getHorizontalDirection() -> getHorizontalDirection
    800:808:float getValueAt(long) -> getValueAt
    861:861:int getVerticalDirection() -> getVerticalDirection
    820:820:float interpolateValue(float) -> interpolateValue
    795:796:boolean isFinished() -> isFinished
    788:792:void requestStop() -> requestStop
    769:770:void setRampDownDuration(int) -> setRampDownDuration
    765:766:void setRampUpDuration(int) -> setRampUpDuration
    852:854:void setTargetVelocity(float,float) -> setTargetVelocity
    776:782:void start() -> start
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable -> androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable:
    695:696:void <init>(androidx.core.widget.AutoScrollHelper) -> <init>
    700:728:void run() -> run
androidx.core.widget.AutoSizeableTextView -> androidx.core.widget.AutoSizeableTextView:
    46:46:void <clinit>() -> <clinit>
androidx.core.widget.CheckedTextViewCompat -> androidx.core.widget.CheckedTextViewCompat:
    121:122:android.graphics.drawable.Drawable getCheckMarkDrawable(android.widget.CheckedTextView) -> getCheckMarkDrawable
    56:61:void setCheckMarkTintList(android.widget.CheckedTextView,android.content.res.ColorStateList) -> setCheckMarkTintList
    91:96:void setCheckMarkTintMode(android.widget.CheckedTextView,android.graphics.PorterDuff$Mode) -> setCheckMarkTintMode
androidx.core.widget.CheckedTextViewCompat$Api16Impl -> androidx.core.widget.CheckedTextViewCompat$Api16Impl:
    163:163:android.graphics.drawable.Drawable getCheckMarkDrawable(android.widget.CheckedTextView) -> getCheckMarkDrawable
androidx.core.widget.CheckedTextViewCompat$Api21Impl -> androidx.core.widget.CheckedTextViewCompat$Api21Impl:
    136:137:void setCheckMarkTintList(android.widget.CheckedTextView,android.content.res.ColorStateList) -> setCheckMarkTintList
    146:147:void setCheckMarkTintMode(android.widget.CheckedTextView,android.graphics.PorterDuff$Mode) -> setCheckMarkTintMode
androidx.core.widget.CompoundButtonCompat -> androidx.core.widget.CompoundButtonCompat:
    125:126:android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
    73:74:android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> getButtonTintList
    109:110:android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton) -> getButtonTintMode
    59:64:void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    95:100:void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
androidx.core.widget.CompoundButtonCompat$Api21Impl -> androidx.core.widget.CompoundButtonCompat$Api21Impl:
    163:163:android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> getButtonTintList
    173:173:android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton) -> getButtonTintMode
    158:159:void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    168:169:void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
androidx.core.widget.CompoundButtonCompat$Api23Impl -> androidx.core.widget.CompoundButtonCompat$Api23Impl:
    185:185:android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
androidx.core.widget.EdgeEffectCompat -> androidx.core.widget.EdgeEffectCompat:
    69:73:android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet) -> create
    90:93:float getDistance(android.widget.EdgeEffect) -> getDistance
    197:202:void onPull(android.widget.EdgeEffect,float,float) -> onPull
    245:249:float onPullDistance(android.widget.EdgeEffect,float,float) -> onPullDistance
androidx.core.widget.EdgeEffectCompat$Api21Impl -> androidx.core.widget.EdgeEffectCompat$Api21Impl:
    349:350:void onPull(android.widget.EdgeEffect,float,float) -> onPull
androidx.core.widget.EdgeEffectCompat$Api31Impl -> androidx.core.widget.EdgeEffectCompat$Api31Impl:
    311:313:android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet) -> create
    334:336:float getDistance(android.widget.EdgeEffect) -> getDistance
    324:327:float onPullDistance(android.widget.EdgeEffect,float,float) -> onPullDistance
androidx.core.widget.EdgeEffectCompat$Api31Impl$$ExternalSyntheticApiModelOutline0 -> androidx.core.widget.EdgeEffectCompat$Api31Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    float androidx.core.widget.EdgeEffectCompat$Api31Impl$$InternalSyntheticApiModelOutline$1$04bbedd02e5c52f739e90f4465a8bcdba89122137d55d8dbc6a46be3c7a56125$0.m(android.widget.EdgeEffect) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.EdgeEffectCompat$Api31Impl$$ExternalSyntheticApiModelOutline1 -> androidx.core.widget.EdgeEffectCompat$Api31Impl$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    float androidx.core.widget.EdgeEffectCompat$Api31Impl$$InternalSyntheticApiModelOutline$1$88b2d6dfa1b81cb7f53526c6f7ac80a399188f323759c6d9c59425c59c3c5985$0.m(android.widget.EdgeEffect,float,float) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.ImageViewCompat -> androidx.core.widget.ImageViewCompat:
    39:40:android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> getImageTintList
    76:77:android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> getImageTintMode
    52:69:void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> setImageTintList
    90:107:void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> setImageTintMode
androidx.core.widget.ImageViewCompat$Api21Impl -> androidx.core.widget.ImageViewCompat$Api21Impl:
    120:120:android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> getImageTintList
    130:130:android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> getImageTintMode
    125:126:void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> setImageTintList
    135:136:void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> setImageTintMode
androidx.core.widget.ListViewAutoScrollHelper -> androidx.core.widget.ListViewAutoScrollHelper:
    33:36:void <init>(android.widget.ListView) -> <init>
    46:46:boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    51:83:boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    40:41:void scrollTargetBy(int,int) -> scrollTargetBy
androidx.core.widget.ListViewCompat -> androidx.core.widget.ListViewCompat:
    39:57:void scrollListBy(android.widget.ListView,int) -> scrollListBy
androidx.core.widget.ListViewCompat$Api19Impl -> androidx.core.widget.ListViewCompat$Api19Impl:
    108:108:boolean canScrollList(android.widget.ListView,int) -> canScrollList
    103:104:void scrollListBy(android.widget.ListView,int) -> scrollListBy
androidx.core.widget.NestedScrollView -> androidx.core.widget.NestedScrollView:
    90:220:void <clinit>() -> <clinit>
    236:237:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    124:267:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2024:2026:void abortAnimatedScroll() -> abortAnimatedScroll
    529:534:void addView(android.view.View) -> addView
    538:543:void addView(android.view.View,int) -> addView
    547:552:void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    556:561:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1638:1688:boolean arrowScroll(int) -> arrowScroll
    1344:1346:boolean canOverScroll() -> canOverScroll
    580:587:boolean canScroll() -> canScroll
    2376:2402:int clamp(int,int,int) -> clamp
    1887:1887:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    1880:1880:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    1873:1873:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    1923:1977:void computeScroll() -> computeScroll
    2076:2137:int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> computeScrollDeltaToGetChildRectOnScreen
    1866:1866:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    1859:1859:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    1835:1852:int computeVerticalScrollRange() -> computeVerticalScrollRange
    1208:1227:int consumeFlingInVerticalStretch(int) -> consumeFlingInVerticalStretch
    678:678:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    355:355:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    360:360:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    310:310:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    350:350:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    274:276:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    343:343:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    1717:1724:void doScrollY(int) -> doScrollY
    2324:2373:void draw(android.graphics.Canvas) -> draw
    1245:1261:boolean edgeEffectFling(int) -> edgeEffectFling
    1025:1033:void endTouchDrag() -> endTouchDrag
    690:728:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    1460:1521:android.view.View findFocusableViewInBounds(boolean,int,int) -> findFocusableViewInBounds
    2288:2297:void fling(int) -> fling
    1575:1590:boolean fullScroll(int) -> fullScroll
    492:505:float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    513:513:int getMaxScrollAmount() -> getMaxScrollAmount
    465:465:int getNestedScrollAxes() -> getNestedScrollAxes
    1432:1440:int getScrollRange() -> getScrollRange
    1237:1241:float getSplineFlingDistance(int) -> getSplineFlingDistance
    477:487:float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    1350:1361:float getVerticalScrollFactorCompat() -> getVerticalScrollFactorCompat
    292:292:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    337:337:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    732:740:boolean inChild(int,int) -> inChild
    744:749:void initOrResetVelocityTracker() -> initOrResetVelocityTracker
    517:525:void initScrollView() -> initScrollView
    752:755:void initVelocityTrackerIfNotExists() -> initVelocityTrackerIfNotExists
    1018:1021:void initializeTouchDrag(int,int) -> initializeTouchDrag
    322:322:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    1696:1696:boolean isOffScreen(android.view.View) -> isOffScreen
    2272:2277:boolean isViewDescendantOf(android.view.View,android.view.View) -> isViewDescendantOf
    1704:1708:boolean isWithinDeltaOfScreen(android.view.View,int,int) -> isWithinDeltaOfScreen
    1893:1904:void measureChild(android.view.View,int,int) -> measureChild
    1909:1918:void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    2243:2246:void onAttachedToWindow() -> onAttachedToWindow
    1306:1337:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    785:881:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    2205:2239:void onLayout(boolean,int,int,int,int) -> onLayout
    642:673:void onMeasure(int,int) -> onMeasure
    450:455:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    460:460:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    414:415:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    444:445:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    368:369:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    408:409:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    439:440:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    395:397:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    428:429:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    372:382:void onNestedScrollInternal(int,int,int[]) -> onNestedScrollInternal
    1367:1368:void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    2165:2184:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    2407:2416:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2421:2424:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    633:638:void onScrollChanged(int,int,int,int) -> onScrollChanged
    1289:1302:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    2250:2266:void onSizeChanged(int,int,int,int) -> onSizeChanged
    389:389:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    422:422:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    401:403:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    433:434:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    886:1014:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1377:1428:boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> overScrollByCompat
    1537:1559:boolean pageScroll(int) -> pageScroll
    758:762:void recycleVelocityTracker() -> recycleVelocityTracker
    1991:2010:int releaseVerticalGlow(int,float) -> releaseVerticalGlow
    2142:2149:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    2191:2194:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    766:770:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    2199:2201:void requestLayout() -> requestLayout
    2014:2021:void runAnimatedScroll(boolean) -> runAnimatedScroll
    1606:1627:boolean scrollAndFocus(int,int,int) -> scrollAndFocus
    1051:1175:int scrollBy(int,int,int,boolean) -> scrollBy
    2307:2320:void scrollTo(int,int) -> scrollTo
    2034:2044:void scrollToChild(android.view.View) -> scrollToChild
    2055:2064:boolean scrollToChildRect(android.graphics.Rect,boolean) -> scrollToChildRect
    610:614:void setFillViewport(boolean) -> setFillViewport
    317:318:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    573:574:void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener) -> setOnScrollChangeListener
    628:629:void setSmoothScrollingEnabled(boolean) -> setSmoothScrollingEnabled
    1188:1196:boolean shouldAbsorb(android.widget.EdgeEffect,int) -> shouldAbsorb
    472:472:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    1733:1734:void smoothScrollBy(int,int) -> smoothScrollBy
    1756:1778:void smoothScrollBy(int,int,int,boolean) -> smoothScrollBy
    1811:1812:void smoothScrollTo(int,int,boolean) -> smoothScrollTo
    1824:1825:void smoothScrollTo(int,int,int,boolean) -> smoothScrollTo
    282:282:boolean startNestedScroll(int,int) -> startNestedScroll
    327:327:boolean startNestedScroll(int) -> startNestedScroll
    1276:1285:boolean stopGlowAnimations(android.view.MotionEvent) -> stopGlowAnimations
    287:288:void stopNestedScroll(int) -> stopNestedScroll
    332:333:void stopNestedScroll() -> stopNestedScroll
androidx.core.widget.NestedScrollView$AccessibilityDelegate -> androidx.core.widget.NestedScrollView$AccessibilityDelegate:
    2467:2467:void <init>() -> <init>
    2539:2548:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2514:2535:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2470:2509:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.core.widget.NestedScrollView$Api21Impl -> androidx.core.widget.NestedScrollView$Api21Impl:
    2559:2559:boolean getClipToPadding(android.view.ViewGroup) -> getClipToPadding
androidx.core.widget.NestedScrollView$SavedState -> androidx.core.widget.NestedScrollView$SavedState:
    2453:2453:void <clinit>() -> <clinit>
    2431:2432:void <init>(android.os.Parcelable) -> <init>
    2435:2437:void <init>(android.os.Parcel) -> <init>
    2448:2449:java.lang.String toString() -> toString
    2441:2443:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.core.widget.NestedScrollView$SavedState$1 -> androidx.core.widget.NestedScrollView$SavedState$1:
    2454:2454:void <init>() -> <init>
    2454:2454:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2457:2457:androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2454:2454:java.lang.Object[] newArray(int) -> newArray
    2462:2462:androidx.core.widget.NestedScrollView$SavedState[] newArray(int) -> newArray
androidx.core.widget.PopupWindowCompat -> androidx.core.widget.PopupWindowCompat:
    93:113:void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    157:178:void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    70:83:void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
androidx.core.widget.PopupWindowCompat$Api19Impl -> androidx.core.widget.PopupWindowCompat$Api19Impl:
    247:248:void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
androidx.core.widget.PopupWindowCompat$Api23Impl -> androidx.core.widget.PopupWindowCompat$Api23Impl:
    224:224:boolean getOverlapAnchor(android.widget.PopupWindow) -> getOverlapAnchor
    234:234:int getWindowLayoutType(android.widget.PopupWindow) -> getWindowLayoutType
    219:220:void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    229:230:void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
androidx.core.widget.TextViewCompat -> androidx.core.widget.TextViewCompat:
    300:301:android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView) -> getCompoundDrawablesRelative
    794:794:int getFirstBaselineToTopHeight(android.widget.TextView) -> getFirstBaselineToTopHeight
    804:804:int getLastBaselineToBottomHeight(android.widget.TextView) -> getLastBaselineToBottomHeight
    990:1007:int getTextDirection(android.text.TextDirectionHeuristic) -> getTextDirection
    933:981:android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView) -> getTextDirectionHeuristic
    841:853:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView) -> getTextMetricsParams
    1020:1026:void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList) -> setCompoundDrawableTintList
    1054:1061:void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode) -> setCompoundDrawableTintMode
    154:162:void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    719:744:void setFirstBaselineToTopHeight(android.widget.TextView,int) -> setFirstBaselineToTopHeight
    764:785:void setLastBaselineToBottomHeight(android.widget.TextView,int) -> setLastBaselineToBottomHeight
    822:830:void setLineHeight(android.widget.TextView,int) -> setLineHeight
    910:921:void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    288:293:void setTextAppearance(android.widget.TextView,int) -> setTextAppearance
    868:895:void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params) -> setTextMetricsParams
    546:549:android.view.ActionMode$Callback unwrapCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> unwrapCustomSelectionActionModeCallback
    524:534:android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback) -> wrapCustomSelectionActionModeCallback
androidx.core.widget.TextViewCompat$Api16Impl -> androidx.core.widget.TextViewCompat$Api16Impl:
    1148:1148:boolean getIncludeFontPadding(android.widget.TextView) -> getIncludeFontPadding
    1138:1138:int getMaxLines(android.widget.TextView) -> getMaxLines
    1143:1143:int getMinLines(android.widget.TextView) -> getMinLines
androidx.core.widget.TextViewCompat$Api17Impl -> androidx.core.widget.TextViewCompat$Api17Impl:
    1111:1111:android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView) -> getCompoundDrawablesRelative
    1094:1094:int getLayoutDirection(android.view.View) -> getLayoutDirection
    1126:1126:int getTextDirection(android.view.View) -> getTextDirection
    1121:1121:java.util.Locale getTextLocale(android.widget.TextView) -> getTextLocale
    1089:1090:void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    1100:1101:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    1106:1107:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    1116:1117:void setTextDirection(android.view.View,int) -> setTextDirection
androidx.core.widget.TextViewCompat$Api23Impl -> androidx.core.widget.TextViewCompat$Api23Impl:
    1234:1234:int getBreakStrategy(android.widget.TextView) -> getBreakStrategy
    1259:1259:android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView) -> getCompoundDrawableTintList
    1254:1254:android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView) -> getCompoundDrawableTintMode
    1244:1244:int getHyphenationFrequency(android.widget.TextView) -> getHyphenationFrequency
    1239:1240:void setBreakStrategy(android.widget.TextView,int) -> setBreakStrategy
    1264:1265:void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList) -> setCompoundDrawableTintList
    1269:1270:void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode) -> setCompoundDrawableTintMode
    1249:1250:void setHyphenationFrequency(android.widget.TextView,int) -> setHyphenationFrequency
androidx.core.widget.TextViewCompat$Api24Impl -> androidx.core.widget.TextViewCompat$Api24Impl:
    1281:1281:android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale) -> getInstance
androidx.core.widget.TextViewCompat$Api28Impl -> androidx.core.widget.TextViewCompat$Api28Impl:
    1221:1221:java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols) -> getDigitStrings
    1216:1216:android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView) -> getTextMetricsParams
    1211:1212:void setFirstBaselineToTopHeight(android.widget.TextView,int) -> setFirstBaselineToTopHeight
androidx.core.widget.TextViewCompat$Api28Impl$$ExternalSyntheticApiModelOutline0 -> androidx.core.widget.TextViewCompat$Api28Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.text.PrecomputedText$Params androidx.core.widget.TextViewCompat$Api28Impl$$InternalSyntheticApiModelOutline$1$9e68d4353321efa04438b417ae36a8cd97e870c0c444f56baadbc1bb393d9a4c$0.m(android.widget.TextView) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.TextViewCompat$Api28Impl$$ExternalSyntheticApiModelOutline1 -> androidx.core.widget.TextViewCompat$Api28Impl$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.String[] androidx.core.widget.TextViewCompat$Api28Impl$$InternalSyntheticApiModelOutline$1$abd8eb5680e49e93adb13dea9e45cb6532ee7729a108daaeb5977137f7387301$0.m(android.icu.text.DecimalFormatSymbols) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.TextViewCompat$Api28Impl$$ExternalSyntheticApiModelOutline2 -> androidx.core.widget.TextViewCompat$Api28Impl$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.widget.TextViewCompat$Api28Impl$$InternalSyntheticApiModelOutline$1$b038d35ffec6ddcb75326c923b46227c24f21164b54b47d2c68a08119a3bba99$0.m(android.widget.TextView,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.TextViewCompat$OreoCallback -> androidx.core.widget.TextViewCompat$OreoCallback:
    569:573:void <init>(android.view.ActionMode$Callback,android.widget.TextView) -> <init>
    697:697:android.content.Intent createProcessTextIntent() -> createProcessTextIntent
    685:687:android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView) -> createProcessTextIntentForResolveInfo
    656:668:java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager) -> getSupportedActivities
    598:598:android.view.ActionMode$Callback getWrappedCallback() -> getWrappedCallback
    691:693:boolean isEditable(android.widget.TextView) -> isEditable
    672:679:boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context) -> isSupportedActivity
    588:588:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    577:577:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    593:594:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    582:583:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    602:651:void recomputeProcessTextMenuItems(android.view.Menu) -> recomputeProcessTextMenuItems
androidx.core.widget.TextViewOnReceiveContentListener -> androidx.core.widget.TextViewOnReceiveContentListener:
    49:49:void <init>() -> <init>
    94:95:java.lang.CharSequence coerceToText(android.content.Context,android.content.ClipData$Item,int) -> coerceToText
    56:89:androidx.core.view.ContentInfoCompat onReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat) -> onReceiveContent
    103:109:void replaceSelection(android.text.Editable,java.lang.CharSequence) -> replaceSelection
androidx.core.widget.TextViewOnReceiveContentListener$Api16Impl -> androidx.core.widget.TextViewOnReceiveContentListener$Api16Impl:
    117:121:java.lang.CharSequence coerce(android.content.Context,android.content.ClipData$Item,int) -> coerce
androidx.cursoradapter.widget.CursorAdapter -> androidx.cursoradapter.widget.CursorAdapter:
    150:152:void <init>(android.content.Context,android.database.Cursor,boolean) -> <init>
    334:338:void changeCursor(android.database.Cursor) -> changeCursor
    216:219:int getCount() -> getCount
    208:208:android.database.Cursor getCursor() -> getCursor
    280:291:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    426:429:android.widget.Filter getFilter() -> getFilter
    228:232:java.lang.Object getItem(int) -> getItem
    241:248:long getItemId(int) -> getItemId
    262:275:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    177:200:void init(android.content.Context,android.database.Cursor,int) -> init
    469:473:void onContentChanged() -> onContentChanged
    351:373:android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver -> androidx.cursoradapter.widget.CursorAdapter$ChangeObserver:
    476:478:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    482:482:boolean deliverSelfNotifications() -> deliverSelfNotifications
    487:488:void onChange(boolean) -> onChange
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver -> androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver:
    492:493:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    497:499:void onChanged() -> onChanged
    503:505:void onInvalidated() -> onInvalidated
androidx.cursoradapter.widget.CursorFilter -> androidx.cursoradapter.widget.CursorFilter:
    39:41:void <init>(androidx.cursoradapter.widget.CursorFilter$CursorFilterClient) -> <init>
    45:45:java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    50:60:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    65:70:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
androidx.cursoradapter.widget.ResourceCursorAdapter -> androidx.cursoradapter.widget.ResourceCursorAdapter:
    82:85:void <init>(android.content.Context,int,android.database.Cursor,boolean) -> <init>
    117:117:android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    112:112:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
androidx.customview.view.AbsSavedState -> androidx.customview.view.AbsSavedState:
    32:90:void <clinit>() -> <clinit>
    31:31:void <init>(androidx.customview.view.AbsSavedState$1) -> <init>
    39:41:void <init>() -> <init>
    48:53:void <init>(android.os.Parcelable) -> <init>
    70:73:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    82:82:int describeContents() -> describeContents
    77:77:android.os.Parcelable getSuperState() -> getSuperState
    87:88:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.customview.view.AbsSavedState$1 -> androidx.customview.view.AbsSavedState$1:
    32:32:void <init>() -> <init>
androidx.customview.view.AbsSavedState$2 -> androidx.customview.view.AbsSavedState$2:
    90:90:void <init>() -> <init>
    90:90:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    90:90:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    93:97:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    102:102:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    90:90:java.lang.Object[] newArray(int) -> newArray
    107:107:androidx.customview.view.AbsSavedState[] newArray(int) -> newArray
androidx.customview.widget.ExploreByTouchHelper -> androidx.customview.widget.ExploreByTouchHelper:
    100:347:void <clinit>() -> <clinit>
    104:153:void <init>(android.view.View) -> <init>
    1001:1008:boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    1053:1063:boolean clearKeyboardFocusForVirtualView(int) -> clearKeyboardFocusForVirtualView
    483:483:boolean clickKeyboardFocusedVirtualView() -> clickKeyboardFocusedVirtualView
    639:643:android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    679:704:android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    655:657:android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    793:894:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    736:752:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    182:199:boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    216:257:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    290:290:int getAccessibilityFocusedVirtualViewId() -> getAccessibilityFocusedVirtualViewId
    157:160:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    427:438:androidx.collection.SparseArrayCompat getAllNodes() -> getAllNodes
    328:330:void getBoundsInParent(int,android.graphics.Rect) -> getBoundsInParent
    298:298:int getKeyboardFocusedVirtualViewId() -> getKeyboardFocusedVirtualViewId
    452:473:android.graphics.Rect guessPreviouslyFocusedRect(android.view.View,int,android.graphics.Rect) -> guessPreviouslyFocusedRect
    935:955:boolean isVisibleToUser(android.graphics.Rect) -> isVisibleToUser
    309:317:int keyToDirection(int) -> keyToDirection
    372:423:boolean moveFocus(int,android.graphics.Rect) -> moveFocus
    721:725:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int) -> obtainAccessibilityNodeInfo
    275:282:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    662:666:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    757:761:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    1135:1135:void onPopulateEventForHost(android.view.accessibility.AccessibilityEvent) -> onPopulateEventForHost
    1123:1123:void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    898:902:boolean performAction(int,int,android.os.Bundle) -> performAction
    911:921:boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    907:907:boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    971:990:boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    1019:1042:boolean requestKeyboardFocusForVirtualView(int) -> requestKeyboardFocusForVirtualView
    507:517:boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    614:626:void updateHoveredVirtualView(int) -> updateHoveredVirtualView
androidx.customview.widget.ExploreByTouchHelper$1 -> androidx.customview.widget.ExploreByTouchHelper$1:
    336:336:void <init>() -> <init>
    336:336:void obtainBounds(java.lang.Object,android.graphics.Rect) -> obtainBounds
    339:340:void obtainBounds(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.graphics.Rect) -> obtainBounds
androidx.customview.widget.ExploreByTouchHelper$2 -> androidx.customview.widget.ExploreByTouchHelper$2:
    349:349:void <init>() -> <init>
    349:349:java.lang.Object get(java.lang.Object,int) -> get
    353:353:androidx.core.view.accessibility.AccessibilityNodeInfoCompat get(androidx.collection.SparseArrayCompat,int) -> get
    349:349:int size(java.lang.Object) -> size
    358:358:int size(androidx.collection.SparseArrayCompat) -> size
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider -> androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider:
    1245:1246:void <init>(androidx.customview.widget.ExploreByTouchHelper) -> <init>
    1252:1254:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    1264:1269:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    1259:1259:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.customview.widget.FocusStrategy -> androidx.customview.widget.FocusStrategy:
    243:272:boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> beamBeats
    326:334:boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect) -> beamsOverlap
    145:183:java.lang.Object findNextFocusInAbsoluteDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,android.graphics.Rect,int) -> findNextFocusInAbsoluteDirection
    40:55:java.lang.Object findNextFocusInRelativeDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,int,boolean,boolean) -> findNextFocusInRelativeDirection
    61:71:java.lang.Object getNextFocusable(java.lang.Object,java.util.ArrayList,boolean) -> getNextFocusable
    76:86:java.lang.Object getPreviousFocusable(java.lang.Object,java.util.ArrayList,boolean) -> getPreviousFocusable
    283:283:int getWeightedDistanceFor(int,int) -> getWeightedDistanceFor
    203:231:boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> isBetterCandidate
    297:311:boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int) -> isCandidate
    343:353:boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect) -> isToDirectionOf
    365:365:int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistance
    370:380:int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceRaw
    392:392:int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceToFarEdge
    398:408:int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceToFarEdgeRaw
    423:435:int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> minorAxisDistance
androidx.customview.widget.FocusStrategy$SequentialComparator -> androidx.customview.widget.FocusStrategy$SequentialComparator:
    95:104:void <init>(boolean,androidx.customview.widget.FocusStrategy$BoundsAdapter) -> <init>
    108:135:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.customview.widget.ViewDragHelper -> androidx.customview.widget.ViewDragHelper:
    334:334:void <clinit>() -> <clinit>
    120:405:void <init>(android.content.Context,android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> <init>
    540:547:void cancel() -> cancel
    500:509:void captureChildView(android.view.View,int) -> captureChildView
    1305:1318:boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    1332:1345:boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    699:702:int clampMag(int,int,int) -> clampMag
    716:719:float clampMag(float,float,float) -> clampMag
    819:830:void clearMotionHistory() -> clearMotionHistory
    833:844:void clearMotionHistory(int) -> clearMotionHistory
    667:685:int computeAxisDuration(int,int,int) -> computeAxisDuration
    646:663:int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    764:798:boolean continueSettling(boolean) -> continueSettling
    357:357:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> create
    371:373:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback) -> create
    808:816:void dispatchViewReleased(float,float) -> dispatchViewReleased
    723:725:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    1453:1472:void dragTo(int,int,int,int) -> dragTo
    847:874:void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    1516:1524:android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    626:642:boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    1528:1535:int getEdgesTouched(int,int) -> getEdgesTouched
    532:532:int getTouchSlop() -> getTouchSlop
    1484:1484:boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    913:913:boolean isPointerDown(int) -> isPointerDown
    1539:1545:boolean isValidPointerForActionMove(int) -> isValidPointerForActionMove
    1497:1503:boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    1126:1281:void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    1442:1450:void releaseViewForPointerUp() -> releaseViewForPointerUp
    1284:1302:void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    877:882:void saveInitialMotion(float,float,int) -> saveInitialMotion
    885:897:void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    917:925:void setDragState(int) -> setDragState
    606:613:boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    992:1116:boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    581:591:boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    937:946:boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
androidx.customview.widget.ViewDragHelper$1 -> androidx.customview.widget.ViewDragHelper$1:
    334:334:void <init>() -> <init>
    337:338:float getInterpolation(float) -> getInterpolation
androidx.customview.widget.ViewDragHelper$2 -> androidx.customview.widget.ViewDragHelper$2:
    342:342:void <init>(androidx.customview.widget.ViewDragHelper) -> <init>
    345:346:void run() -> run
androidx.customview.widget.ViewDragHelper$Callback -> androidx.customview.widget.ViewDragHelper$Callback:
    154:154:void <init>() -> <init>
    257:257:int getOrderedChildIndex(int) -> getOrderedChildIndex
    268:268:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    279:279:int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    248:248:void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    234:234:boolean onEdgeLock(int) -> onEdgeLock
    222:222:void onEdgeTouched(int,int) -> onEdgeTouched
    189:189:void onViewCaptured(android.view.View,int) -> onViewCaptured
androidx.emoji2.text.ConcurrencyHelpers -> androidx.emoji2.text.ConcurrencyHelpers:
    java.lang.Thread $r8$lambda$rm7NN8F9tEuy2Vr8i0fl8_hnx_A(java.lang.String,java.lang.Runnable) -> $r8$lambda$rm7NN8F9tEuy2Vr8i0fl8_hnx_A
      # {"id":"com.android.tools.r8.synthesized"}
    56:70:java.util.concurrent.ThreadPoolExecutor createBackgroundPriorityExecutor(java.lang.String) -> createBackgroundPriorityExecutor
    57:59:java.lang.Thread lambda$createBackgroundPriorityExecutor$0(java.lang.String,java.lang.Runnable) -> lambda$createBackgroundPriorityExecutor$0
    77:80:android.os.Handler mainHandlerAsync() -> mainHandlerAsync
androidx.emoji2.text.ConcurrencyHelpers$$ExternalSyntheticLambda0 -> androidx.emoji2.text.ConcurrencyHelpers$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.String androidx.emoji2.text.ConcurrencyHelpers$$InternalSyntheticLambda$2$99b7997f70184b7bd3329246bb81dfdeae2dea638daba8dd1bf6fd60e9fd1279$0.f$0 -> f$0
    void androidx.emoji2.text.ConcurrencyHelpers$$InternalSyntheticLambda$2$99b7997f70184b7bd3329246bb81dfdeae2dea638daba8dd1bf6fd60e9fd1279$0.<init>(java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Thread androidx.emoji2.text.ConcurrencyHelpers$$InternalSyntheticLambda$2$99b7997f70184b7bd3329246bb81dfdeae2dea638daba8dd1bf6fd60e9fd1279$0.newThread(java.lang.Runnable) -> newThread
      # {"id":"com.android.tools.r8.synthesized"}
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl -> androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl:
    105:105:android.os.Handler createAsync(android.os.Looper) -> createAsync
androidx.emoji2.text.DefaultEmojiCompatConfig -> androidx.emoji2.text.DefaultEmojiCompatConfig:
    97:98:androidx.emoji2.text.FontRequestEmojiCompatConfig create(android.content.Context) -> create
androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory -> androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory:
    119:121:void <init>(androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper) -> <init>
    142:145:androidx.emoji2.text.EmojiCompat$Config configOrNull(android.content.Context,androidx.core.provider.FontRequest) -> configOrNull
    234:238:java.util.List convertToByteArray(android.content.pm.Signature[]) -> convertToByteArray
    130:130:androidx.emoji2.text.EmojiCompat$Config create(android.content.Context) -> create
    219:225:androidx.core.provider.FontRequest generateFontRequestFrom(android.content.pm.ProviderInfo,android.content.pm.PackageManager) -> generateFontRequestFrom
    246:249:androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper getHelperForApi() -> getHelperForApi
    201:201:boolean hasFlagSystem(android.content.pm.ProviderInfo) -> hasFlagSystem
    183:192:android.content.pm.ProviderInfo queryDefaultInstalledContentProvider(android.content.pm.PackageManager) -> queryDefaultInstalledContentProvider
    159:170:androidx.core.provider.FontRequest queryForDefaultFontRequest(android.content.Context) -> queryForDefaultFontRequest
androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper -> androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper:
    262:262:void <init>() -> <init>
    270:272:android.content.pm.Signature[] getSigningSignatures(android.content.pm.PackageManager,java.lang.String) -> getSigningSignatures
androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper_API19 -> androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper_API19:
    302:302:void <init>() -> <init>
    315:315:android.content.pm.ProviderInfo getProviderInfo(android.content.pm.ResolveInfo) -> getProviderInfo
    309:309:java.util.List queryIntentContentProviders(android.content.pm.PackageManager,android.content.Intent,int) -> queryIntentContentProviders
androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper_API28 -> androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper_API28:
    325:325:void <init>() -> <init>
    338:340:android.content.pm.Signature[] getSigningSignatures(android.content.pm.PackageManager,java.lang.String) -> getSigningSignatures
androidx.emoji2.text.DefaultGlyphChecker -> androidx.emoji2.text.DefaultGlyphChecker:
    46:46:void <clinit>() -> <clinit>
    53:56:void <init>() -> <init>
    84:87:java.lang.StringBuilder getStringBuilder() -> getStringBuilder
    68:80:boolean hasGlyph(java.lang.CharSequence,int,int,int) -> hasGlyph
androidx.emoji2.text.EmojiCompat -> androidx.emoji2.text.EmojiCompat:
    349:350:void <clinit>() -> <clinit>
    459:478:void <init>(androidx.emoji2.text.EmojiCompat$Config) -> <init>
    111:111:androidx.emoji2.text.EmojiCompat$GlyphChecker access$000(androidx.emoji2.text.EmojiCompat) -> access$000
    648:652:androidx.emoji2.text.EmojiCompat get() -> get
    813:813:int getEmojiSpanIndicatorColor() -> getEmojiSpanIndicatorColor
    783:788:int getLoadState() -> getLoadState
    867:868:boolean handleDeleteSurroundingText(android.view.inputmethod.InputConnection,android.text.Editable,int,int,boolean) -> handleDeleteSurroundingText
    838:839:boolean handleOnKeyDown(android.text.Editable,int,android.view.KeyEvent) -> handleOnKeyDown
    549:559:androidx.emoji2.text.EmojiCompat init(androidx.emoji2.text.EmojiCompat$Config) -> init
    593:593:boolean isConfigured() -> isConfigured
    804:804:boolean isEmojiSpanIndicatorEnabled() -> isEmojiSpanIndicatorEnabled
    795:795:boolean isInitialized() -> isInitialized
    672:685:void load() -> load
    688:700:void loadMetadata() -> loadMetadata
    719:729:void onMetadataLoadFailed(java.lang.Throwable) -> onMetadataLoadFailed
    704:715:void onMetadataLoadSuccess() -> onMetadataLoadSuccess
    956:957:java.lang.CharSequence process(java.lang.CharSequence) -> process
    991:991:java.lang.CharSequence process(java.lang.CharSequence,int,int) -> process
    1029:1029:java.lang.CharSequence process(java.lang.CharSequence,int,int,int) -> process
    1071:1106:java.lang.CharSequence process(java.lang.CharSequence,int,int,int,int) -> process
    746:758:void registerInitCallback(androidx.emoji2.text.EmojiCompat$InitCallback) -> registerInitCallback
    766:773:void unregisterInitCallback(androidx.emoji2.text.EmojiCompat$InitCallback) -> unregisterInitCallback
    1143:1150:void updateEditorInfo(android.view.inputmethod.EditorInfo) -> updateEditorInfo
androidx.emoji2.text.EmojiCompat$CompatInternal -> androidx.emoji2.text.EmojiCompat$CompatInternal:
    1566:1568:void <init>(androidx.emoji2.text.EmojiCompat) -> <init>
androidx.emoji2.text.EmojiCompat$CompatInternal19 -> androidx.emoji2.text.EmojiCompat$CompatInternal19:
    1621:1622:void <init>(androidx.emoji2.text.EmojiCompat) -> <init>
    1627:1642:void loadMetadata() -> loadMetadata
    1647:1662:void onMetadataLoadSuccess(androidx.emoji2.text.MetadataRepo) -> onMetadataLoadSuccess
    1683:1683:java.lang.CharSequence process(java.lang.CharSequence,int,int,int,boolean) -> process
    1688:1690:void updateEditorInfoAttrs(android.view.inputmethod.EditorInfo) -> updateEditorInfoAttrs
androidx.emoji2.text.EmojiCompat$CompatInternal19$1 -> androidx.emoji2.text.EmojiCompat$CompatInternal19$1:
    1627:1627:void <init>(androidx.emoji2.text.EmojiCompat$CompatInternal19) -> <init>
    1635:1636:void onFailed(java.lang.Throwable) -> onFailed
    1630:1631:void onLoaded(androidx.emoji2.text.MetadataRepo) -> onLoaded
androidx.emoji2.text.EmojiCompat$Config -> androidx.emoji2.text.EmojiCompat$Config:
    1300:1316:void <init>(androidx.emoji2.text.EmojiCompat$MetadataRepoLoader) -> <init>
    1508:1508:androidx.emoji2.text.EmojiCompat$MetadataRepoLoader getMetadataRepoLoader() -> getMetadataRepoLoader
    1486:1487:androidx.emoji2.text.EmojiCompat$Config setMetadataLoadStrategy(int) -> setMetadataLoadStrategy
androidx.emoji2.text.EmojiCompat$InitCallback -> androidx.emoji2.text.EmojiCompat$InitCallback:
    1175:1175:void <init>() -> <init>
    1188:1188:void onFailed(java.lang.Throwable) -> onFailed
    1181:1181:void onInitialized() -> onInitialized
androidx.emoji2.text.EmojiCompat$ListenerDispatcher -> androidx.emoji2.text.EmojiCompat$ListenerDispatcher:
    1523:1525:void <init>(androidx.emoji2.text.EmojiCompat$InitCallback,int) -> <init>
    1529:1530:void <init>(java.util.Collection,int) -> <init>
    1534:1539:void <init>(java.util.Collection,int,java.lang.Throwable) -> <init>
    1543:1557:void run() -> run
androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback -> androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback:
    1262:1262:void <init>() -> <init>
androidx.emoji2.text.EmojiCompat$SpanFactory -> androidx.emoji2.text.EmojiCompat$SpanFactory:
    1159:1159:void <init>() -> <init>
    1168:1168:androidx.emoji2.text.EmojiSpan createSpan(androidx.emoji2.text.EmojiMetadata) -> createSpan
androidx.emoji2.text.EmojiCompatInitializer -> androidx.emoji2.text.EmojiCompatInitializer:
    73:73:void <init>() -> <init>
    73:73:java.lang.Object create(android.content.Context) -> create
    87:90:java.lang.Boolean create(android.content.Context) -> create
    103:114:void delayUntilFirstResume(android.content.Context) -> delayUntilFirstResume
    128:128:java.util.List dependencies() -> dependencies
    118:120:void loadEmojiCompatAfterDelay() -> loadEmojiCompatAfterDelay
androidx.emoji2.text.EmojiCompatInitializer$1 -> androidx.emoji2.text.EmojiCompatInitializer$1:
    107:107:void <init>(androidx.emoji2.text.EmojiCompatInitializer,androidx.lifecycle.Lifecycle) -> <init>
    110:112:void onResume(androidx.lifecycle.LifecycleOwner) -> onResume
androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultConfig -> androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultConfig:
    150:152:void <init>(android.content.Context) -> <init>
androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader -> androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader:
    void $r8$lambda$2V1iWTiAwNxOBlVvz73bbuEdzIw(androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader,androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor) -> $r8$lambda$2V1iWTiAwNxOBlVvz73bbuEdzIw
      # {"id":"com.android.tools.r8.synthesized"}
    159:161:void <init>(android.content.Context) -> <init>
    174:205:void doLoad(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor) -> doLoad
    167:167:void lambda$load$0(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor) -> lambda$load$0
    165:168:void load(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback) -> load
androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$ExternalSyntheticLambda0 -> androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$InternalSyntheticLambda$1$140a2bd3fa101cb046040bbcca744ab7501b3b0c683a7652387846f552944305$0.f$0 -> f$0
    java.util.concurrent.ThreadPoolExecutor androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$InternalSyntheticLambda$1$140a2bd3fa101cb046040bbcca744ab7501b3b0c683a7652387846f552944305$0.f$2 -> f$2
    androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$InternalSyntheticLambda$1$140a2bd3fa101cb046040bbcca744ab7501b3b0c683a7652387846f552944305$0.f$1 -> f$1
    void androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$InternalSyntheticLambda$1$140a2bd3fa101cb046040bbcca744ab7501b3b0c683a7652387846f552944305$0.<init>(androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader,androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$InternalSyntheticLambda$1$140a2bd3fa101cb046040bbcca744ab7501b3b0c683a7652387846f552944305$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$1 -> androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$1:
    180:180:void <init>(androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader,androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor) -> <init>
    195:199:void onFailed(java.lang.Throwable) -> onFailed
    185:189:void onLoaded(androidx.emoji2.text.MetadataRepo) -> onLoaded
androidx.emoji2.text.EmojiCompatInitializer$LoadEmojiCompatRunnable -> androidx.emoji2.text.EmojiCompatInitializer$LoadEmojiCompatRunnable:
    131:131:void <init>() -> <init>
    137:144:void run() -> run
androidx.emoji2.text.EmojiMetadata -> androidx.emoji2.text.EmojiMetadata:
    73:73:void <clinit>() -> <clinit>
    89:95:void <init>(androidx.emoji2.text.MetadataRepo,int) -> <init>
    108:118:void draw(android.graphics.Canvas,float,float,android.graphics.Paint) -> draw
    230:230:int getCodepointAt(int) -> getCodepointAt
    237:237:int getCodepointsLength() -> getCodepointsLength
    190:190:int getHasGlyph() -> getHasGlyph
    166:166:short getHeight() -> getHeight
    152:152:int getId() -> getId
    132:145:androidx.emoji2.text.flatbuffer.MetadataItem getMetadataItem() -> getMetadataItem
    180:180:short getSdkAdded() -> getSdkAdded
    159:159:short getWidth() -> getWidth
    221:221:boolean isDefaultEmoji() -> isDefaultEmoji
    213:214:void setHasGlyph(boolean) -> setHasGlyph
    242:252:java.lang.String toString() -> toString
androidx.emoji2.text.EmojiProcessor -> androidx.emoji2.text.EmojiProcessor:
    112:118:void <init>(androidx.emoji2.text.MetadataRepo,androidx.emoji2.text.EmojiCompat$SpanFactory,androidx.emoji2.text.EmojiCompat$GlyphChecker,boolean,int[]) -> <init>
    490:492:void addEmoji(android.text.Spannable,androidx.emoji2.text.EmojiMetadata,int,int) -> addEmoji
    375:401:boolean delete(android.text.Editable,android.view.KeyEvent,boolean) -> delete
    424:477:boolean handleDeleteSurroundingText(android.view.inputmethod.InputConnection,android.text.Editable,int,int,boolean) -> handleDeleteSurroundingText
    353:370:boolean handleOnKeyDown(android.text.Editable,int,android.view.KeyEvent) -> handleOnKeyDown
    509:515:boolean hasGlyph(java.lang.CharSequence,int,int,androidx.emoji2.text.EmojiMetadata) -> hasGlyph
    481:481:boolean hasInvalidSelection(int,int) -> hasInvalidSelection
    485:485:boolean hasModifiers(android.view.KeyEvent) -> hasModifiers
    210:329:java.lang.CharSequence process(java.lang.CharSequence,int,int,int,boolean) -> process
androidx.emoji2.text.EmojiProcessor$CodepointIndexFinder -> androidx.emoji2.text.EmojiProcessor$CodepointIndexFinder:
    723:763:int findIndexBackward(java.lang.CharSequence,int,int) -> findIndexBackward
    779:822:int findIndexForward(java.lang.CharSequence,int,int) -> findIndexForward
androidx.emoji2.text.EmojiProcessor$ProcessorSm -> androidx.emoji2.text.EmojiProcessor$ProcessorSm:
    526:570:void <init>(androidx.emoji2.text.MetadataRepo$Node,boolean,int[]) -> <init>
    575:620:int check(int) -> check
    642:642:androidx.emoji2.text.EmojiMetadata getCurrentMetadata() -> getCurrentMetadata
    635:635:androidx.emoji2.text.EmojiMetadata getFlushMetadata() -> getFlushMetadata
    688:688:boolean isEmojiStyle(int) -> isEmojiStyle
    653:654:boolean isInFlushableState() -> isInFlushableState
    697:697:boolean isTextStyle(int) -> isTextStyle
    625:628:int reset() -> reset
    658:679:boolean shouldUseEmojiPresentationStyleForSingleCodepoint() -> shouldUseEmojiPresentationStyleForSingleCodepoint
androidx.emoji2.text.EmojiSpan -> androidx.emoji2.text.EmojiSpan:
    42:78:void <init>(androidx.emoji2.text.EmojiMetadata) -> <init>
    110:110:androidx.emoji2.text.EmojiMetadata getMetadata() -> getMetadata
    87:101:int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt) -> getSize
    120:120:int getWidth() -> getWidth
androidx.emoji2.text.FontRequestEmojiCompatConfig -> androidx.emoji2.text.FontRequestEmojiCompatConfig:
    442:442:void <clinit>() -> <clinit>
    122:123:void <init>(android.content.Context,androidx.core.provider.FontRequest) -> <init>
    148:149:androidx.emoji2.text.FontRequestEmojiCompatConfig setLoadingExecutor(java.util.concurrent.Executor) -> setLoadingExecutor
androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper -> androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper:
    412:412:void <init>() -> <init>
    424:424:android.graphics.Typeface buildTypeface(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo) -> buildTypeface
    417:417:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,androidx.core.provider.FontRequest) -> fetchFonts
    438:439:void unregisterObserver(android.content.Context,android.database.ContentObserver) -> unregisterObserver
androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader -> androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader:
    208:241:void <init>(android.content.Context,androidx.core.provider.FontRequest,androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper) -> <init>
    326:343:void cleanUp() -> cleanUp
    350:404:void createMetadata() -> createMetadata
    258:263:void load(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback) -> load
    267:279:void loadInternal() -> loadInternal
    285:296:androidx.core.provider.FontsContractCompat$FontInfo retrieveFontInfo() -> retrieveFontInfo
    244:247:void setExecutor(java.util.concurrent.Executor) -> setExecutor
androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$ExternalSyntheticLambda0 -> androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$InternalSyntheticLambda$2$4d8265d104f33b0eb9fc891e7007fb0d4ab6ac155b9bdc9dd4448711d98a526a$0.f$0 -> f$0
    void androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$InternalSyntheticLambda$2$4d8265d104f33b0eb9fc891e7007fb0d4ab6ac155b9bdc9dd4448711d98a526a$0.<init>(androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$InternalSyntheticLambda$2$4d8265d104f33b0eb9fc891e7007fb0d4ab6ac155b9bdc9dd4448711d98a526a$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.emoji2.text.MetadataListReader -> androidx.emoji2.text.MetadataListReader:
    120:161:androidx.emoji2.text.MetadataListReader$OffsetInfo findOffsetInfo(androidx.emoji2.text.MetadataListReader$OpenTypeReader) -> findOffsetInfo
    89:94:androidx.emoji2.text.flatbuffer.MetadataList read(java.nio.ByteBuffer) -> read
    192:192:long toUnsignedInt(int) -> toUnsignedInt
    187:187:int toUnsignedShort(short) -> toUnsignedShort
androidx.emoji2.text.MetadataListReader$ByteBufferReader -> androidx.emoji2.text.MetadataListReader$ByteBufferReader:
    315:318:void <init>(java.nio.ByteBuffer) -> <init>
    342:342:long getPosition() -> getPosition
    332:332:int readTag() -> readTag
    327:327:long readUnsignedInt() -> readUnsignedInt
    322:322:int readUnsignedShort() -> readUnsignedShort
    337:338:void skip(int) -> skip
androidx.emoji2.text.MetadataListReader$OffsetInfo -> androidx.emoji2.text.MetadataListReader$OffsetInfo:
    171:174:void <init>(long,long) -> <init>
    177:177:long getStartOffset() -> getStartOffset
androidx.emoji2.text.MetadataRepo -> androidx.emoji2.text.MetadataRepo:
    75:81:void <init>(android.graphics.Typeface,androidx.emoji2.text.flatbuffer.MetadataList) -> <init>
    160:169:void constructIndex(androidx.emoji2.text.flatbuffer.MetadataList) -> constructIndex
    129:133:androidx.emoji2.text.MetadataRepo create(android.graphics.Typeface,java.nio.ByteBuffer) -> create
    203:203:char[] getEmojiCharArray() -> getEmojiCharArray
    212:212:androidx.emoji2.text.flatbuffer.MetadataList getMetadataList() -> getMetadataList
    185:185:int getMetadataVersion() -> getMetadataVersion
    194:194:androidx.emoji2.text.MetadataRepo$Node getRootNode() -> getRootNode
    177:177:android.graphics.Typeface getTypeface() -> getTypeface
    223:228:void put(androidx.emoji2.text.EmojiMetadata) -> put
androidx.emoji2.text.MetadataRepo$Node -> androidx.emoji2.text.MetadataRepo$Node:
    242:243:void <init>() -> <init>
    246:248:void <init>(int) -> <init>
    251:251:androidx.emoji2.text.MetadataRepo$Node get(int) -> get
    255:255:androidx.emoji2.text.EmojiMetadata getData() -> getData
    260:271:void put(androidx.emoji2.text.EmojiMetadata,int,int) -> put
androidx.emoji2.text.SpannableBuilder -> androidx.emoji2.text.SpannableBuilder:
    59:78:void <init>(java.lang.Class,java.lang.CharSequence) -> <init>
    59:89:void <init>(java.lang.Class,java.lang.CharSequence,int,int) -> <init>
    49:49:android.text.Editable append(char) -> append
    49:49:android.text.Editable append(java.lang.CharSequence) -> append
    49:49:android.text.Editable append(java.lang.CharSequence,int,int) -> append
    49:49:java.lang.Appendable append(char) -> append
    49:49:java.lang.Appendable append(java.lang.CharSequence) -> append
    49:49:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    344:345:android.text.SpannableStringBuilder append(java.lang.CharSequence) -> append
    351:352:android.text.SpannableStringBuilder append(char) -> append
    360:361:android.text.SpannableStringBuilder append(java.lang.CharSequence,int,int) -> append
    367:368:android.text.SpannableStringBuilder append(java.lang.CharSequence,java.lang.Object,int) -> append
    261:262:void beginBatchEdit() -> beginBatchEdit
    277:280:void blockWatchers() -> blockWatchers
    97:97:androidx.emoji2.text.SpannableBuilder create(java.lang.Class,java.lang.CharSequence) -> create
    49:49:android.text.Editable delete(int,int) -> delete
    337:338:android.text.SpannableStringBuilder delete(int,int) -> delete
    269:271:void endBatchEdit() -> endBatchEdit
    296:299:void fireWatchers() -> fireWatchers
    205:211:int getSpanEnd(java.lang.Object) -> getSpanEnd
    219:225:int getSpanFlags(java.lang.Object) -> getSpanFlags
    191:197:int getSpanStart(java.lang.Object) -> getSpanStart
    151:160:java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    247:253:androidx.emoji2.text.SpannableBuilder$WatcherWrapper getWatcherFor(java.lang.Object) -> getWatcherFor
    49:49:android.text.Editable insert(int,java.lang.CharSequence) -> insert
    49:49:android.text.Editable insert(int,java.lang.CharSequence,int,int) -> insert
    323:324:android.text.SpannableStringBuilder insert(int,java.lang.CharSequence) -> insert
    330:331:android.text.SpannableStringBuilder insert(int,java.lang.CharSequence,int,int) -> insert
    108:108:boolean isWatcher(java.lang.Object) -> isWatcher
    119:119:boolean isWatcher(java.lang.Class) -> isWatcher
    233:236:int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    170:184:void removeSpan(java.lang.Object) -> removeSpan
    49:49:android.text.Editable replace(int,int,java.lang.CharSequence) -> replace
    49:49:android.text.Editable replace(int,int,java.lang.CharSequence,int,int) -> replace
    304:307:android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence) -> replace
    314:317:android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int) -> replace
    135:141:void setSpan(java.lang.Object,int,int,int) -> setSpan
    125:125:java.lang.CharSequence subSequence(int,int) -> subSequence
    286:289:void unblockwatchers() -> unblockwatchers
androidx.emoji2.text.SpannableBuilder$WatcherWrapper -> androidx.emoji2.text.SpannableBuilder$WatcherWrapper:
    377:381:void <init>(java.lang.Object) -> <init>
    395:396:void afterTextChanged(android.text.Editable) -> afterTextChanged
    385:386:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    449:450:void blockCalls() -> blockCalls
    457:457:boolean isEmojiSpan(java.lang.Object) -> isEmojiSpan
    404:408:void onSpanAdded(android.text.Spannable,java.lang.Object,int,int) -> onSpanAdded
    429:446:void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int) -> onSpanChanged
    416:420:void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int) -> onSpanRemoved
    390:391:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    453:454:void unblockCalls() -> unblockCalls
androidx.emoji2.text.TypefaceEmojiSpan -> androidx.emoji2.text.TypefaceEmojiSpan:
    49:50:void <init>(androidx.emoji2.text.EmojiMetadata) -> <init>
    57:61:void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint) -> draw
    65:70:android.graphics.Paint getDebugPaint() -> getDebugPaint
androidx.emoji2.text.UnprecomputeTextOnModificationSpannable -> androidx.emoji2.text.UnprecomputeTextOnModificationSpannable:
    43:50:void <init>(android.text.Spannable) -> <init>
    43:58:void <init>(java.lang.CharSequence) -> <init>
    116:116:char charAt(int) -> charAt
    135:135:java.util.stream.IntStream chars() -> chars
    142:142:java.util.stream.IntStream codePoints() -> codePoints
    61:66:void ensureSafeWrites() -> ensureSafeWrites
    96:96:int getSpanEnd(java.lang.Object) -> getSpanEnd
    101:101:int getSpanFlags(java.lang.Object) -> getSpanFlags
    91:91:int getSpanStart(java.lang.Object) -> getSpanStart
    86:86:java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    69:69:android.text.Spannable getUnwrappedSpannable() -> getUnwrappedSpannable
    111:111:int length() -> length
    106:106:int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    161:162:androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$PrecomputedTextDetector precomputedTextDetector() -> precomputedTextDetector
    80:82:void removeSpan(java.lang.Object) -> removeSpan
    74:76:void setSpan(java.lang.Object,int,int,int) -> setSpan
    122:122:java.lang.CharSequence subSequence(int,int) -> subSequence
    128:128:java.lang.String toString() -> toString
androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$CharSequenceHelper_API24 -> androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$CharSequenceHelper_API24:
    156:156:java.util.stream.IntStream chars(java.lang.CharSequence) -> chars
    152:152:java.util.stream.IntStream codePoints(java.lang.CharSequence) -> codePoints
androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$PrecomputedTextDetector -> androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$PrecomputedTextDetector:
    165:165:void <init>() -> <init>
    168:168:boolean isPrecomputedText(java.lang.CharSequence) -> isPrecomputedText
androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$PrecomputedTextDetector_28 -> androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$PrecomputedTextDetector_28:
    173:173:void <init>() -> <init>
    177:177:boolean isPrecomputedText(java.lang.CharSequence) -> isPrecomputedText
androidx.emoji2.text.flatbuffer.MetadataItem -> androidx.emoji2.text.flatbuffer.MetadataItem:
    28:28:void <init>() -> <init>
    33:33:androidx.emoji2.text.flatbuffer.MetadataItem __assign(int,java.nio.ByteBuffer) -> __assign
    32:32:void __init(int,java.nio.ByteBuffer) -> __init
    41:41:int codepoints(int) -> codepoints
    42:42:int codepointsLength() -> codepointsLength
    36:36:boolean emojiStyle() -> emojiStyle
    40:40:short height() -> height
    35:35:int id() -> id
    37:37:short sdkAdded() -> sdkAdded
    39:39:short width() -> width
androidx.emoji2.text.flatbuffer.MetadataList -> androidx.emoji2.text.flatbuffer.MetadataList:
    28:28:void <init>() -> <init>
    33:33:androidx.emoji2.text.flatbuffer.MetadataList __assign(int,java.nio.ByteBuffer) -> __assign
    32:32:void __init(int,java.nio.ByteBuffer) -> __init
    30:30:androidx.emoji2.text.flatbuffer.MetadataList getRootAsMetadataList(java.nio.ByteBuffer) -> getRootAsMetadataList
    31:31:androidx.emoji2.text.flatbuffer.MetadataList getRootAsMetadataList(java.nio.ByteBuffer,androidx.emoji2.text.flatbuffer.MetadataList) -> getRootAsMetadataList
    37:37:androidx.emoji2.text.flatbuffer.MetadataItem list(androidx.emoji2.text.flatbuffer.MetadataItem,int) -> list
    38:38:int listLength() -> listLength
    35:35:int version() -> version
androidx.emoji2.text.flatbuffer.Table -> androidx.emoji2.text.flatbuffer.Table:
    28:37:void <init>() -> <init>
    68:68:int __indirect(int) -> __indirect
    53:53:int __offset(int) -> __offset
    298:308:void __reset(int,java.nio.ByteBuffer) -> __reset
    135:136:int __vector(int) -> __vector
    123:125:int __vector_len(int) -> __vector_len
androidx.emoji2.text.flatbuffer.Utf8 -> androidx.emoji2.text.flatbuffer.Utf8:
    25:25:void <init>() -> <init>
    62:65:androidx.emoji2.text.flatbuffer.Utf8 getDefault() -> getDefault
androidx.emoji2.text.flatbuffer.Utf8Safe -> androidx.emoji2.text.flatbuffer.Utf8Safe:
    63:63:void <init>() -> <init>
androidx.emoji2.viewsintegration.EmojiEditTextHelper -> androidx.emoji2.viewsintegration.EmojiEditTextHelper:
    73:112:void <init>(android.widget.EditText,boolean) -> <init>
    155:155:android.text.method.KeyListener getKeyListener(android.text.method.KeyListener) -> getKeyListener
    173:174:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    227:228:void setEnabled(boolean) -> setEnabled
androidx.emoji2.viewsintegration.EmojiEditTextHelper$HelperInternal -> androidx.emoji2.viewsintegration.EmojiEditTextHelper$HelperInternal:
    231:231:void <init>() -> <init>
androidx.emoji2.viewsintegration.EmojiEditTextHelper$HelperInternal19 -> androidx.emoji2.viewsintegration.EmojiEditTextHelper$HelperInternal19:
    265:270:void <init>(android.widget.EditText,boolean) -> <init>
    284:299:android.text.method.KeyListener getKeyListener(android.text.method.KeyListener) -> getKeyListener
    305:310:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    315:320:void setEnabled(boolean) -> setEnabled
androidx.emoji2.viewsintegration.EmojiEditableFactory -> androidx.emoji2.viewsintegration.EmojiEditableFactory:
    44:44:void <clinit>() -> <clinit>
    51:58:void <init>() -> <init>
    62:69:android.text.Editable$Factory getInstance() -> getInstance
    74:77:android.text.Editable newEditable(java.lang.CharSequence) -> newEditable
androidx.emoji2.viewsintegration.EmojiInputConnection -> androidx.emoji2.viewsintegration.EmojiInputConnection:
    49:50:void <init>(android.widget.TextView,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> <init>
    58:62:void <init>(android.widget.TextView,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.emoji2.viewsintegration.EmojiInputConnection$EmojiCompatDeleteHelper) -> <init>
    66:68:boolean deleteSurroundingText(int,int) -> deleteSurroundingText
    74:76:boolean deleteSurroundingTextInCodePoints(int,int) -> deleteSurroundingTextInCodePoints
    80:80:android.text.Editable getEditable() -> getEditable
androidx.emoji2.viewsintegration.EmojiInputConnection$EmojiCompatDeleteHelper -> androidx.emoji2.viewsintegration.EmojiInputConnection$EmojiCompatDeleteHelper:
    83:83:void <init>() -> <init>
    90:90:boolean handleDeleteSurroundingText(android.view.inputmethod.InputConnection,android.text.Editable,int,int,boolean) -> handleDeleteSurroundingText
    95:98:void updateEditorInfoAttrs(android.view.inputmethod.EditorInfo) -> updateEditorInfoAttrs
androidx.emoji2.viewsintegration.EmojiInputFilter -> androidx.emoji2.viewsintegration.EmojiInputFilter:
    49:51:void <init>(android.widget.TextView) -> <init>
    56:88:java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int) -> filter
    93:96:androidx.emoji2.text.EmojiCompat$InitCallback getInitCallback() -> getInitCallback
    163:170:void updateSelection(android.text.Spannable,int,int) -> updateSelection
androidx.emoji2.viewsintegration.EmojiInputFilter$InitCallbackImpl -> androidx.emoji2.viewsintegration.EmojiInputFilter$InitCallbackImpl:
    105:108:void <init>(android.widget.TextView,androidx.emoji2.viewsintegration.EmojiInputFilter) -> <init>
    144:158:boolean isInputFilterCurrentlyRegisteredOnTextView(android.widget.TextView,android.text.InputFilter) -> isInputFilterCurrentlyRegisteredOnTextView
    112:140:void onInitialized() -> onInitialized
androidx.emoji2.viewsintegration.EmojiKeyListener -> androidx.emoji2.viewsintegration.EmojiKeyListener:
    40:41:void <init>(android.text.method.KeyListener) -> <init>
    44:47:void <init>(android.text.method.KeyListener,androidx.emoji2.viewsintegration.EmojiKeyListener$EmojiCompatHandleKeyDownHelper) -> <init>
    73:74:void clearMetaKeyState(android.view.View,android.text.Editable,int) -> clearMetaKeyState
    51:51:int getInputType() -> getInputType
    56:58:boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent) -> onKeyDown
    68:68:boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent) -> onKeyOther
    63:63:boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent) -> onKeyUp
androidx.emoji2.viewsintegration.EmojiKeyListener$EmojiCompatHandleKeyDownHelper -> androidx.emoji2.viewsintegration.EmojiKeyListener$EmojiCompatHandleKeyDownHelper:
    76:76:void <init>() -> <init>
    79:79:boolean handleKeyDown(android.text.Editable,int,android.view.KeyEvent) -> handleKeyDown
androidx.emoji2.viewsintegration.EmojiTextViewHelper -> androidx.emoji2.viewsintegration.EmojiTextViewHelper:
    96:105:void <init>(android.widget.TextView,boolean) -> <init>
    132:132:android.text.InputFilter[] getFilters(android.text.InputFilter[]) -> getFilters
    173:174:void setAllCaps(boolean) -> setAllCaps
    163:164:void setEnabled(boolean) -> setEnabled
androidx.emoji2.viewsintegration.EmojiTextViewHelper$HelperInternal -> androidx.emoji2.viewsintegration.EmojiTextViewHelper$HelperInternal:
    184:184:void <init>() -> <init>
androidx.emoji2.viewsintegration.EmojiTextViewHelper$HelperInternal19 -> androidx.emoji2.viewsintegration.EmojiTextViewHelper$HelperInternal19:
    322:326:void <init>(android.widget.TextView) -> <init>
    365:374:android.text.InputFilter[] addEmojiInputFilterIfMissing(android.text.InputFilter[]) -> addEmojiInputFilterIfMissing
    409:415:android.util.SparseArray getEmojiInputFilterPositionArray(android.text.InputFilter[]) -> getEmojiInputFilterPositionArray
    349:353:android.text.InputFilter[] getFilters(android.text.InputFilter[]) -> getFilters
    385:401:android.text.InputFilter[] removeEmojiInputFilterIfPresent(android.text.InputFilter[]) -> removeEmojiInputFilterIfPresent
    465:468:void setAllCaps(boolean) -> setAllCaps
    472:475:void setEnabled(boolean) -> setEnabled
    491:492:void setEnabledUnsafe(boolean) -> setEnabledUnsafe
    435:440:android.text.method.TransformationMethod unwrapForDisabled(android.text.method.TransformationMethod) -> unwrapForDisabled
    342:344:void updateFilters() -> updateFilters
    333:336:void updateTransformationMethod() -> updateTransformationMethod
    452:457:android.text.method.TransformationMethod wrapForEnabled(android.text.method.TransformationMethod) -> wrapForEnabled
    422:425:android.text.method.TransformationMethod wrapTransformationMethod(android.text.method.TransformationMethod) -> wrapTransformationMethod
androidx.emoji2.viewsintegration.EmojiTextViewHelper$SkippingHelper19 -> androidx.emoji2.viewsintegration.EmojiTextViewHelper$SkippingHelper19:
    232:234:void <init>(android.widget.TextView) -> <init>
    261:264:android.text.InputFilter[] getFilters(android.text.InputFilter[]) -> getFilters
    289:293:void setAllCaps(boolean) -> setAllCaps
    303:308:void setEnabled(boolean) -> setEnabled
    237:237:boolean skipBecauseEmojiCompatNotInitialized() -> skipBecauseEmojiCompatNotInitialized
androidx.emoji2.viewsintegration.EmojiTextWatcher -> androidx.emoji2.viewsintegration.EmojiTextWatcher:
    44:53:void <init>(android.widget.EditText,boolean) -> <init>
    109:109:void afterTextChanged(android.text.Editable) -> afterTextChanged
    104:104:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    112:115:androidx.emoji2.text.EmojiCompat$InitCallback getInitCallback() -> getInitCallback
    74:95:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    151:162:void processTextOnEnablingEvent(android.widget.EditText,int) -> processTextOnEnablingEvent
    123:132:void setEnabled(boolean) -> setEnabled
    98:98:boolean shouldSkipForDisabledOrNotConfigured() -> shouldSkipForDisabledOrNotConfigured
androidx.emoji2.viewsintegration.EmojiTextWatcher$InitCallbackImpl -> androidx.emoji2.viewsintegration.EmojiTextWatcher$InitCallbackImpl:
    138:140:void <init>(android.widget.EditText) -> <init>
    144:147:void onInitialized() -> onInitialized
androidx.emoji2.viewsintegration.EmojiTransformationMethod -> androidx.emoji2.viewsintegration.EmojiTransformationMethod:
    39:41:void <init>(android.text.method.TransformationMethod) -> <init>
    81:81:android.text.method.TransformationMethod getOriginalTransformationMethod() -> getOriginalTransformationMethod
    45:64:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    70:74:void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
androidx.exifinterface.media.ExifInterface -> androidx.exifinterface.media.ExifInterface:
    92:3922:void <clinit>() -> <clinit>
    4008:4009:void <init>(java.io.InputStream) -> <init>
    3890:4054:void <init>(java.io.InputStream,int) -> <init>
    6726:6749:void addDefaultValuesForCompatibility() -> addDefaultValuesForCompatibility
    4128:4159:java.lang.String getAttribute(java.lang.String) -> getAttribute
    4171:4182:int getAttributeInt(java.lang.String,int) -> getAttributeInt
    4098:4117:androidx.exifinterface.media.ExifInterface$ExifAttribute getExifAttribute(java.lang.String) -> getExifAttribute
    5821:5979:void getHeifAttributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream) -> getHeifAttributes
    5582:5708:void getJpegAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,int,int) -> getJpegAttributes
    5342:5362:int getMimeType(java.io.BufferedInputStream) -> getMimeType
    6004:6079:void getOrfAttributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream) -> getOrfAttributes
    6114:6196:void getPngAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream) -> getPngAttributes
    5762:5816:void getRafAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream) -> getRafAttributes
    5712:5750:void getRawAttributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream) -> getRawAttributes
    6085:6110:void getRw2Attributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream) -> getRw2Attributes
    5982:5989:void getStandaloneAttributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream) -> getStandaloneAttributes
    6202:6275:void getWebpAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream) -> getWebpAttributes
    7084:7117:void handleThumbnailFromJfif(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,java.util.HashMap) -> handleThumbnailFromJfif
    7122:7200:void handleThumbnailFromStrips(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,java.util.HashMap) -> handleThumbnailFromStrips
    5557:5566:boolean isExifDataOnly(java.io.BufferedInputStream) -> isExifDataOnly
    5395:5462:boolean isHeifFormat(byte[]) -> isHeifFormat
    5370:5375:boolean isJpegFormat(byte[]) -> isJpegFormat
    5474:5493:boolean isOrfFormat(byte[]) -> isOrfFormat
    5528:5533:boolean isPngFormat(byte[]) -> isPngFormat
    5385:5391:boolean isRafFormat(byte[]) -> isRafFormat
    5501:5520:boolean isRw2Format(byte[]) -> isRw2Format
    4635:4643:boolean isSeekableFD(java.io.FileDescriptor) -> isSeekableFD
    7204:7234:boolean isSupportedDataType(java.util.HashMap) -> isSupportedDataType
    7240:7250:boolean isThumbnail(java.util.HashMap) -> isThumbnail
    5542:5553:boolean isWebpFormat(byte[]) -> isWebpFormat
    4570:4632:void loadAttributes(java.io.InputStream) -> loadAttributes
    6773:6792:void parseTiffHeaders(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream) -> parseTiffHeaders
    4651:4659:void printAttributes() -> printAttributes
    6754:6767:java.nio.ByteOrder readByteOrder(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream) -> readByteOrder
    6714:6722:void readExifSegment(byte[],int) -> readExifSegment
    6798:7013:void readImageFileDirectory(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream,int) -> readImageFileDirectory
    8056:8063:void replaceInvalidTags(int,java.lang.String,java.lang.String) -> replaceInvalidTags
    7024:7050:void retrieveJpegImageSize(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream,int) -> retrieveJpegImageSize
    7054:7078:void setThumbnailData(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream) -> setThumbnailData
    8072:8076:boolean shouldSupportSeek(int) -> shouldSupportSeek
    8016:8053:void swapBasedOnImageSize(int,int) -> swapBasedOnImageSize
    7312:7374:void updateImageSizeValues(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream,int) -> updateImageSizeValues
    7256:7297:void validateImages() -> validateImages
androidx.exifinterface.media.ExifInterface$1 -> androidx.exifinterface.media.ExifInterface$1:
    5824:5824:void <init>(androidx.exifinterface.media.ExifInterface,androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream) -> <init>
    5828:5828:void close() -> close
    5873:5873:long getSize() -> getSize
    5833:5868:int readAt(long,byte[],int,int) -> readAt
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream -> androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream:
    7719:7720:void <clinit>() -> <clinit>
    7729:7730:void <init>(byte[]) -> <init>
    7733:7734:void <init>(java.io.InputStream) -> <init>
    7723:7741:void <init>(java.io.InputStream,java.nio.ByteOrder) -> <init>
    7753:7753:int available() -> available
    7941:7941:void mark(int) -> mark
    7748:7748:int position() -> position
    7758:7759:int read() -> read
    7764:7766:int read(byte[],int,int) -> read
    7783:7784:boolean readBoolean() -> readBoolean
    7813:7818:byte readByte() -> readByte
    7789:7790:char readChar() -> readChar
    7936:7936:double readDouble() -> readDouble
    7931:7931:float readFloat() -> readFloat
    7801:7803:void readFully(byte[],int,int) -> readFully
    7807:7809:void readFully(byte[]) -> readFully
    7839:7852:int readInt() -> readInt
    7777:7778:java.lang.String readLine() -> readLine
    7905:7926:long readLong() -> readLong
    7823:7834:short readShort() -> readShort
    7795:7796:java.lang.String readUTF() -> readUTF
    7771:7772:int readUnsignedByte() -> readUnsignedByte
    7900:7900:long readUnsignedInt() -> readUnsignedInt
    7885:7896:int readUnsignedShort() -> readUnsignedShort
    7946:7946:void reset() -> reset
    7744:7745:void setByteOrder(java.nio.ByteOrder) -> setByteOrder
    7857:7857:int skipBytes(int) -> skipBytes
    7866:7881:void skipFully(int) -> skipFully
androidx.exifinterface.media.ExifInterface$ExifAttribute -> androidx.exifinterface.media.ExifInterface$ExifAttribute:
    3113:3114:void <init>(int,int,byte[]) -> <init>
    3117:3122:void <init>(int,int,long,byte[]) -> <init>
    3177:3178:androidx.exifinterface.media.ExifInterface$ExifAttribute createString(java.lang.String) -> createString
    3139:3145:androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long[],java.nio.ByteOrder) -> createULong
    3149:3149:androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder) -> createULong
    3182:3189:androidx.exifinterface.media.ExifInterface$ExifAttribute createURational(androidx.exifinterface.media.ExifInterface$Rational[],java.nio.ByteOrder) -> createURational
    3193:3193:androidx.exifinterface.media.ExifInterface$ExifAttribute createURational(androidx.exifinterface.media.ExifInterface$Rational,java.nio.ByteOrder) -> createURational
    3125:3131:androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int[],java.nio.ByteOrder) -> createUShort
    3135:3135:androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder) -> createUShort
    3354:3389:double getDoubleValue(java.nio.ByteOrder) -> getDoubleValue
    3393:3414:int getIntValue(java.nio.ByteOrder) -> getIntValue
    3418:3469:java.lang.String getStringValue(java.nio.ByteOrder) -> getStringValue
    3232:3350:java.lang.Object getValue(java.nio.ByteOrder) -> getValue
    3227:3227:java.lang.String toString() -> toString
androidx.exifinterface.media.ExifInterface$ExifTag -> androidx.exifinterface.media.ExifInterface$ExifTag:
    3485:3490:void <init>(java.lang.String,int,int) -> <init>
    3493:3498:void <init>(java.lang.String,int,int,int) -> <init>
    3502:3516:boolean isFormatCompatible(int) -> isFormatCompatible
androidx.exifinterface.media.ExifInterface$Rational -> androidx.exifinterface.media.ExifInterface$Rational:
    3081:3090:void <init>(long,long) -> <init>
    3098:3098:double calculate() -> calculate
    3094:3094:java.lang.String toString() -> toString
androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream -> androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream:
    7679:7683:void <init>(byte[]) -> <init>
    7690:7700:void <init>(java.io.InputStream) -> <init>
    7707:7714:void seek(long) -> seek
androidx.exifinterface.media.ExifInterfaceUtils -> androidx.exifinterface.media.ExifInterfaceUtils:
    109:113:java.lang.String byteArrayToHexString(byte[]) -> byteArrayToHexString
    80:90:long[] convertToLongArray(java.lang.Object) -> convertToLongArray
    94:105:boolean startsWith(byte[],byte[]) -> startsWith
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl -> androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl:
    179:180:void close(java.io.FileDescriptor) -> close
    169:169:java.io.FileDescriptor dup(java.io.FileDescriptor) -> dup
    174:174:long lseek(java.io.FileDescriptor,long,int) -> lseek
androidx.exifinterface.media.ExifInterfaceUtils$Api23Impl -> androidx.exifinterface.media.ExifInterfaceUtils$Api23Impl:
    189:190:void setDataSource(android.media.MediaMetadataRetriever,android.media.MediaDataSource) -> setDataSource
androidx.fragment.app.BackStackRecord -> androidx.fragment.app.BackStackRecord:
    38:142:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    264:281:void bumpBackStackNesting(int) -> bumpBackStackNesting
    294:294:int commit() -> commit
    299:299:int commitAllowingStateLoss() -> commitAllowingStateLoss
    315:330:int commitInternal(boolean) -> commitInternal
    304:306:void commitNow() -> commitNow
    310:312:void commitNowAllowingStateLoss() -> commitNowAllowingStateLoss
    183:185:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> doAddOp
    58:59:void dump(java.lang.String,java.io.PrintWriter) -> dump
    62:135:void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    402:461:void executeOps() -> executeOps
    471:529:void executePopOps(boolean) -> executePopOps
    555:620:androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment) -> expandOps
    345:354:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
    687:687:java.lang.String getName() -> getName
    201:206:androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment) -> hide
    358:366:boolean interactsWith(int) -> interactsWith
    370:394:boolean interactsWith(java.util.ArrayList,int,int) -> interactsWith
    679:681:boolean isFragmentPostponed(androidx.fragment.app.FragmentTransaction$Op) -> isFragmentPostponed
    660:666:boolean isPostponed() -> isPostponed
    190:195:androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment) -> remove
    284:290:void runOnCommitRunnables() -> runOnCommitRunnables
    670:676:void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> setOnStartPostponedListener
    212:217:androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment) -> show
    42:54:java.lang.String toString() -> toString
    634:656:androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment) -> trackAddedFragmentsInPop
androidx.fragment.app.BackStackState -> androidx.fragment.app.BackStackState:
    169:169:void <clinit>() -> <clinit>
    48:81:void <init>(androidx.fragment.app.BackStackRecord) -> <init>
    83:98:void <init>(android.os.Parcel) -> <init>
    148:148:int describeContents() -> describeContents
    101:143:androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManager) -> instantiate
    153:167:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.BackStackState$1 -> androidx.fragment.app.BackStackState$1:
    170:170:void <init>() -> <init>
    170:170:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    173:173:androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    170:170:java.lang.Object[] newArray(int) -> newArray
    178:178:androidx.fragment.app.BackStackState[] newArray(int) -> newArray
androidx.fragment.app.DefaultSpecialEffectsController -> androidx.fragment.app.DefaultSpecialEffectsController:
    52:53:void <init>(android.view.ViewGroup) -> <init>
    742:744:void applyContainerChanges(androidx.fragment.app.SpecialEffectsController$Operation) -> applyContainerChanges
    697:717:void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    59:127:void executeOperations(java.util.List,boolean) -> executeOperations
    724:738:void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    679:686:void retainMatchingViews(androidx.collection.ArrayMap,java.util.Collection) -> retainMatchingViews
    132:281:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map) -> startAnimations
    288:667:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation) -> startTransitions
androidx.fragment.app.DefaultSpecialEffectsController$1 -> androidx.fragment.app.DefaultSpecialEffectsController$1:
    103:103:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,java.util.List,androidx.fragment.app.SpecialEffectsController$Operation) -> <init>
    106:110:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$10 -> androidx.fragment.app.DefaultSpecialEffectsController$10:
    63:63:void <clinit>() -> <clinit>
androidx.fragment.app.DefaultSpecialEffectsController$2 -> androidx.fragment.app.DefaultSpecialEffectsController$2:
    181:181:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.view.ViewGroup,android.view.View,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo) -> <init>
    184:191:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.DefaultSpecialEffectsController$3 -> androidx.fragment.app.DefaultSpecialEffectsController$3:
    197:197:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.animation.Animator) -> <init>
    200:201:void onCancel() -> onCancel
androidx.fragment.app.DefaultSpecialEffectsController$4 -> androidx.fragment.app.DefaultSpecialEffectsController$4:
    245:245:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.view.ViewGroup,android.view.View,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo) -> <init>
    255:262:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    266:266:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    248:248:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
androidx.fragment.app.DefaultSpecialEffectsController$4$1 -> androidx.fragment.app.DefaultSpecialEffectsController$4$1:
    255:255:void <init>(androidx.fragment.app.DefaultSpecialEffectsController$4) -> <init>
    258:260:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$5 -> androidx.fragment.app.DefaultSpecialEffectsController$5:
    272:272:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.view.View,android.view.ViewGroup,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo) -> <init>
    275:278:void onCancel() -> onCancel
androidx.fragment.app.DefaultSpecialEffectsController$6 -> androidx.fragment.app.DefaultSpecialEffectsController$6:
    454:454:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation,boolean,androidx.collection.ArrayMap) -> <init>
    457:460:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$7 -> androidx.fragment.app.DefaultSpecialEffectsController$7:
    485:485:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.FragmentTransitionImpl,android.view.View,android.graphics.Rect) -> <init>
    488:490:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$8 -> androidx.fragment.app.DefaultSpecialEffectsController$8:
    577:577:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,java.util.ArrayList) -> <init>
    580:582:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$9 -> androidx.fragment.app.DefaultSpecialEffectsController$9:
    639:639:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo) -> <init>
    642:643:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo -> androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo:
    783:791:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean) -> <init>
    795:803:androidx.fragment.app.FragmentAnim$AnimationOrAnimator getAnimation(android.content.Context) -> getAnimation
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo -> androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo:
    752:755:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal) -> <init>
    776:777:void completeSpecialEffect() -> completeSpecialEffect
    759:759:androidx.fragment.app.SpecialEffectsController$Operation getOperation() -> getOperation
    764:764:androidx.core.os.CancellationSignal getSignal() -> getSignal
    768:771:boolean isVisibilityUnchanged() -> isVisibilityUnchanged
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo -> androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo:
    817:845:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean) -> <init>
    867:879:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl() -> getHandlingImpl
    884:896:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl(java.lang.Object) -> getHandlingImpl
    862:862:java.lang.Object getSharedElementTransition() -> getSharedElementTransition
    849:849:java.lang.Object getTransition() -> getTransition
    857:857:boolean hasSharedElementTransition() -> hasSharedElementTransition
    853:853:boolean isOverlapAllowed() -> isOverlapAllowed
androidx.fragment.app.DialogFragment -> androidx.fragment.app.DialogFragment:
    107:189:void <init>() -> <init>
    60:60:android.app.Dialog access$000(androidx.fragment.app.DialogFragment) -> access$000
    60:60:android.content.DialogInterface$OnDismissListener access$100(androidx.fragment.app.DialogFragment) -> access$100
    60:60:boolean access$200(androidx.fragment.app.DialogFragment) -> access$200
    505:506:androidx.fragment.app.FragmentContainer createFragmentContainer() -> createFragmentContainer
    307:308:void dismiss() -> dismiss
    321:358:void dismissInternal(boolean,boolean) -> dismissInternal
    367:367:android.app.Dialog getDialog() -> getDialog
    388:388:int getTheme() -> getTheme
    445:452:void onAttach(android.content.Context) -> onAttach
    620:620:void onCancel(android.content.DialogInterface) -> onCancel
    471:484:void onCreate(android.os.Bundle) -> onCreate
    612:615:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    737:756:void onDestroyView() -> onDestroyView
    457:465:void onDetach() -> onDetach
    624:634:void onDismiss(android.content.DialogInterface) -> onDismiss
    525:528:android.view.View onFindViewById(int) -> onFindViewById
    545:567:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    532:532:boolean onHasView() -> onHasView
    699:720:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    683:694:void onStart() -> onStart
    725:729:void onStop() -> onStop
    671:678:void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    489:500:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    637:666:void prepareDialog(android.os.Bundle) -> prepareDialog
    379:383:android.app.Dialog requireDialog() -> requireDialog
    573:585:void setupDialog(android.app.Dialog,int) -> setupDialog
androidx.fragment.app.DialogFragment$1 -> androidx.fragment.app.DialogFragment$1:
    107:107:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    111:112:void run() -> run
androidx.fragment.app.DialogFragment$2 -> androidx.fragment.app.DialogFragment$2:
    116:116:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    120:123:void onCancel(android.content.DialogInterface) -> onCancel
androidx.fragment.app.DialogFragment$3 -> androidx.fragment.app.DialogFragment$3:
    127:127:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    131:134:void onDismiss(android.content.DialogInterface) -> onDismiss
androidx.fragment.app.DialogFragment$4 -> androidx.fragment.app.DialogFragment$4:
    143:143:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    143:143:void onChanged(java.lang.Object) -> onChanged
    147:161:void onChanged(androidx.lifecycle.LifecycleOwner) -> onChanged
androidx.fragment.app.DialogFragment$5 -> androidx.fragment.app.DialogFragment$5:
    506:506:void <init>(androidx.fragment.app.DialogFragment,androidx.fragment.app.FragmentContainer) -> <init>
    510:513:android.view.View onFindViewById(int) -> onFindViewById
    518:518:boolean onHasView() -> onHasView
androidx.fragment.app.Fragment -> androidx.fragment.app.Fragment:
    122:122:void <clinit>() -> <clinit>
    134:538:void <init>() -> <init>
    563:565:void <init>(int) -> <init>
    2758:2788:void callStartTransitionListener(boolean) -> callStartTransitionListener
    2896:2896:androidx.fragment.app.FragmentContainer createFragmentContainer() -> createFragmentContainer
    2802:2884:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    3263:3266:androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo() -> ensureAnimationInfo
    665:665:boolean equals(java.lang.Object) -> equals
    2888:2891:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    3541:3541:java.lang.String generateActivityResultKey() -> generateActivityResultKey
    914:914:androidx.fragment.app.FragmentActivity getActivity() -> getActivity
    2613:2614:boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    2638:2639:boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    3374:3377:android.view.View getAnimatingAway() -> getAnimatingAway
    3389:3392:android.animation.Animator getAnimator() -> getAnimator
    735:735:android.os.Bundle getArguments() -> getArguments
    1074:1077:androidx.fragment.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    887:887:android.content.Context getContext() -> getContext
    426:450:androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory() -> getDefaultViewModelProviderFactory
    3280:3283:int getEnterAnim() -> getEnterAnim
    2396:2399:java.lang.Object getEnterTransition() -> getEnterTransition
    3360:3363:androidx.core.app.SharedElementCallback getEnterTransitionCallback() -> getEnterTransitionCallback
    3287:3290:int getExitAnim() -> getExitAnim
    2475:2478:java.lang.Object getExitTransition() -> getExitTransition
    3367:3370:androidx.core.app.SharedElementCallback getExitTransitionCallback() -> getExitTransitionCallback
    3411:3414:android.view.View getFocusedView() -> getFocusedView
    1021:1021:androidx.fragment.app.FragmentManager getFragmentManager() -> getFragmentManager
    941:941:java.lang.Object getHost() -> getHost
    704:704:int getId() -> getId
    1638:1641:android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    1672:1678:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    319:319:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    1357:1357:androidx.loader.app.LoaderManager getLoaderManager() -> getLoaderManager
    410:413:int getMinimumMaxLifecycleState() -> getMinimumMaxLifecycleState
    3322:3325:int getNextTransition() -> getNextTransition
    1086:1086:androidx.fragment.app.Fragment getParentFragment() -> getParentFragment
    1038:1043:androidx.fragment.app.FragmentManager getParentFragmentManager() -> getParentFragmentManager
    3308:3311:boolean getPopDirection() -> getPopDirection
    3294:3297:int getPopEnterAnim() -> getPopEnterAnim
    3301:3304:int getPopExitAnim() -> getPopExitAnim
    3400:3403:float getPostOnViewCreatedAlpha() -> getPostOnViewCreatedAlpha
    2513:2517:java.lang.Object getReenterTransition() -> getReenterTransition
    964:964:android.content.res.Resources getResources() -> getResources
    1261:1261:boolean getRetainInstance() -> getRetainInstance
    2435:2439:java.lang.Object getReturnTransition() -> getReturnTransition
    456:456:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    2546:2549:java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    2584:2589:java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    3338:3341:java.util.ArrayList getSharedElementSourceNames() -> getSharedElementSourceNames
    3346:3349:java.util.ArrayList getSharedElementTargetNames() -> getSharedElementTargetNames
    986:986:java.lang.String getString(int) -> getString
    999:999:java.lang.String getString(int,java.lang.Object[]) -> getString
    712:712:java.lang.String getTag() -> getTag
    855:863:androidx.fragment.app.Fragment getTargetFragment() -> getTargetFragment
    877:877:int getTargetRequestCode() -> getTargetRequestCode
    975:975:java.lang.CharSequence getText(int) -> getText
    1345:1345:boolean getUserVisibleHint() -> getUserVisibleHint
    1951:1951:android.view.View getView() -> getView
    360:364:androidx.lifecycle.LifecycleOwner getViewLifecycleOwner() -> getViewLifecycleOwner
    381:381:androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData() -> getViewLifecycleOwnerLiveData
    397:405:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    1191:1191:boolean hasOptionsMenu() -> hasOptionsMenu
    672:672:int hashCode() -> hashCode
    568:573:void initLifecycle() -> initLifecycle
    2164:2180:void initState() -> initState
    585:585:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    611:631:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    1116:1116:boolean isAdded() -> isAdded
    1125:1125:boolean isDetached() -> isDetached
    1184:1184:boolean isHidden() -> isHidden
    3425:3428:boolean isHideReplaced() -> isHideReplaced
    658:658:boolean isInBackStack() -> isInBackStack
    1155:1155:boolean isInLayout() -> isInLayout
    1197:1198:boolean isMenuVisible() -> isMenuVisible
    3418:3421:boolean isPostponed() -> isPostponed
    1134:1134:boolean isRemoving() -> isRemoving
    1143:1144:boolean isRemovingParent() -> isRemovingParent
    1163:1163:boolean isResumed() -> isResumed
    762:765:boolean isStateSaved() -> isStateSaved
    1172:1173:boolean isVisible() -> isVisible
    3052:3053:void noteStateNotSaved() -> noteStateNotSaved
    1996:1997:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    1489:1494:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    1779:1785:void onAttach(android.content.Context) -> onAttach
    1798:1799:void onAttach(android.app.Activity) -> onAttach
    1769:1769:void onAttachFragment(androidx.fragment.app.Fragment) -> onAttachFragment
    2085:2086:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    2343:2343:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    1866:1871:void onCreate(android.os.Bundle) -> onCreate
    1819:1819:android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    1841:1841:android.animation.Animator onCreateAnimator(int,boolean,int) -> onCreateAnimator
    2295:2296:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    2207:2207:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    1923:1926:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    2154:2155:void onDestroy() -> onDestroy
    2236:2236:void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    2144:2145:void onDestroyView() -> onDestroyView
    2189:2190:void onDetach() -> onDetach
    1622:1622:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    1209:1209:void onHiddenChanged(boolean) -> onHiddenChanged
    1727:1733:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle) -> onInflate
    1747:1748:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    2129:2130:void onLowMemory() -> onLowMemory
    2070:2070:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    2259:2259:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    2272:2272:void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    2111:2112:void onPause() -> onPause
    2080:2080:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    2225:2225:void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    2101:2101:void onPrimaryNavigationFragmentChanged(boolean) -> onPrimaryNavigationFragmentChanged
    1591:1591:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    2035:2036:void onResume() -> onResume
    2059:2059:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    2023:2024:void onStart() -> onStart
    2122:2123:void onStop() -> onStop
    1941:1941:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    2012:2013:void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    2993:3003:void performActivityCreated(android.os.Bundle) -> performActivityCreated
    2915:2929:void performAttach() -> performAttach
    3077:3079:void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    3132:3138:boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    2932:2956:void performCreate(android.os.Bundle) -> performCreate
    3096:3104:boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    2960:2982:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    3214:3224:void performDestroy() -> performDestroy
    3193:3211:void performDestroyView() -> performDestroyView
    3227:3243:void performDetach() -> performDetach
    1654:1655:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle) -> performGetLayoutInflater
    3082:3084:void performLowMemory() -> performLowMemory
    3067:3069:void performMultiWindowModeChanged(boolean) -> performMultiWindowModeChanged
    3120:3128:boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    3142:3148:void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    3161:3173:void performPause() -> performPause
    3072:3074:void performPictureInPictureModeChanged(boolean) -> performPictureInPictureModeChanged
    3108:3116:boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    3056:3064:void performPrimaryNavigationFragmentChanged() -> performPrimaryNavigationFragmentChanged
    3035:3049:void performResume() -> performResume
    3151:3157:void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    3017:3031:void performStart() -> performStart
    3177:3189:void performStop() -> performStop
    2987:2989:void performViewCreated() -> performViewCreated
    2674:2675:void postponeEnterTransition() -> postponeEnterTransition
    2709:2718:void postponeEnterTransition(long,java.util.concurrent.TimeUnit) -> postponeEnterTransition
    3481:3502:androidx.activity.result.ActivityResultLauncher prepareCallInternal(androidx.activity.result.contract.ActivityResultContract,androidx.arch.core.util.Function,androidx.activity.result.ActivityResultCallback) -> prepareCallInternal
    3449:3449:androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback) -> registerForActivityResult
    3467:3467:androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultRegistry,androidx.activity.result.ActivityResultCallback) -> registerForActivityResult
    2309:2310:void registerForContextMenu(android.view.View) -> registerForContextMenu
    3531:3537:void registerOnPreAttachListener(androidx.fragment.app.Fragment$OnPreAttachedListener) -> registerOnPreAttachListener
    1558:1562:void requestPermissions(java.lang.String[],int) -> requestPermissions
    926:930:androidx.fragment.app.FragmentActivity requireActivity() -> requireActivity
    746:750:android.os.Bundle requireArguments() -> requireArguments
    898:902:android.content.Context requireContext() -> requireContext
    1065:1065:androidx.fragment.app.FragmentManager requireFragmentManager() -> requireFragmentManager
    952:956:java.lang.Object requireHost() -> requireHost
    1098:1109:androidx.fragment.app.Fragment requireParentFragment() -> requireParentFragment
    1962:1967:android.view.View requireView() -> requireView
    1886:1894:void restoreChildFragmentState(android.os.Bundle) -> restoreChildFragmentState
    638:655:void restoreViewState(android.os.Bundle) -> restoreViewState
    3006:3013:void restoreViewState() -> restoreViewState
    2601:2602:void setAllowEnterTransitionOverlap(boolean) -> setAllowEnterTransitionOverlap
    2626:2627:void setAllowReturnTransitionOverlap(boolean) -> setAllowReturnTransitionOverlap
    3381:3382:void setAnimatingAway(android.view.View) -> setAnimatingAway
    3270:3277:void setAnimations(int,int,int,int) -> setAnimations
    3385:3386:void setAnimator(android.animation.Animator) -> setAnimator
    723:727:void setArguments(android.os.Bundle) -> setArguments
    2354:2355:void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback) -> setEnterSharedElementCallback
    2382:2383:void setEnterTransition(java.lang.Object) -> setEnterTransition
    2365:2366:void setExitSharedElementCallback(androidx.core.app.SharedElementCallback) -> setExitSharedElementCallback
    2458:2459:void setExitTransition(java.lang.Object) -> setExitTransition
    3407:3408:void setFocusedView(android.view.View) -> setFocusedView
    1272:1278:void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    3432:3433:void setHideReplaced(boolean) -> setHideReplaced
    777:782:void setInitialSavedState(androidx.fragment.app.Fragment$SavedState) -> setInitialSavedState
    1290:1296:void setMenuVisibility(boolean) -> setMenuVisibility
    3329:3334:void setNextTransition(int) -> setNextTransition
    3246:3260:void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> setOnStartEnterTransitionListener
    3315:3319:void setPopDirection(boolean) -> setPopDirection
    3396:3397:void setPostOnViewCreatedAlpha(float) -> setPostOnViewCreatedAlpha
    2497:2498:void setReenterTransition(java.lang.Object) -> setReenterTransition
    1235:1245:void setRetainInstance(boolean) -> setRetainInstance
    2418:2419:void setReturnTransition(java.lang.Object) -> setReturnTransition
    2532:2533:void setSharedElementEnterTransition(java.lang.Object) -> setSharedElementEnterTransition
    3354:3357:void setSharedElementNames(java.util.ArrayList,java.util.ArrayList) -> setSharedElementNames
    2567:2568:void setSharedElementReturnTransition(java.lang.Object) -> setSharedElementReturnTransition
    812:840:void setTargetFragment(androidx.fragment.app.Fragment,int) -> setTargetFragment
    1322:1334:void setUserVisibleHint(boolean) -> setUserVisibleHint
    1604:1607:boolean shouldShowRequestPermissionRationale(java.lang.String) -> shouldShowRequestPermissionRationale
    1365:1366:void startActivity(android.content.Intent) -> startActivity
    1374:1378:void startActivity(android.content.Intent,android.os.Bundle) -> startActivity
    1398:1399:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    1421:1426:void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    1455:1465:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    2731:2747:void startPostponedEnterTransition() -> startPostponedEnterTransition
    678:695:java.lang.String toString() -> toString
    2320:2321:void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
androidx.fragment.app.Fragment$1 -> androidx.fragment.app.Fragment$1:
    256:256:void <init>(androidx.fragment.app.Fragment) -> <init>
    259:260:void run() -> run
androidx.fragment.app.Fragment$2 -> androidx.fragment.app.Fragment$2:
    2738:2738:void <init>(androidx.fragment.app.Fragment) -> <init>
    2741:2742:void run() -> run
androidx.fragment.app.Fragment$3 -> androidx.fragment.app.Fragment$3:
    2777:2777:void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.SpecialEffectsController) -> <init>
    2780:2781:void run() -> run
androidx.fragment.app.Fragment$4 -> androidx.fragment.app.Fragment$4:
    2896:2896:void <init>(androidx.fragment.app.Fragment) -> <init>
    2900:2904:android.view.View onFindViewById(int) -> onFindViewById
    2909:2909:boolean onHasView() -> onHasView
androidx.fragment.app.Fragment$5 -> androidx.fragment.app.Fragment$5:
    2936:2936:void <init>(androidx.fragment.app.Fragment) -> <init>
    2940:2945:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.fragment.app.Fragment$6 -> androidx.fragment.app.Fragment$6:
    3449:3449:void <init>(androidx.fragment.app.Fragment) -> <init>
    3449:3449:java.lang.Object apply(java.lang.Object) -> apply
    3452:3455:androidx.activity.result.ActivityResultRegistry apply(java.lang.Void) -> apply
androidx.fragment.app.Fragment$7 -> androidx.fragment.app.Fragment$7:
    3467:3467:void <init>(androidx.fragment.app.Fragment,androidx.activity.result.ActivityResultRegistry) -> <init>
    3467:3467:java.lang.Object apply(java.lang.Object) -> apply
    3470:3470:androidx.activity.result.ActivityResultRegistry apply(java.lang.Void) -> apply
androidx.fragment.app.Fragment$8 -> androidx.fragment.app.Fragment$8:
    3493:3493:void <init>(androidx.fragment.app.Fragment,androidx.arch.core.util.Function,java.util.concurrent.atomic.AtomicReference,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback) -> <init>
    3496:3499:void onPreAttached() -> onPreAttached
androidx.fragment.app.Fragment$9 -> androidx.fragment.app.Fragment$9:
    3502:3502:void <init>(androidx.fragment.app.Fragment,java.util.concurrent.atomic.AtomicReference,androidx.activity.result.contract.ActivityResultContract) -> <init>
    3505:3511:void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat) -> launch
    3515:3519:void unregister() -> unregister
androidx.fragment.app.Fragment$AnimationInfo -> androidx.fragment.app.Fragment$AnimationInfo:
    3558:3597:void <init>() -> <init>
androidx.fragment.app.Fragment$InstantiationException -> androidx.fragment.app.Fragment$InstantiationException:
    516:517:void <init>(java.lang.String,java.lang.Exception) -> <init>
androidx.fragment.app.Fragment$OnPreAttachedListener -> androidx.fragment.app.Fragment$OnPreAttachedListener:
    306:306:void <init>() -> <init>
    306:306:void <init>(androidx.fragment.app.Fragment$1) -> <init>
androidx.fragment.app.Fragment$SavedState -> androidx.fragment.app.Fragment$SavedState:
    490:490:void <clinit>() -> <clinit>
    472:477:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    481:481:int describeContents() -> describeContents
    486:487:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.Fragment$SavedState$1 -> androidx.fragment.app.Fragment$SavedState$1:
    491:491:void <init>() -> <init>
    491:491:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    491:491:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    494:494:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    499:499:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    491:491:java.lang.Object[] newArray(int) -> newArray
    504:504:androidx.fragment.app.Fragment$SavedState[] newArray(int) -> newArray
androidx.fragment.app.FragmentActivity -> androidx.fragment.app.FragmentActivity:
    84:105:void <init>() -> <init>
    84:121:void <init>(int) -> <init>
    319:319:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> dispatchFragmentsOnCreateView
    562:576:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    608:608:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    618:618:androidx.loader.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    125:153:void init() -> init
    823:825:void markFragmentsCreated() -> markFragmentsCreated
    828:848:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State) -> markState
    163:165:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    600:600:void onAttachFragment(androidx.fragment.app.Fragment) -> onAttachFragment
    261:264:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    273:277:void onCreate(android.os.Bundle) -> onCreate
    286:291:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    298:302:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    309:313:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    329:332:void onDestroy() -> onDestroy
    341:343:void onLowMemory() -> onLowMemory
    352:364:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    235:236:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    409:411:void onNewIntent(android.content.Intent) -> onNewIntent
    375:379:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    388:392:void onPause() -> onPause
    251:252:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    446:448:void onPostResume() -> onPostResume
    485:485:boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    469:474:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    635:637:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    433:437:void onResume() -> onResume
    457:459:void onResumeFragments() -> onResumeFragments
    495:511:void onStart() -> onStart
    421:422:void onStateNotSaved() -> onStateNotSaved
    520:527:void onStop() -> onStop
    190:191:void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback) -> setEnterSharedElementCallback
    203:204:void setExitSharedElementCallback(androidx.core.app.SharedElementCallback) -> setExitSharedElementCallback
    651:652:void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    671:678:void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> startActivityFromFragment
    710:717:void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderFromFragment
    178:179:void supportFinishAfterTransition() -> supportFinishAfterTransition
    545:546:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    211:212:void supportPostponeEnterTransition() -> supportPostponeEnterTransition
    219:220:void supportStartPostponedEnterTransition() -> supportStartPostponedEnterTransition
    628:628:void validateRequestPermissionsRequestCode(int) -> validateRequestPermissionsRequestCode
androidx.fragment.app.FragmentActivity$1 -> androidx.fragment.app.FragmentActivity$1:
    126:126:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    130:137:android.os.Bundle saveState() -> saveState
androidx.fragment.app.FragmentActivity$2 -> androidx.fragment.app.FragmentActivity$2:
    140:140:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    143:151:void onContextAvailable(android.content.Context) -> onContextAvailable
androidx.fragment.app.FragmentActivity$HostCallbacks -> androidx.fragment.app.FragmentActivity$HostCallbacks:
    724:726:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    816:816:androidx.activity.result.ActivityResultRegistry getActivityResultRegistry() -> getActivityResultRegistry
    735:735:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    747:747:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    741:741:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    798:799:void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onAttachFragment
    804:804:android.view.View onFindViewById(int) -> onFindViewById
    719:719:java.lang.Object onGetHost() -> onGetHost
    769:769:androidx.fragment.app.FragmentActivity onGetHost() -> onGetHost
    764:764:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    809:810:boolean onHasView() -> onHasView
    758:758:boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment) -> onShouldSaveFragmentState
    779:779:boolean onShouldShowRequestPermissionRationale(java.lang.String) -> onShouldShowRequestPermissionRationale
    774:775:void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
androidx.fragment.app.FragmentAnim -> androidx.fragment.app.FragmentAnim:
    146:211:void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentAnim$AnimationOrAnimator,androidx.fragment.app.FragmentTransition$Callback) -> animateRemoveFragment
    121:131:int getNextAnim(androidx.fragment.app.Fragment,boolean,boolean) -> getNextAnim
    46:117:androidx.fragment.app.FragmentAnim$AnimationOrAnimator loadAnimation(android.content.Context,androidx.fragment.app.Fragment,boolean,boolean) -> loadAnimation
    215:227:int transitToAnimResourceId(int,boolean) -> transitToAnimResourceId
androidx.fragment.app.FragmentAnim$1 -> androidx.fragment.app.FragmentAnim$1:
    150:150:void <init>(androidx.fragment.app.Fragment) -> <init>
    153:159:void onCancel() -> onCancel
androidx.fragment.app.FragmentAnim$2 -> androidx.fragment.app.FragmentAnim$2:
    166:166:void <init>(android.view.ViewGroup,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentTransition$Callback,androidx.core.os.CancellationSignal) -> <init>
    176:185:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    189:189:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    169:169:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
androidx.fragment.app.FragmentAnim$2$1 -> androidx.fragment.app.FragmentAnim$2$1:
    176:176:void <init>(androidx.fragment.app.FragmentAnim$2) -> <init>
    179:183:void run() -> run
androidx.fragment.app.FragmentAnim$3 -> androidx.fragment.app.FragmentAnim$3:
    195:195:void <init>(android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentTransition$Callback,androidx.core.os.CancellationSignal) -> <init>
    198:206:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentAnim$AnimationOrAnimator -> androidx.fragment.app.FragmentAnim$AnimationOrAnimator:
    237:243:void <init>(android.view.animation.Animation) -> <init>
    245:251:void <init>(android.animation.Animator) -> <init>
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation -> androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation:
    265:276:void <init>(android.view.animation.Animation,android.view.ViewGroup,android.view.View) -> <init>
    280:289:boolean getTransformation(long,android.view.animation.Transformation) -> getTransformation
    295:304:boolean getTransformation(long,android.view.animation.Transformation,float) -> getTransformation
    309:317:void run() -> run
androidx.fragment.app.FragmentContainer -> androidx.fragment.app.FragmentContainer:
    31:31:void <init>() -> <init>
    57:57:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
androidx.fragment.app.FragmentContainerView -> androidx.fragment.app.FragmentContainerView:
    120:121:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    109:146:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    109:183:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager) -> <init>
    395:401:void addDisappearingFragmentView(android.view.View) -> addDisappearingFragmentView
    308:314:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    326:331:boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> addViewInLayout
    235:246:android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets) -> dispatchApplyWindowInsets
    251:257:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    261:268:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    284:292:void endViewTransition(android.view.View) -> endViewTransition
    223:223:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets) -> onApplyWindowInsets
    373:378:void removeAllViewsInLayout() -> removeAllViewsInLayout
    382:386:void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    349:351:void removeView(android.view.View) -> removeView
    336:339:void removeViewAt(int) -> removeViewAt
    343:345:void removeViewInLayout(android.view.View) -> removeViewInLayout
    355:360:void removeViews(int,int) -> removeViews
    364:369:void removeViewsInLayout(int,int) -> removeViewsInLayout
    296:297:void setDrawDisappearingViewsLast(boolean) -> setDrawDisappearingViewsLast
    201:209:void setLayoutTransition(android.animation.LayoutTransition) -> setLayoutTransition
    216:217:void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    273:280:void startViewTransition(android.view.View) -> startViewTransition
androidx.fragment.app.FragmentController -> androidx.fragment.app.FragmentController:
    60:62:void <init>(androidx.fragment.app.FragmentHostCallback) -> <init>
    116:118:void attachHost(androidx.fragment.app.Fragment) -> attachHost
    57:57:androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback) -> createController
    251:252:void dispatchActivityCreated() -> dispatchActivityCreated
    367:368:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    429:429:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    240:241:void dispatchCreate() -> dispatchCreate
    391:391:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    334:335:void dispatchDestroy() -> dispatchDestroy
    379:380:void dispatchLowMemory() -> dispatchLowMemory
    345:346:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    416:416:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    440:441:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    284:285:void dispatchPause() -> dispatchPause
    356:357:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    403:403:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    273:274:void dispatchResume() -> dispatchResume
    262:263:void dispatchStart() -> dispatchStart
    295:296:void dispatchStop() -> dispatchStop
    451:451:boolean execPendingActions() -> execPendingActions
    69:69:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    142:143:void noteStateNotSaved() -> noteStateNotSaved
    134:135:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    193:199:void restoreSaveState(android.os.Parcelable) -> restoreSaveState
    152:152:android.os.Parcelable saveAllState() -> saveAllState
androidx.fragment.app.FragmentFactory -> androidx.fragment.app.FragmentFactory:
    33:33:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    70:73:boolean isFragmentClass(java.lang.ClassLoader,java.lang.String) -> isFragmentClass
    45:56:java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String) -> loadClass
    94:100:java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String) -> loadFragmentClass
androidx.fragment.app.FragmentHostCallback -> androidx.fragment.app.FragmentHostCallback:
    91:92:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    81:100:void <init>(android.app.Activity,android.content.Context,android.os.Handler,int) -> <init>
    242:242:android.app.Activity getActivity() -> getActivity
    247:247:android.content.Context getContext() -> getContext
    252:252:android.os.Handler getHandler() -> getHandler
    232:232:android.view.View onFindViewById(int) -> onFindViewById
    128:128:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    237:237:boolean onHasView() -> onHasView
    205:205:void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int) -> onRequestPermissionsFromFragment
    119:119:boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment) -> onShouldSaveFragmentState
    212:212:boolean onShouldShowRequestPermissionRationale(java.lang.String) -> onShouldShowRequestPermissionRationale
    162:167:void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> onStartActivityFromFragment
    184:190:void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> onStartIntentSenderFromFragment
    144:144:void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
androidx.fragment.app.FragmentLayoutInflaterFactory -> androidx.fragment.app.FragmentLayoutInflaterFactory:
    36:38:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    44:44:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    51:173:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
androidx.fragment.app.FragmentLayoutInflaterFactory$1 -> androidx.fragment.app.FragmentLayoutInflaterFactory$1:
    158:158:void <init>(androidx.fragment.app.FragmentLayoutInflaterFactory,androidx.fragment.app.FragmentStateManager) -> <init>
    161:167:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    170:170:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher -> androidx.fragment.app.FragmentLifecycleCallbacksDispatcher:
    46:55:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    155:167:void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentActivityCreated
    106:118:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentAttached
    138:150:void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentCreated
    272:283:void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDestroyed
    286:297:void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDetached
    214:225:void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentPaused
    91:103:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentPreAttached
    122:134:void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentPreCreated
    200:211:void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentResumed
    243:255:void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentSaveInstanceState
    186:197:void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStarted
    228:239:void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStopped
    171:183:void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean) -> dispatchOnFragmentViewCreated
    258:269:void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentViewDestroyed
androidx.fragment.app.FragmentManager -> androidx.fragment.app.FragmentManager:
    97:99:void <clinit>() -> <clinit>
    96:521:void <init>() -> <init>
    96:96:java.util.Map access$000(androidx.fragment.app.FragmentManager) -> access$000
    96:96:java.util.Map access$100(androidx.fragment.app.FragmentManager) -> access$100
    96:96:androidx.fragment.app.FragmentStore access$200(androidx.fragment.app.FragmentManager) -> access$200
    2458:2471:void addAddedFragments(androidx.collection.ArraySet) -> addAddedFragments
    2568:2572:void addBackStackState(androidx.fragment.app.BackStackRecord) -> addBackStackState
    833:837:void addCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> addCancellationSignal
    1708:1722:androidx.fragment.app.FragmentStateManager addFragment(androidx.fragment.app.Fragment) -> addFragment
    3417:3418:void addFragmentOnAttachListener(androidx.fragment.app.FragmentOnAttachListener) -> addFragmentOnAttachListener
    1104:1105:void addRetainedFragment(androidx.fragment.app.Fragment) -> addRetainedFragment
    1920:1920:int allocBackStackIndex() -> allocBackStackIndex
    2829:2972:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment) -> attachController
    1790:1801:void attachFragment(androidx.fragment.app.Fragment) -> attachFragment
    575:575:androidx.fragment.app.FragmentTransaction beginTransaction() -> beginTransaction
    1485:1494:void cancelExitAnimation(androidx.fragment.app.Fragment) -> cancelExitAnimation
    3446:3455:boolean checkForMenus() -> checkForMenus
    1843:1847:void checkStateLoss() -> checkStateLoss
    1987:1990:void cleanupExec() -> cleanupExec
    874:875:void clearFragmentResult(java.lang.String) -> clearFragmentResult
    2512:2521:java.util.Set collectAllSpecialEffectsController() -> collectAllSpecialEffectsController
    2240:2254:java.util.Set collectChangedControllers(java.util.ArrayList,int,int) -> collectChangedControllers
    2345:2381:void completeExecute(androidx.fragment.app.BackStackRecord,boolean,boolean,boolean) -> completeExecute
    1536:1582:void completeShowHideFragment(androidx.fragment.app.Fragment) -> completeShowHideFragment
    1694:1704:androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment) -> createOrGetFragmentStateManager
    1510:1519:void destroyFragmentView(androidx.fragment.app.Fragment) -> destroyFragmentView
    1774:1787:void detachFragment(androidx.fragment.app.Fragment) -> detachFragment
    3069:3073:void dispatchActivityCreated() -> dispatchActivityCreated
    3051:3055:void dispatchAttach() -> dispatchAttach
    3158:3163:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    3235:3245:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    3058:3062:void dispatchCreate() -> dispatchCreate
    3174:3202:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    3104:3122:void dispatchDestroy() -> dispatchDestroy
    3100:3101:void dispatchDestroyView() -> dispatchDestroyView
    3166:3171:void dispatchLowMemory() -> dispatchLowMemory
    3142:3147:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    3427:3430:void dispatchOnAttachFragment(androidx.fragment.app.Fragment) -> dispatchOnAttachFragment
    3221:3231:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    3249:3257:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    3272:3275:void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment) -> dispatchParentPrimaryNavigationFragmentChanged
    3090:3091:void dispatchPause() -> dispatchPause
    3150:3155:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    3206:3217:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    3278:3281:void dispatchPrimaryNavigationFragmentChanged() -> dispatchPrimaryNavigationFragmentChanged
    3083:3087:void dispatchResume() -> dispatchResume
    3076:3080:void dispatchStart() -> dispatchStart
    3126:3139:void dispatchStateChange(int) -> dispatchStateChange
    3094:3097:void dispatchStop() -> dispatchStop
    3065:3066:void dispatchViewCreated() -> dispatchViewCreated
    2553:2557:void doPendingDeferredStart() -> doPendingDeferredStart
    1208:1289:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    2496:2509:void endAnimatingAwayFragments() -> endAnimatingAwayFragments
    1875:1897:void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean) -> enqueueAction
    1930:1960:void ensureExecReady(boolean) -> ensureExecReady
    1996:2013:boolean execPendingActions(boolean) -> execPendingActions
    1963:1980:void execSingleAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean) -> execSingleAction
    2393:2407:void executeOps(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOps
    2120:2236:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOpsTogether
    2022:2052:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList) -> executePostponedTransaction
    1839:1839:androidx.fragment.app.Fragment findActiveFragment(java.lang.String) -> findActiveFragment
    1813:1813:androidx.fragment.app.Fragment findFragmentById(int) -> findFragmentById
    1830:1830:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    1834:1834:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    2477:2489:void forcePostponedTransactions() -> forcePostponedTransactions
    2536:2549:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList) -> generateOpsForPendingActions
    797:797:int getBackStackEntryCount() -> getBackStackEntryCount
    1100:1100:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> getChildNonConfig
    2817:2817:androidx.fragment.app.FragmentContainer getContainer() -> getContainer
    2430:2448:android.view.ViewGroup getFragmentContainer(androidx.fragment.app.Fragment) -> getFragmentContainer
    3334:3344:androidx.fragment.app.FragmentFactory getFragmentFactory() -> getFragmentFactory
    2822:2822:androidx.fragment.app.FragmentStore getFragmentStore() -> getFragmentStore
    1090:1090:java.util.List getFragments() -> getFragments
    2807:2807:androidx.fragment.app.FragmentHostCallback getHost() -> getHost
    3487:3487:android.view.LayoutInflater$Factory2 getLayoutInflaterFactory() -> getLayoutInflaterFactory
    3382:3382:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher() -> getLifecycleCallbacksDispatcher
    2812:2812:androidx.fragment.app.Fragment getParent() -> getParent
    3297:3297:androidx.fragment.app.Fragment getPrimaryNavigationFragment() -> getPrimaryNavigationFragment
    3367:3377:androidx.fragment.app.SpecialEffectsControllerFactory getSpecialEffectsControllerFactory() -> getSpecialEffectsControllerFactory
    1013:1017:androidx.fragment.app.Fragment getViewFragment(android.view.View) -> getViewFragment
    1095:1095:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> getViewModelStore
    661:674:void handleOnBackPressed() -> handleOnBackPressed
    1747:1755:void hideFragment(androidx.fragment.app.Fragment) -> hideFragment
    3463:3466:void invalidateMenuForFragment(androidx.fragment.app.Fragment) -> invalidateMenuForFragment
    1169:1169:boolean isDestroyed() -> isDestroyed
    141:141:boolean isLoggingEnabled(int) -> isLoggingEnabled
    3459:3459:boolean isMenuAvailable(androidx.fragment.app.Fragment) -> isMenuAvailable
    648:652:boolean isParentMenuVisible(androidx.fragment.app.Fragment) -> isParentMenuVisible
    630:640:boolean isPrimaryNavigation(androidx.fragment.app.Fragment) -> isPrimaryNavigation
    1309:1309:boolean isStateAtLeast(int) -> isStateAtLeast
    1864:1864:boolean isStateSaved() -> isStateSaved
    3041:3048:void launchRequestPermissions(androidx.fragment.app.Fragment,java.lang.String[],int) -> launchRequestPermissions
    2994:3004:void launchStartActivityForResult(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> launchStartActivityForResult
    3011:3036:void launchStartIntentSenderForResult(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> launchStartIntentSenderForResult
    2265:2274:void makeRemovedFragmentsInvisible(androidx.collection.ArraySet) -> makeRemovedFragmentsInvisible
    1591:1624:void moveFragmentToExpectedState(androidx.fragment.app.Fragment) -> moveFragmentToExpectedState
    1314:1480:void moveToState(androidx.fragment.app.Fragment,int) -> moveToState
    1522:1523:void moveToState(androidx.fragment.app.Fragment) -> moveToState
    1636:1675:void moveToState(int,boolean) -> moveToState
    2978:2989:void noteStateNotSaved() -> noteStateNotSaved
    1022:1031:void onContainerAvailable(androidx.fragment.app.FragmentContainerView) -> onContainerAvailable
    1292:1306:void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager) -> performPendingDeferredStart
    737:741:void popBackStack(int,int) -> popBackStack
    692:692:boolean popBackStackImmediate() -> popBackStackImmediate
    764:790:boolean popBackStackImmediate(java.lang.String,int,int) -> popBackStackImmediate
    2577:2628:boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int) -> popBackStackState
    2291:2324:int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet) -> postponePostponableTransactions
    847:857:void removeCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> removeCancellationSignal
    1726:1738:void removeFragment(androidx.fragment.app.Fragment) -> removeFragment
    2070:2108:void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList) -> removeRedundantOperationsAndExecute
    1108:1109:void removeRetainedFragment(androidx.fragment.app.Fragment) -> removeRetainedFragment
    2560:2565:void reportBackStackChanged() -> reportBackStackChanged
    2707:2803:void restoreSaveState(android.os.Parcelable) -> restoreSaveState
    3469:3481:int reverseTransit(int) -> reverseTransit
    2647:2692:android.os.Parcelable saveAllState() -> saveAllState
    1907:1917:void scheduleCommit() -> scheduleCommit
    1501:1507:void setExitAnimationOrder(androidx.fragment.app.Fragment,boolean) -> setExitAnimationOrder
    3301:3307:void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> setMaxLifecycle
    3260:3269:void setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> setPrimaryNavigationFragment
    2416:2426:void setVisibleRemovingFragment(androidx.fragment.app.Fragment) -> setVisibleRemovingFragment
    1764:1771:void showFragment(androidx.fragment.app.Fragment) -> showFragment
    1679:1682:void startPendingDeferredFragments() -> startPendingDeferredFragments
    1175:1195:java.lang.String toString() -> toString
    609:620:void updateOnBackPressedCallbackEnabled() -> updateOnBackPressedCallbackEnabled
androidx.fragment.app.FragmentManager$1 -> androidx.fragment.app.FragmentManager$1:
    433:433:void <init>(androidx.fragment.app.FragmentManager,boolean) -> <init>
    436:437:void handleOnBackPressed() -> handleOnBackPressed
androidx.fragment.app.FragmentManager$10 -> androidx.fragment.app.FragmentManager$10:
    2913:2913:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    2913:2913:void onActivityResult(java.lang.Object) -> onActivityResult
    2916:2934:void onActivityResult(androidx.activity.result.ActivityResult) -> onActivityResult
androidx.fragment.app.FragmentManager$11 -> androidx.fragment.app.FragmentManager$11:
    2939:2939:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    2939:2939:void onActivityResult(java.lang.Object) -> onActivityResult
    2943:2969:void onActivityResult(java.util.Map) -> onActivityResult
androidx.fragment.app.FragmentManager$2 -> androidx.fragment.app.FragmentManager$2:
    451:451:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    460:463:void onComplete(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> onComplete
    455:456:void onStart(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> onStart
androidx.fragment.app.FragmentManager$3 -> androidx.fragment.app.FragmentManager$3:
    478:478:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    483:483:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String) -> instantiate
androidx.fragment.app.FragmentManager$4 -> androidx.fragment.app.FragmentManager$4:
    488:488:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    492:492:androidx.fragment.app.SpecialEffectsController createController(android.view.ViewGroup) -> createController
androidx.fragment.app.FragmentManager$5 -> androidx.fragment.app.FragmentManager$5:
    521:521:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    524:525:void run() -> run
androidx.fragment.app.FragmentManager$6 -> androidx.fragment.app.FragmentManager$6:
    891:906:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.fragment.app.FragmentManager$7 -> androidx.fragment.app.FragmentManager$7:
    1550:1550:void <init>(androidx.fragment.app.FragmentManager,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment) -> <init>
    1553:1558:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentManager$8 -> androidx.fragment.app.FragmentManager$8:
    2837:2837:void <init>(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> <init>
    2842:2843:void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onAttachFragment
androidx.fragment.app.FragmentManager$9 -> androidx.fragment.app.FragmentManager$9:
    2885:2885:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    2885:2885:void onActivityResult(java.lang.Object) -> onActivityResult
    2888:2907:void onActivityResult(androidx.activity.result.ActivityResult) -> onActivityResult
androidx.fragment.app.FragmentManager$FragmentIntentSenderContract -> androidx.fragment.app.FragmentManager$FragmentIntentSenderContract:
    3656:3656:void <init>() -> <init>
    3656:3656:android.content.Intent createIntent(android.content.Context,java.lang.Object) -> createIntent
    3662:3681:android.content.Intent createIntent(android.content.Context,androidx.activity.result.IntentSenderRequest) -> createIntent
    3656:3656:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    3687:3687:androidx.activity.result.ActivityResult parseResult(int,android.content.Intent) -> parseResult
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo -> androidx.fragment.app.FragmentManager$LaunchedFragmentInfo:
    3642:3642:void <clinit>() -> <clinit>
    3621:3624:void <init>(java.lang.String,int) -> <init>
    3626:3629:void <init>(android.os.Parcel) -> <init>
    3633:3633:int describeContents() -> describeContents
    3638:3640:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1 -> androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1:
    3643:3643:void <init>() -> <init>
    3643:3643:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3646:3646:androidx.fragment.app.FragmentManager$LaunchedFragmentInfo createFromParcel(android.os.Parcel) -> createFromParcel
    3643:3643:java.lang.Object[] newArray(int) -> newArray
    3651:3651:androidx.fragment.app.FragmentManager$LaunchedFragmentInfo[] newArray(int) -> newArray
androidx.fragment.app.FragmentManager$PopBackStackState -> androidx.fragment.app.FragmentManager$PopBackStackState:
    3519:3523:void <init>(androidx.fragment.app.FragmentManager,java.lang.String,int,int) -> <init>
    3528:3538:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
androidx.fragment.app.FragmentManager$StartEnterTransitionListener -> androidx.fragment.app.FragmentManager$StartEnterTransitionListener:
    3553:3556:void <init>(androidx.fragment.app.BackStackRecord,boolean) -> <init>
    3612:3613:void cancelTransaction() -> cancelTransaction
    3596:3605:void completeTransaction() -> completeTransaction
    3586:3586:boolean isReady() -> isReady
    3565:3570:void onStartEnterTransition() -> onStartEnterTransition
    3579:3580:void startListening() -> startListening
androidx.fragment.app.FragmentManagerImpl -> androidx.fragment.app.FragmentManagerImpl:
    30:30:void <init>() -> <init>
androidx.fragment.app.FragmentManagerState -> androidx.fragment.app.FragmentManagerState:
    68:68:void <clinit>() -> <clinit>
    32:38:void <init>() -> <init>
    32:49:void <init>(android.os.Parcel) -> <init>
    53:53:int describeContents() -> describeContents
    58:66:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentManagerState$1 -> androidx.fragment.app.FragmentManagerState$1:
    69:69:void <init>() -> <init>
    69:69:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    72:72:androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    69:69:java.lang.Object[] newArray(int) -> newArray
    77:77:androidx.fragment.app.FragmentManagerState[] newArray(int) -> newArray
androidx.fragment.app.FragmentManagerViewModel -> androidx.fragment.app.FragmentManagerViewModel:
    40:40:void <clinit>() -> <clinit>
    57:88:void <init>(boolean) -> <init>
    112:125:void addRetainedFragment(androidx.fragment.app.Fragment) -> addRetainedFragment
    187:202:void clearNonConfigState(androidx.fragment.app.Fragment) -> clearNonConfigState
    274:281:boolean equals(java.lang.Object) -> equals
    129:129:androidx.fragment.app.Fragment findRetainedFragmentByWho(java.lang.String) -> findRetainedFragmentByWho
    168:173:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> getChildNonConfig
    52:54:androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    134:134:java.util.Collection getRetainedFragments() -> getRetainedFragments
    178:183:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> getViewModelStore
    286:289:int hashCode() -> hashCode
    108:108:boolean isCleared() -> isCleared
    101:105:void onCleared() -> onCleared
    154:164:void removeRetainedFragment(androidx.fragment.app.Fragment) -> removeRetainedFragment
    96:97:void setIsStateSaved(boolean) -> setIsStateSaved
    138:149:boolean shouldDestroy(androidx.fragment.app.Fragment) -> shouldDestroy
    295:322:java.lang.String toString() -> toString
androidx.fragment.app.FragmentManagerViewModel$1 -> androidx.fragment.app.FragmentManagerViewModel$1:
    40:40:void <init>() -> <init>
    45:46:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.fragment.app.FragmentState -> androidx.fragment.app.FragmentState:
    131:131:void <clinit>() -> <clinit>
    43:56:void <init>(androidx.fragment.app.Fragment) -> <init>
    58:72:void <init>(android.os.Parcel) -> <init>
    111:111:int describeContents() -> describeContents
    77:106:java.lang.String toString() -> toString
    116:129:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentState$1 -> androidx.fragment.app.FragmentState$1:
    132:132:void <init>() -> <init>
    132:132:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    135:135:androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    132:132:java.lang.Object[] newArray(int) -> newArray
    140:140:androidx.fragment.app.FragmentState[] newArray(int) -> newArray
androidx.fragment.app.FragmentStateManager -> androidx.fragment.app.FragmentStateManager:
    51:66:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment) -> <init>
    51:112:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,java.lang.ClassLoader,androidx.fragment.app.FragmentFactory,androidx.fragment.app.FragmentState) -> <init>
    51:145:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentState) -> <init>
    577:583:void activityCreated() -> activityCreated
    832:834:void addViewToContainer() -> addViewToContainer
    428:466:void attach() -> attach
    170:254:int computeExpectedState() -> computeExpectedState
    469:482:void create() -> create
    485:574:void createView() -> createView
    754:806:void destroy() -> destroy
    733:751:void destroyFragmentView() -> destroyFragmentView
    809:826:void detach() -> detach
    382:398:void ensureInflatedView() -> ensureInflatedView
    149:149:androidx.fragment.app.Fragment getFragment() -> getFragment
    615:625:boolean isFragmentViewChild(android.view.View) -> isFragmentViewChild
    258:379:void moveToExpectedState() -> moveToExpectedState
    629:634:void pause() -> pause
    401:425:void restoreState(java.lang.ClassLoader) -> restoreState
    594:612:void resume() -> resume
    681:713:android.os.Bundle saveBasicState() -> saveBasicState
    646:668:androidx.fragment.app.FragmentState saveState() -> saveState
    717:730:void saveViewState() -> saveViewState
    159:160:void setFragmentManagerState(int) -> setFragmentManagerState
    586:591:void start() -> start
    637:642:void stop() -> stop
androidx.fragment.app.FragmentStateManager$1 -> androidx.fragment.app.FragmentStateManager$1:
    534:534:void <init>(androidx.fragment.app.FragmentStateManager,android.view.View) -> <init>
    537:539:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    543:543:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.fragment.app.FragmentStateManager$2 -> androidx.fragment.app.FragmentStateManager$2:
    177:177:void <clinit>() -> <clinit>
androidx.fragment.app.FragmentStore -> androidx.fragment.app.FragmentStore:
    34:38:void <init>() -> <init>
    90:97:void addFragment(androidx.fragment.app.Fragment) -> addFragment
    164:168:void burpActive() -> burpActive
    291:291:boolean containsActiveFragment(java.lang.String) -> containsActiveFragment
    100:105:void dispatchStateChange(int) -> dispatchStateChange
    371:400:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    314:318:androidx.fragment.app.Fragment findActiveFragment(java.lang.String) -> findActiveFragment
    247:262:androidx.fragment.app.Fragment findFragmentById(int) -> findFragmentById
    267:287:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    301:309:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    339:366:int findFragmentIndexInContainer(androidx.fragment.app.Fragment) -> findFragmentIndexInContainer
    208:214:java.util.List getActiveFragmentStateManagers() -> getActiveFragmentStateManagers
    229:237:java.util.List getActiveFragments() -> getActiveFragments
    296:296:androidx.fragment.app.FragmentStateManager getFragmentStateManager(java.lang.String) -> getFragmentStateManager
    219:224:java.util.List getFragments() -> getFragments
    47:47:androidx.fragment.app.FragmentManagerViewModel getNonConfig() -> getNonConfig
    71:87:void makeActive(androidx.fragment.app.FragmentStateManager) -> makeActive
    139:156:void makeInactive(androidx.fragment.app.FragmentStateManager) -> makeInactive
    109:129:void moveToExpectedState() -> moveToExpectedState
    132:136:void removeFragment(androidx.fragment.app.Fragment) -> removeFragment
    51:52:void resetActiveFragments() -> resetActiveFragments
    55:68:void restoreAddedFragments(java.util.List) -> restoreAddedFragments
    172:185:java.util.ArrayList saveActiveFragments() -> saveActiveFragments
    190:203:java.util.ArrayList saveAddedFragments() -> saveAddedFragments
    43:44:void setNonConfig(androidx.fragment.app.FragmentManagerViewModel) -> setNonConfig
androidx.fragment.app.FragmentTransaction -> androidx.fragment.app.FragmentTransaction:
    94:129:void <init>(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader) -> <init>
    171:172:androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String) -> add
    234:235:androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String) -> add
    240:241:androidx.fragment.app.FragmentTransaction add(android.view.ViewGroup,androidx.fragment.app.Fragment,java.lang.String) -> add
    132:137:void addOp(androidx.fragment.app.FragmentTransaction$Op) -> addOp
    682:687:androidx.fragment.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    245:277:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> doAddOp
    373:375:androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment) -> hide
    357:359:androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment) -> remove
    293:293:androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment) -> replace
    340:344:androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment,java.lang.String) -> replace
    782:783:androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean) -> setReorderingAllowed
    626:627:androidx.fragment.app.FragmentTransaction setTransition(int) -> setTransition
    389:391:androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment) -> show
androidx.fragment.app.FragmentTransaction$Op -> androidx.fragment.app.FragmentTransaction$Op:
    73:74:void <init>() -> <init>
    76:81:void <init>(int,androidx.fragment.app.Fragment) -> <init>
androidx.fragment.app.FragmentTransition -> androidx.fragment.app.FragmentTransition:
    48:81:void <clinit>() -> <clinit>
    695:701:void addSharedElementsWithMatchingNames(java.util.ArrayList,androidx.collection.ArrayMap,java.util.Collection) -> addSharedElementsWithMatchingNames
    1173:1261:void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean) -> addToFirstInLastOut
    1125:1130:void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> calculateFragments
    187:217:androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int) -> calculateNameOverrides
    1142:1150:void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> calculatePopFragments
    1029:1046:void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean) -> callSharedElementStartEnd
    518:523:boolean canHandleAll(androidx.fragment.app.FragmentTransitionImpl,java.util.List) -> canHandleAll
    889:933:androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> captureInSharedElements
    831:868:androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> captureOutSharedElements
    472:514:androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment) -> chooseImpl
    1052:1067:java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View) -> configureEnteringExitingViews
    738:811:java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsOrdered
    609:681:java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsReordered
    354:416:void configureTransitionsOrdered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback) -> configureTransitionsOrdered
    237:297:void configureTransitionsReordered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback) -> configureTransitionsReordered
    1271:1275:androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int) -> ensureContainer
    940:946:java.lang.String findKeyForValue(androidx.collection.ArrayMap,java.lang.String) -> findKeyForValue
    554:559:java.lang.Object getEnterTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> getEnterTransition
    567:572:java.lang.Object getExitTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> getExitTransition
    962:971:android.view.View getInEpicenterView(androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean) -> getInEpicenterView
    540:546:java.lang.Object getSharedElementTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean) -> getSharedElementTransition
    1090:1111:java.lang.Object mergeTransitions(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,androidx.fragment.app.Fragment,boolean) -> mergeTransitions
    307:335:void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList) -> replaceHide
    86:92:androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl() -> resolveSupportImpl
    1007:1013:void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> retainValues
    441:464:void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleTargetChange
    986:998:void setOutEpicenter(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,androidx.collection.ArrayMap,boolean,androidx.fragment.app.BackStackRecord) -> setOutEpicenter
    1074:1081:void setViewVisibility(java.util.ArrayList,int) -> setViewVisibility
    127:167:void startTransitions(android.content.Context,androidx.fragment.app.FragmentContainer,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback) -> startTransitions
androidx.fragment.app.FragmentTransition$1 -> androidx.fragment.app.FragmentTransition$1:
    275:275:void <init>(androidx.fragment.app.FragmentTransition$Callback,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> <init>
    278:279:void run() -> run
androidx.fragment.app.FragmentTransition$2 -> androidx.fragment.app.FragmentTransition$2:
    328:328:void <init>(java.util.ArrayList) -> <init>
    331:332:void run() -> run
androidx.fragment.app.FragmentTransition$3 -> androidx.fragment.app.FragmentTransition$3:
    396:396:void <init>(androidx.fragment.app.FragmentTransition$Callback,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> <init>
    399:400:void run() -> run
androidx.fragment.app.FragmentTransition$4 -> androidx.fragment.app.FragmentTransition$4:
    441:441:void <init>(java.lang.Object,androidx.fragment.app.FragmentTransitionImpl,android.view.View,androidx.fragment.app.Fragment,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.Object) -> <init>
    444:462:void run() -> run
androidx.fragment.app.FragmentTransition$5 -> androidx.fragment.app.FragmentTransition$5:
    671:671:void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,android.view.View,androidx.fragment.app.FragmentTransitionImpl,android.graphics.Rect) -> <init>
    674:679:void run() -> run
androidx.fragment.app.FragmentTransition$6 -> androidx.fragment.app.FragmentTransition$6:
    783:783:void <init>(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,android.graphics.Rect) -> <init>
    786:808:void run() -> run
androidx.fragment.app.FragmentTransition$FragmentContainerTransition -> androidx.fragment.app.FragmentTransition$FragmentContainerTransition:
    1282:1282:void <init>() -> <init>
androidx.fragment.app.FragmentTransitionCompat21 -> androidx.fragment.app.FragmentTransitionCompat21:
    34:34:void <init>() -> <init>
    331:335:void addTarget(java.lang.Object,android.view.View) -> addTarget
    94:115:void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    216:217:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    38:38:boolean canHandle(java.lang.Object) -> canHandle
    43:47:java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    121:123:boolean hasSimpleTarget(android.transition.Transition) -> hasSimpleTarget
    188:210:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    129:139:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    339:343:void removeTarget(java.lang.Object,android.view.View) -> removeTarget
    305:327:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    145:181:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    224:256:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    78:90:void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    347:359:void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    271:289:void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable) -> setListenerForTransitionEnd
    63:74:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    294:300:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    52:57:java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
androidx.fragment.app.FragmentTransitionCompat21$1 -> androidx.fragment.app.FragmentTransitionCompat21$1:
    83:83:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    86:86:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionCompat21$2 -> androidx.fragment.app.FragmentTransitionCompat21$2:
    146:146:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList) -> <init>
    171:171:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    161:167:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    175:175:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    179:179:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    155:157:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$3 -> androidx.fragment.app.FragmentTransitionCompat21$3:
    225:225:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    246:246:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    241:242:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    250:250:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    254:254:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    228:237:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$4 -> androidx.fragment.app.FragmentTransitionCompat21$4:
    271:271:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Runnable) -> <init>
    281:281:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    277:278:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    284:284:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    287:287:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    273:273:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$5 -> androidx.fragment.app.FragmentTransitionCompat21$5:
    349:349:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    352:355:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionImpl -> androidx.fragment.app.FragmentTransitionImpl:
    45:45:void <init>() -> <init>
    358:379:void bfsAddViewChildren(java.util.List,android.view.View) -> bfsAddViewChildren
    219:235:void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    386:391:boolean containedBeforeIndex(java.util.List,android.view.View,int) -> containedBeforeIndex
    406:411:java.lang.String findKeyForValue(java.util.Map,java.lang.String) -> findKeyForValue
    242:256:void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    82:108:void getBoundsOnScreen(android.view.View,android.graphics.Rect) -> getBoundsOnScreen
    398:398:boolean isNullOrEmpty(java.util.List) -> isNullOrEmpty
    160:167:java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList) -> prepareSetNameOverridesReordered
    339:351:void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map) -> scheduleNameReset
    302:303:void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable) -> setListenerForTransitionEnd
    263:277:void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map) -> setNameOverridesOrdered
    179:208:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map) -> setNameOverridesReordered
androidx.fragment.app.FragmentTransitionImpl$1 -> androidx.fragment.app.FragmentTransitionImpl$1:
    199:199:void <init>(androidx.fragment.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> <init>
    202:206:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$2 -> androidx.fragment.app.FragmentTransitionImpl$2:
    263:263:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    266:275:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$3 -> androidx.fragment.app.FragmentTransitionImpl$3:
    339:339:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    342:349:void run() -> run
androidx.fragment.app.FragmentViewLifecycleOwner -> androidx.fragment.app.FragmentViewLifecycleOwner:
    44:50:void <init>(androidx.fragment.app.Fragment,androidx.lifecycle.ViewModelStore) -> <init>
    79:80:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    132:133:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    55:56:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    88:89:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    63:67:void initialize() -> initialize
    73:73:boolean isInitialized() -> isInitialized
    137:138:void performRestore(android.os.Bundle) -> performRestore
    141:142:void performSave(android.os.Bundle) -> performSave
    84:85:void setCurrentState(androidx.lifecycle.Lifecycle$State) -> setCurrentState
androidx.fragment.app.LogWriter -> androidx.fragment.app.LogWriter:
    25:32:void <init>(java.lang.String) -> <init>
    35:36:void close() -> close
    39:40:void flush() -> flush
    55:59:void flushBuilder() -> flushBuilder
    43:52:void write(char[],int,int) -> write
androidx.fragment.app.SpecialEffectsController -> androidx.fragment.app.SpecialEffectsController:
    84:94:void <init>(android.view.ViewGroup) -> <init>
    193:225:void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager) -> enqueue
    155:161:void enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager) -> enqueueAdd
    173:179:void enqueueHide(androidx.fragment.app.FragmentStateManager) -> enqueueHide
    182:188:void enqueueRemove(androidx.fragment.app.FragmentStateManager) -> enqueueRemove
    164:170:void enqueueShow(androidx.fragment.app.FragmentStateManager) -> enqueueShow
    260:301:void executePendingOperations() -> executePendingOperations
    135:140:androidx.fragment.app.SpecialEffectsController$Operation findPendingOperation(androidx.fragment.app.Fragment) -> findPendingOperation
    145:150:androidx.fragment.app.SpecialEffectsController$Operation findRunningOperation(androidx.fragment.app.Fragment) -> findRunningOperation
    304:335:void forceCompleteAllOperations() -> forceCompleteAllOperations
    253:257:void forcePostponedExecutePendingOperations() -> forcePostponedExecutePendingOperations
    117:130:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager) -> getAwaitingCompletionLifecycleImpact
    98:98:android.view.ViewGroup getContainer() -> getContainer
    54:56:androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager) -> getOrCreateController
    72:79:androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.SpecialEffectsControllerFactory) -> getOrCreateController
    232:250:void markPostponedState() -> markPostponedState
    338:347:void updateFinalState() -> updateFinalState
    228:229:void updateOperationDirection(boolean) -> updateOperationDirection
androidx.fragment.app.SpecialEffectsController$1 -> androidx.fragment.app.SpecialEffectsController$1:
    207:207:void <init>(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation) -> <init>
    210:213:void run() -> run
androidx.fragment.app.SpecialEffectsController$2 -> androidx.fragment.app.SpecialEffectsController$2:
    217:217:void <init>(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation) -> <init>
    220:222:void run() -> run
androidx.fragment.app.SpecialEffectsController$3 -> androidx.fragment.app.SpecialEffectsController$3:
    444:607:void <clinit>() -> <clinit>
androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation -> androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation:
    708:711:void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager,androidx.core.os.CancellationSignal) -> <init>
    744:746:void complete() -> complete
    715:740:void onStart() -> onStart
androidx.fragment.app.SpecialEffectsController$Operation -> androidx.fragment.app.SpecialEffectsController$Operation:
    505:533:void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> <init>
    645:646:void addCompletionListener(java.lang.Runnable) -> addCompletionListener
    592:604:void cancel() -> cancel
    686:697:void complete() -> complete
    671:674:void completeSpecialEffect(androidx.core.os.CancellationSignal) -> completeSpecialEffect
    542:542:androidx.fragment.app.SpecialEffectsController$Operation$State getFinalState() -> getFinalState
    561:561:androidx.fragment.app.Fragment getFragment() -> getFragment
    552:552:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getLifecycleImpact() -> getLifecycleImpact
    565:565:boolean isCanceled() -> isCanceled
    677:677:boolean isComplete() -> isComplete
    659:661:void markStartedSpecialEffect(androidx.core.os.CancellationSignal) -> markStartedSpecialEffect
    607:642:void mergeWith(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact) -> mergeWith
    651:651:void onStart() -> onStart
    571:588:java.lang.String toString() -> toString
androidx.fragment.app.SpecialEffectsController$Operation$1 -> androidx.fragment.app.SpecialEffectsController$Operation$1:
    527:527:void <init>(androidx.fragment.app.SpecialEffectsController$Operation) -> <init>
    530:531:void onCancel() -> onCancel
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact -> androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact:
    484:496:void <clinit>() -> <clinit>
    484:484:void <init>(java.lang.String,int) -> <init>
    484:484:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String) -> valueOf
    484:484:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values() -> values
androidx.fragment.app.SpecialEffectsController$Operation$State -> androidx.fragment.app.SpecialEffectsController$Operation$State:
    385:401:void <clinit>() -> <clinit>
    385:385:void <init>(java.lang.String,int) -> <init>
    444:478:void applyState(android.view.View) -> applyState
    412:415:androidx.fragment.app.SpecialEffectsController$Operation$State from(android.view.View) -> from
    426:434:androidx.fragment.app.SpecialEffectsController$Operation$State from(int) -> from
    385:385:androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String) -> valueOf
    385:385:androidx.fragment.app.SpecialEffectsController$Operation$State[] values() -> values
androidx.fragment.app.SuperNotCalledException -> androidx.fragment.app.SuperNotCalledException:
    23:24:void <init>(java.lang.String) -> <init>
androidx.interpolator.view.animation.FastOutLinearInInterpolator -> androidx.interpolator.view.animation.FastOutLinearInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.FastOutSlowInInterpolator -> androidx.interpolator.view.animation.FastOutSlowInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LinearOutSlowInInterpolator -> androidx.interpolator.view.animation.LinearOutSlowInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LookupTableInterpolator -> androidx.interpolator.view.animation.LookupTableInterpolator:
    30:33:void <init>(float[]) -> <init>
    37:54:float getInterpolation(float) -> getInterpolation
androidx.lifecycle.AndroidViewModel -> androidx.lifecycle.AndroidViewModel:
# {"id":"sourceFile","fileName":"AndroidViewModel.kt"}
androidx.lifecycle.ClassesInfoCache -> androidx.lifecycle.ClassesInfoCache:
    39:39:void <clinit>() -> <clinit>
    37:46:void <init>() -> <init>
    109:165:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]) -> createInfo
    74:76:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class) -> getDeclaredMethods
    85:90:androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class) -> getInfo
    49:69:boolean hasLifecycleMethods(java.lang.Class) -> hasLifecycleMethods
    95:106:void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class) -> verifyAndPutHandler
androidx.lifecycle.ClassesInfoCache$CallbackInfo -> androidx.lifecycle.ClassesInfoCache$CallbackInfo:
    174:186:void <init>(java.util.Map) -> <init>
    190:193:void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallbacks
    197:202:void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeMethodsForEvent
androidx.lifecycle.ClassesInfoCache$MethodReference -> androidx.lifecycle.ClassesInfoCache$MethodReference:
    211:215:void <init>(int,java.lang.reflect.Method) -> <init>
    240:248:boolean equals(java.lang.Object) -> equals
    253:253:int hashCode() -> hashCode
    220:236:void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallback
androidx.lifecycle.CompositeGeneratedAdaptersObserver -> androidx.lifecycle.CompositeGeneratedAdaptersObserver:
# {"id":"sourceFile","fileName":"CompositeGeneratedAdaptersObserver.kt"}
    18:19:void <init>(androidx.lifecycle.GeneratedAdapter[]) -> <init>
    23:30:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.DefaultLifecycleObserver -> androidx.lifecycle.DefaultLifecycleObserver:
# {"id":"sourceFile","fileName":"DefaultLifecycleObserver.kt"}
    38:38:void onCreate(androidx.lifecycle.LifecycleOwner) -> onCreate
    92:92:void onDestroy(androidx.lifecycle.LifecycleOwner) -> onDestroy
    70:70:void onPause(androidx.lifecycle.LifecycleOwner) -> onPause
    59:59:void onResume(androidx.lifecycle.LifecycleOwner) -> onResume
    48:48:void onStart(androidx.lifecycle.LifecycleOwner) -> onStart
    81:81:void onStop(androidx.lifecycle.LifecycleOwner) -> onStop
androidx.lifecycle.DefaultLifecycleObserverAdapter -> androidx.lifecycle.DefaultLifecycleObserverAdapter:
# {"id":"sourceFile","fileName":"DefaultLifecycleObserverAdapter.kt"}
    18:20:void <init>(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleEventObserver) -> <init>
    23:34:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.DefaultLifecycleObserverAdapter$WhenMappings -> androidx.lifecycle.DefaultLifecycleObserverAdapter$WhenMappings:
# {"id":"sourceFile","fileName":"DefaultLifecycleObserverAdapter.kt"}
androidx.lifecycle.EmptyActivityLifecycleCallbacks -> androidx.lifecycle.EmptyActivityLifecycleCallbacks:
# {"id":"sourceFile","fileName":"EmptyActivityLifecycleCallbacks.kt"}
    22:22:void <init>() -> <init>
    24:24:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    36:36:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    30:30:void onActivityPaused(android.app.Activity) -> onActivityPaused
    28:28:void onActivityResumed(android.app.Activity) -> onActivityResumed
    34:34:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    26:26:void onActivityStarted(android.app.Activity) -> onActivityStarted
    32:32:void onActivityStopped(android.app.Activity) -> onActivityStopped
androidx.lifecycle.GeneratedAdapter -> androidx.lifecycle.GeneratedAdapter:
# {"id":"sourceFile","fileName":"GeneratedAdapter.kt"}
androidx.lifecycle.HasDefaultViewModelProviderFactory -> androidx.lifecycle.HasDefaultViewModelProviderFactory:
# {"id":"sourceFile","fileName":"HasDefaultViewModelProviderFactory.kt"}
    38:38:androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras() -> getDefaultViewModelCreationExtras
androidx.lifecycle.LegacySavedStateHandleController -> androidx.lifecycle.LegacySavedStateHandleController:
# {"id":"sourceFile","fileName":"LegacySavedStateHandleController.kt"}
    23:23:void <init>() -> <init>
    47:54:void attachHandleIfNeeded(androidx.lifecycle.ViewModel,androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> attachHandleIfNeeded
    33:38:androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle) -> create
    57:74:void tryToAddRecreator(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> tryToAddRecreator
androidx.lifecycle.LegacySavedStateHandleController$OnRecreation -> androidx.lifecycle.LegacySavedStateHandleController$OnRecreation:
# {"id":"sourceFile","fileName":"LegacySavedStateHandleController.kt"}
    76:76:void <init>() -> <init>
    78:91:void onRecreated(androidx.savedstate.SavedStateRegistryOwner) -> onRecreated
androidx.lifecycle.LegacySavedStateHandleController$tryToAddRecreator$1 -> androidx.lifecycle.LegacySavedStateHandleController$tryToAddRecreator$1:
# {"id":"sourceFile","fileName":"LegacySavedStateHandleController.kt"}
    62:62:void <init>(androidx.lifecycle.Lifecycle,androidx.savedstate.SavedStateRegistry) -> <init>
    67:71:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.Lifecycle -> androidx.lifecycle.Lifecycle:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
    48:55:void <init>() -> <init>
androidx.lifecycle.Lifecycle$Event -> androidx.lifecycle.Lifecycle$Event:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
    98:128:void <clinit>() -> <clinit>
    94:94:void <init>(java.lang.String,int) -> <init>
    141:148:androidx.lifecycle.Lifecycle$State getTargetState() -> getTargetState
androidx.lifecycle.Lifecycle$Event$Companion -> androidx.lifecycle.Lifecycle$Event$Companion:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
    151:151:void <init>() -> <init>
    162:166:androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State) -> downFrom
    198:202:androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State) -> upFrom
    216:220:androidx.lifecycle.Lifecycle$Event upTo(androidx.lifecycle.Lifecycle$State) -> upTo
androidx.lifecycle.Lifecycle$Event$Companion$WhenMappings -> androidx.lifecycle.Lifecycle$Event$Companion$WhenMappings:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
androidx.lifecycle.Lifecycle$Event$WhenMappings -> androidx.lifecycle.Lifecycle$Event$WhenMappings:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
androidx.lifecycle.Lifecycle$State -> androidx.lifecycle.Lifecycle$State:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
    236:269:void <clinit>() -> <clinit>
    230:230:void <init>(java.lang.String,int) -> <init>
    278:278:boolean isAtLeast(androidx.lifecycle.Lifecycle$State) -> isAtLeast
androidx.lifecycle.LifecycleCoroutineScope -> androidx.lifecycle.LifecycleCoroutineScope:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
    318:318:void <init>() -> <init>
androidx.lifecycle.LifecycleCoroutineScopeImpl -> androidx.lifecycle.LifecycleCoroutineScopeImpl:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
    381:381:kotlin.coroutines.CoroutineContext getCoroutineContext() -> getCoroutineContext
    380:380:androidx.lifecycle.Lifecycle getLifecycle$lifecycle_common() -> getLifecycle$lifecycle_common
    403:407:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.LifecycleDispatcher -> androidx.lifecycle.LifecycleDispatcher:
# {"id":"sourceFile","fileName":"LifecycleDispatcher.kt"}
    33:33:void <clinit>() -> <clinit>
    32:32:void <init>() -> <init>
    37:42:void init(android.content.Context) -> init
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback -> androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback:
# {"id":"sourceFile","fileName":"LifecycleDispatcher.kt"}
    45:45:void <init>() -> <init>
    47:48:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
androidx.lifecycle.LifecycleEventObserver -> androidx.lifecycle.LifecycleEventObserver:
# {"id":"sourceFile","fileName":"LifecycleEventObserver.kt"}
androidx.lifecycle.LifecycleObserver -> androidx.lifecycle.LifecycleObserver:
# {"id":"sourceFile","fileName":"LifecycleObserver.kt"}
androidx.lifecycle.LifecycleOwner -> androidx.lifecycle.LifecycleOwner:
# {"id":"sourceFile","fileName":"LifecycleOwner.kt"}
androidx.lifecycle.LifecycleRegistry -> androidx.lifecycle.LifecycleRegistry:
# {"id":"sourceFile","fileName":"LifecycleRegistry.kt"}
    31:83:void <init>(androidx.lifecycle.LifecycleOwner,boolean) -> <init>
    79:79:void <init>(androidx.lifecycle.LifecycleOwner) -> <init>
    174:202:void addObserver(androidx.lifecycle.LifecycleObserver) -> addObserver
    258:270:void backwardPass(androidx.lifecycle.LifecycleOwner) -> backwardPass
    154:158:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver) -> calculateTargetState
    295:300:void enforceMainThreadIfNeeded(java.lang.String) -> enforceMainThreadIfNeeded
    242:255:void forwardPass(androidx.lifecycle.LifecycleOwner) -> forwardPass
    98:98:androidx.lifecycle.Lifecycle$State getCurrentState() -> getCurrentState
    118:120:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    145:150:boolean isSynced() -> isSynced
    93:95:void markState(androidx.lifecycle.Lifecycle$State) -> markState
    123:141:void moveToState(androidx.lifecycle.Lifecycle$State) -> moveToState
    205:206:void popParentState() -> popParentState
    209:210:void pushParentState(androidx.lifecycle.Lifecycle$State) -> pushParentState
    213:227:void removeObserver(androidx.lifecycle.LifecycleObserver) -> removeObserver
    105:107:void setCurrentState(androidx.lifecycle.Lifecycle$State) -> setCurrentState
    275:291:void sync() -> sync
androidx.lifecycle.LifecycleRegistry$Companion -> androidx.lifecycle.LifecycleRegistry$Companion:
# {"id":"sourceFile","fileName":"LifecycleRegistry.kt"}
    319:319:void <init>() -> <init>
    336:336:androidx.lifecycle.Lifecycle$State min$lifecycle_runtime_release(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State) -> min$lifecycle_runtime_release
androidx.lifecycle.LifecycleRegistry$ObserverWithState -> androidx.lifecycle.LifecycleRegistry$ObserverWithState:
# {"id":"sourceFile","fileName":"LifecycleRegistry.kt"}
    302:309:void <init>(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State) -> <init>
    312:316:void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> dispatchEvent
    303:303:androidx.lifecycle.Lifecycle$State getState() -> getState
androidx.lifecycle.Lifecycling -> androidx.lifecycle.Lifecycling:
# {"id":"sourceFile","fileName":"Lifecycling.kt"}
    31:33:void <clinit>() -> <clinit>
    27:27:void <init>() -> <init>
    74:81:androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object) -> createGeneratedAdapter
    87:109:java.lang.reflect.Constructor generatedConstructor(java.lang.Class) -> generatedConstructor
    176:176:java.lang.String getAdapterName(java.lang.String) -> getAdapterName
    114:120:int getObserverConstructorType(java.lang.Class) -> getObserverConstructorType
    168:168:boolean isLifecycleParent(java.lang.Class) -> isLifecycleParent
    38:67:androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object) -> lifecycleEventObserver
    125:164:int resolveObserverCallbackType(java.lang.Class) -> resolveObserverCallbackType
androidx.lifecycle.LiveData -> androidx.lifecycle.LiveData:
    64:64:void <clinit>() -> <clinit>
    60:113:void <init>() -> <init>
    501:505:void assertMainThread(java.lang.String) -> assertMainThread
    393:413:void changeActiveCounter(int) -> changeActiveCounter
    117:134:void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper) -> considerNotify
    138:159:void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper) -> dispatchingValue
    191:206:void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> observe
    224:235:void observeForever(androidx.lifecycle.Observer) -> observeForever
    356:356:void onActive() -> onActive
    369:369:void onInactive() -> onInactive
    244:251:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    306:310:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.LiveData$1 -> androidx.lifecycle.LiveData$1:
    84:84:void <init>(androidx.lifecycle.LiveData) -> <init>
    89:94:void run() -> run
androidx.lifecycle.LiveData$AlwaysActiveObserver -> androidx.lifecycle.LiveData$AlwaysActiveObserver:
    490:492:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    496:496:boolean shouldBeActive() -> shouldBeActive
androidx.lifecycle.LiveData$LifecycleBoundObserver -> androidx.lifecycle.LiveData$LifecycleBoundObserver:
    419:422:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> <init>
    452:453:void detachObserver() -> detachObserver
    447:447:boolean isAttachedTo(androidx.lifecycle.LifecycleOwner) -> isAttachedTo
    432:443:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    426:426:boolean shouldBeActive() -> shouldBeActive
androidx.lifecycle.LiveData$ObserverWrapper -> androidx.lifecycle.LiveData$ObserverWrapper:
    459:463:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    475:485:void activeStateChanged(boolean) -> activeStateChanged
    472:472:void detachObserver() -> detachObserver
    468:468:boolean isAttachedTo(androidx.lifecycle.LifecycleOwner) -> isAttachedTo
androidx.lifecycle.MethodCallsLogger -> androidx.lifecycle.MethodCallsLogger:
# {"id":"sourceFile","fileName":"MethodCallsLogger.kt"}
    23:25:void <init>() -> <init>
androidx.lifecycle.MutableLiveData -> androidx.lifecycle.MutableLiveData:
    40:41:void <init>() -> <init>
    50:51:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.Observer -> androidx.lifecycle.Observer:
# {"id":"sourceFile","fileName":"Observer.kt"}
androidx.lifecycle.ProcessLifecycleInitializer -> androidx.lifecycle.ProcessLifecycleInitializer:
# {"id":"sourceFile","fileName":"ProcessLifecycleInitializer.kt"}
    25:25:void <init>() -> <init>
    25:25:java.lang.Object create(android.content.Context) -> create
    27:38:androidx.lifecycle.LifecycleOwner create(android.content.Context) -> create
    41:41:java.util.List dependencies() -> dependencies
androidx.lifecycle.ProcessLifecycleOwner -> androidx.lifecycle.ProcessLifecycleOwner:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.kt"}
    void $r8$lambda$8RHFmaqBQY2MpEYiTr99NwPTGEU(androidx.lifecycle.ProcessLifecycleOwner) -> $r8$lambda$8RHFmaqBQY2MpEYiTr99NwPTGEU
      # {"id":"com.android.tools.r8.synthesized"}
    75:75:void <clinit>() -> <clinit>
    47:60:void <init>() -> <init>
    47:47:androidx.lifecycle.ReportFragment$ActivityInitializationListener access$getInitializationListener$p(androidx.lifecycle.ProcessLifecycleOwner) -> access$getInitializationListener$p
    47:47:androidx.lifecycle.ProcessLifecycleOwner access$getNewInstance$cp() -> access$getNewInstance$cp
    115:119:void activityPaused$lifecycle_process_release() -> activityPaused$lifecycle_process_release
    103:112:void activityResumed$lifecycle_process_release() -> activityResumed$lifecycle_process_release
    95:100:void activityStarted$lifecycle_process_release() -> activityStarted$lifecycle_process_release
    122:124:void activityStopped$lifecycle_process_release() -> activityStopped$lifecycle_process_release
    142:186:void attach$lifecycle_process_release(android.content.Context) -> attach$lifecycle_process_release
    56:58:void delayedPauseRunnable$lambda$0(androidx.lifecycle.ProcessLifecycleOwner) -> delayedPauseRunnable$lambda$0
    127:131:void dispatchPauseIfNeeded$lifecycle_process_release() -> dispatchPauseIfNeeded$lifecycle_process_release
    134:138:void dispatchStopIfNeeded$lifecycle_process_release() -> dispatchStopIfNeeded$lifecycle_process_release
    189:189:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
androidx.lifecycle.ProcessLifecycleOwner$$ExternalSyntheticLambda0 -> androidx.lifecycle.ProcessLifecycleOwner$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.lifecycle.ProcessLifecycleOwner androidx.lifecycle.ProcessLifecycleOwner$$InternalSyntheticLambda$1$0631a20a71004f441aa1085954970e5d87a340529f105a0cdcc90b7c5a541c69$0.f$0 -> f$0
    void androidx.lifecycle.ProcessLifecycleOwner$$InternalSyntheticLambda$1$0631a20a71004f441aa1085954970e5d87a340529f105a0cdcc90b7c5a541c69$0.<init>(androidx.lifecycle.ProcessLifecycleOwner) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.lifecycle.ProcessLifecycleOwner$$InternalSyntheticLambda$1$0631a20a71004f441aa1085954970e5d87a340529f105a0cdcc90b7c5a541c69$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl -> androidx.lifecycle.ProcessLifecycleOwner$Api29Impl:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.kt"}
    191:191:void <init>() -> <init>
    199:200:void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks) -> registerActivityLifecycleCallbacks
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl$$ExternalSyntheticApiModelOutline0 -> androidx.lifecycle.ProcessLifecycleOwner$Api29Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.lifecycle.ProcessLifecycleOwner$Api29Impl$$InternalSyntheticApiModelOutline$1$efa13f75d2619b613804e8473027cf495b731b8d2c4fe96bd4fd2428f838e750$0.m(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.lifecycle.ProcessLifecycleOwner$Companion -> androidx.lifecycle.ProcessLifecycleOwner$Companion:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.kt"}
    72:72:void <init>() -> <init>
    85:85:androidx.lifecycle.LifecycleOwner get() -> get
    90:91:void init$lifecycle_process_release(android.content.Context) -> init$lifecycle_process_release
androidx.lifecycle.ProcessLifecycleOwner$attach$1 -> androidx.lifecycle.ProcessLifecycleOwner$attach$1:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.kt"}
    145:145:void <init>(androidx.lifecycle.ProcessLifecycleOwner) -> <init>
    173:176:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    179:180:void onActivityPaused(android.app.Activity) -> onActivityPaused
    157:167:void onActivityPreCreated(android.app.Activity,android.os.Bundle) -> onActivityPreCreated
    183:184:void onActivityStopped(android.app.Activity) -> onActivityStopped
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1 -> androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.kt"}
    158:158:void <init>(androidx.lifecycle.ProcessLifecycleOwner) -> <init>
    164:165:void onActivityPostResumed(android.app.Activity) -> onActivityPostResumed
    160:161:void onActivityPostStarted(android.app.Activity) -> onActivityPostStarted
androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1 -> androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.kt"}
    60:60:void <init>(androidx.lifecycle.ProcessLifecycleOwner) -> <init>
    61:61:void onCreate() -> onCreate
    68:69:void onResume() -> onResume
    64:65:void onStart() -> onStart
androidx.lifecycle.ReflectiveGenericLifecycleObserver -> androidx.lifecycle.ReflectiveGenericLifecycleObserver:
    33:36:void <init>(java.lang.Object) -> <init>
    40:41:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.ReportFragment -> androidx.lifecycle.ReportFragment:
# {"id":"sourceFile","fileName":"ReportFragment.kt"}
    32:32:void <init>() -> <init>
    83:89:void dispatch(androidx.lifecycle.Lifecycle$Event) -> dispatch
    36:37:void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchCreate
    44:45:void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchResume
    40:41:void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchStart
    48:51:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    76:80:void onDestroy() -> onDestroy
    66:68:void onPause() -> onPause
    60:63:void onResume() -> onResume
    54:57:void onStart() -> onStart
    71:73:void onStop() -> onStop
    92:93:void setProcessListener(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> setProcessListener
androidx.lifecycle.ReportFragment$ActivityInitializationListener -> androidx.lifecycle.ReportFragment$ActivityInitializationListener:
# {"id":"sourceFile","fileName":"ReportFragment.kt"}
androidx.lifecycle.ReportFragment$Companion -> androidx.lifecycle.ReportFragment$Companion:
# {"id":"sourceFile","fileName":"ReportFragment.kt"}
    161:161:void <init>() -> <init>
    185:195:void dispatch$lifecycle_runtime_release(android.app.Activity,androidx.lifecycle.Lifecycle$Event) -> dispatch$lifecycle_runtime_release
    201:202:androidx.lifecycle.ReportFragment get(android.app.Activity) -> get
    167:181:void injectIfNeededIn(android.app.Activity) -> injectIfNeededIn
androidx.lifecycle.ReportFragment$LifecycleCallbacks -> androidx.lifecycle.ReportFragment$LifecycleCallbacks:
# {"id":"sourceFile","fileName":"ReportFragment.kt"}
    104:105:void <init>() -> <init>
    109:109:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    151:151:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    134:134:void onActivityPaused(android.app.Activity) -> onActivityPaused
    115:116:void onActivityPostCreated(android.app.Activity,android.os.Bundle) -> onActivityPostCreated
    127:128:void onActivityPostResumed(android.app.Activity) -> onActivityPostResumed
    121:122:void onActivityPostStarted(android.app.Activity) -> onActivityPostStarted
    148:149:void onActivityPreDestroyed(android.app.Activity) -> onActivityPreDestroyed
    131:132:void onActivityPrePaused(android.app.Activity) -> onActivityPrePaused
    137:138:void onActivityPreStopped(android.app.Activity) -> onActivityPreStopped
    124:124:void onActivityResumed(android.app.Activity) -> onActivityResumed
    145:145:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    118:118:void onActivityStarted(android.app.Activity) -> onActivityStarted
    140:140:void onActivityStopped(android.app.Activity) -> onActivityStopped
androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion -> androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion:
# {"id":"sourceFile","fileName":"ReportFragment.kt"}
    153:153:void <init>() -> <init>
    156:157:void registerIn(android.app.Activity) -> registerIn
androidx.lifecycle.SavedStateHandle -> androidx.lifecycle.SavedStateHandle:
# {"id":"sourceFile","fileName":"SavedStateHandle.kt"}
    android.os.Bundle $r8$lambda$aMir0GWwzPQviKVGE0DPm0kayew(androidx.lifecycle.SavedStateHandle) -> $r8$lambda$aMir0GWwzPQviKVGE0DPm0kayew
      # {"id":"com.android.tools.r8.synthesized"}
    410:443:void <clinit>() -> <clinit>
    80:80:void <init>(java.util.Map) -> <init>
    51:51:void <init>() -> <init>
    51:51:void <init>(java.util.Map):51 -> <init>
    52:52:void <init>() -> <init>
    52:52:void <init>(java.util.Map):52 -> <init>
    53:53:void <init>() -> <init>
    53:53:void <init>(java.util.Map):53 -> <init>
    54:54:void <init>() -> <init>
    54:54:void <init>(java.util.Map):54 -> <init>
    56:56:void <init>() -> <init>
    56:56:void <init>(java.util.Map):56 -> <init>
    81:82:void <init>(java.util.Map) -> <init>
    51:87:void <init>() -> <init>
    50:50:java.lang.Class[] access$getACCEPTABLE_CLASSES$cp() -> access$getACCEPTABLE_CLASSES$cp
    91:91:androidx.savedstate.SavedStateRegistry$SavedStateProvider savedStateProvider() -> savedStateProvider
    59:72:android.os.Bundle savedStateProvider$lambda$0(androidx.lifecycle.SavedStateHandle) -> savedStateProvider$lambda$0
    248:262:void set(java.lang.String,java.lang.Object) -> set
androidx.lifecycle.SavedStateHandle$$ExternalSyntheticLambda0 -> androidx.lifecycle.SavedStateHandle$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.lifecycle.SavedStateHandle androidx.lifecycle.SavedStateHandle$$InternalSyntheticLambda$1$a8b529ef495d505773bb6e25f48ff9fab5d276dd0a453ddf87dfec867ba402d2$0.f$0 -> f$0
    void androidx.lifecycle.SavedStateHandle$$InternalSyntheticLambda$1$a8b529ef495d505773bb6e25f48ff9fab5d276dd0a453ddf87dfec867ba402d2$0.<init>(androidx.lifecycle.SavedStateHandle) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    android.os.Bundle androidx.lifecycle.SavedStateHandle$$InternalSyntheticLambda$1$a8b529ef495d505773bb6e25f48ff9fab5d276dd0a453ddf87dfec867ba402d2$0.saveState() -> saveState
      # {"id":"com.android.tools.r8.synthesized"}
androidx.lifecycle.SavedStateHandle$Companion -> androidx.lifecycle.SavedStateHandle$Companion:
# {"id":"sourceFile","fileName":"SavedStateHandle.kt"}
    358:358:void <init>() -> <init>
    365:390:androidx.lifecycle.SavedStateHandle createHandle(android.os.Bundle,android.os.Bundle) -> createHandle
    398:406:boolean validateValue(java.lang.Object) -> validateValue
androidx.lifecycle.SavedStateHandleAttacher -> androidx.lifecycle.SavedStateHandleAttacher:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    187:188:void <init>(androidx.lifecycle.SavedStateHandlesProvider) -> <init>
    192:200:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.SavedStateHandleController -> androidx.lifecycle.SavedStateHandleController:
# {"id":"sourceFile","fileName":"SavedStateHandleController.kt"}
    20:21:void <init>(java.lang.String,androidx.lifecycle.SavedStateHandle) -> <init>
    22:22:androidx.lifecycle.SavedStateHandle getHandle() -> <init>
    22:22:void <init>(java.lang.String,androidx.lifecycle.SavedStateHandle):22 -> <init>
    20:20:void <init>(java.lang.String,androidx.lifecycle.SavedStateHandle) -> <init>
    29:42:void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> attachToLifecycle
    22:22:androidx.lifecycle.SavedStateHandle getHandle() -> getHandle
    25:25:boolean isAttached() -> isAttached
    36:40:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.SavedStateHandleSupport -> androidx.lifecycle.SavedStateHandleSupport:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    208:220:void <clinit>() -> <clinit>
    65:222:androidx.lifecycle.SavedStateHandle createSavedStateHandle(androidx.savedstate.SavedStateRegistryOwner,androidx.lifecycle.ViewModelStoreOwner,java.lang.String,android.os.Bundle) -> createSavedStateHandle
    90:104:androidx.lifecycle.SavedStateHandle createSavedStateHandle(androidx.lifecycle.viewmodel.CreationExtras) -> createSavedStateHandle
    45:57:void enableSavedStateHandles(androidx.savedstate.SavedStateRegistryOwner) -> enableSavedStateHandles
    114:116:androidx.lifecycle.SavedStateHandlesProvider getSavedStateHandlesProvider(androidx.savedstate.SavedStateRegistryOwner) -> getSavedStateHandlesProvider
    109:109:androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner) -> getSavedStateHandlesVM
    31:31:androidx.lifecycle.ViewModelProvider$Factory androidx.lifecycle.viewmodel.InitializerViewModelFactoryKt.viewModelFactory(kotlin.jvm.functions.Function1) -> getSavedStateHandlesVM
    31:31:androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner):109 -> getSavedStateHandlesVM
    110:110:androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner) -> getSavedStateHandlesVM
    63:64:void androidx.lifecycle.viewmodel.InitializerViewModelFactoryKt.initializer(androidx.lifecycle.viewmodel.InitializerViewModelFactoryBuilder,kotlin.jvm.functions.Function1) -> getSavedStateHandlesVM
    63:64:androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner):110 -> getSavedStateHandlesVM
    111:111:androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner) -> getSavedStateHandlesVM
    31:31:androidx.lifecycle.ViewModelProvider$Factory androidx.lifecycle.viewmodel.InitializerViewModelFactoryKt.viewModelFactory(kotlin.jvm.functions.Function1) -> getSavedStateHandlesVM
    31:31:androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner):109 -> getSavedStateHandlesVM
    109:111:androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner) -> getSavedStateHandlesVM
androidx.lifecycle.SavedStateHandleSupport$DEFAULT_ARGS_KEY$1 -> androidx.lifecycle.SavedStateHandleSupport$DEFAULT_ARGS_KEY$1:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    220:220:void <init>() -> <init>
androidx.lifecycle.SavedStateHandleSupport$SAVED_STATE_REGISTRY_OWNER_KEY$1 -> androidx.lifecycle.SavedStateHandleSupport$SAVED_STATE_REGISTRY_OWNER_KEY$1:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    208:208:void <init>() -> <init>
androidx.lifecycle.SavedStateHandleSupport$VIEW_MODEL_STORE_OWNER_KEY$1 -> androidx.lifecycle.SavedStateHandleSupport$VIEW_MODEL_STORE_OWNER_KEY$1:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    214:214:void <init>() -> <init>
androidx.lifecycle.SavedStateHandleSupport$savedStateHandlesVM$1$1 -> androidx.lifecycle.SavedStateHandleSupport$savedStateHandlesVM$1$1:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    110:110:androidx.lifecycle.SavedStateHandlesVM invoke(androidx.lifecycle.viewmodel.CreationExtras) -> invoke
    110:110:java.lang.Object invoke(java.lang.Object) -> invoke
androidx.lifecycle.SavedStateHandlesProvider -> androidx.lifecycle.SavedStateHandlesProvider:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    126:127:void <init>(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.ViewModelStoreOwner) -> <init>
    133:133:androidx.lifecycle.SavedStateHandlesVM getViewModel() -> <init>
    133:133:void <init>(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.ViewModelStoreOwner):133 -> <init>
    126:126:void <init>(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.ViewModelStoreOwner) -> <init>
    176:182:android.os.Bundle consumeRestoredStateForKey(java.lang.String) -> consumeRestoredStateForKey
    133:133:androidx.lifecycle.SavedStateHandlesVM getViewModel() -> getViewModel
    162:170:void performRestore() -> performRestore
    138:146:android.os.Bundle saveState() -> saveState
    215:215:void kotlin.collections.MapsKt___MapsKt.forEach(java.util.Map,kotlin.jvm.functions.Function1) -> saveState
    215:215:android.os.Bundle saveState():146 -> saveState
    146:151:android.os.Bundle saveState() -> saveState
    215:216:void kotlin.collections.MapsKt___MapsKt.forEach(java.util.Map,kotlin.jvm.functions.Function1) -> saveState
    215:216:android.os.Bundle saveState():146 -> saveState
    138:155:android.os.Bundle saveState() -> saveState
androidx.lifecycle.SavedStateHandlesProvider$viewModel$2 -> androidx.lifecycle.SavedStateHandlesProvider$viewModel$2:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    133:133:java.lang.Object invoke() -> invoke
    134:134:androidx.lifecycle.SavedStateHandlesVM invoke() -> invoke
androidx.lifecycle.SavedStateHandlesVM -> androidx.lifecycle.SavedStateHandlesVM:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    118:119:void <init>() -> <init>
    119:119:java.util.Map getHandles() -> getHandles
androidx.lifecycle.SavedStateViewModelFactory -> androidx.lifecycle.SavedStateViewModelFactory:
# {"id":"sourceFile","fileName":"SavedStateViewModelFactory.kt"}
    96:103:void <init>(android.app.Application,androidx.savedstate.SavedStateRegistryOwner,android.os.Bundle) -> <init>
    112:144:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras) -> create
    159:187:androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class) -> create
    199:201:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
    210:217:void onRequery(androidx.lifecycle.ViewModel) -> onRequery
androidx.lifecycle.SavedStateViewModelFactoryKt -> androidx.lifecycle.SavedStateViewModelFactoryKt:
# {"id":"sourceFile","fileName":"SavedStateViewModelFactory.kt"}
    238:242:void <clinit>() -> <clinit>
    1:1:java.util.List access$getANDROID_VIEWMODEL_SIGNATURE$p() -> access$getANDROID_VIEWMODEL_SIGNATURE$p
    1:1:java.util.List access$getVIEWMODEL_SIGNATURE$p() -> access$getVIEWMODEL_SIGNATURE$p
    250:263:java.lang.reflect.Constructor findMatchingConstructor(java.lang.Class,java.util.List) -> findMatchingConstructor
    225:233:androidx.lifecycle.ViewModel newInstance(java.lang.Class,java.lang.reflect.Constructor,java.lang.Object[]) -> newInstance
androidx.lifecycle.SingleGeneratedAdapterObserver -> androidx.lifecycle.SingleGeneratedAdapterObserver:
# {"id":"sourceFile","fileName":"SingleGeneratedAdapterObserver.kt"}
    18:19:void <init>(androidx.lifecycle.GeneratedAdapter) -> <init>
    22:24:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.ViewModel -> androidx.lifecycle.ViewModel:
    113:126:void <init>() -> <init>
    169:191:void clear() -> clear
    238:245:void closeWithRuntimeException(java.lang.Object) -> closeWithRuntimeException
    229:234:java.lang.Object getTag(java.lang.String) -> getTag
    165:165:void onCleared() -> onCleared
    208:221:java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object) -> setTagIfAbsent
androidx.lifecycle.ViewModelProvider -> androidx.lifecycle.ViewModelProvider:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    42:53:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras) -> <init>
    54:54:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    54:54:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras):54 -> <init>
    51:51:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    51:51:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras):51 -> <init>
    51:359:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    129:133:void <init>(androidx.lifecycle.ViewModelStoreOwner,androidx.lifecycle.ViewModelProvider$Factory) -> <init>
    151:153:androidx.lifecycle.ViewModel get(java.lang.Class) -> get
    172:376:androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class) -> get
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory -> androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    356:356:void <clinit>() -> <clinit>
    253:258:void <init>(android.app.Application,int) -> <init>
    267:267:void <init>() -> <init>
    275:275:void <init>(android.app.Application) -> <init>
    252:252:androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory access$getSInstance$cp() -> access$getSInstance$cp
    252:252:void access$setSInstance$cp(androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory) -> access$setSInstance$cp
    279:292:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras) -> create
    299:306:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
    312:324:androidx.lifecycle.ViewModel create(java.lang.Class,android.app.Application) -> create
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion -> androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    327:327:void <init>() -> <init>
    344:347:androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory getInstance(android.app.Application) -> getInstance
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion$ApplicationKeyImpl -> androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion$ApplicationKeyImpl:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    350:350:void <init>() -> <init>
androidx.lifecycle.ViewModelProvider$Factory -> androidx.lifecycle.ViewModelProvider$Factory:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    69:70:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
    83:83:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras) -> create
androidx.lifecycle.ViewModelProvider$Factory$Companion -> androidx.lifecycle.ViewModelProvider$Factory$Companion:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    85:85:void <init>() -> <init>
androidx.lifecycle.ViewModelProvider$NewInstanceFactory -> androidx.lifecycle.ViewModelProvider$NewInstanceFactory:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    242:242:void <clinit>() -> <clinit>
    197:198:void <init>() -> <init>
    197:197:androidx.lifecycle.ViewModelProvider$NewInstanceFactory access$getSInstance$cp() -> access$getSInstance$cp
    197:197:void access$setSInstance$cp(androidx.lifecycle.ViewModelProvider$NewInstanceFactory) -> access$setSInstance$cp
    201:208:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion -> androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    212:212:void <init>() -> <init>
    225:228:androidx.lifecycle.ViewModelProvider$NewInstanceFactory getInstance() -> getInstance
androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion$ViewModelKeyImpl -> androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion$ViewModelKeyImpl:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    231:231:void <init>() -> <init>
androidx.lifecycle.ViewModelProvider$OnRequeryFactory -> androidx.lifecycle.ViewModelProvider$OnRequeryFactory:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    101:102:void <init>() -> <init>
    103:103:void onRequery(androidx.lifecycle.ViewModel) -> onRequery
androidx.lifecycle.ViewModelProviderGetKt -> androidx.lifecycle.ViewModelProviderGetKt:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    362:364:androidx.lifecycle.viewmodel.CreationExtras defaultCreationExtras(androidx.lifecycle.ViewModelStoreOwner) -> defaultCreationExtras
androidx.lifecycle.ViewModelStore -> androidx.lifecycle.ViewModelStore:
# {"id":"sourceFile","fileName":"ViewModelStore.kt"}
    35:37:void <init>() -> <init>
    71:75:void clear() -> clear
    56:56:androidx.lifecycle.ViewModel get(java.lang.String) -> get
    64:64:java.util.Set keys() -> keys
    44:46:void put(java.lang.String,androidx.lifecycle.ViewModel) -> put
androidx.lifecycle.ViewModelStoreOwner -> androidx.lifecycle.ViewModelStoreOwner:
# {"id":"sourceFile","fileName":"ViewModelStoreOwner.kt"}
androidx.lifecycle.ViewTreeLifecycleOwner -> androidx.lifecycle.ViewTreeLifecycleOwner:
# {"id":"sourceFile","fileName":"ViewTreeLifecycleOwner.kt"}
    37:38:void set(android.view.View,androidx.lifecycle.LifecycleOwner) -> set
androidx.lifecycle.ViewTreeViewModelStoreOwner -> androidx.lifecycle.ViewTreeViewModelStoreOwner:
# {"id":"sourceFile","fileName":"ViewTreeViewModelStoreOwner.kt"}
    38:39:void set(android.view.View,androidx.lifecycle.ViewModelStoreOwner) -> set
androidx.lifecycle.viewmodel.CreationExtras -> androidx.lifecycle.viewmodel.CreationExtras:
# {"id":"sourceFile","fileName":"CreationExtras.kt"}
    26:27:void <init>() -> <init>
    27:27:java.util.Map getMap$lifecycle_viewmodel_release() -> getMap$lifecycle_viewmodel_release
androidx.lifecycle.viewmodel.CreationExtras$Empty -> androidx.lifecycle.viewmodel.CreationExtras$Empty:
# {"id":"sourceFile","fileName":"CreationExtras.kt"}
    42:42:void <init>() -> <init>
    43:43:java.lang.Object get(androidx.lifecycle.viewmodel.CreationExtras$Key) -> get
androidx.lifecycle.viewmodel.CreationExtras$Key -> androidx.lifecycle.viewmodel.CreationExtras$Key:
# {"id":"sourceFile","fileName":"CreationExtras.kt"}
androidx.lifecycle.viewmodel.InitializerViewModelFactory -> androidx.lifecycle.viewmodel.InitializerViewModelFactory:
# {"id":"sourceFile","fileName":"InitializerViewModelFactory.kt"}
    86:87:void <init>(androidx.lifecycle.viewmodel.ViewModelInitializer[]) -> <init>
    103:105:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras) -> create
    13579:13579:void kotlin.collections.ArraysKt___ArraysKt.forEach(java.lang.Object[],kotlin.jvm.functions.Function1) -> create
    13579:13579:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras):105 -> create
    106:109:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras) -> create
    13579:13580:void kotlin.collections.ArraysKt___ArraysKt.forEach(java.lang.Object[],kotlin.jvm.functions.Function1) -> create
    13579:13580:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras):105 -> create
    110:111:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras) -> create
androidx.lifecycle.viewmodel.InitializerViewModelFactoryBuilder -> androidx.lifecycle.viewmodel.InitializerViewModelFactoryBuilder:
# {"id":"sourceFile","fileName":"InitializerViewModelFactory.kt"}
    36:38:void <init>() -> <init>
    47:48:void addInitializer(kotlin.reflect.KClass,kotlin.jvm.functions.Function1) -> addInitializer
    54:54:androidx.lifecycle.ViewModelProvider$Factory build() -> build
    37:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> build
    37:38:androidx.lifecycle.ViewModelProvider$Factory build():54 -> build
    54:54:androidx.lifecycle.ViewModelProvider$Factory build() -> build
androidx.lifecycle.viewmodel.MutableCreationExtras -> androidx.lifecycle.viewmodel.MutableCreationExtras:
# {"id":"sourceFile","fileName":"CreationExtras.kt"}
    52:56:void <init>(androidx.lifecycle.viewmodel.CreationExtras) -> <init>
    52:68:void <init>(androidx.lifecycle.viewmodel.CreationExtras,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    66:66:java.lang.Object get(androidx.lifecycle.viewmodel.CreationExtras$Key) -> get
    61:62:void set(androidx.lifecycle.viewmodel.CreationExtras$Key,java.lang.Object) -> set
androidx.lifecycle.viewmodel.ViewModelInitializer -> androidx.lifecycle.viewmodel.ViewModelInitializer:
# {"id":"sourceFile","fileName":"InitializerViewModelFactory.kt"}
    69:71:void <init>(java.lang.Class,kotlin.jvm.functions.Function1) -> <init>
    70:70:java.lang.Class getClazz$lifecycle_viewmodel_release() -> getClazz$lifecycle_viewmodel_release
    71:71:kotlin.jvm.functions.Function1 getInitializer$lifecycle_viewmodel_release() -> getInitializer$lifecycle_viewmodel_release
androidx.loader.app.LoaderManager -> androidx.loader.app.LoaderManager:
    40:44:void <init>() -> <init>
    128:128:androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner) -> getInstance
androidx.loader.app.LoaderManagerImpl -> androidx.loader.app.LoaderManagerImpl:
    42:42:void <clinit>() -> <clinit>
    371:374:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore) -> <init>
    498:499:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    481:482:void markForRedelivery() -> markForRedelivery
    486:492:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderInfo -> androidx.loader.app.LoaderManagerImpl$LoaderInfo:
    149:152:androidx.loader.content.Loader destroy(boolean) -> destroy
    212:216:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    111:121:void markForRedelivery() -> markForRedelivery
    76:78:void onActive() -> onActive
    82:84:void onInactive() -> onInactive
    134:138:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    189:195:void setValue(java.lang.Object) -> setValue
    199:207:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderViewModel -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel:
    281:281:void <clinit>() -> <clinit>
    280:296:void <init>() -> <init>
    354:364:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    292:292:androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    335:340:void markForRedelivery() -> markForRedelivery
    344:351:void onCleared() -> onCleared
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1 -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1:
    281:281:void <init>() -> <init>
    286:286:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.profileinstaller.BenchmarkOperation -> androidx.profileinstaller.BenchmarkOperation:
    58:71:boolean deleteFilesRecursively(java.io.File) -> deleteFilesRecursively
    35:50:void dropShaderCache(android.content.Context,androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics) -> dropShaderCache
androidx.profileinstaller.BenchmarkOperation$Api24ContextHelper -> androidx.profileinstaller.BenchmarkOperation$Api24ContextHelper:
    87:87:java.io.File getDeviceProtectedCodeCacheDir(android.content.Context) -> getDeviceProtectedCodeCacheDir
androidx.profileinstaller.DeviceProfileWriter -> androidx.profileinstaller.DeviceProfileWriter:
    void $r8$lambda$ERhlvXCSfTRq-n5iULYjO-Ntn-w(androidx.profileinstaller.DeviceProfileWriter,int,java.lang.Object) -> $r8$lambda$ERhlvXCSfTRq-n5iULYjO-Ntn-w
      # {"id":"com.android.tools.r8.synthesized"}
    80:111:void <init>(android.content.res.AssetManager,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,java.lang.String,java.lang.String,java.lang.String,java.io.File) -> <init>
    253:273:androidx.profileinstaller.DeviceProfileWriter addMetadata(androidx.profileinstaller.DexProfileData[],byte[]) -> addMetadata
    136:140:void assertDeviceAllowsProfileInstallerAotWritesCalled() -> assertDeviceAllowsProfileInstallerAotWritesCalled
    363:389:byte[] desiredVersion() -> desiredVersion
    118:132:boolean deviceAllowsProfileInstallerAotWrites() -> deviceAllowsProfileInstallerAotWrites
    208:216:java.io.InputStream getProfileInputStream(android.content.res.AssetManager) -> getProfileInputStream
    87:87:void lambda$result$0(int,java.lang.Object) -> lambda$result$0
    188:199:java.io.InputStream openStreamFromAssets(android.content.res.AssetManager,java.lang.String) -> openStreamFromAssets
    159:175:androidx.profileinstaller.DeviceProfileWriter read() -> read
    226:241:androidx.profileinstaller.DexProfileData[] readProfileInternal(java.io.InputStream) -> readProfileInternal
    395:424:boolean requiresMetadata() -> requiresMetadata
    87:88:void result(int,java.lang.Object) -> result
    296:326:androidx.profileinstaller.DeviceProfileWriter transcodeIfNeeded() -> transcodeIfNeeded
    338:358:boolean write() -> write
androidx.profileinstaller.DeviceProfileWriter$$ExternalSyntheticLambda0 -> androidx.profileinstaller.DeviceProfileWriter$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.f$0 -> f$0
    java.lang.Object androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.f$2 -> f$2
    int androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.f$1 -> f$1
    void androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.<init>(androidx.profileinstaller.DeviceProfileWriter,int,java.lang.Object) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.DexProfileData -> androidx.profileinstaller.DexProfileData:
    47:57:void <init>(java.lang.String,java.lang.String,long,long,int,int,int,int[],java.util.TreeMap) -> <init>
androidx.profileinstaller.Encoding -> androidx.profileinstaller.Encoding:
    75:75:int bitsToBytes(int) -> bitsToBytes
    177:184:byte[] compress(byte[]) -> compress
    196:196:java.lang.RuntimeException error(java.lang.String) -> error
    79:88:byte[] read(java.io.InputStream,int) -> read
    123:166:byte[] readCompressed(java.io.InputStream,int,int) -> readCompressed
    114:114:java.lang.String readString(java.io.InputStream,int) -> readString
    92:98:long readUInt(java.io.InputStream,int) -> readUInt
    106:106:int readUInt16(java.io.InputStream) -> readUInt16
    110:110:long readUInt32(java.io.InputStream) -> readUInt32
    102:102:int readUInt8(java.io.InputStream) -> readUInt8
    46:46:int utf8Length(java.lang.String) -> utf8Length
    188:193:void writeAll(java.io.InputStream,java.io.OutputStream) -> writeAll
    170:174:void writeCompressed(java.io.OutputStream,byte[]) -> writeCompressed
    71:72:void writeString(java.io.OutputStream,java.lang.String) -> writeString
    51:56:void writeUInt(java.io.OutputStream,long,int) -> writeUInt
    63:64:void writeUInt16(java.io.OutputStream,int) -> writeUInt16
    67:68:void writeUInt32(java.io.OutputStream,long) -> writeUInt32
    59:60:void writeUInt8(java.io.OutputStream,int) -> writeUInt8
androidx.profileinstaller.FileSectionType -> androidx.profileinstaller.FileSectionType:
    22:22:androidx.profileinstaller.FileSectionType[] $values() -> $values
    22:33:void <clinit>() -> <clinit>
    37:39:void <init>(java.lang.String,int,long) -> <init>
    42:42:long getValue() -> getValue
    22:22:androidx.profileinstaller.FileSectionType valueOf(java.lang.String) -> valueOf
    22:22:androidx.profileinstaller.FileSectionType[] values() -> values
androidx.profileinstaller.ProfileInstallReceiver -> androidx.profileinstaller.ProfileInstallReceiver:
    38:38:void <init>() -> <init>
    101:134:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    149:155:void saveProfile(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback) -> saveProfile
androidx.profileinstaller.ProfileInstallReceiver$$ExternalSyntheticLambda0 -> androidx.profileinstaller.ProfileInstallReceiver$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.profileinstaller.ProfileInstallReceiver$$InternalSyntheticLambda$1$badc508ffeba965baff33caef0f9caaa937087f4a11941b2d227a4d43e062ce8$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.profileinstaller.ProfileInstallReceiver$$InternalSyntheticLambda$1$badc508ffeba965baff33caef0f9caaa937087f4a11941b2d227a4d43e062ce8$0.execute(java.lang.Runnable) -> execute
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics -> androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics:
    157:157:void <init>(androidx.profileinstaller.ProfileInstallReceiver) -> <init>
    160:161:void onDiagnosticReceived(int,java.lang.Object) -> onDiagnosticReceived
    165:167:void onResultReceived(int,java.lang.Object) -> onResultReceived
androidx.profileinstaller.ProfileInstaller -> androidx.profileinstaller.ProfileInstaller:
    void $r8$lambda$lAFgOixnKjpoenploWSedI8N01U(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object) -> $r8$lambda$lAFgOixnKjpoenploWSedI8N01U
      # {"id":"com.android.tools.r8.synthesized"}
    109:122:void <clinit>() -> <clinit>
    407:408:boolean deleteProfileWrittenFor(java.io.File) -> deleteProfileWrittenFor
    630:633:void deleteSkipFile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback) -> deleteSkipFile
    367:386:boolean hasAlreadyWrittenProfileForThisInstall(android.content.pm.PackageInfo,java.io.File,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback) -> hasAlreadyWrittenProfileForThisInstall
    96:96:void lambda$result$0(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object) -> lambda$result$0
    394:400:void noteProfileWrittenFor(android.content.pm.PackageInfo,java.io.File) -> noteProfileWrittenFor
    96:97:void result(java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object) -> result
    431:451:boolean transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback) -> transcodeAndWrite
    479:480:void writeProfile(android.content.Context) -> writeProfile
    515:516:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback) -> writeProfile
    554:583:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean) -> writeProfile
    601:614:void writeSkipFile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback) -> writeSkipFile
androidx.profileinstaller.ProfileInstaller$$ExternalSyntheticLambda0 -> androidx.profileinstaller.ProfileInstaller$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback androidx.profileinstaller.ProfileInstaller$$InternalSyntheticLambda$2$65490b9c13bc944dbb73adee505080a4d07beef482bc93a2158a7f2f0fd1d69f$0.f$0 -> f$0
    java.lang.Object androidx.profileinstaller.ProfileInstaller$$InternalSyntheticLambda$2$65490b9c13bc944dbb73adee505080a4d07beef482bc93a2158a7f2f0fd1d69f$0.f$2 -> f$2
    int androidx.profileinstaller.ProfileInstaller$$InternalSyntheticLambda$2$65490b9c13bc944dbb73adee505080a4d07beef482bc93a2158a7f2f0fd1d69f$0.f$1 -> f$1
    void androidx.profileinstaller.ProfileInstaller$$InternalSyntheticLambda$2$65490b9c13bc944dbb73adee505080a4d07beef482bc93a2158a7f2f0fd1d69f$0.<init>(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.profileinstaller.ProfileInstaller$$InternalSyntheticLambda$2$65490b9c13bc944dbb73adee505080a4d07beef482bc93a2158a7f2f0fd1d69f$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstaller$1 -> androidx.profileinstaller.ProfileInstaller$1:
    109:109:void <init>() -> <init>
    113:113:void onDiagnosticReceived(int,java.lang.Object) -> onDiagnosticReceived
    118:118:void onResultReceived(int,java.lang.Object) -> onResultReceived
androidx.profileinstaller.ProfileInstaller$2 -> androidx.profileinstaller.ProfileInstaller$2:
    122:122:void <init>() -> <init>
    126:145:void onDiagnosticReceived(int,java.lang.Object) -> onDiagnosticReceived
    149:183:void onResultReceived(int,java.lang.Object) -> onResultReceived
androidx.profileinstaller.ProfileInstallerInitializer -> androidx.profileinstaller.ProfileInstallerInitializer:
    void $r8$lambda$QGpANLTF0YGY0pXfe2eje4OKwkc(androidx.profileinstaller.ProfileInstallerInitializer,android.content.Context) -> $r8$lambda$QGpANLTF0YGY0pXfe2eje4OKwkc
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$nkOIpN4NfyreWbcXjHv0xCvwgTY(android.content.Context) -> $r8$lambda$nkOIpN4NfyreWbcXjHv0xCvwgTY
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$nvFqT5BztGB-MvszW9GUTUoI9rw(android.content.Context) -> $r8$lambda$nvFqT5BztGB-MvszW9GUTUoI9rw
      # {"id":"com.android.tools.r8.synthesized"}
    64:64:void <init>() -> <init>
    64:64:java.lang.Object create(android.content.Context) -> create
    76:83:androidx.profileinstaller.ProfileInstallerInitializer$Result create(android.content.Context) -> create
    94:95:void delayAfterFirstFrame(android.content.Context) -> delayAfterFirstFrame
    126:126:java.util.List dependencies() -> dependencies
    108:118:void installAfterDelay(android.content.Context) -> installAfterDelay
    94:94:void lambda$delayAfterFirstFrame$0(android.content.Context) -> lambda$delayAfterFirstFrame$0
    117:117:void lambda$installAfterDelay$1(android.content.Context) -> lambda$installAfterDelay$1
    145:145:void lambda$writeInBackground$2(android.content.Context) -> lambda$writeInBackground$2
    138:146:void writeInBackground(android.content.Context) -> writeInBackground
androidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda0 -> androidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$1$0f795b3312dc1da540aed76dfe7be9153bc2dd822b10dd31dcd76fb9862960b5$0.f$1 -> f$1
    androidx.profileinstaller.ProfileInstallerInitializer androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$1$0f795b3312dc1da540aed76dfe7be9153bc2dd822b10dd31dcd76fb9862960b5$0.f$0 -> f$0
    void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$1$0f795b3312dc1da540aed76dfe7be9153bc2dd822b10dd31dcd76fb9862960b5$0.<init>(androidx.profileinstaller.ProfileInstallerInitializer,android.content.Context) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$1$0f795b3312dc1da540aed76dfe7be9153bc2dd822b10dd31dcd76fb9862960b5$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda1 -> androidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.f$0 -> f$0
    void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.<init>(android.content.Context) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda2 -> androidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$3$1b1cec693e412c5dc4a2dbf245cfebff0f105fdacac68e9d3717681789f42374$0.f$0 -> f$0
    void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$3$1b1cec693e412c5dc4a2dbf245cfebff0f105fdacac68e9d3717681789f42374$0.<init>(android.content.Context) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$3$1b1cec693e412c5dc4a2dbf245cfebff0f105fdacac68e9d3717681789f42374$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl -> androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl:
    void $r8$lambda$DSwPKNQiVu4DdgIKQZrSpqkWM-A(java.lang.Runnable,long) -> $r8$lambda$DSwPKNQiVu4DdgIKQZrSpqkWM-A
      # {"id":"com.android.tools.r8.synthesized"}
    161:161:void lambda$postFrameCallback$0(java.lang.Runnable,long) -> lambda$postFrameCallback$0
    161:162:void postFrameCallback(java.lang.Runnable) -> postFrameCallback
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$ExternalSyntheticLambda0 -> androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.Runnable androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$InternalSyntheticLambda$2$dd4b7bded0037cdb0fa34ef5820826a5e0fd89e1034ce4aa9969280fa8f012f3$0.f$0 -> f$0
    void androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$InternalSyntheticLambda$2$dd4b7bded0037cdb0fa34ef5820826a5e0fd89e1034ce4aa9969280fa8f012f3$0.<init>(java.lang.Runnable) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$InternalSyntheticLambda$2$dd4b7bded0037cdb0fa34ef5820826a5e0fd89e1034ce4aa9969280fa8f012f3$0.doFrame(long) -> doFrame
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl -> androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl:
    174:174:android.os.Handler createAsync(android.os.Looper) -> createAsync
androidx.profileinstaller.ProfileInstallerInitializer$Result -> androidx.profileinstaller.ProfileInstallerInitializer$Result:
    151:151:void <init>() -> <init>
androidx.profileinstaller.ProfileTranscoder -> androidx.profileinstaller.ProfileTranscoder:
    66:67:void <clinit>() -> <clinit>
    426:431:int computeMethodFlags(androidx.profileinstaller.DexProfileData) -> computeMethodFlags
    558:608:byte[] createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]) -> createCompressibleBody
    334:361:androidx.profileinstaller.WritableFileSection createCompressibleClassSection(androidx.profileinstaller.DexProfileData[]) -> createCompressibleClassSection
    367:404:androidx.profileinstaller.WritableFileSection createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]) -> createCompressibleMethodsSection
    410:413:byte[] createMethodBitmapRegion(androidx.profileinstaller.DexProfileData) -> createMethodBitmapRegion
    419:422:byte[] createMethodsWithInlineCaches(androidx.profileinstaller.DexProfileData) -> createMethodsWithInlineCaches
    1050:1055:java.lang.String enforceSeparator(java.lang.String,java.lang.String) -> enforceSeparator
    1061:1069:java.lang.String extractKey(java.lang.String) -> extractKey
    959:970:androidx.profileinstaller.DexProfileData findByDexName(androidx.profileinstaller.DexProfileData[],java.lang.String) -> findByDexName
    1036:1043:java.lang.String generateDexKey(java.lang.String,java.lang.String,byte[]) -> generateDexKey
    612:613:int getMethodBitmapStorageSize(int) -> getMethodBitmapStorageSize
    1235:1243:int methodFlagBitmapIndex(int,int,int) -> methodFlagBitmapIndex
    1193:1201:int[] readClasses(java.io.InputStream,int) -> readClasses
    1222:1229:int readFlagsFromBitmap(java.util.BitSet,int,int) -> readFlagsFromBitmap
    70:76:byte[] readHeader(java.io.InputStream,byte[]) -> readHeader
    1133:1161:void readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData) -> readHotMethodRegion
    819:832:androidx.profileinstaller.DexProfileData[] readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]) -> readMeta
    850:868:androidx.profileinstaller.DexProfileData[] readMetadata001(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]) -> readMetadata001
    986:1012:androidx.profileinstaller.DexProfileData[] readMetadataForNBody(java.io.InputStream,int,androidx.profileinstaller.DexProfileData[]) -> readMetadataForNBody
    887:907:androidx.profileinstaller.DexProfileData[] readMetadataV002(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]) -> readMetadataV002
    918:951:androidx.profileinstaller.DexProfileData[] readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]) -> readMetadataV002Body
    1208:1219:void readMethodBitmap(java.io.InputStream,androidx.profileinstaller.DexProfileData) -> readMethodBitmap
    791:809:androidx.profileinstaller.DexProfileData[] readProfile(java.io.InputStream,byte[],java.lang.String) -> readProfile
    1085:1126:androidx.profileinstaller.DexProfileData[] readUncompressedBody(java.io.InputStream,java.lang.String,int) -> readUncompressedBody
    617:617:int roundUpToByte(int) -> roundUpToByte
    634:638:void setMethodBitmapBit(byte[],int,int,androidx.profileinstaller.DexProfileData) -> setMethodBitmapBit
    1164:1187:void skipInlineCache(java.io.InputStream) -> skipInlineCache
    98:124:boolean transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]) -> transcodeAndWriteBody
    714:722:void writeClasses(java.io.OutputStream,androidx.profileinstaller.DexProfileData) -> writeClasses
    284:328:androidx.profileinstaller.WritableFileSection writeDexFileSection(androidx.profileinstaller.DexProfileData[]) -> writeDexFileSection
    80:82:void writeHeader(java.io.OutputStream,byte[]) -> writeHeader
    671:674:void writeLineData(java.io.OutputStream,androidx.profileinstaller.DexProfileData) -> writeLineData
    651:657:void writeLineHeader(java.io.OutputStream,androidx.profileinstaller.DexProfileData,java.lang.String) -> writeLineHeader
    733:747:void writeMethodBitmap(java.io.OutputStream,androidx.profileinstaller.DexProfileData) -> writeMethodBitmap
    688:700:void writeMethodsWithInlineCaches(java.io.OutputStream,androidx.profileinstaller.DexProfileData) -> writeMethodsWithInlineCaches
    145:162:void writeProfileForN(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]) -> writeProfileForN
    521:543:void writeProfileForO(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]) -> writeProfileForO
    482:485:void writeProfileForO_MR1(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]) -> writeProfileForO_MR1
    473:476:void writeProfileForP(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]) -> writeProfileForP
    228:229:void writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]) -> writeProfileForS
    237:279:void writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]) -> writeProfileSections
androidx.profileinstaller.ProfileVerifier -> androidx.profileinstaller.ProfileVerifier:
    76:81:void <clinit>() -> <clinit>
    299:303:long getPackageLastUpdateTime(android.content.Context) -> getPackageLastUpdateTime
    285:291:androidx.profileinstaller.ProfileVerifier$CompilationStatus setCompilationStatus(int,boolean,boolean) -> setCompilationStatus
    129:277:androidx.profileinstaller.ProfileVerifier$CompilationStatus writeProfileVerification(android.content.Context,boolean) -> writeProfileVerification
androidx.profileinstaller.ProfileVerifier$Api33Impl -> androidx.profileinstaller.ProfileVerifier$Api33Impl:
    558:560:android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,android.content.Context) -> getPackageInfo
androidx.profileinstaller.ProfileVerifier$Cache -> androidx.profileinstaller.ProfileVerifier$Cache:
    337:342:void <init>(int,int,long,long) -> <init>
    346:349:boolean equals(java.lang.Object) -> equals
    357:361:int hashCode() -> hashCode
    376:383:androidx.profileinstaller.ProfileVerifier$Cache readFromFile(java.io.File) -> readFromFile
    366:373:void writeOnFile(java.io.File) -> writeOnFile
androidx.profileinstaller.ProfileVerifier$CompilationStatus -> androidx.profileinstaller.ProfileVerifier$CompilationStatus:
    486:490:void <init>(int,boolean,boolean) -> <init>
androidx.profileinstaller.ProfileVersion -> androidx.profileinstaller.ProfileVersion:
    29:35:void <clinit>() -> <clinit>
    40:45:java.lang.String dexKeySeparator(byte[]) -> dexKeySeparator
androidx.profileinstaller.WritableFileSection -> androidx.profileinstaller.WritableFileSection:
    34:39:void <init>(androidx.profileinstaller.FileSectionType,int,byte[],boolean) -> <init>
androidx.recyclerview.widget.AdapterHelper -> androidx.recyclerview.widget.AdapterHelper:
    72:73:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback) -> <init>
    55:79:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback,boolean) -> <init>
    432:433:void applyAdd(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyAdd
    130:131:void applyMove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyMove
    588:620:int applyPendingUpdatesToPosition(int) -> applyPendingUpdatesToPosition
    134:185:void applyRemove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyRemove
    188:225:void applyUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyUpdate
    411:428:boolean canFindInPreLayout(int) -> canFindInPreLayout
    119:125:void consumePostponedUpdates() -> consumePostponedUpdates
    557:585:void consumeUpdatesInOnePass() -> consumeUpdatesInOnePass
    231:312:void dispatchAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchAndUpdateViewHolders
    315:327:void dispatchFirstPassAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp,int) -> dispatchFirstPassAndUpdateViewHolders
    468:468:int findPositionOffset(int) -> findPositionOffset
    472:497:int findPositionOffset(int,int) -> findPositionOffset
    464:464:boolean hasAnyUpdateTypes(int) -> hasAnyUpdateTypes
    460:460:boolean hasPendingUpdates() -> hasPendingUpdates
    624:624:boolean hasUpdates() -> hasUpdates
    727:736:androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> obtainUpdateOp
    504:509:boolean onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    516:521:boolean onItemRangeInserted(int,int) -> onItemRangeInserted
    439:457:void postponeAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> postponeAndUpdateViewHolders
    93:116:void preProcess() -> preProcess
    741:745:void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> recycleUpdateOp
    748:753:void recycleUpdateOpsAndClearList(java.util.List) -> recycleUpdateOpsAndClearList
    87:90:void reset() -> reset
    330:407:int updatePositionWithPostponed(int,int) -> updatePositionWithPostponed
androidx.recyclerview.widget.AdapterHelper$UpdateOp -> androidx.recyclerview.widget.AdapterHelper$UpdateOp:
    651:656:void <init>(int,int,int,java.lang.Object) -> <init>
    659:669:java.lang.String cmdToString() -> cmdToString
    681:713:boolean equals(java.lang.Object) -> equals
    718:721:int hashCode() -> hashCode
    674:675:java.lang.String toString() -> toString
androidx.recyclerview.widget.ChildHelper -> androidx.recyclerview.widget.ChildHelper:
    48:52:void <init>(androidx.recyclerview.widget.ChildHelper$Callback) -> <init>
    85:86:void addView(android.view.View,boolean) -> addView
    98:111:void addView(android.view.View,int,boolean) -> addView
    230:244:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> attachViewToParent
    282:288:void detachViewFromParent(int) -> detachViewFromParent
    206:216:android.view.View findHiddenNonRemovedView(int) -> findHiddenNonRemovedView
    180:181:android.view.View getChildAt(int) -> getChildAt
    253:253:int getChildCount() -> getChildCount
    114:131:int getOffset(int) -> getOffset
    273:273:android.view.View getUnfilteredChildAt(int) -> getUnfilteredChildAt
    263:263:int getUnfilteredChildCount() -> getUnfilteredChildCount
    328:340:void hide(android.view.View) -> hide
    60:62:void hideViewInternal(android.view.View) -> hideViewInternal
    297:309:int indexOfChild(android.view.View) -> indexOfChild
    319:319:boolean isHidden(android.view.View) -> isHidden
    188:197:void removeAllViewsUnfiltered() -> removeAllViewsUnfiltered
    140:151:void removeView(android.view.View) -> removeView
    160:172:void removeViewAt(int) -> removeViewAt
    373:389:boolean removeViewIfHidden(android.view.View) -> removeViewIfHidden
    363:363:java.lang.String toString() -> toString
    350:359:void unhide(android.view.View) -> unhide
    70:74:boolean unhideViewInternal(android.view.View) -> unhideViewInternal
androidx.recyclerview.widget.ChildHelper$Bucket -> androidx.recyclerview.widget.ChildHelper$Bucket:
    395:401:void <init>() -> <init>
    421:429:void clear(int) -> clear
    493:502:int countOnesBefore(int) -> countOnesBefore
    415:418:void ensureNext() -> ensureNext
    432:436:boolean get(int) -> get
    448:467:void insert(int,boolean) -> insert
    470:488:boolean remove(int) -> remove
    441:445:void reset() -> reset
    406:412:void set(int) -> set
    508:509:java.lang.String toString() -> toString
androidx.recyclerview.widget.DefaultItemAnimator -> androidx.recyclerview.widget.DefaultItemAnimator:
    38:55:void <init>() -> <init>
    222:225:boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateAdd
    229:252:void animateAddImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateAddImpl
    321:344:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateChange
    348:397:void animateChangeImpl(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> animateChangeImpl
    257:274:boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMove
    278:316:void animateMoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMoveImpl
    193:195:boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemove
    199:218:void animateRemoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemoveImpl
    665:665:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    641:644:void cancelAll(java.util.List) -> cancelAll
    550:553:void dispatchFinishedWhenDone() -> dispatchFinishedWhenDone
    437:519:void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endAnimation
    557:638:void endAnimations() -> endAnimations
    400:408:void endChangeAnimation(java.util.List,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimation
    411:417:void endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> endChangeAnimationIfNecessary
    419:432:boolean endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimationIfNecessary
    531:541:boolean isRunning() -> isRunning
    522:527:void resetAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> resetAnimation
    102:189:void runPendingAnimations() -> runPendingAnimations
androidx.recyclerview.widget.DefaultItemAnimator$1 -> androidx.recyclerview.widget.DefaultItemAnimator$1:
    121:121:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    124:130:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$2 -> androidx.recyclerview.widget.DefaultItemAnimator$2:
    145:145:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    148:153:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$3 -> androidx.recyclerview.widget.DefaultItemAnimator$3:
    168:168:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    171:176:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$4 -> androidx.recyclerview.widget.DefaultItemAnimator$4:
    203:203:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    211:216:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    206:207:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$5 -> androidx.recyclerview.widget.DefaultItemAnimator$5:
    233:233:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.View,android.view.ViewPropertyAnimator) -> <init>
    241:242:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    246:250:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    236:237:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$6 -> androidx.recyclerview.widget.DefaultItemAnimator$6:
    292:292:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,android.view.View,int,android.view.ViewPropertyAnimator) -> <init>
    300:306:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    310:314:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    295:296:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$7 -> androidx.recyclerview.widget.DefaultItemAnimator$7:
    358:358:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    366:373:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    361:362:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$8 -> androidx.recyclerview.widget.DefaultItemAnimator$8:
    380:380:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    387:394:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    383:384:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo -> androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo:
    73:76:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> <init>
    80:85:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
    89:89:java.lang.String toString() -> toString
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo -> androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo:
    61:67:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
androidx.recyclerview.widget.FastScroller -> androidx.recyclerview.widget.FastScroller:
    74:75:void <clinit>() -> <clinit>
    104:161:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int) -> <init>
    164:174:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    258:259:void cancelHide() -> cancelHide
    183:187:void destroyCallbacks() -> destroyCallbacks
    316:329:void drawHorizontalScrollbar(android.graphics.Canvas) -> drawHorizontalScrollbar
    291:313:void drawVerticalScrollbar(android.graphics.Canvas) -> drawVerticalScrollbar
    542:544:int[] getHorizontalRange() -> getHorizontalRange
    533:535:int[] getVerticalRange() -> getVerticalRange
    244:255:void hide(int) -> hide
    461:475:void horizontalScrollTo(float) -> horizontalScrollTo
    216:216:boolean isLayoutRTL() -> isLayoutRTL
    504:504:boolean isPointInsideHorizontalThumb(float,float) -> isPointInsideHorizontalThumb
    496:496:boolean isPointInsideVerticalThumb(float,float) -> isPointInsideVerticalThumb
    268:288:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    381:404:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    443:443:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    409:440:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
    191:192:void requestRedraw() -> requestRedraw
    262:264:void resetHideDelay(int) -> resetHideDelay
    479:490:int scrollTo(float,float,int[],int,int,int) -> scrollTo
    195:213:void setState(int) -> setState
    177:180:void setupCallbacks() -> setupCallbacks
    228:240:void show() -> show
    339:375:void updateScrollPosition(int,int) -> updateScrollPosition
    446:458:void verticalScrollTo(float) -> verticalScrollTo
androidx.recyclerview.widget.FastScroller$1 -> androidx.recyclerview.widget.FastScroller$1:
    123:123:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    126:127:void run() -> run
androidx.recyclerview.widget.FastScroller$2 -> androidx.recyclerview.widget.FastScroller$2:
    130:130:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    133:135:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.FastScroller$AnimatorListener -> androidx.recyclerview.widget.FastScroller$AnimatorListener:
    549:552:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    572:573:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    557:568:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.FastScroller$AnimatorUpdater -> androidx.recyclerview.widget.FastScroller$AnimatorUpdater:
    577:578:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    582:586:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.recyclerview.widget.GapWorker -> androidx.recyclerview.widget.GapWorker:
    32:190:void <clinit>() -> <clinit>
    30:59:void <init>() -> <init>
    163:164:void add(androidx.recyclerview.widget.RecyclerView) -> add
    217:262:void buildTaskList() -> buildTaskList
    344:353:void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long) -> flushTaskWithDeadline
    356:364:void flushTasksWithDeadline(long) -> flushTasksWithDeadline
    265:274:boolean isPrefetchPositionAttached(androidx.recyclerview.widget.RecyclerView,int) -> isPrefetchPositionAttached
    177:188:void postFromTraversal(androidx.recyclerview.widget.RecyclerView,int,int) -> postFromTraversal
    367:369:void prefetch(long) -> prefetch
    312:341:void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long) -> prefetchInnerRecyclerViewWithDeadline
    279:307:androidx.recyclerview.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(androidx.recyclerview.widget.RecyclerView,int,long) -> prefetchPositionWithDeadline
    167:171:void remove(androidx.recyclerview.widget.RecyclerView) -> remove
    374:406:void run() -> run
androidx.recyclerview.widget.GapWorker$1 -> androidx.recyclerview.widget.GapWorker$1:
    190:190:void <init>() -> <init>
    190:190:int compare(java.lang.Object,java.lang.Object) -> compare
    194:211:int compare(androidx.recyclerview.widget.GapWorker$Task,androidx.recyclerview.widget.GapWorker$Task) -> compare
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl -> androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl:
    65:65:void <init>() -> <init>
    112:136:void addPosition(int,int) -> addPosition
    152:156:void clearPrefetchPositions() -> clearPrefetchPositions
    79:108:void collectPrefetchPositionsFromView(androidx.recyclerview.widget.RecyclerView,boolean) -> collectPrefetchPositionsFromView
    139:145:boolean lastPrefetchIncludedPosition(int) -> lastPrefetchIncludedPosition
    74:76:void setPrefetchVector(int,int) -> setPrefetchVector
androidx.recyclerview.widget.GapWorker$Task -> androidx.recyclerview.widget.GapWorker$Task:
    38:38:void <init>() -> <init>
    46:51:void clear() -> clear
androidx.recyclerview.widget.GridLayoutManager -> androidx.recyclerview.widget.GridLayoutManager:
    44:76:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    44:87:void <init>(android.content.Context,int) -> <init>
    44:100:void <init>(android.content.Context,int,int,boolean) -> <init>
    775:792:void assignSpans(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,boolean) -> assignSpans
    189:196:void cachePreLayoutSpanMapping() -> cachePreLayoutSpanMapping
    314:315:void calculateItemBorders(int) -> calculateItemBorders
    325:344:int[] calculateItemBorders(int[],int,int) -> calculateItemBorders
    256:256:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    184:186:void clearPreLayoutSpanMappingCache() -> clearPreLayoutSpanMappingCache
    515:525:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    1213:1216:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1195:1198:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1304:1342:int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffsetWithSpanInfo
    1271:1300:int computeScrollRangeWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRangeWithSpanInfo
    1222:1225:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1204:1207:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    391:416:void ensureAnchorIsInCorrectSpan(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> ensureAnchorIsInCorrectSpan
    368:371:void ensureViewSet() -> ensureViewSet
    421:450:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int) -> findReferenceChild
    231:235:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    242:242:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    247:250:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    133:141:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    119:127:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    348:352:int getSpaceForSpanRange(int,int) -> getSpaceForSpanRange
    801:801:int getSpanCount() -> getSpanCount
    455:467:int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanGroupIndex
    471:488:int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanIndex
    492:509:int getSpanSize(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanSize
    750:753:void guessMeasurement(float,int) -> guessMeasurement
    530:704:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    716:737:void measureChild(android.view.View,int,boolean) -> measureChild
    757:767:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    359:365:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    1068:1185:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    147:163:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    200:202:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    206:208:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    225:227:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    212:214:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    219:221:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    167:175:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    179:181:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    376:378:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    384:386:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    290:308:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    814:825:void setSpanCount(int) -> setSpanCount
    108:114:void setStackFromEnd(boolean) -> setStackFromEnd
    1190:1190:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    280:286:void updateMeasurements() -> updateMeasurements
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup:
    1348:1348:void <init>() -> <init>
    1357:1357:int getSpanIndex(int,int) -> getSpanIndex
    1352:1352:int getSpanSize(int) -> getSpanSize
androidx.recyclerview.widget.GridLayoutManager$LayoutParams -> androidx.recyclerview.widget.GridLayoutManager$LayoutParams:
    1375:1381:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1375:1385:void <init>(int,int) -> <init>
    1375:1389:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1375:1393:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1414:1414:int getSpanIndex() -> getSpanIndex
    1424:1424:int getSpanSize() -> getSpanSize
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup:
    834:840:void <init>() -> <init>
    997:1015:int findFirstKeyLessThan(android.util.SparseIntArray,int) -> findFirstKeyLessThan
    930:939:int getCachedSpanGroupIndex(int,int) -> getCachedSpanGroupIndex
    917:926:int getCachedSpanIndex(int,int) -> getCachedSpanIndex
    1029:1061:int getSpanGroupIndex(int,int) -> getSpanGroupIndex
    895:896:void invalidateSpanGroupIndexCache() -> invalidateSpanGroupIndexCache
    887:888:void invalidateSpanIndexCache() -> invalidateSpanIndexCache
androidx.recyclerview.widget.LayoutState -> androidx.recyclerview.widget.LayoutState:
    25:72:void <init>() -> <init>
    88:88:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> hasMore
    98:100:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> next
    105:105:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager -> androidx.recyclerview.widget.LinearLayoutManager:
    159:160:void <init>(android.content.Context) -> <init>
    67:172:void <init>(android.content.Context,int,boolean) -> <init>
    67:188:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1409:1412:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    482:497:void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[]) -> calculateExtraLayoutSpace
    295:295:boolean canScrollHorizontally() -> canScrollHorizontally
    303:303:boolean canScrollVertically() -> canScrollVertically
    1368:1379:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1288:1314:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    1277:1281:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    1143:1143:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1133:1133:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1153:1153:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1173:1179:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1162:1168:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1184:1190:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    510:518:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    1148:1148:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1138:1138:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1158:1158:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    1716:1749:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    1051:1051:androidx.recyclerview.widget.LinearLayoutManager$LayoutState createLayoutState() -> createLayoutState
    1040:1043:void ensureLayoutState() -> ensureLayoutState
    1572:1622:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fill
    1897:1897:android.view.View findFirstPartiallyOrCompletelyInvisibleChild() -> findFirstPartiallyOrCompletelyInvisibleChild
    1845:1845:android.view.View findFirstReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findFirstReferenceChild
    1801:1805:android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean) -> findFirstVisibleChildClosestToEnd
    1783:1787:android.view.View findFirstVisibleChildClosestToStart(boolean,boolean) -> findFirstVisibleChildClosestToStart
    1923:1924:int findFirstVisibleItemPosition() -> findFirstVisibleItemPosition
    1901:1901:android.view.View findLastPartiallyOrCompletelyInvisibleChild() -> findLastPartiallyOrCompletelyInvisibleChild
    1849:1849:android.view.View findLastReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findLastReferenceChild
    1963:1964:int findLastVisibleItemPosition() -> findLastVisibleItemPosition
    2012:2034:android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int) -> findOnePartiallyOrCompletelyInvisibleChild
    1990:2007:android.view.View findOneVisibleChild(int,int,boolean,boolean) -> findOneVisibleChild
    1885:1886:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd() -> findPartiallyOrCompletelyInvisibleChildClosestToEnd
    1892:1893:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart() -> findPartiallyOrCompletelyInvisibleChildClosestToStart
    1855:1879:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int) -> findReferenceChild
    1823:1824:android.view.View findReferenceChildClosestToEnd(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findReferenceChildClosestToEnd
    1840:1841:android.view.View findReferenceChildClosestToStart(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findReferenceChildClosestToStart
    407:420:android.view.View findViewByPosition(int) -> findViewByPosition
    961:978:int fixLayoutEndGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutEndGap
    986:1003:int fixLayoutStartGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutStartGap
    200:200:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1771:1771:android.view.View getChildClosestToEnd() -> getChildClosestToEnd
    1761:1761:android.view.View getChildClosestToStart() -> getChildClosestToStart
    447:450:int getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State) -> getExtraLayoutSpace
    330:330:int getOrientation() -> getOrientation
    192:192:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    1036:1036:boolean isLayoutRTL() -> isLayoutRTL
    1223:1223:boolean isSmoothScrollbarEnabled() -> isSmoothScrollbarEnabled
    1627:1696:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    755:802:void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> layoutForPredictiveAnimations
    743:743:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    234:239:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    2041:2081:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    243:248:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    537:721:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    725:730:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    279:288:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    252:274:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1546:1556:void recycleByLayoutState(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState) -> recycleByLayoutState
    1421:1436:void recycleChildren(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleChildren
    1502:1532:void recycleViewsFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleViewsFromEnd
    1453:1484:void recycleViewsFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleViewsFromStart
    1271:1272:boolean resolveIsInfinite() -> resolveIsInfinite
    362:367:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    1382:1404:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollBy
    1113:1116:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    1070:1076:void scrollToPosition(int) -> scrollToPosition
    1125:1128:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    340:353:void setOrientation(int) -> setOrientation
    394:400:void setReverseLayout(boolean) -> setReverseLayout
    310:316:void setStackFromEnd(boolean) -> setStackFromEnd
    1700:1702:boolean shouldMeasureTwice() -> shouldMeasureTwice
    502:506:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    2150:2150:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    834:867:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    875:953:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    806:824:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    1229:1268:void updateLayoutState(int,int,boolean,androidx.recyclerview.widget.RecyclerView$State) -> updateLayoutState
    1007:1008:void updateLayoutStateToFillEnd(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillEnd
    1011:1018:void updateLayoutStateToFillEnd(int,int) -> updateLayoutStateToFillEnd
    1021:1022:void updateLayoutStateToFillStart(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillStart
    1025:1033:void updateLayoutStateToFillStart(int,int) -> updateLayoutStateToFillStart
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo -> androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo:
    2453:2455:void <init>() -> <init>
    2469:2472:void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    2538:2546:void assignFromView(android.view.View,int) -> assignFromView
    2491:2535:void assignFromViewAndKeepVisibleRect(android.view.View,int) -> assignFromViewAndKeepVisibleRect
    2485:2487:boolean isViewValidAsAnchor(android.view.View,androidx.recyclerview.widget.RecyclerView$State) -> isViewValidAsAnchor
    2458:2462:void reset() -> reset
    2476:2476:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult -> androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult:
    2549:2549:void <init>() -> <init>
    2556:2560:void resetInternal() -> resetInternal
androidx.recyclerview.widget.LinearLayoutManager$LayoutState -> androidx.recyclerview.widget.LinearLayoutManager$LayoutState:
    2193:2279:void <init>() -> <init>
    2332:2333:void assignPositionFromScrapList() -> assignPositionFromScrapList
    2336:2343:void assignPositionFromScrapList(android.view.View) -> assignPositionFromScrapList
    2290:2290:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> hasMore
    2300:2305:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> next
    2316:2328:android.view.View nextViewFromScrapList() -> nextViewFromScrapList
    2346:2371:android.view.View nextViewInLimitedList(android.view.View) -> nextViewInLimitedList
androidx.recyclerview.widget.LinearLayoutManager$SavedState -> androidx.recyclerview.widget.LinearLayoutManager$SavedState:
    2429:2429:void <clinit>() -> <clinit>
    2393:2395:void <init>() -> <init>
    2397:2401:void <init>(android.os.Parcel) -> <init>
    2403:2407:void <init>(androidx.recyclerview.widget.LinearLayoutManager$SavedState) -> <init>
    2419:2419:int describeContents() -> describeContents
    2410:2410:boolean hasValidAnchor() -> hasValidAnchor
    2414:2415:void invalidateAnchor() -> invalidateAnchor
    2424:2427:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1 -> androidx.recyclerview.widget.LinearLayoutManager$SavedState$1:
    2430:2430:void <init>() -> <init>
    2430:2430:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2433:2433:androidx.recyclerview.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2430:2430:java.lang.Object[] newArray(int) -> newArray
    2438:2438:androidx.recyclerview.widget.LinearLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.LinearSmoothScroller -> androidx.recyclerview.widget.LinearSmoothScroller:
    79:95:void <init>(android.content.Context) -> <init>
    280:299:int calculateDtToFit(int,int,int,int,int) -> calculateDtToFit
    339:349:int calculateDxToMakeVisible(android.view.View,int) -> calculateDxToMakeVisible
    314:324:int calculateDyToMakeVisible(android.view.View,int) -> calculateDyToMakeVisible
    166:166:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    191:191:int calculateTimeForDeceleration(int) -> calculateTimeForDeceleration
    205:205:int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    266:271:int clampApplyScroll(int,int) -> clampApplyScroll
    218:218:int getHorizontalSnapPreference() -> getHorizontalSnapPreference
    170:174:float getSpeedPerPixel() -> getSpeedPerPixel
    232:232:int getVerticalSnapPreference() -> getVerticalSnapPreference
    127:144:void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onSeekTargetStep
    103:103:void onStart() -> onStart
    151:153:void onStop() -> onStop
    110:117:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
    244:263:void updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> updateActionForInterimTarget
androidx.recyclerview.widget.OpReorderer -> androidx.recyclerview.widget.OpReorderer:
    25:27:void <init>(androidx.recyclerview.widget.OpReorderer$Callback) -> <init>
    213:224:int getLastMoveOutOfOrder(java.util.List) -> getLastMoveOutOfOrder
    33:36:void reorderOps(java.util.List) -> reorderOps
    155:172:void swapMoveAdd(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveAdd
    39:52:void swapMoveOp(java.util.List,int,int) -> swapMoveOp
    56:151:void swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveRemove
    176:210:void swapMoveUpdate(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveUpdate
androidx.recyclerview.widget.OrientationHelper -> androidx.recyclerview.widget.OrientationHelper:
    32:32:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper$1) -> <init>
    42:48:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    258:258:androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createHorizontalHelper
    241:247:androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int) -> createOrientationHelper
    356:356:androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createVerticalHelper
    78:78:int getTotalSpaceChange() -> getTotalSpaceChange
    64:65:void onLayoutComplete() -> onLayoutComplete
androidx.recyclerview.widget.OrientationHelper$1 -> androidx.recyclerview.widget.OrientationHelper$1:
    258:258:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    297:299:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    281:283:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    289:291:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    304:306:int getDecoratedStart(android.view.View) -> getDecoratedStart
    266:266:int getEnd() -> getEnd
    261:261:int getEndAfterPadding() -> getEndAfterPadding
    334:334:int getEndPadding() -> getEndPadding
    339:339:int getMode() -> getMode
    344:344:int getModeInOther() -> getModeInOther
    276:276:int getStartAfterPadding() -> getStartAfterPadding
    323:324:int getTotalSpace() -> getTotalSpace
    311:312:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    317:318:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    271:272:void offsetChildren(int) -> offsetChildren
androidx.recyclerview.widget.OrientationHelper$2 -> androidx.recyclerview.widget.OrientationHelper$2:
    356:356:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    395:397:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    379:381:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    387:389:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    402:404:int getDecoratedStart(android.view.View) -> getDecoratedStart
    364:364:int getEnd() -> getEnd
    359:359:int getEndAfterPadding() -> getEndAfterPadding
    432:432:int getEndPadding() -> getEndPadding
    437:437:int getMode() -> getMode
    442:442:int getModeInOther() -> getModeInOther
    374:374:int getStartAfterPadding() -> getStartAfterPadding
    421:422:int getTotalSpace() -> getTotalSpace
    409:410:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    415:416:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    369:370:void offsetChildren(int) -> offsetChildren
androidx.recyclerview.widget.PagerSnapHelper -> androidx.recyclerview.widget.PagerSnapHelper:
    38:38:void <init>() -> <init>
    51:65:int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View) -> calculateDistanceToFinalSnap
    169:172:androidx.recyclerview.widget.LinearSmoothScroller createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createSnapScroller
    199:202:int distanceToCenter(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View,androidx.recyclerview.widget.OrientationHelper) -> distanceToCenter
    217:238:android.view.View findCenterView(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> findCenterView
    71:76:android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> findSnapView
    82:142:int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> findTargetSnapPosition
    263:266:androidx.recyclerview.widget.OrientationHelper getHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getHorizontalHelper
    243:248:androidx.recyclerview.widget.OrientationHelper getOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getOrientationHelper
    254:257:androidx.recyclerview.widget.OrientationHelper getVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getVerticalHelper
    147:150:boolean isForwardFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> isForwardFling
    155:164:boolean isReverseLayout(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> isReverseLayout
androidx.recyclerview.widget.PagerSnapHelper$1 -> androidx.recyclerview.widget.PagerSnapHelper$1:
    172:172:void <init>(androidx.recyclerview.widget.PagerSnapHelper,android.content.Context) -> <init>
    187:187:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    192:192:int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    175:183:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
androidx.recyclerview.widget.RecyclerView -> androidx.recyclerview.widget.RecyclerView:
    219:598:void <clinit>() -> <clinit>
    650:651:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    365:726:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2603:2630:void absorbGlows(int,int) -> absorbGlows
    210:210:void access$000(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams) -> access$000
    210:210:void access$100(androidx.recyclerview.widget.RecyclerView,int) -> access$100
    210:210:boolean access$200(androidx.recyclerview.widget.RecyclerView) -> access$200
    210:210:void access$300(androidx.recyclerview.widget.RecyclerView,int,int) -> access$300
    1431:1442:void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addAnimatingView
    2943:2946:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1568:1582:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int) -> addItemDecoration
    1597:1598:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> addItemDecoration
    3079:3080:void addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> addOnItemTouchListener
    1706:1710:void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> addOnScrollListener
    4363:4367:void animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    4381:4399:void animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean) -> animateChange
    4371:4376:void animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    3048:3063:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    4674:4675:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    3443:3445:void cancelScroll() -> cancelScroll
    4500:4500:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    5851:5867:void clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> clearNestedRecyclerViewIfNotNested
    4554:4562:void clearOldPositions() -> clearOldPositions
    2024:2027:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    1999:2002:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    2047:2050:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    2096:2099:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    2072:2075:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    2119:2122:int computeVerticalScrollRange() -> computeVerticalScrollRange
    2580:2600:void considerReleasingGlowsOnScroll(int,int) -> considerReleasingGlowsOnScroll
    1865:1900:void consumePendingUpdateOperations() -> consumePendingUpdateOperations
    782:832:void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int) -> createLayoutManager
    3606:3614:void defaultOnMeasure(int,int) -> defaultOnMeasure
    4327:4328:boolean didChildRangeChange(int,int) -> didChildRangeChange
    7553:7564:void dispatchChildAttached(android.view.View) -> dispatchChildAttached
    7538:7549:void dispatchChildDetached(android.view.View) -> dispatchChildDetached
    3675:3683:void dispatchContentChangedIfNecessary() -> dispatchContentChangedIfNecessary
    3837:3863:void dispatchLayout() -> dispatchLayout
    4033:4118:void dispatchLayoutStep1() -> dispatchLayoutStep1
    4125:4144:void dispatchLayoutStep2() -> dispatchLayoutStep2
    4151:4235:void dispatchLayoutStep3() -> dispatchLayoutStep3
    11601:11601:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    11606:11606:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    11589:11589:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    11595:11595:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    11569:11569:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    11583:11585:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    5196:5213:void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    5154:5177:void dispatchOnScrolled(int,int) -> dispatchOnScrolled
    11480:11494:void dispatchPendingImportantForAccessibilityChanges() -> dispatchPendingImportantForAccessibilityChanges
    3741:3742:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    1419:1420:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    1411:1412:void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    3118:3129:boolean dispatchToOnItemTouchListeners(android.view.MotionEvent) -> dispatchToOnItemTouchListeners
    4429:4486:void draw(android.graphics.Canvas) -> draw
    5030:5030:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    2673:2683:void ensureBottomGlow() -> ensureBottomGlow
    2633:2643:void ensureLeftGlow() -> ensureLeftGlow
    2646:2656:void ensureRightGlow() -> ensureRightGlow
    2659:2670:void ensureTopGlow() -> ensureTopGlow
    733:736:java.lang.String exceptionLabel() -> exceptionLabel
    4015:4023:void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$State) -> fillRemainingScrollValues
    4792:4797:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    4810:4811:androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View) -> findContainingViewHolder
    3147:3156:boolean findInterceptingOnItemTouchListener(android.view.MotionEvent) -> findInterceptingOnItemTouchListener
    4301:4324:void findMinMaxChildLayoutPositions(int[]) -> findMinMaxChildLayoutPositions
    5829:5844:androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View) -> findNestedRecyclerView
    3902:3925:android.view.View findNextViewToFocus() -> findNextViewToFocus
    4924:4941:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int) -> findViewHolderForAdapterPosition
    4986:5001:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long) -> findViewHolderForItemId
    4946:4968:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean) -> findViewHolderForPosition
    2438:2485:boolean fling(int,int) -> fling
    2748:2822:android.view.View focusSearch(android.view.View,int) -> focusSearch
    4505:4508:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    4513:4516:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    4521:4524:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    774:774:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    1226:1226:androidx.recyclerview.widget.RecyclerView$Adapter getAdapter() -> getAdapter
    11497:11502:int getAdapterPositionFor(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getAdapterPositionFor
    1253:1256:int getBaseline() -> getBaseline
    4358:4358:long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getChangedHolderKey
    13465:13468:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    4853:4854:int getChildLayoutPosition(android.view.View) -> getChildLayoutPosition
    4769:4774:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    4816:4819:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View) -> getChildViewHolderInt
    1099:1099:boolean getClipToPadding() -> getClipToPadding
    759:759:androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate() -> getCompatAccessibilityDelegate
    5096:5102:void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMarginsInt
    4003:4011:int getDeepestFocusedViewWithId(android.view.View) -> getDeepestFocusedViewWithId
    2713:2713:androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory() -> getEdgeEffectFactory
    835:841:java.lang.String getFullClassName(android.content.Context,java.lang.String) -> getFullClassName
    3756:3756:androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator() -> getItemAnimator
    5105:5126:android.graphics.Rect getItemDecorInsetsForChild(android.view.View) -> getItemDecorInsetsForChild
    1623:1623:int getItemDecorationCount() -> getItemDecorationCount
    1474:1474:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    2523:2523:int getMaxFlingVelocity() -> getMaxFlingVelocity
    2513:2513:int getMinFlingVelocity() -> getMinFlingVelocity
    5876:5879:long getNanoTime() -> getNanoTime
    1375:1375:androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener() -> getOnFlingListener
    4741:4741:boolean getPreserveFocusAfterLayout() -> getPreserveFocusAfterLayout
    1487:1487:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    1535:1535:int getScrollState() -> getScrollState
    13495:13498:androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper() -> getScrollingChildHelper
    4255:4282:void handleMissingPreInfoForChangeError(long,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> handleMissingPreInfoForChangeError
    11558:11558:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    5229:5230:boolean hasPendingAdapterUpdates() -> hasPendingAdapterUpdates
    1906:1916:boolean hasUpdatedView() -> hasUpdatedView
    968:1048:void initAdapterManager() -> initAdapterManager
    747:751:void initAutofill() -> initAutofill
    845:965:void initChildrenHelper() -> initChildrenHelper
    11509:11522:void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable) -> initFastScroller
    2686:2687:void invalidateGlows() -> invalidateGlows
    3671:3671:boolean isAccessibilityEnabled() -> isAccessibilityEnabled
    3019:3019:boolean isAttachedToWindow() -> isAttachedToWindow
    3705:3705:boolean isComputingLayout() -> isComputingLayout
    2242:2242:boolean isLayoutSuppressed() -> isLayoutSuppressed
    11533:11533:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    2834:2888:boolean isPreferredNextFocus(android.view.View,android.view.View,int) -> isPreferredNextFocus
    1755:1764:void jumpToPositionForSmoothScroller(int) -> jumpToPositionForSmoothScroller
    4419:4425:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    4702:4711:void markKnownViewsInvalid() -> markKnownViewsInvalid
    5078:5082:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    5040:5044:void offsetChildrenVertical(int) -> offsetChildrenVertical
    4599:4613:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    4565:4596:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    4617:4643:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    2960:2990:void onAttachedToWindow() -> onAttachedToWindow
    5057:5057:void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    5069:5069:void onChildDetachedFromWindow(android.view.View) -> onChildDetachedFromWindow
    2994:3012:void onDetachedFromWindow() -> onDetachedFromWindow
    4490:4496:void onDraw(android.graphics.Canvas) -> onDraw
    3648:3649:void onEnterLayoutOrScroll() -> onEnterLayoutOrScroll
    3652:3653:void onExitLayoutOrScroll() -> onExitLayoutOrScroll
    3656:3668:void onExitLayoutOrScroll(boolean) -> onExitLayoutOrScroll
    3460:3505:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    3161:3265:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    4403:4407:void onLayout(boolean,int,int,int,int) -> onLayout
    3510:3597:void onMeasure(int,int) -> onMeasure
    3448:3456:void onPointerUp(android.view.MotionEvent) -> onPointerUp
    2950:2955:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1394:1404:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1380:1389:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    5191:5191:void onScrollStateChanged(int) -> onScrollStateChanged
    5151:5151:void onScrolled(int,int) -> onScrolled
    3618:3623:void onSizeChanged(int,int,int,int) -> onSizeChanged
    3280:3431:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    3764:3768:void postAnimationRunner() -> postAnimationRunner
    3771:3771:boolean predictiveItemAnimationsEnabled() -> predictiveItemAnimationsEnabled
    3781:3809:void processAdapterUpdatesAndSetAnimationFlags() -> processAdapterUpdatesAndSetAnimationFlags
    4692:4695:void processDataSetCompletelyChanged(boolean) -> processDataSetCompletelyChanged
    2530:2554:void pullGlows(float,float,float,float) -> pullGlows
    4291:4298:void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> recordAnimationInfoIfBouncedHiddenView
    3929:4000:void recoverFocusFromState() -> recoverFocusFromState
    2557:2577:void releaseGlows() -> releaseGlows
    1171:1184:void removeAndRecycleViews() -> removeAndRecycleViews
    1451:1463:boolean removeAnimatingView(android.view.View) -> removeAnimatingView
    4334:4351:void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    1650:1660:void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> removeItemDecoration
    3088:3092:void removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> removeOnItemTouchListener
    1718:1721:void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> removeOnScrollListener
    5513:5528:void repositionShadowingViews() -> repositionShadowingViews
    2893:2897:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    2909:2934:void requestChildOnScreen(android.view.View,android.view.View) -> requestChildOnScreen
    2938:2938:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    3270:3276:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    4411:4416:void requestLayout() -> requestLayout
    3887:3890:void resetFocusInfo() -> resetFocusInfo
    3435:3440:void resetScroll() -> resetScroll
    3866:3884:void saveFocusInfo() -> saveFocusInfo
    4540:4551:void saveOldPositions() -> saveOldPositions
    1801:1814:void scrollBy(int,int) -> scrollBy
    1931:1976:boolean scrollByInternal(int,int,android.view.MotionEvent) -> scrollByInternal
    1829:1854:void scrollStep(int,int,int[]) -> scrollStep
    1795:1797:void scrollTo(int,int) -> scrollTo
    1741:1752:void scrollToPosition(int) -> scrollToPosition
    3733:3737:void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    768:770:void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> setAccessibilityDelegateCompat
    1160:1164:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> setAdapter
    1197:1216:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean) -> setAdapterInternal
    1676:1681:void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback) -> setChildDrawingOrderCallback
    11470:11476:boolean setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setChildImportantForAccessibilityInternal
    1075:1083:void setClipToPadding(boolean) -> setClipToPadding
    2699:2702:void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory) -> setEdgeEffectFactory
    1062:1063:void setHasFixedSize(boolean) -> setHasFixedSize
    3637:3645:void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator) -> setItemAnimator
    1525:1526:void setItemViewCacheSize(int) -> setItemViewCacheSize
    2271:2272:void setLayoutFrozen(boolean) -> setLayoutFrozen
    1315:1354:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> setLayoutManager
    2290:2317:void setLayoutTransition(android.animation.LayoutTransition) -> setLayoutTransition
    11528:11529:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    1365:1366:void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener) -> setOnFlingListener
    1693:1694:void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> setOnScrollListener
    4759:4760:void setPreserveFocusAfterLayout(boolean) -> setPreserveFocusAfterLayout
    1499:1500:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    1240:1241:void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener) -> setRecyclerListener
    1539:1551:void setScrollState(int) -> setScrollState
    1112:1126:void setScrollingTouchSlop(int) -> setScrollingTouchSlop
    1510:1511:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    3717:3728:boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> shouldDeferAccessibilityEvent
    2326:2327:void smoothScrollBy(int,int) -> smoothScrollBy
    2338:2339:void smoothScrollBy(int,int,android.view.animation.Interpolator) -> smoothScrollBy
    2356:2357:void smoothScrollBy(int,int,android.view.animation.Interpolator,int) -> smoothScrollBy
    2390:2422:void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean) -> smoothScrollBy
    1782:1791:void smoothScrollToPosition(int) -> smoothScrollToPosition
    2137:2141:void startInterceptRequestLayout() -> startInterceptRequestLayout
    11538:11538:boolean startNestedScroll(int) -> startNestedScroll
    11543:11543:boolean startNestedScroll(int,int) -> startNestedScroll
    2154:2185:void stopInterceptRequestLayout(boolean) -> stopInterceptRequestLayout
    11548:11549:void stopNestedScroll() -> stopNestedScroll
    11553:11554:void stopNestedScroll(int) -> stopNestedScroll
    2493:2495:void stopScroll() -> stopScroll
    2501:2505:void stopScrollersInternal() -> stopScrollersInternal
    2214:2232:void suppressLayout(boolean) -> suppressLayout
    4652:4671:void viewRangeUpdate(int,int,java.lang.Object) -> viewRangeUpdate
androidx.recyclerview.widget.RecyclerView$1 -> androidx.recyclerview.widget.RecyclerView$1:
    398:398:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    401:415:void run() -> run
androidx.recyclerview.widget.RecyclerView$2 -> androidx.recyclerview.widget.RecyclerView$2:
    588:588:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    591:595:void run() -> run
androidx.recyclerview.widget.RecyclerView$3 -> androidx.recyclerview.widget.RecyclerView$3:
    598:598:void <init>() -> <init>
    601:602:float getInterpolation(float) -> getInterpolation
androidx.recyclerview.widget.RecyclerView$4 -> androidx.recyclerview.widget.RecyclerView$4:
    610:610:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    620:621:void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processAppeared
    614:616:void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processDisappeared
    626:638:void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processPersistent
    641:642:void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> unused
androidx.recyclerview.widget.RecyclerView$5 -> androidx.recyclerview.widget.RecyclerView$5:
    845:845:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    856:861:void addView(android.view.View,int) -> addView
    916:928:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> attachViewToParent
    932:947:void detachViewFromParent(int) -> detachViewFromParent
    890:890:android.view.View getChildAt(int) -> getChildAt
    848:848:int getChildCount() -> getChildCount
    910:910:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    865:865:int indexOfChild(android.view.View) -> indexOfChild
    951:955:void onEnteredHiddenState(android.view.View) -> onEnteredHiddenState
    959:963:void onLeftHiddenState(android.view.View) -> onLeftHiddenState
    895:906:void removeAllViews() -> removeAllViews
    870:886:void removeViewAt(int) -> removeViewAt
androidx.recyclerview.widget.RecyclerView$6 -> androidx.recyclerview.widget.RecyclerView$6:
    968:968:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    1013:1028:void dispatchUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchUpdate
    971:983:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int) -> findViewHolder
    1003:1005:void markViewHoldersUpdated(int,int,java.lang.Object) -> markViewHoldersUpdated
    1037:1039:void offsetPositionsForAdd(int,int) -> offsetPositionsForAdd
    1043:1046:void offsetPositionsForMove(int,int) -> offsetPositionsForMove
    988:991:void offsetPositionsForRemovingInvisible(int,int) -> offsetPositionsForRemovingInvisible
    996:998:void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> offsetPositionsForRemovingLaidOutOrNewView
    1009:1010:void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchFirstPass
    1032:1033:void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchSecondPass
androidx.recyclerview.widget.RecyclerView$Adapter -> androidx.recyclerview.widget.RecyclerView$Adapter:
    6984:6986:void <init>() -> <init>
    7099:7114:void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> bindViewHolder
    7077:7088:androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int) -> createViewHolder
    7157:7157:long getItemId(int) -> getItemId
    7129:7129:int getItemViewType(int) -> getItemViewType
    7267:7267:boolean hasObservers() -> hasObservers
    7175:7175:boolean hasStableIds() -> hasStableIds
    7354:7355:void notifyDataSetChanged() -> notifyDataSetChanged
    7398:7399:void notifyItemChanged(int,java.lang.Object) -> notifyItemChanged
    7464:7465:void notifyItemInserted(int) -> notifyItemInserted
    7498:7499:void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
    7313:7313:void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onAttachedToRecyclerView
    7065:7066:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> onBindViewHolder
    7322:7322:void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromRecyclerView
    7233:7233:boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onFailedToRecycleView
    7247:7247:void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewAttachedToWindow
    7259:7259:void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetachedFromWindow
    7196:7196:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
    7287:7288:void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> registerAdapterDataObserver
    7141:7146:void setHasStableIds(boolean) -> setHasStableIds
    7301:7302:void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> unregisterAdapterDataObserver
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable -> androidx.recyclerview.widget.RecyclerView$AdapterDataObservable:
    12242:12242:void <init>() -> <init>
    12244:12244:boolean hasObservers() -> hasObservers
    12252:12255:void notifyChanged() -> notifyChanged
    12267:12270:void notifyItemRangeChanged(int,int,java.lang.Object) -> notifyItemRangeChanged
    12277:12280:void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver -> androidx.recyclerview.widget.RecyclerView$AdapterDataObserver:
    11721:11721:void <init>() -> <init>
    11724:11724:void onChanged() -> onChanged
    11728:11728:void onItemRangeChanged(int,int) -> onItemRangeChanged
    11733:11734:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    11738:11738:void onItemRangeInserted(int,int) -> onItemRangeInserted
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory -> androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory:
    5592:5592:void <init>() -> <init>
    5623:5623:android.widget.EdgeEffect createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int) -> createEdgeEffect
androidx.recyclerview.widget.RecyclerView$ItemAnimator -> androidx.recyclerview.widget.RecyclerView$ItemAnimator:
    12728:12791:void <init>() -> <init>
    13113:13124:int buildAdapterChangeFlagsForAnimations(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> buildAdapterChangeFlagsForAnimations
    13332:13332:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    13197:13201:void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAnimationFinished
    13340:13345:void dispatchAnimationsFinished() -> dispatchAnimationsFinished
    12817:12817:long getAddDuration() -> getAddDuration
    12853:12853:long getChangeDuration() -> getChangeDuration
    12799:12799:long getMoveDuration() -> getMoveDuration
    12835:12835:long getRemoveDuration() -> getRemoveDuration
    13358:13358:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo() -> obtainHolderInfo
    13212:13212:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationFinished
    12942:12942:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> recordPostLayoutInformation
    12913:12913:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> recordPreLayoutInformation
    12874:12875:void setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener) -> setListener
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo -> androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo:
    13425:13426:void <init>() -> <init>
    13437:13437:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> setFrom
    13453:13458:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setFrom
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener -> androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener:
    12686:12687:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    12691:12703:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationFinished
androidx.recyclerview.widget.RecyclerView$ItemDecoration -> androidx.recyclerview.widget.RecyclerView$ItemDecoration:
    10705:10705:void <init>() -> <init>
    10757:10758:void getItemOffsets(android.graphics.Rect,int,androidx.recyclerview.widget.RecyclerView) -> getItemOffsets
    10782:10784:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    10716:10717:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    10725:10725:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> onDraw
    10738:10739:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    10747:10747:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> onDrawOver
androidx.recyclerview.widget.RecyclerView$LayoutManager -> androidx.recyclerview.widget.RecyclerView$LayoutManager:
    7582:7688:void <init>() -> <init>
    8518:8519:void addDisappearingView(android.view.View) -> addDisappearingView
    8536:8537:void addDisappearingView(android.view.View,int) -> addDisappearingView
    8547:8548:void addView(android.view.View) -> addView
    8559:8560:void addView(android.view.View,int) -> addView
    8563:8614:void addViewInt(android.view.View,int,boolean) -> addViewInt
    7897:7900:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    8804:8814:void attachView(android.view.View,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> attachView
    8825:8826:void attachView(android.view.View,int) -> attachView
    9707:9713:void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect) -> calculateItemDecorationsForChild
    8415:8415:boolean canScrollHorizontally() -> canScrollHorizontally
    8425:8425:boolean canScrollVertically() -> canScrollVertically
    8330:8330:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    7876:7885:int chooseSize(int,int,int) -> chooseSize
    8082:8082:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    8110:8110:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    10153:10153:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    10168:10168:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    10183:10183:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    10198:10198:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    10213:10213:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    10228:10228:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    9192:9197:void detachAndScrapAttachedViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapAttachedViews
    8784:8785:void detachViewAt(int) -> detachViewAt
    8791:8792:void detachViewInternal(int,android.view.View) -> detachViewInternal
    8113:8115:void dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> dispatchAttachedToWindow
    8118:8120:void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> dispatchDetachedFromWindow
    8703:8713:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    8731:8743:android.view.View findViewByPosition(int) -> findViewByPosition
    8347:8352:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    8371:8371:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    8662:8662:int getBaseline() -> getBaseline
    9742:9742:int getBottomDecorationHeight(android.view.View) -> getBottomDecorationHeight
    8933:8933:android.view.View getChildAt(int) -> getChildAt
    8923:8923:int getChildCount() -> getChildCount
    9446:9487:int getChildMeasureSpec(int,int,int,int,boolean) -> getChildMeasureSpec
    9834:9867:int[] getChildRectangleOnScreenScrollAmount(android.view.View,android.graphics.Rect) -> getChildRectangleOnScreenScrollAmount
    8230:8230:boolean getClipToPadding() -> getClipToPadding
    10528:10531:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    9686:9686:int getDecoratedBottom(android.view.View) -> getDecoratedBottom
    9638:9639:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMargins
    9650:9650:int getDecoratedLeft(android.view.View) -> getDecoratedLeft
    9514:9515:int getDecoratedMeasuredHeight(android.view.View) -> getDecoratedMeasuredHeight
    9500:9501:int getDecoratedMeasuredWidth(android.view.View) -> getDecoratedMeasuredWidth
    9674:9674:int getDecoratedRight(android.view.View) -> getDecoratedRight
    9662:9662:int getDecoratedTop(android.view.View) -> getDecoratedTop
    9089:9096:android.view.View getFocusedChild() -> getFocusedChild
    8999:8999:int getHeight() -> getHeight
    8967:8967:int getHeightMode() -> getHeightMode
    9112:9113:int getItemCount() -> getItemCount
    8489:8489:int getLayoutDirection() -> getLayoutDirection
    9757:9757:int getLeftDecorationWidth(android.view.View) -> getLeftDecorationWidth
    10283:10283:int getMinimumHeight() -> getMinimumHeight
    10275:10275:int getMinimumWidth() -> getMinimumWidth
    9039:9039:int getPaddingBottom() -> getPaddingBottom
    9009:9009:int getPaddingLeft() -> getPaddingLeft
    9029:9029:int getPaddingRight() -> getPaddingRight
    9019:9019:int getPaddingTop() -> getPaddingTop
    8673:8673:int getPosition(android.view.View) -> getPosition
    10635:10644:androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int) -> getProperties
    9772:9772:int getRightDecorationWidth(android.view.View) -> getRightDecorationWidth
    10508:10511:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    10492:10492:int getSelectionModeForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getSelectionModeForAccessibility
    9727:9727:int getTopDecorationHeight(android.view.View) -> getTopDecorationHeight
    9605:9628:void getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect) -> getTransformedBoundingBox
    8983:8983:int getWidth() -> getWidth
    8950:8950:int getWidthMode() -> getWidthMode
    10669:10677:boolean hasFlexibleChildInBothOrientations() -> hasFlexibleChildInBothOrientations
    8130:8130:boolean isAttachedToWindow() -> isAttachedToWindow
    7991:7991:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    9966:9981:boolean isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView,int,int) -> isFocusedChildVisibleAfterScrolling
    8058:8058:boolean isItemPrefetchEnabled() -> isItemPrefetchEnabled
    10545:10545:boolean isLayoutHierarchical(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> isLayoutHierarchical
    9340:9353:boolean isMeasurementUpToDate(int,int,int) -> isMeasurementUpToDate
    8477:8477:boolean isSmoothScrolling() -> isSmoothScrolling
    9944:9952:boolean isViewPartiallyVisible(android.view.View,boolean,boolean) -> isViewPartiallyVisible
    9585:9590:void layoutDecoratedWithMargins(android.view.View,int,int,int,int) -> layoutDecoratedWithMargins
    9369:9386:void measureChildWithMargins(android.view.View,int,int) -> measureChildWithMargins
    8856:8863:void moveView(int,int) -> moveView
    9123:9126:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    9135:9138:void offsetChildrenVertical(int) -> offsetChildrenVertical
    10031:10031:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter) -> onAdapterChanged
    10059:10059:boolean onAddFocusables(androidx.recyclerview.widget.RecyclerView,java.util.ArrayList,int,int) -> onAddFocusables
    8185:8185:void onAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> onAttachedToWindow
    8194:8194:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromWindow
    8221:8222:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    9800:9800:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    10397:10398:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    10413:10424:void onInitializeAccessibilityEvent(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    10348:10349:void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    10378:10393:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    10428:10434:void onInitializeAccessibilityNodeInfoForItem(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    10453:10459:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    9821:9821:android.view.View onInterceptFocusSearch(android.view.View,int) -> onInterceptFocusSearch
    10083:10083:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    10070:10070:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    10138:10138:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    10094:10094:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    10107:10107:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsUpdated
    10120:10121:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    8285:8286:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    8300:8300:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    10256:10257:void onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> onMeasure
    9991:9991:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,android.view.View,android.view.View) -> onRequestChildFocus
    10013:10013:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,android.view.View,android.view.View) -> onRequestChildFocus
    10303:10303:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    10297:10297:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    10323:10323:void onScrollStateChanged(int) -> onScrollStateChanged
    10312:10315:void onSmoothScrollerStopped(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> onSmoothScrollerStopped
    10550:10550:boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    10566:10592:boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle) -> performAccessibilityAction
    10598:10598:boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    10619:10619:boolean performAccessibilityActionForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    10338:10344:void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleAllViews
    9228:9255:void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleScrapInt
    8900:8902:void removeAndRecycleView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleView
    8911:8914:void removeAndRecycleViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleViewAt
    8164:8167:boolean removeCallbacks(java.lang.Runnable) -> removeCallbacks
    8625:8626:void removeView(android.view.View) -> removeView
    8637:8641:void removeViewAt(int) -> removeViewAt
    9886:9886:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    9906:9920:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean) -> requestChildRectangleOnScreen
    7847:7850:void requestLayout() -> requestLayout
    10472:10473:void requestSimpleAnimationsInNextLayout() -> requestSimpleAnimationsInNextLayout
    9200:9216:void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler,int,android.view.View) -> scrapOrRecycleView
    8388:8388:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    8438:8438:void scrollToPosition(int) -> scrollToPosition
    8405:8405:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    10648:10652:void setExactMeasureSpecsFrom(androidx.recyclerview.widget.RecyclerView) -> setExactMeasureSpecsFrom
    7757:7768:void setMeasureSpecs(int,int) -> setMeasureSpecs
    7836:7841:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    10267:10268:void setMeasuredDimension(int,int) -> setMeasuredDimension
    7784:7813:void setMeasuredDimensionFromChildren(int,int) -> setMeasuredDimensionFromChildren
    7741:7754:void setRecyclerView(androidx.recyclerview.widget.RecyclerView) -> setRecyclerView
    9307:9310:boolean shouldMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> shouldMeasureChild
    10665:10665:boolean shouldMeasureTwice() -> shouldMeasureTwice
    9293:9295:boolean shouldReMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> shouldReMeasureChild
    8451:8452:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    8465:8471:void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> startSmoothScroll
    10306:10309:void stopSmoothScroller() -> stopSmoothScroller
    8017:8017:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
androidx.recyclerview.widget.RecyclerView$LayoutManager$1 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$1:
    7591:7591:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    7594:7594:android.view.View getChildAt(int) -> getChildAt
    7616:7618:int getChildEnd(android.view.View) -> getChildEnd
    7609:7611:int getChildStart(android.view.View) -> getChildStart
    7604:7604:int getParentEnd() -> getParentEnd
    7599:7599:int getParentStart() -> getParentStart
androidx.recyclerview.widget.RecyclerView$LayoutManager$2 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$2:
    7627:7627:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    7630:7630:android.view.View getChildAt(int) -> getChildAt
    7653:7655:int getChildEnd(android.view.View) -> getChildEnd
    7646:7648:int getChildStart(android.view.View) -> getChildStart
    7640:7641:int getParentEnd() -> getParentEnd
    7635:7635:int getParentStart() -> getParentStart
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties -> androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties:
    10683:10683:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$LayoutParams -> androidx.recyclerview.widget.RecyclerView$LayoutParams:
    11617:11626:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    11617:11630:void <init>(int,int) -> <init>
    11617:11634:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    11617:11638:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    11617:11642:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    11701:11701:int getViewLayoutPosition() -> getViewLayoutPosition
    11683:11683:boolean isItemChanged() -> isItemChanged
    11672:11672:boolean isItemRemoved() -> isItemRemoved
    11661:11661:boolean isViewInvalid() -> isViewInvalid
androidx.recyclerview.widget.RecyclerView$OnFlingListener -> androidx.recyclerview.widget.RecyclerView$OnFlingListener:
    12663:12663:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$OnScrollListener -> androidx.recyclerview.widget.RecyclerView$OnScrollListener:
    10870:10870:void <init>() -> <init>
    10878:10878:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    10891:10891:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.RecyclerView$RecycledViewPool -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool:
    5635:5660:void <init>() -> <init>
    5782:5783:void attach() -> attach
    5666:5670:void clear() -> clear
    5786:5787:void detach() -> detach
    5766:5769:void factorInBindTime(int,long) -> factorInBindTime
    5760:5763:void factorInCreateTime(int,long) -> factorInCreateTime
    5704:5713:androidx.recyclerview.widget.RecyclerView$ViewHolder getRecycledView(int) -> getRecycledView
    5815:5820:androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int) -> getScrapDataForType
    5803:5812:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    5740:5750:void putRecycledView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> putRecycledView
    5753:5756:long runningAverage(long,long) -> runningAverage
    5777:5778:boolean willBindInTime(int,long,long) -> willBindInTime
    5772:5773:boolean willCreateInTime(int,long,long) -> willCreateInTime
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData:
    5652:5656:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$Recycler -> androidx.recyclerview.widget.RecyclerView$Recycler:
    5896:5906:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    6524:6542:void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> addViewHolderToRecycledViewPool
    6299:6318:void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> attachAccessibilityDelegateOnBind
    5919:5921:void clear() -> clear
    6911:6926:void clearOldPositions() -> clearOldPositions
    6612:6616:void clearScrap() -> clearScrap
    6088:6095:int convertPreLayoutPositionToPostLayout(int) -> convertPreLayoutPositionToPostLayout
    6765:6775:void dispatchViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchViewRecycled
    6621:6646:androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int) -> getChangedScrapViewForPosition
    6869:6872:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    6604:6604:int getScrapCount() -> getScrapCount
    5951:5951:java.util.List getScrapList() -> getScrapList
    6712:6760:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean) -> getScrapOrCachedViewForId
    6657:6707:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean) -> getScrapOrHiddenOrCachedHolderForPosition
    6608:6608:android.view.View getScrapViewAt(int) -> getScrapViewAt
    6114:6114:android.view.View getViewForPosition(int) -> getViewForPosition
    6118:6118:android.view.View getViewForPosition(int,boolean) -> getViewForPosition
    6321:6324:void invalidateDisplayListInt(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> invalidateDisplayListInt
    6327:6345:void invalidateDisplayListInt(android.view.ViewGroup,boolean) -> invalidateDisplayListInt
    6929:6937:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    6895:6908:void markKnownViewsInvalid() -> markKnownViewsInvalid
    6813:6824:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    6785:6810:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    6833:6852:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    6779:6781:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    6550:6555:void quickRecycleScrapView(android.view.View) -> quickRecycleScrapView
    6390:6398:void recycleAndClearCachedViews() -> recycleAndClearCachedViews
    6415:6421:void recycleCachedViewAt(int) -> recycleCachedViewAt
    6360:6387:void recycleView(android.view.View) -> recycleView
    6429:6513:void recycleViewHolderInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> recycleViewHolderInternal
    6567:6584:void scrapView(android.view.View) -> scrapView
    6859:6866:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    6855:6856:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    5929:5931:void setViewCacheSize(int) -> setViewCacheSize
    6004:6019:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long) -> tryBindViewHolderByDeadline
    6142:6295:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long) -> tryGetViewHolderForPositionByDeadline
    6593:6601:void unscrapView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> unscrapView
    5934:5942:void updateViewCacheSize() -> updateViewCacheSize
    5965:5986:boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> validateViewHolderForOffsetPosition
    6876:6892:void viewRangeUpdate(int,int) -> viewRangeUpdate
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver -> androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver:
    5531:5532:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5536:5543:void onChanged() -> onChanged
    5547:5551:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    5555:5559:void onItemRangeInserted(int,int) -> onItemRangeInserted
    5578:5584:void triggerUpdateProcessor() -> triggerUpdateProcessor
androidx.recyclerview.widget.RecyclerView$SavedState -> androidx.recyclerview.widget.RecyclerView$SavedState:
    12334:12334:void <clinit>() -> <clinit>
    12312:12315:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    12321:12322:void <init>(android.os.Parcelable) -> <init>
    12331:12332:void copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState) -> copyFrom
    12326:12328:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.RecyclerView$SavedState$1 -> androidx.recyclerview.widget.RecyclerView$SavedState$1:
    12334:12334:void <init>() -> <init>
    12334:12334:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    12334:12334:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12337:12337:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12342:12342:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    12334:12334:java.lang.Object[] newArray(int) -> newArray
    12347:12347:androidx.recyclerview.widget.RecyclerView$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.RecyclerView$SmoothScroller -> androidx.recyclerview.widget.RecyclerView$SmoothScroller:
    11760:11778:void <init>() -> <init>
    11835:11842:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    11972:11972:android.view.View findViewByPosition(int) -> findViewByPosition
    11965:11965:int getChildCount() -> getChildCount
    11958:11958:int getChildPosition(android.view.View) -> getChildPosition
    11851:11851:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    11903:11903:int getTargetPosition() -> getTargetPosition
    11885:11885:boolean isPendingInitialRun() -> isPendingInitialRun
    11893:11893:boolean isRunning() -> isRunning
    11998:12002:void normalize(android.graphics.PointF) -> normalize
    11907:11952:void onAnimation(int,int) -> onAnimation
    11985:11991:void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    11820:11821:void setTargetPosition(int) -> setTargetPosition
    11795:11817:void start(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$LayoutManager) -> start
    11861:11875:void stop() -> stop
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action -> androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action:
    12070:12071:void <init>(int,int) -> <init>
    12055:12095:void <init>(int,int,int,android.view.animation.Interpolator) -> <init>
    12117:12117:boolean hasJumpTarget() -> hasJumpTarget
    12113:12114:void jumpTo(int) -> jumpTo
    12121:12142:void runIfNecessary(androidx.recyclerview.widget.RecyclerView) -> runIfNecessary
    12208:12213:void update(int,int,int,android.view.animation.Interpolator) -> update
    12145:12151:void validate() -> validate
androidx.recyclerview.widget.RecyclerView$State -> androidx.recyclerview.widget.RecyclerView$State:
    12362:12433:void <init>() -> <init>
    12368:12373:void assertLayoutStep(int) -> assertLayoutStep
    12611:12611:int getItemCount() -> getItemCount
    12566:12566:int getTargetScrollPosition() -> getTargetScrollPosition
    12575:12575:boolean hasTargetScrollPosition() -> hasTargetScrollPosition
    12490:12490:boolean isPreLayout() -> isPreLayout
    12459:12464:void prepareForNestedPrefetch(androidx.recyclerview.widget.RecyclerView$Adapter) -> prepareForNestedPrefetch
    12640:12640:java.lang.String toString() -> toString
    12501:12501:boolean willRunPredictiveAnimations() -> willRunPredictiveAnimations
androidx.recyclerview.widget.RecyclerView$ViewFlinger -> androidx.recyclerview.widget.RecyclerView$ViewFlinger:
    5238:5248:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5483:5501:int computeScrollDuration(int,int,int,int) -> computeScrollDuration
    5477:5479:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    5416:5428:void fling(int,int) -> fling
    5411:5413:void internalPostOnAnimation() -> internalPostOnAnimation
    5403:5408:void postOnAnimation() -> postOnAnimation
    5252:5400:void run() -> run
    5445:5474:void smoothScrollBy(int,int,int,android.view.animation.Interpolator) -> smoothScrollBy
    5505:5507:void stop() -> stop
androidx.recyclerview.widget.RecyclerView$ViewHolder -> androidx.recyclerview.widget.RecyclerView$ViewHolder:
    11059:11059:void <clinit>() -> <clinit>
    10953:11091:void <init>(android.view.View) -> <init>
    11300:11306:void addChangePayload(java.lang.Object) -> addChangePayload
    11296:11297:void addFlags(int) -> addFlags
    11116:11118:void clearOldPosition() -> clearOldPosition
    11316:11320:void clearPayload() -> clearPayload
    11243:11244:void clearReturnedFromScrapFlag() -> clearReturnedFromScrapFlag
    11247:11248:void clearTmpDetachFlag() -> clearTmpDetachFlag
    11309:11313:void createPayloadsIfNeeded() -> createPayloadsIfNeeded
    11456:11456:boolean doesTransientStatePreventRecycling() -> doesTransientStatePreventRecycling
    11094:11097:void flagRemovedAndOffsetPosition(int,int,boolean) -> flagRemovedAndOffsetPosition
    11192:11195:int getAdapterPosition() -> getAdapterPosition
    11220:11220:long getItemId() -> getItemId
    11227:11227:int getItemViewType() -> getItemViewType
    11166:11166:int getLayoutPosition() -> getLayoutPosition
    11210:11210:int getOldPosition() -> getOldPosition
    11323:11332:java.util.List getUnmodifiedPayloads() -> getUnmodifiedPayloads
    11276:11276:boolean hasAnyOfTheFlags(int) -> hasAnyOfTheFlags
    11288:11288:boolean isAdapterPositionUnknown() -> isAdapterPositionUnknown
    11284:11284:boolean isAttachedToTransitionOverlay() -> isAttachedToTransitionOverlay
    11268:11268:boolean isBound() -> isBound
    11260:11260:boolean isInvalid() -> isInvalid
    11439:11440:boolean isRecyclable() -> isRecyclable
    11272:11272:boolean isRemoved() -> isRemoved
    11231:11231:boolean isScrap() -> isScrap
    11280:11280:boolean isTmpDetached() -> isTmpDetached
    11460:11460:boolean isUpdated() -> isUpdated
    11264:11264:boolean needsUpdate() -> needsUpdate
    11100:11113:void offsetPosition(int,boolean) -> offsetPosition
    11356:11364:void onEnteredHiddenState(androidx.recyclerview.widget.RecyclerView) -> onEnteredHiddenState
    11370:11373:void onLeftHiddenState(androidx.recyclerview.widget.RecyclerView) -> onLeftHiddenState
    11337:11349:void resetInternal() -> resetInternal
    11121:11124:void saveOldPosition() -> saveOldPosition
    11292:11293:void setFlags(int,int) -> setFlags
    11414:11431:void setIsRecyclable(boolean) -> setIsRecyclable
    11255:11257:void setScrapContainer(androidx.recyclerview.widget.RecyclerView$Recycler,boolean) -> setScrapContainer
    11448:11448:boolean shouldBeKeptAsChild() -> shouldBeKeptAsChild
    11127:11127:boolean shouldIgnore() -> shouldIgnore
    11377:11397:java.lang.String toString() -> toString
    11235:11236:void unScrap() -> unScrap
    11239:11239:boolean wasReturnedFromScrap() -> wasReturnedFromScrap
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate:
    44:52:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    99:99:androidx.core.view.AccessibilityDelegateCompat getItemDelegate() -> getItemDelegate
    80:87:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    72:76:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    60:67:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    55:55:boolean shouldIgnore() -> shouldIgnore
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate:
    112:121:void <init>(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> <init>
    201:205:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    245:249:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    138:138:androidx.core.view.AccessibilityDelegateCompat getAndRemoveOriginalDelegateForItem(android.view.View) -> getAndRemoveOriginalDelegateForItem
    223:229:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    143:156:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    212:218:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    234:238:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    160:173:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    128:132:void saveOriginalDelegate(android.view.View) -> saveOriginalDelegate
    179:185:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    190:196:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.recyclerview.widget.ScrollbarHelper -> androidx.recyclerview.widget.ScrollbarHelper:
    63:72:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollExtent
    32:53:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean,boolean) -> computeScrollOffset
    82:96:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollRange
androidx.recyclerview.widget.SimpleItemAnimator -> androidx.recyclerview.widget.SimpleItemAnimator:
    35:41:void <init>() -> <init>
    114:126:boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    151:161:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateChange
    90:107:boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    133:142:boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animatePersistence
    84:84:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    301:303:void dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddFinished
    344:345:void dispatchAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddStarting
    316:318:void dispatchChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeFinished
    357:358:void dispatchChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeStarting
    291:293:void dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveFinished
    335:336:void dispatchMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveStarting
    276:278:void dispatchRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveFinished
    326:327:void dispatchRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveStarting
    404:404:void onAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAddFinished
    393:393:void onAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAddStarting
    454:454:void onChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> onChangeFinished
    441:441:void onChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> onChangeStarting
    427:427:void onMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onMoveFinished
    416:416:void onMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onMoveStarting
    381:381:void onRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onRemoveFinished
    370:370:void onRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onRemoveStarting
androidx.recyclerview.widget.SnapHelper -> androidx.recyclerview.widget.SnapHelper:
    34:42:void <init>() -> <init>
    93:106:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    209:209:androidx.recyclerview.widget.RecyclerView$SmoothScroller createScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createScroller
    123:125:void destroyCallbacks() -> destroyCallbacks
    65:75:boolean onFling(int,int) -> onFling
    112:117:void setupCallbacks() -> setupCallbacks
    157:173:boolean snapFromFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> snapFromFling
    182:197:void snapToTargetExistingView() -> snapToTargetExistingView
androidx.recyclerview.widget.SnapHelper$1 -> androidx.recyclerview.widget.SnapHelper$1:
    43:44:void <init>(androidx.recyclerview.widget.SnapHelper) -> <init>
    48:53:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    57:60:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.StaggeredGridLayoutManager -> androidx.recyclerview.widget.StaggeredGridLayoutManager:
    107:236:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1806:1809:void appendViewToAllSpans(android.view.View) -> appendViewToAllSpans
    786:819:void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> applyPendingSavedState
    1865:1871:boolean areAllEndsEqual() -> areAllEndsEqual
    1875:1881:boolean areAllStartsEqual() -> areAllStartsEqual
    528:531:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    1750:1763:void attachViewToSpans(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,androidx.recyclerview.widget.LayoutState) -> attachViewToSpans
    2043:2047:int calculateScrollDirectionForPosition(int) -> calculateScrollDirectionForPosition
    2027:2027:boolean canScrollHorizontally() -> canScrollHorizontally
    2022:2022:boolean canScrollVertically() -> canScrollVertically
    270:311:boolean checkForGaps() -> checkForGaps
    2273:2273:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    403:416:boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> checkSpanForGap
    2123:2155:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1088:1088:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1068:1068:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1108:1108:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1092:1097:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1072:1077:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1112:1117:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    2052:2064:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    1103:1103:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1083:1083:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1123:1123:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    2392:2425:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    1732:1737:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int) -> createFullSpanItemFromEnd
    1741:1746:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int) -> createFullSpanItemFromStart
    258:261:void createOrientationHelpers() -> createOrientationHelpers
    1575:1728:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State) -> fill
    2218:2226:int findFirstReferenceChildPosition(int) -> findFirstReferenceChildPosition
    1387:1406:android.view.View findFirstVisibleItemClosestToEnd(boolean) -> findFirstVisibleItemClosestToEnd
    1357:1377:android.view.View findFirstVisibleItemClosestToStart(boolean) -> findFirstVisibleItemClosestToStart
    1327:1329:int findFirstVisibleItemPositionInt() -> findFirstVisibleItemPositionInt
    2235:2242:int findLastReferenceChildPosition(int) -> findLastReferenceChildPosition
    1411:1426:void fixEndGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixEndGap
    1430:1445:void fixStartGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixStartGap
    2248:2252:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2259:2259:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    2264:2267:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1344:1347:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    2208:2209:int getFirstChildPosition() -> getFirstChildPosition
    2203:2204:int getLastChildPosition() -> getLastChildPosition
    1885:1892:int getMaxEnd(int) -> getMaxEnd
    1843:1850:int getMaxStart(int) -> getMaxStart
    1896:1903:int getMinEnd(int) -> getMinEnd
    1854:1861:int getMinStart(int) -> getMinStart
    1980:2016:androidx.recyclerview.widget.StaggeredGridLayoutManager$Span getNextSpan(androidx.recyclerview.widget.LayoutState) -> getNextSpan
    1335:1338:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    1531:1571:void handleUpdate(int,int,int) -> handleUpdate
    339:399:android.view.View hasGapsToFix() -> hasGapsToFix
    549:551:void invalidateSpanAssignments() -> invalidateSpanAssignments
    254:254:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    568:568:boolean isLayoutRTL() -> isLayoutRTL
    1128:1189:void measureChildWithDecorationsAndMargin(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,boolean) -> measureChildWithDecorationsAndMargin
    1193:1206:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    1486:1490:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    1494:1498:void offsetChildrenVertical(int) -> offsetChildrenVertical
    323:331:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    2284:2378:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    1302:1319:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1283:1298:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    1507:1508:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    1512:1514:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    1518:1519:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    1502:1503:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    1524:1525:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    605:606:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    611:722:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> onLayoutChildren
    726:731:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    1222:1228:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1232:1277:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    316:319:void onScrollStateChanged(int) -> onScrollStateChanged
    1970:1973:boolean preferLastSpan(int) -> preferLastSpan
    2160:2172:void prepareLayoutStateForDelta(int,androidx.recyclerview.widget.RecyclerView$State) -> prepareLayoutStateForDelta
    1813:1816:void prependViewToAllSpans(android.view.View) -> prependViewToAllSpans
    1766:1802:void recycle(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState) -> recycle
    1936:1964:void recycleFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleFromEnd
    1907:1933:void recycleFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleFromStart
    734:780:void repositionToWrapContentIfNecessary() -> repositionToWrapContentIfNecessary
    560:565:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    2175:2199:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollBy
    2033:2033:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    2077:2083:void scrollToPosition(int) -> scrollToPosition
    2039:2039:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    1479:1482:void setLayoutStateDirection(int) -> setLayoutStateDirection
    587:601:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    449:461:void setOrientation(int) -> setOrientation
    477:483:void setReverseLayout(boolean) -> setReverseLayout
    429:440:void setSpanCount(int) -> setSpanCount
    2070:2073:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    935:935:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    1819:1825:void updateAllRemainingSpans(int,int) -> updateAllRemainingSpans
    840:844:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    849:923:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    822:833:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    1448:1476:void updateLayoutState(int,androidx.recyclerview.widget.RecyclerView$State) -> updateLayoutState
    927:931:void updateMeasureSpecs(int) -> updateMeasureSpecs
    1828:1840:void updateRemainingSpans(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span,int,int) -> updateRemainingSpans
    1209:1217:int updateSpecWithExtra(int,int,int) -> updateSpecWithExtra
androidx.recyclerview.widget.StaggeredGridLayoutManager$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$1:
    216:216:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    219:220:void run() -> run
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo -> androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo:
    3267:3269:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    3294:3296:void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    3299:3304:void assignCoordinateFromPadding(int) -> assignCoordinateFromPadding
    3272:3280:void reset() -> reset
    3283:3291:void saveSpanReferenceLines(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[]) -> saveSpanReferenceLines
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams:
    2450:2451:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2454:2455:void <init>(int,int) -> <init>
    2458:2459:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2462:2463:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2498:2501:int getSpanIndex() -> getSpanIndex
    2488:2488:boolean isFullSpan() -> isFullSpan
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup:
    2838:2838:void <init>() -> <init>
    3007:3027:void addFullSpanItem(androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) -> addFullSpanItem
    2915:2919:void clear() -> clear
    2903:2912:void ensureSize(int) -> ensureSize
    2849:2857:int forceInvalidateAfter(int) -> forceInvalidateAfter
    3051:3066:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFirstFullSpanItemInRange(int,int,int,boolean) -> getFirstFullSpanItemInRange
    3030:3039:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFullSpanItem(int) -> getFullSpanItem
    2882:2885:int getSpan(int) -> getSpan
    2864:2877:int invalidateAfter(int) -> invalidateAfter
    2981:3003:int invalidateFullSpansAfter(int) -> invalidateFullSpansAfter
    2952:2961:void offsetForAddition(int,int) -> offsetForAddition
    2922:2931:void offsetForRemoval(int,int) -> offsetForRemoval
    2964:2974:void offsetFullSpansForAddition(int,int) -> offsetFullSpansForAddition
    2934:2949:void offsetFullSpansForRemoval(int,int) -> offsetFullSpansForRemoval
    2890:2892:void setSpan(int,androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> setSpan
    2895:2899:int sizeForPosition(int) -> sizeForPosition
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem:
    3129:3129:void <clinit>() -> <clinit>
    3083:3092:void <init>(android.os.Parcel) -> <init>
    3094:3095:void <init>() -> <init>
    3103:3103:int describeContents() -> describeContents
    3098:3098:int getGapForSpan(int) -> getGapForSpan
    3121:3125:java.lang.String toString() -> toString
    3108:3117:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1:
    3130:3130:void <init>() -> <init>
    3130:3130:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3133:3133:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel) -> createFromParcel
    3130:3130:java.lang.Object[] newArray(int) -> newArray
    3138:3138:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState:
    3239:3239:void <clinit>() -> <clinit>
    3162:3163:void <init>() -> <init>
    3165:3186:void <init>(android.os.Parcel) -> <init>
    3188:3199:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState) -> <init>
    3218:3218:int describeContents() -> describeContents
    3210:3214:void invalidateAnchorPositionInfo() -> invalidateAnchorPositionInfo
    3202:3207:void invalidateSpanInfo() -> invalidateSpanInfo
    3223:3237:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1:
    3240:3240:void <init>() -> <init>
    3240:3240:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3243:3243:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3240:3240:java.lang.Object[] newArray(int) -> newArray
    3248:3248:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span -> androidx.recyclerview.widget.StaggeredGridLayoutManager$Span:
    2509:2517:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager,int) -> <init>
    2600:2610:void appendToSpan(android.view.View) -> appendToSpan
    2615:2632:void cacheReferenceLineAndClear(boolean,int) -> cacheReferenceLineAndClear
    2565:2575:void calculateCachedEnd() -> calculateCachedEnd
    2531:2541:void calculateCachedStart() -> calculateCachedStart
    2635:2638:void clear() -> clear
    2700:2702:int findFirstPartiallyVisibleItemPosition() -> findFirstPartiallyVisibleItemPosition
    2718:2720:int findLastPartiallyVisibleItemPosition() -> findLastPartiallyVisibleItemPosition
    2756:2783:int findOnePartiallyOrCompletelyVisibleChild(int,int,boolean,boolean,boolean) -> findOnePartiallyOrCompletelyVisibleChild
    2793:2793:int findOnePartiallyVisibleChild(int,int,boolean) -> findOnePartiallyVisibleChild
    2677:2677:int getDeletedSize() -> getDeletedSize
    2553:2561:int getEndLine(int) -> getEndLine
    2579:2583:int getEndLine() -> getEndLine
    2801:2830:android.view.View getFocusableViewAfter(int,int) -> getFocusableViewAfter
    2681:2681:androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams getLayoutParams(android.view.View) -> getLayoutParams
    2520:2527:int getStartLine(int) -> getStartLine
    2545:2549:int getStartLine() -> getStartLine
    2641:2643:void invalidateCache() -> invalidateCache
    2685:2691:void onOffset(int) -> onOffset
    2650:2661:void popEnd() -> popEnd
    2664:2674:void popStart() -> popStart
    2587:2597:void prependToSpan(android.view.View) -> prependToSpan
    2646:2647:void setLine(int) -> setLine
androidx.recyclerview.widget.ViewBoundsCheck -> androidx.recyclerview.widget.ViewBoundsCheck:
    131:134:void <init>(androidx.recyclerview.widget.ViewBoundsCheck$Callback) -> <init>
    213:238:android.view.View findOneViewWithinBoundFlags(int,int,int,int) -> findOneViewWithinBoundFlags
    248:255:boolean isViewWithinBoundFlags(android.view.View,int) -> isViewWithinBoundFlags
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags -> androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags:
    136:137:void <init>() -> <init>
    148:149:void addFlags(int) -> addFlags
    166:189:boolean boundsMatch() -> boundsMatch
    156:162:int compare(int,int) -> compare
    152:153:void resetFlags() -> resetFlags
    141:145:void setBounds(int,int,int,int) -> setBounds
androidx.recyclerview.widget.ViewInfoStore -> androidx.recyclerview.widget.ViewInfoStore:
    36:47:void <init>() -> <init>
    145:152:void addToAppearedInPreLayoutHolders(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToAppearedInPreLayoutHolders
    198:204:void addToDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addToDisappearedInLayout
    132:133:void addToOldChangeHolders(long,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addToOldChangeHolders
    182:189:void addToPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPostLayout
    64:71:void addToPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPreLayout
    54:56:void clear() -> clear
    173:173:androidx.recyclerview.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long) -> getFromOldChangeHolders
    74:75:boolean isDisappearing(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> isDisappearing
    161:162:boolean isInPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> isInPreLayout
    273:274:void onDetach() -> onDetach
    277:278:void onViewDetached(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetached
    101:123:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromLayoutStep(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> popFromLayoutStep
    97:97:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> popFromPostLayout
    86:86:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> popFromPreLayout
    219:253:void process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback) -> process
    211:216:void removeFromDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> removeFromDisappearedInLayout
    260:270:void removeViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> removeViewHolder
androidx.recyclerview.widget.ViewInfoStore$InfoRecord -> androidx.recyclerview.widget.ViewInfoStore$InfoRecord:
    307:307:void <clinit>() -> <clinit>
    309:310:void <init>() -> <init>
    326:327:void drainCache() -> drainCache
    313:314:androidx.recyclerview.widget.ViewInfoStore$InfoRecord obtain() -> obtain
    318:322:void recycle(androidx.recyclerview.widget.ViewInfoStore$InfoRecord) -> recycle
androidx.savedstate.Recreator -> androidx.savedstate.Recreator:
# {"id":"sourceFile","fileName":"Recreator.kt"}
    24:25:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    29:44:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    47:71:void reflectiveNew(java.lang.String) -> reflectiveNew
androidx.savedstate.Recreator$Companion -> androidx.savedstate.Recreator$Companion:
# {"id":"sourceFile","fileName":"Recreator.kt"}
    93:93:void <init>() -> <init>
androidx.savedstate.Recreator$SavedStateProvider -> androidx.savedstate.Recreator$SavedStateProvider:
# {"id":"sourceFile","fileName":"Recreator.kt"}
    73:80:void <init>(androidx.savedstate.SavedStateRegistry) -> <init>
    89:90:void add(java.lang.String) -> add
    83:85:android.os.Bundle saveState() -> saveState
androidx.savedstate.SavedStateRegistry -> androidx.savedstate.SavedStateRegistry:
# {"id":"sourceFile","fileName":"SavedStateRegistry.kt"}
    void $r8$lambda$AUDDdpkzZrJMhBj0r-_9pI-j6hA(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> $r8$lambda$AUDDdpkzZrJMhBj0r-_9pI-j6hA
      # {"id":"com.android.tools.r8.synthesized"}
    32:34:void <init>() -> <init>
    48:48:void setAllowingSavingState$savedstate_release(boolean) -> <init>
    48:48:void <init>():48 -> <init>
    33:33:void <init>() -> <init>
    72:84:android.os.Bundle consumeRestoredStateForKey(java.lang.String) -> consumeRestoredStateForKey
    127:134:androidx.savedstate.SavedStateRegistry$SavedStateProvider getSavedStateProvider(java.lang.String) -> getSavedStateProvider
    202:207:void performAttach$lambda$4(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> performAttach$lambda$4
    199:273:void performAttach$savedstate_release(androidx.lifecycle.Lifecycle) -> performAttach$savedstate_release
    217:273:void performRestore$savedstate_release(android.os.Bundle) -> performRestore$savedstate_release
    239:252:void performSave(android.os.Bundle) -> performSave
    109:114:void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider) -> registerSavedStateProvider
    180:273:void runOnNextRecreation(java.lang.Class) -> runOnNextRecreation
androidx.savedstate.SavedStateRegistry$$ExternalSyntheticLambda0 -> androidx.savedstate.SavedStateRegistry$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.savedstate.SavedStateRegistry androidx.savedstate.SavedStateRegistry$$InternalSyntheticLambda$1$719ab437d0ecac5a4dba8ec5006130a48f9c8392d4682d57a4ee7203b99f6266$0.f$0 -> f$0
    void androidx.savedstate.SavedStateRegistry$$InternalSyntheticLambda$1$719ab437d0ecac5a4dba8ec5006130a48f9c8392d4682d57a4ee7203b99f6266$0.<init>(androidx.savedstate.SavedStateRegistry) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.savedstate.SavedStateRegistry$$InternalSyntheticLambda$1$719ab437d0ecac5a4dba8ec5006130a48f9c8392d4682d57a4ee7203b99f6266$0.onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
      # {"id":"com.android.tools.r8.synthesized"}
androidx.savedstate.SavedStateRegistry$AutoRecreated -> androidx.savedstate.SavedStateRegistry$AutoRecreated:
# {"id":"sourceFile","fileName":"SavedStateRegistry.kt"}
androidx.savedstate.SavedStateRegistry$Companion -> androidx.savedstate.SavedStateRegistry$Companion:
# {"id":"sourceFile","fileName":"SavedStateRegistry.kt"}
    267:267:void <init>() -> <init>
androidx.savedstate.SavedStateRegistry$SavedStateProvider -> androidx.savedstate.SavedStateRegistry$SavedStateProvider:
# {"id":"sourceFile","fileName":"SavedStateRegistry.kt"}
androidx.savedstate.SavedStateRegistryController -> androidx.savedstate.SavedStateRegistryController:
# {"id":"sourceFile","fileName":"SavedStateRegistryController.kt"}
    28:33:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    33:33:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    44:51:void performAttach() -> performAttach
    62:70:void performRestore(android.os.Bundle) -> performRestore
    81:82:void performSave(android.os.Bundle) -> performSave
androidx.savedstate.SavedStateRegistryController$Companion -> androidx.savedstate.SavedStateRegistryController$Companion:
# {"id":"sourceFile","fileName":"SavedStateRegistryController.kt"}
    84:84:void <init>() -> <init>
    92:92:androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner) -> create
androidx.savedstate.SavedStateRegistryOwner -> androidx.savedstate.SavedStateRegistryOwner:
# {"id":"sourceFile","fileName":"SavedStateRegistryOwner.kt"}
androidx.savedstate.ViewTreeSavedStateRegistryOwner -> androidx.savedstate.ViewTreeSavedStateRegistryOwner:
# {"id":"sourceFile","fileName":"ViewTreeSavedStateRegistryOwner.kt"}
    41:42:void set(android.view.View,androidx.savedstate.SavedStateRegistryOwner) -> set
androidx.startup.AppInitializer -> androidx.startup.AppInitializer:
    57:57:void <clinit>() -> <clinit>
    73:77:void <init>(android.content.Context) -> <init>
    200:212:void discoverAndInitialize() -> discoverAndInitialize
    216:244:void discoverAndInitialize(android.os.Bundle) -> discoverAndInitialize
    135:141:java.lang.Object doInitialize(java.lang.Class) -> doInitialize
    149:195:java.lang.Object doInitialize(java.lang.Class,java.util.Set) -> doInitialize
    86:93:androidx.startup.AppInitializer getInstance(android.content.Context) -> getInstance
    117:117:java.lang.Object initializeComponent(java.lang.Class) -> initializeComponent
    128:128:boolean isEagerlyInitialized(java.lang.Class) -> isEagerlyInitialized
androidx.startup.InitializationProvider -> androidx.startup.InitializationProvider:
    33:33:void <init>() -> <init>
    83:83:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    69:69:java.lang.String getType(android.net.Uri) -> getType
    75:75:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    37:52:boolean onCreate() -> onCreate
    63:63:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    92:92:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
androidx.startup.StartupException -> androidx.startup.StartupException:
    31:32:void <init>(java.lang.String) -> <init>
    35:36:void <init>(java.lang.Throwable) -> <init>
androidx.startup.StartupLogger -> androidx.startup.StartupLogger:
    61:62:void w(java.lang.String) -> w
androidx.tracing.Trace -> androidx.tracing.Trace:
    80:83:void beginSection(java.lang.String) -> beginSection
    93:96:void endSection() -> endSection
    229:238:void handleException(java.lang.String,java.lang.Exception) -> handleException
    61:66:boolean isEnabled() -> isEnabled
    159:173:boolean isEnabledFallback() -> isEnabledFallback
androidx.tracing.Trace$$ExternalSyntheticApiModelOutline0 -> androidx.tracing.Trace$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean androidx.tracing.Trace$$InternalSyntheticApiModelOutline$1$9fd8ec1313d24621ee44530f6533361e5a5e5f72cd46afcc9711b1d3eb4c656e$0.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.tracing.TraceApi18Impl -> androidx.tracing.TraceApi18Impl:
    49:50:void beginSection(java.lang.String) -> beginSection
    60:61:void endSection() -> endSection
androidx.transition.AnimatorUtils -> androidx.transition.AnimatorUtils:
    31:34:void addPauseListener(android.animation.Animator,android.animation.AnimatorListenerAdapter) -> addPauseListener
    37:50:void pause(android.animation.Animator) -> pause
    53:66:void resume(android.animation.Animator) -> resume
androidx.transition.AutoTransition -> androidx.transition.AutoTransition:
    37:39:void <init>() -> <init>
    47:51:void init() -> init
androidx.transition.ChangeBounds -> androidx.transition.ChangeBounds:
    61:168:void <clinit>() -> <clinit>
    164:171:void <init>() -> <init>
    244:245:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    239:240:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    220:235:void captureValues(androidx.transition.TransitionValues) -> captureValues
    264:458:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    188:188:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    248:257:boolean parentMatches(android.view.View,android.view.View) -> parentMatches
androidx.transition.ChangeBounds$1 -> androidx.transition.ChangeBounds$1:
    70:71:void <init>(java.lang.Class,java.lang.String) -> <init>
    70:70:java.lang.Object get(java.lang.Object) -> get
    82:83:android.graphics.PointF get(android.graphics.drawable.Drawable) -> get
    70:70:void set(java.lang.Object,java.lang.Object) -> set
    75:78:void set(android.graphics.drawable.Drawable,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$10 -> androidx.transition.ChangeBounds$10:
    448:448:void <init>(androidx.transition.ChangeBounds,android.view.ViewGroup,android.graphics.drawable.BitmapDrawable,android.view.View,float) -> <init>
    451:453:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.ChangeBounds$2 -> androidx.transition.ChangeBounds$2:
    88:88:void <init>(java.lang.Class,java.lang.String) -> <init>
    88:88:java.lang.Object get(java.lang.Object) -> get
    96:96:android.graphics.PointF get(androidx.transition.ChangeBounds$ViewBounds) -> get
    88:88:void set(java.lang.Object,java.lang.Object) -> set
    91:92:void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$3 -> androidx.transition.ChangeBounds$3:
    101:101:void <init>(java.lang.Class,java.lang.String) -> <init>
    101:101:java.lang.Object get(java.lang.Object) -> get
    109:109:android.graphics.PointF get(androidx.transition.ChangeBounds$ViewBounds) -> get
    101:101:void set(java.lang.Object,java.lang.Object) -> set
    104:105:void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$4 -> androidx.transition.ChangeBounds$4:
    114:114:void <init>(java.lang.Class,java.lang.String) -> <init>
    114:114:java.lang.Object get(java.lang.Object) -> get
    126:126:android.graphics.PointF get(android.view.View) -> get
    114:114:void set(java.lang.Object,java.lang.Object) -> set
    117:122:void set(android.view.View,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$5 -> androidx.transition.ChangeBounds$5:
    131:131:void <init>(java.lang.Class,java.lang.String) -> <init>
    131:131:java.lang.Object get(java.lang.Object) -> get
    143:143:android.graphics.PointF get(android.view.View) -> get
    131:131:void set(java.lang.Object,java.lang.Object) -> set
    134:139:void set(android.view.View,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$6 -> androidx.transition.ChangeBounds$6:
    148:148:void <init>(java.lang.Class,java.lang.String) -> <init>
    148:148:java.lang.Object get(java.lang.Object) -> get
    160:160:android.graphics.PointF get(android.view.View) -> get
    148:148:void set(java.lang.Object,java.lang.Object) -> set
    151:156:void set(android.view.View,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$7 -> androidx.transition.ChangeBounds$7:
    326:329:void <init>(androidx.transition.ChangeBounds,androidx.transition.ChangeBounds$ViewBounds) -> <init>
androidx.transition.ChangeBounds$8 -> androidx.transition.ChangeBounds$8:
    370:370:void <init>(androidx.transition.ChangeBounds,android.view.View,android.graphics.Rect,int,int,int,int) -> <init>
    375:376:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    380:385:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.ChangeBounds$9 -> androidx.transition.ChangeBounds$9:
    394:395:void <init>(androidx.transition.ChangeBounds,android.view.ViewGroup) -> <init>
    399:401:void onTransitionCancel(androidx.transition.Transition) -> onTransitionCancel
    405:409:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    413:414:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    418:419:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
androidx.transition.ChangeBounds$ViewBounds -> androidx.transition.ChangeBounds$ViewBounds:
    471:473:void <init>(android.view.View) -> <init>
    485:491:void setBottomRight(android.graphics.PointF) -> setBottomRight
    494:497:void setLeftTopRightBottom() -> setLeftTopRightBottom
    476:482:void setTopLeft(android.graphics.PointF) -> setTopLeft
androidx.transition.Fade -> androidx.transition.Fade:
    91:93:void <init>(int) -> <init>
    98:99:void <init>() -> <init>
    115:118:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    124:143:android.animation.Animator createAnimation(android.view.View,float,float) -> createAnimation
    171:178:float getStartAlpha(androidx.transition.TransitionValues,float) -> getStartAlpha
    155:159:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onAppear
    165:167:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onDisappear
androidx.transition.Fade$1 -> androidx.transition.Fade$1:
    135:135:void <init>(androidx.transition.Fade,android.view.View) -> <init>
    138:141:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.Fade$FadeAnimatorListener -> androidx.transition.Fade$FadeAnimatorListener:
    184:188:void <init>(android.view.View) -> <init>
    201:205:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    192:197:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.transition.FragmentTransitionSupport -> androidx.transition.FragmentTransitionSupport:
    42:42:void <init>() -> <init>
    283:287:void addTarget(java.lang.Object,android.view.View) -> addTarget
    102:123:void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    213:214:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    46:46:boolean canHandle(java.lang.Object) -> canHandle
    51:55:java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    126:128:boolean hasSimpleTarget(androidx.transition.Transition) -> hasSimpleTarget
    185:207:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    134:144:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    291:295:void removeTarget(java.lang.Object,android.view.View) -> removeTarget
    257:279:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    150:178:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    221:241:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    86:98:void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    299:311:void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    71:82:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    246:252:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    60:65:java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
androidx.transition.FragmentTransitionSupport$1 -> androidx.transition.FragmentTransitionSupport$1:
    91:91:void <init>(androidx.transition.FragmentTransitionSupport,android.graphics.Rect) -> <init>
androidx.transition.FragmentTransitionSupport$2 -> androidx.transition.FragmentTransitionSupport$2:
    151:151:void <init>(androidx.transition.FragmentTransitionSupport,android.view.View,java.util.ArrayList) -> <init>
    168:168:void onTransitionCancel(androidx.transition.Transition) -> onTransitionCancel
    158:164:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    172:172:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    176:176:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
    154:154:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.FragmentTransitionSupport$3 -> androidx.transition.FragmentTransitionSupport$3:
    222:222:void <init>(androidx.transition.FragmentTransitionSupport,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    238:239:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    225:234:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.FragmentTransitionSupport$4 -> androidx.transition.FragmentTransitionSupport$4:
    301:301:void <init>(androidx.transition.FragmentTransitionSupport,android.graphics.Rect) -> <init>
androidx.transition.ObjectAnimatorUtils -> androidx.transition.ObjectAnimatorUtils:
    28:29:android.animation.ObjectAnimator ofPointF(java.lang.Object,android.util.Property,android.graphics.Path) -> ofPointF
androidx.transition.PathMotion -> androidx.transition.PathMotion:
    43:44:void <init>() -> <init>
androidx.transition.PropertyValuesHolderUtils -> androidx.transition.PropertyValuesHolderUtils:
    38:39:android.animation.PropertyValuesHolder ofPointF(android.util.Property,android.graphics.Path) -> ofPointF
androidx.transition.RectEvaluator -> androidx.transition.RectEvaluator:
    39:40:void <init>() -> <init>
    25:25:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    75:83:android.graphics.Rect evaluate(float,android.graphics.Rect,android.graphics.Rect) -> evaluate
androidx.transition.Scene -> androidx.transition.Scene:
    149:154:void exit() -> exit
    209:209:androidx.transition.Scene getCurrentScene(android.view.ViewGroup) -> getCurrentScene
    196:197:void setCurrentScene(android.view.ViewGroup,androidx.transition.Scene) -> setCurrentScene
androidx.transition.Transition -> androidx.transition.Transition:
    164:205:void <clinit>() -> <clinit>
    181:264:void <init>() -> <init>
    2042:2046:androidx.transition.Transition addListener(androidx.transition.Transition$TransitionListener) -> addListener
    1000:1001:androidx.transition.Transition addTarget(android.view.View) -> addTarget
    647:663:void addUnmatched(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> addUnmatched
    1532:1569:void addViewValues(androidx.transition.TransitionValuesMaps,android.view.View,androidx.transition.TransitionValues) -> addViewValues
    1899:1920:void animate(android.animation.Animator) -> animate
    2017:2030:void cancel() -> cancel
    1599:1653:void captureHierarchy(android.view.View,boolean) -> captureHierarchy
    2189:2205:void capturePropagationValues(androidx.transition.TransitionValues) -> capturePropagationValues
    1471:1528:void captureValues(android.view.ViewGroup,boolean) -> captureValues
    1577:1586:void clearValues(boolean) -> clearValues
    120:120:java.lang.Object clone() -> clone
    2224:2232:androidx.transition.Transition clone() -> clone
    489:489:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    710:803:void createAnimators(android.view.ViewGroup,androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList) -> createAnimators
    1958:1982:void end() -> end
    357:357:long getDuration() -> getDuration
    2133:2133:androidx.transition.Transition$EpicenterCallback getEpicenterCallback() -> getEpicenterCallback
    412:412:android.animation.TimeInterpolator getInterpolator() -> getInterpolator
    1682:1707:androidx.transition.TransitionValues getMatchedTransitionValues(android.view.View,boolean) -> getMatchedTransitionValues
    2250:2250:java.lang.String getName() -> getName
    2103:2103:androidx.transition.PathMotion getPathMotion() -> getPathMotion
    2181:2181:androidx.transition.TransitionPropagation getPropagation() -> getPropagation
    859:864:androidx.collection.ArrayMap getRunningAnimators() -> getRunningAnimators
    384:384:long getStartDelay() -> getStartDelay
    1415:1415:java.util.List getTargetIds() -> getTargetIds
    1444:1444:java.util.List getTargetNames() -> getTargetNames
    1459:1459:java.util.List getTargetTypes() -> getTargetTypes
    1429:1429:java.util.List getTargets() -> getTargets
    438:438:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    1663:1667:androidx.transition.TransitionValues getTransitionValues(android.view.View,boolean) -> getTransitionValues
    1840:1861:boolean isTransitionRequired(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> isTransitionRequired
    816:855:boolean isValidTarget(android.view.View) -> isValidTarget
    1866:1884:boolean isValueChanged(androidx.transition.TransitionValues,androidx.transition.TransitionValues,java.lang.String) -> isValueChanged
    594:611:void matchIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,android.util.SparseArray,android.util.SparseArray) -> matchIds
    546:557:void matchInstances(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> matchInstances
    567:584:void matchItemIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.LongSparseArray,androidx.collection.LongSparseArray) -> matchItemIds
    621:638:void matchNames(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> matchNames
    667:690:void matchStartAndEnd(androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps) -> matchStartAndEnd
    1719:1740:void pause(android.view.View) -> pause
    1782:1823:void playTransition(android.view.ViewGroup) -> playTransition
    2058:2065:androidx.transition.Transition removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    1098:1099:androidx.transition.Transition removeTarget(android.view.View) -> removeTarget
    1751:1774:void resume(android.view.View) -> resume
    896:912:void runAnimator(android.animation.Animator,androidx.collection.ArrayMap) -> runAnimator
    878:892:void runAnimators() -> runAnimators
    344:345:androidx.transition.Transition setDuration(long) -> setDuration
    2118:2119:void setEpicenterCallback(androidx.transition.Transition$EpicenterCallback) -> setEpicenterCallback
    398:399:androidx.transition.Transition setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    2085:2090:void setPathMotion(androidx.transition.PathMotion) -> setPathMotion
    2164:2165:void setPropagation(androidx.transition.TransitionPropagation) -> setPropagation
    371:372:androidx.transition.Transition setStartDelay(long) -> setStartDelay
    1931:1943:void start() -> start
    2218:2218:java.lang.String toString() -> toString
    2254:2285:java.lang.String toString(java.lang.String) -> toString
androidx.transition.Transition$1 -> androidx.transition.Transition$1:
    171:171:void <init>() -> <init>
    174:177:android.graphics.Path getPath(float,float,float,float) -> getPath
androidx.transition.Transition$2 -> androidx.transition.Transition$2:
    898:898:void <init>(androidx.transition.Transition,androidx.collection.ArrayMap) -> <init>
    906:908:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    901:902:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.transition.Transition$3 -> androidx.transition.Transition$3:
    1911:1911:void <init>(androidx.transition.Transition) -> <init>
    1914:1916:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.Transition$AnimationInfo -> androidx.transition.Transition$AnimationInfo:
    2368:2374:void <init>(android.view.View,java.lang.String,androidx.transition.Transition,androidx.transition.WindowIdImpl,androidx.transition.TransitionValues) -> <init>
androidx.transition.Transition$EpicenterCallback -> androidx.transition.Transition$EpicenterCallback:
    2431:2431:void <init>() -> <init>
androidx.transition.TransitionListenerAdapter -> androidx.transition.TransitionListenerAdapter:
    27:27:void <init>() -> <init>
    39:39:void onTransitionCancel(androidx.transition.Transition) -> onTransitionCancel
    43:43:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    47:47:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
    31:31:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.TransitionManager -> androidx.transition.TransitionManager:
    83:90:void <clinit>() -> <clinit>
    408:422:void beginDelayedTransition(android.view.ViewGroup,androidx.transition.Transition) -> beginDelayedTransition
    200:211:androidx.collection.ArrayMap getRunningTransitions() -> getRunningTransitions
    216:221:void sceneChangeRunTransition(android.view.ViewGroup,androidx.transition.Transition) -> sceneChangeRunTransition
    309:326:void sceneChangeSetup(android.view.ViewGroup,androidx.transition.Transition) -> sceneChangeSetup
androidx.transition.TransitionManager$MultiListener -> androidx.transition.TransitionManager$MultiListener:
    238:241:void <init>(androidx.transition.Transition,android.view.ViewGroup) -> <init>
    268:303:boolean onPreDraw() -> onPreDraw
    250:250:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    254:264:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    244:246:void removeListeners() -> removeListeners
androidx.transition.TransitionManager$MultiListener$1 -> androidx.transition.TransitionManager$MultiListener$1:
    287:287:void <init>(androidx.transition.TransitionManager$MultiListener,androidx.collection.ArrayMap) -> <init>
    290:293:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.TransitionSet -> androidx.transition.TransitionSet:
    80:111:void <init>() -> <init>
    62:62:androidx.transition.Transition addListener(androidx.transition.Transition$TransitionListener) -> addListener
    307:307:androidx.transition.TransitionSet addListener(androidx.transition.Transition$TransitionListener) -> addListener
    62:62:androidx.transition.Transition addTarget(android.view.View) -> addTarget
    271:274:androidx.transition.TransitionSet addTarget(android.view.View) -> addTarget
    179:195:androidx.transition.TransitionSet addTransition(androidx.transition.Transition) -> addTransition
    199:201:void addTransitionInternal(androidx.transition.Transition) -> addTransitionInternal
    536:544:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    548:553:void capturePropagationValues(androidx.transition.TransitionValues) -> capturePropagationValues
    524:532:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    62:62:java.lang.Object clone() -> clone
    649:655:androidx.transition.Transition clone() -> clone
    466:483:void createAnimators(android.view.ViewGroup,androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList) -> createAnimators
    223:226:androidx.transition.Transition getTransitionAt(int) -> getTransitionAt
    211:211:int getTransitionCount() -> getTransitionCount
    559:564:void pause(android.view.View) -> pause
    62:62:androidx.transition.Transition removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    385:385:androidx.transition.TransitionSet removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    62:62:androidx.transition.Transition removeTarget(android.view.View) -> removeTarget
    322:325:androidx.transition.TransitionSet removeTarget(android.view.View) -> removeTarget
    570:575:void resume(android.view.View) -> resume
    491:520:void runAnimators() -> runAnimators
    62:62:androidx.transition.Transition setDuration(long) -> setDuration
    239:246:androidx.transition.TransitionSet setDuration(long) -> setDuration
    630:636:void setEpicenterCallback(androidx.transition.Transition$EpicenterCallback) -> setEpicenterCallback
    62:62:androidx.transition.Transition setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    258:265:androidx.transition.TransitionSet setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    135:146:androidx.transition.TransitionSet setOrdering(int) -> setOrdering
    390:397:void setPathMotion(androidx.transition.PathMotion) -> setPathMotion
    620:626:void setPropagation(androidx.transition.TransitionPropagation) -> setPropagation
    62:62:androidx.transition.Transition setStartDelay(long) -> setStartDelay
    252:252:androidx.transition.TransitionSet setStartDelay(long) -> setStartDelay
    418:423:void setupStartEndListeners() -> setupStartEndListeners
    640:644:java.lang.String toString(java.lang.String) -> toString
androidx.transition.TransitionSet$1 -> androidx.transition.TransitionSet$1:
    503:503:void <init>(androidx.transition.TransitionSet,androidx.transition.Transition) -> <init>
    506:508:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.TransitionSet$TransitionSetListener -> androidx.transition.TransitionSet$TransitionSetListener:
    433:435:void <init>(androidx.transition.TransitionSet) -> <init>
    447:454:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    439:443:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.TransitionUtils -> androidx.transition.TransitionUtils:
    35:39:void <clinit>() -> <clinit>
    51:72:android.view.View copyViewImage(android.view.ViewGroup,android.view.View,android.view.View) -> copyViewImage
    93:140:android.graphics.Bitmap createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF,android.view.ViewGroup) -> createViewBitmap
    144:151:android.animation.Animator mergeAnimators(android.animation.Animator,android.animation.Animator) -> mergeAnimators
androidx.transition.TransitionUtils$$ExternalSyntheticApiModelOutline0 -> androidx.transition.TransitionUtils$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.graphics.Bitmap androidx.transition.TransitionUtils$$InternalSyntheticApiModelOutline$1$9416c06dc39a009fed7ca9c0ead9daf511aa61a11d1961633bbdb6fafacab622$0.m(android.graphics.Picture) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.transition.TransitionValues -> androidx.transition.TransitionValues:
    49:70:void <init>() -> <init>
    52:70:void <init>(android.view.View) -> <init>
    74:81:boolean equals(java.lang.Object) -> equals
    86:86:int hashCode() -> hashCode
    91:97:java.lang.String toString() -> toString
androidx.transition.TransitionValuesMaps -> androidx.transition.TransitionValuesMaps:
    25:33:void <init>() -> <init>
androidx.transition.ViewGroupOverlayApi18 -> androidx.transition.ViewGroupOverlayApi18:
    32:34:void <init>(android.view.ViewGroup) -> <init>
    38:39:void add(android.graphics.drawable.Drawable) -> add
    48:49:void add(android.view.View) -> add
    43:44:void remove(android.graphics.drawable.Drawable) -> remove
    53:54:void remove(android.view.View) -> remove
androidx.transition.ViewGroupUtils -> androidx.transition.ViewGroupUtils:
    37:37:void <clinit>() -> <clinit>
    46:47:androidx.transition.ViewGroupOverlayImpl getOverlay(android.view.ViewGroup) -> getOverlay
    68:77:void hiddenSuppressLayout(android.view.ViewGroup,boolean) -> hiddenSuppressLayout
    56:63:void suppressLayout(android.view.ViewGroup,boolean) -> suppressLayout
androidx.transition.ViewGroupUtils$$ExternalSyntheticApiModelOutline0 -> androidx.transition.ViewGroupUtils$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.transition.ViewGroupUtils$$InternalSyntheticApiModelOutline$1$2ab1cc39db7549dd3b28eb6099cdb18bc8cc034ae623df1348498e4679a218c9$0.m(android.view.ViewGroup,boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.transition.ViewOverlayApi18 -> androidx.transition.ViewOverlayApi18:
    31:33:void <init>(android.view.View) -> <init>
    37:38:void add(android.graphics.drawable.Drawable) -> add
    42:43:void remove(android.graphics.drawable.Drawable) -> remove
androidx.transition.ViewUtils -> androidx.transition.ViewUtils:
    38:71:void <clinit>() -> <clinit>
    128:129:void clearNonTransitionAlpha(android.view.View) -> clearNonTransitionAlpha
    90:91:androidx.transition.ViewOverlayImpl getOverlay(android.view.View) -> getOverlay
    111:111:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    100:101:androidx.transition.WindowIdImpl getWindowId(android.view.View) -> getWindowId
    119:120:void saveNonTransitionAlpha(android.view.View) -> saveNonTransitionAlpha
    199:200:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
    107:108:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
    145:146:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
    161:162:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    177:178:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.ViewUtils$1 -> androidx.transition.ViewUtils$1:
    57:57:void <init>(java.lang.Class,java.lang.String) -> <init>
    57:57:java.lang.Object get(java.lang.Object) -> get
    61:61:java.lang.Float get(android.view.View) -> get
    57:57:void set(java.lang.Object,java.lang.Object) -> set
    66:67:void set(android.view.View,java.lang.Float) -> set
androidx.transition.ViewUtils$2 -> androidx.transition.ViewUtils$2:
    72:72:void <init>(java.lang.Class,java.lang.String) -> <init>
    72:72:java.lang.Object get(java.lang.Object) -> get
    76:76:android.graphics.Rect get(android.view.View) -> get
    72:72:void set(java.lang.Object,java.lang.Object) -> set
    81:82:void set(android.view.View,android.graphics.Rect) -> set
androidx.transition.ViewUtilsApi19 -> androidx.transition.ViewUtilsApi19:
    31:31:void <clinit>() -> <clinit>
    26:26:void <init>() -> <init>
    72:72:void clearNonTransitionAlpha(android.view.View) -> clearNonTransitionAlpha
    52:61:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    67:67:void saveNonTransitionAlpha(android.view.View) -> saveNonTransitionAlpha
    36:47:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
androidx.transition.ViewUtilsApi19$$ExternalSyntheticApiModelOutline0 -> androidx.transition.ViewUtilsApi19$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.transition.ViewUtilsApi19$$InternalSyntheticApiModelOutline$1$16bfbe38408d9150895ea4817f7da1d805cf1d879cd5fd76a40ef36206b1c548$0.m(android.view.View,float) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.transition.ViewUtilsApi19$$ExternalSyntheticApiModelOutline1 -> androidx.transition.ViewUtilsApi19$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    float androidx.transition.ViewUtilsApi19$$InternalSyntheticApiModelOutline$1$e6a5fb68daad6de4e6979e9114ed51fd3b504908f3799d4c175931795a16d324$0.m(android.view.View) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.transition.ViewUtilsApi21 -> androidx.transition.ViewUtilsApi21:
    33:41:void <clinit>() -> <clinit>
    28:28:void <init>() -> <init>
    46:55:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    60:69:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.ViewUtilsApi21$$ExternalSyntheticApiModelOutline0 -> androidx.transition.ViewUtilsApi21$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.transition.ViewUtilsApi21$$InternalSyntheticApiModelOutline$1$44de3dc28985816055ba9e5d9db3fa449c1d4e90eb342a9dca4b1b21d3dac1dd$0.m(android.view.View,android.graphics.Matrix) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.transition.ViewUtilsApi21$$ExternalSyntheticApiModelOutline1 -> androidx.transition.ViewUtilsApi21$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.transition.ViewUtilsApi21$$InternalSyntheticApiModelOutline$1$ed0869bb598a5d125288394564fb83af37f3bd674256bf3261dd965caf50814f$0.m(android.view.View,android.graphics.Matrix) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.transition.ViewUtilsApi22 -> androidx.transition.ViewUtilsApi22:
    31:31:void <clinit>() -> <clinit>
    26:26:void <init>() -> <init>
    36:45:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
androidx.transition.ViewUtilsApi22$$ExternalSyntheticApiModelOutline0 -> androidx.transition.ViewUtilsApi22$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.transition.ViewUtilsApi22$$InternalSyntheticApiModelOutline$1$ed8ee0c16186165fba021a58a05307f9b0cf07af9834a444742c9fd671009be2$0.m(android.view.View,int,int,int,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.transition.ViewUtilsApi23 -> androidx.transition.ViewUtilsApi23:
    32:32:void <clinit>() -> <clinit>
    27:27:void <init>() -> <init>
    38:51:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
androidx.transition.ViewUtilsApi23$$ExternalSyntheticApiModelOutline0 -> androidx.transition.ViewUtilsApi23$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.transition.ViewUtilsApi23$$InternalSyntheticApiModelOutline$1$ddcfad1908d065ad511569cc2ccd156ca5bc7dd85a867708e34a0441950cee7e$0.m(android.view.View,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.transition.ViewUtilsApi29 -> androidx.transition.ViewUtilsApi29:
    27:27:void <init>() -> <init>
    36:36:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    46:47:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
    31:32:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
    41:42:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
    51:52:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    56:57:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.ViewUtilsBase -> androidx.transition.ViewUtilsBase:
    32:32:void <init>() -> <init>
    155:172:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
androidx.transition.Visibility -> androidx.transition.Visibility:
    81:81:void <clinit>() -> <clinit>
    98:101:void <init>() -> <init>
    165:166:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    160:161:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    150:156:void captureValues(androidx.transition.TransitionValues) -> captureValues
    250:262:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    146:146:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    195:243:androidx.transition.Visibility$VisibilityInfo getVisibilityChangeInfo(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> getVisibilityChangeInfo
    507:518:boolean isTransitionRequired(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> isTransitionRequired
    283:297:android.animation.Animator onAppear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int) -> onAppear
    340:481:android.animation.Animator onDisappear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int) -> onDisappear
    126:130:void setMode(int) -> setMode
androidx.transition.Visibility$1 -> androidx.transition.Visibility$1:
    438:438:void <init>(androidx.transition.Visibility,android.view.ViewGroup,android.view.View,android.view.View) -> <init>
    456:459:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    442:443:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    447:452:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
androidx.transition.Visibility$DisappearListener -> androidx.transition.Visibility$DisappearListener:
    531:540:void <init>(android.view.View,int,boolean) -> <init>
    604:613:void hideViewWhenNotCanceled() -> hideViewWhenNotCanceled
    562:563:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    575:576:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    546:549:void onAnimationPause(android.animation.Animator) -> onAnimationPause
    567:567:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    555:558:void onAnimationResume(android.animation.Animator) -> onAnimationResume
    571:571:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    591:591:void onTransitionCancel(androidx.transition.Transition) -> onTransitionCancel
    585:587:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    595:596:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    600:601:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
    581:581:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
    616:620:void suppressLayout(boolean) -> suppressLayout
androidx.transition.Visibility$VisibilityInfo -> androidx.transition.Visibility$VisibilityInfo:
    87:88:void <init>() -> <init>
androidx.transition.WindowIdApi18 -> androidx.transition.WindowIdApi18:
    29:31:void <init>(android.view.View) -> <init>
    35:35:boolean equals(java.lang.Object) -> equals
    40:40:int hashCode() -> hashCode
androidx.vectordrawable.graphics.drawable.AndroidResources -> androidx.vectordrawable.graphics.drawable.AndroidResources:
    22:134:void <clinit>() -> <clinit>
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback -> androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback:
    57:57:void <init>() -> <init>
    77:90:android.graphics.drawable.Animatable2$AnimationCallback getPlatformCallback() -> getPlatformCallback
    69:69:void onAnimationEnd(android.graphics.drawable.Drawable) -> onAnimationEnd
    63:63:void onAnimationStart(android.graphics.drawable.Drawable) -> onAnimationStart
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback$1 -> androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback$1:
    78:78:void <init>(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> <init>
    86:87:void onAnimationEnd(android.graphics.drawable.Drawable) -> onAnimationEnd
    81:82:void onAnimationStart(android.graphics.drawable.Drawable) -> onAnimationStart
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat:
    168:169:void <init>() -> <init>
    172:173:void <init>(android.content.Context) -> <init>
    156:733:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources) -> <init>
    522:527:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    532:536:boolean canApplyTheme() -> canApplyTheme
    143:143:void clearColorFilter() -> clearColorFilter
    212:219:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat create(android.content.Context,int) -> create
    284:292:void draw(android.graphics.Canvas) -> draw
    321:324:int getAlpha() -> getAlpha
    276:279:int getChangingConfigurations() -> getChangingConfigurations
    347:350:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    265:271:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    143:143:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    420:423:int getIntrinsicHeight() -> getIntrinsicHeight
    412:415:int getIntrinsicWidth() -> getIntrinsicWidth
    143:143:int getMinimumHeight() -> getMinimumHeight
    143:143:int getMinimumWidth() -> getMinimumWidth
    404:407:int getOpacity() -> getOpacity
    143:143:boolean getPadding(android.graphics.Rect) -> getPadding
    143:143:int[] getState() -> getState
    143:143:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    446:512:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    517:518:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    428:431:boolean isAutoMirrored() -> isAutoMirrored
    700:704:boolean isRunning() -> isRunning
    394:397:boolean isStateful() -> isStateful
    143:143:void jumpToCurrentState() -> jumpToCurrentState
    193:198:android.graphics.drawable.Drawable mutate() -> mutate
    296:301:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    313:316:boolean onLevelChange(int) -> onLevelChange
    305:308:boolean onStateChange(int[]) -> onStateChange
    763:811:void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerAnimationCallback
    820:821:void registerPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerPlatformCallback
    827:831:void removeAnimatorSetListener() -> removeAnimatorSetListener
    329:334:void setAlpha(int) -> setAlpha
    436:441:void setAutoMirrored(boolean) -> setAutoMirrored
    143:143:void setChangingConfigurations(int) -> setChangingConfigurations
    143:143:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    338:343:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    143:143:void setFilterBitmap(boolean) -> setFilterBitmap
    143:143:void setHotspot(float,float) -> setHotspot
    143:143:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    143:143:boolean setState(int[]) -> setState
    355:361:void setTint(int) -> setTint
    365:371:void setTintList(android.content.res.ColorStateList) -> setTintList
    375:381:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    385:389:boolean setVisible(boolean,boolean) -> setVisible
    682:696:void setupAnimatorsForTarget(java.lang.String,android.animation.Animator) -> setupAnimatorsForTarget
    709:721:void start() -> start
    725:731:void stop() -> stop
    836:851:boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> unregisterAnimationCallback
    757:757:boolean unregisterPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> unregisterPlatformCallback
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1 -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1:
    733:733:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    736:737:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    741:742:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    746:747:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$2 -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$2:
    788:788:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    801:807:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    791:797:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState:
    599:630:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources) -> <init>
    644:644:int getChangingConfigurations() -> getChangingConfigurations
    634:634:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    639:639:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    648:652:void setupAnimatorSet() -> setupAnimatorSet
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState:
    548:550:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    581:581:boolean canApplyTheme() -> canApplyTheme
    586:586:int getChangingConfigurations() -> getChangingConfigurations
    554:558:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    563:567:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    572:576:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat -> androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat:
    100:105:android.animation.Animator loadAnimator(android.content.Context,int) -> loadAnimator
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon -> androidx.vectordrawable.graphics.drawable.VectorDrawableCommon:
    29:29:void <init>() -> <init>
    95:99:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    103:108:void clearColorFilter() -> clearColorFilter
    112:115:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    128:131:int getMinimumHeight() -> getMinimumHeight
    120:123:int getMinimumWidth() -> getMinimumWidth
    136:139:boolean getPadding(android.graphics.Rect) -> getPadding
    144:147:int[] getState() -> getState
    153:156:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    86:90:void jumpToCurrentState() -> jumpToCurrentState
    45:48:boolean onLevelChange(int) -> onLevelChange
    161:166:void setChangingConfigurations(int) -> setChangingConfigurations
    36:41:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    78:82:void setFilterBitmap(boolean) -> setFilterBitmap
    62:65:void setHotspot(float,float) -> setHotspot
    70:74:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    170:173:boolean setState(int[]) -> setState
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat:
    280:280:void <clinit>() -> <clinit>
    311:323:void <init>() -> <init>
    311:328:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    687:690:int applyAlpha(int,float) -> applyAlpha
    277:277:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    587:591:boolean canApplyTheme() -> canApplyTheme
    277:277:void clearColorFilter() -> clearColorFilter
    645:650:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme) -> create
    360:428:void draw(android.graphics.Canvas) -> draw
    432:436:int getAlpha() -> getAlpha
    925:928:int getChangingConfigurations() -> getChangingConfigurations
    465:468:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    350:355:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    277:277:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    577:581:int getIntrinsicHeight() -> getIntrinsicHeight
    568:572:int getIntrinsicWidth() -> getIntrinsicWidth
    277:277:int getMinimumHeight() -> getMinimumHeight
    277:277:int getMinimumWidth() -> getMinimumWidth
    559:563:int getOpacity() -> getOpacity
    277:277:boolean getPadding(android.graphics.Rect) -> getPadding
    277:277:int[] getState() -> getState
    345:345:java.lang.Object getTargetByName(java.lang.String) -> getTargetByName
    277:277:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    696:702:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    707:726:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    816:879:void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateInternal
    933:938:void invalidateSelf() -> invalidateSelf
    596:599:boolean isAutoMirrored() -> isAutoMirrored
    528:534:boolean isStateful() -> isStateful
    277:277:void jumpToCurrentState() -> jumpToCurrentState
    332:341:android.graphics.drawable.Drawable mutate() -> mutate
    907:909:boolean needMirroring() -> needMirroring
    918:921:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    539:554:boolean onStateChange(int[]) -> onStateChange
    734:748:android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode) -> parseTintModeCompat
    942:947:void scheduleSelf(java.lang.Runnable,long) -> scheduleSelf
    902:903:void setAllowCaching(boolean) -> setAllowCaching
    441:450:void setAlpha(int) -> setAlpha
    604:609:void setAutoMirrored(boolean) -> setAutoMirrored
    277:277:void setChangingConfigurations(int) -> setChangingConfigurations
    277:277:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    454:461:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    277:277:void setFilterBitmap(boolean) -> setFilterBitmap
    277:277:void setHotspot(float,float) -> setHotspot
    277:277:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    277:277:boolean setState(int[]) -> setState
    488:494:void setTint(int) -> setTint
    498:509:void setTintList(android.content.res.ColorStateList) -> setTintList
    513:524:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    951:954:boolean setVisible(boolean,boolean) -> setVisible
    959:964:void unscheduleSelf(java.lang.Runnable) -> unscheduleSelf
    754:812:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> updateStateFromTypedArray
    477:483:android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> updateTintFilter
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath:
    1768:1770:void <init>() -> <init>
    1773:1774:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath) -> <init>
    1778:1786:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1810:1810:boolean isClipPath() -> isClipPath
    1792:1806:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath:
    1822:1837:void <init>() -> <init>
    1822:1856:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath) -> <init>
    2028:2028:float getFillAlpha() -> getFillAlpha
    2018:2018:int getFillColor() -> getFillColor
    2007:2007:float getStrokeAlpha() -> getStrokeAlpha
    1987:1987:int getStrokeColor() -> getStrokeColor
    1859:1867:android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap) -> getStrokeLineCap
    1872:1880:android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join) -> getStrokeLineJoin
    1997:1997:float getStrokeWidth() -> getStrokeWidth
    2048:2048:float getTrimPathEnd() -> getTrimPathEnd
    2058:2058:float getTrimPathOffset() -> getTrimPathOffset
    2038:2038:float getTrimPathStart() -> getTrimPathStart
    1890:1894:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1960:1960:boolean isStateful() -> isStateful
    1965:1967:boolean onStateChanged(int[]) -> onStateChanged
    2033:2034:void setFillAlpha(float) -> setFillAlpha
    2023:2024:void setFillColor(int) -> setFillColor
    2012:2013:void setStrokeAlpha(float) -> setStrokeAlpha
    1992:1993:void setStrokeColor(int) -> setStrokeColor
    2002:2003:void setStrokeWidth(float) -> setStrokeWidth
    2053:2054:void setTrimPathEnd(float) -> setTrimPathEnd
    2063:2064:void setTrimPathOffset(float) -> setTrimPathOffset
    2043:2044:void setTrimPathStart(float) -> setTrimPathStart
    1901:1956:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup:
    1445:1504:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap) -> <init>
    1445:1507:void <init>() -> <init>
    1510:1510:java.lang.String getGroupName() -> getGroupName
    1514:1514:android.graphics.Matrix getLocalMatrix() -> getLocalMatrix
    1586:1586:float getPivotX() -> getPivotX
    1599:1599:float getPivotY() -> getPivotY
    1573:1573:float getRotation() -> getRotation
    1612:1612:float getScaleX() -> getScaleX
    1625:1625:float getScaleY() -> getScaleY
    1638:1638:float getTranslateX() -> getTranslateX
    1651:1651:float getTranslateY() -> getTranslateY
    1518:1522:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1664:1669:boolean isStateful() -> isStateful
    1674:1678:boolean onStateChanged(int[]) -> onStateChanged
    1591:1595:void setPivotX(float) -> setPivotX
    1604:1608:void setPivotY(float) -> setPivotY
    1578:1582:void setRotation(float) -> setRotation
    1617:1621:void setScaleX(float) -> setScaleX
    1630:1634:void setScaleY(float) -> setScaleY
    1643:1647:void setTranslateX(float) -> setTranslateX
    1656:1660:void setTranslateY(float) -> setTranslateY
    1563:1568:void updateLocalMatrix() -> updateLocalMatrix
    1529:1558:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject:
    1423:1423:void <init>() -> <init>
    1423:1423:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1) -> <init>
    1430:1430:boolean isStateful() -> isStateful
    1438:1438:boolean onStateChanged(int[]) -> onStateChanged
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath:
    1687:1695:void <init>() -> <init>
    1687:1723:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath) -> <init>
    1750:1750:androidx.core.graphics.PathParser$PathDataNode[] getPathData() -> getPathData
    1733:1733:java.lang.String getPathName() -> getPathName
    1744:1744:boolean isClipPath() -> isClipPath
    1755:1761:void setPathData(androidx.core.graphics.PathParser$PathDataNode[]) -> setPathData
    1726:1730:void toPath(android.graphics.Path) -> toPath
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer:
    1170:1170:void <clinit>() -> <clinit>
    1171:1195:void <init>() -> <init>
    1171:1231:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) -> <init>
    1379:1379:float cross(float,float,float,float) -> cross
    1264:1265:void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> draw
    1239:1260:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawGroupTree
    1269:1376:void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawPath
    1213:1213:float getAlpha() -> getAlpha
    1393:1408:float getMatrixScale(android.graphics.Matrix) -> getMatrixScale
    1202:1202:int getRootAlpha() -> getRootAlpha
    1412:1415:boolean isStateful() -> isStateful
    1419:1419:boolean onStateChanged(int[]) -> onStateChanged
    1208:1209:void setAlpha(float) -> setAlpha
    1198:1199:void setRootAlpha(int) -> setRootAlpha
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState:
    1015:1047:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    1015:1123:void <init>() -> <init>
    1093:1097:boolean canReuseBitmap(int,int) -> canReuseBitmap
    1101:1108:boolean canReuseCache() -> canReuseCache
    1084:1090:void createCachedBitmapIfNeeded(int,int) -> createCachedBitmapIfNeeded
    1052:1054:void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect) -> drawCachedBitmapWithRootAlpha
    1139:1139:int getChangingConfigurations() -> getChangingConfigurations
    1064:1074:android.graphics.Paint getPaint(android.graphics.ColorFilter) -> getPaint
    1057:1057:boolean hasTranslucentRoot() -> hasTranslucentRoot
    1143:1143:boolean isStateful() -> isStateful
    1128:1128:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    1134:1134:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    1147:1149:boolean onStateChanged(int[]) -> onStateChanged
    1114:1119:void updateCacheStates() -> updateCacheStates
    1078:1081:void updateCachedBitmap(int,int) -> updateCachedBitmap
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState:
    975:977:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    1003:1003:boolean canApplyTheme() -> canApplyTheme
    1008:1008:int getChangingConfigurations() -> getChangingConfigurations
    981:983:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    988:990:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    995:998:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.versionedparcelable.CustomVersionedParcelable -> androidx.versionedparcelable.CustomVersionedParcelable:
    27:27:void <init>() -> <init>
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
    60:60:void <clinit>() -> <clinit>
    38:40:void <init>(android.os.Parcel) -> <init>
    51:51:int describeContents() -> describeContents
    56:58:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$1:
    60:60:void <init>() -> <init>
    60:60:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    63:63:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel) -> createFromParcel
    60:60:java.lang.Object[] newArray(int) -> newArray
    68:68:androidx.versionedparcelable.ParcelImpl[] newArray(int) -> newArray
androidx.versionedparcelable.VersionedParcel -> androidx.versionedparcelable.VersionedParcel:
    86:90:void <init>(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    1628:1635:java.lang.Class findParcelClass(java.lang.Class) -> findParcelClass
    1604:1611:java.lang.reflect.Method getReadMethod(java.lang.String) -> getReadMethod
    1616:1623:java.lang.reflect.Method getWriteMethod(java.lang.Class) -> getWriteMethod
    96:96:boolean isStream() -> isStream
    399:402:boolean readBoolean(boolean,int) -> readBoolean
    472:475:byte[] readByteArray(byte[],int) -> readByteArray
    616:619:java.lang.CharSequence readCharSequence(java.lang.CharSequence,int) -> readCharSequence
    1565:1577:androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel) -> readFromParcel
    409:412:int readInt(int,int) -> readInt
    481:484:android.os.Parcelable readParcelable(android.os.Parcelable,int) -> readParcelable
    451:454:java.lang.String readString(java.lang.String,int) -> readString
    1493:1496:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> readVersionedParcelable
    1509:1513:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable() -> readVersionedParcelable
    269:269:void setSerializationFlags(boolean,boolean) -> setSerializationFlags
    294:296:void writeBoolean(boolean,int) -> writeBoolean
    304:306:void writeByteArray(byte[],int) -> writeByteArray
    325:327:void writeCharSequence(java.lang.CharSequence,int) -> writeCharSequence
    334:336:void writeInt(int,int) -> writeInt
    391:393:void writeParcelable(android.os.Parcelable,int) -> writeParcelable
    370:372:void writeString(java.lang.String,int) -> writeString
    1586:1600:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel) -> writeToParcel
    1021:1023:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> writeVersionedParcelable
    1028:1037:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelable
    1040:1048:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelableCreator
androidx.versionedparcelable.VersionedParcelParcel -> androidx.versionedparcelable.VersionedParcelParcel:
    51:54:void <init>(android.os.Parcel) -> <init>
    41:66:void <init>(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    99:111:void closeField() -> closeField
    119:119:androidx.versionedparcelable.VersionedParcel createSubParcel() -> createSubParcel
    258:258:boolean readBoolean() -> readBoolean
    236:242:byte[] readByteArray() -> readByteArray
    201:201:java.lang.CharSequence readCharSequence() -> readCharSequence
    70:84:boolean readField(int) -> readField
    206:206:int readInt() -> readInt
    248:248:android.os.Parcelable readParcelable() -> readParcelable
    226:226:java.lang.String readString() -> readString
    89:95:void setOutputField(int) -> setOutputField
    181:182:void writeBoolean(boolean) -> writeBoolean
    126:132:void writeByteArray(byte[]) -> writeByteArray
    196:197:void writeCharSequence(java.lang.CharSequence) -> writeCharSequence
    146:147:void writeInt(int) -> writeInt
    176:177:void writeParcelable(android.os.Parcelable) -> writeParcelable
    166:167:void writeString(java.lang.String) -> writeString
androidx.viewpager.widget.PagerAdapter -> androidx.viewpager.widget.PagerAdapter:
    81:82:void <init>() -> <init>
    154:155:void finishUpdate(android.view.ViewGroup) -> finishUpdate
    231:231:void finishUpdate(android.view.View) -> finishUpdate
    281:281:int getItemPosition(java.lang.Object) -> getItemPosition
    343:343:float getPageWidth(int) -> getPageWidth
    263:263:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    252:252:android.os.Parcelable saveState() -> saveState
    143:144:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    218:218:void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    316:319:void setViewPagerObserver(android.database.DataSetObserver) -> setViewPagerObserver
    99:100:void startUpdate(android.view.ViewGroup) -> startUpdate
    166:166:void startUpdate(android.view.View) -> startUpdate
androidx.viewpager.widget.ViewPager -> androidx.viewpager.widget.ViewPager:
    122:251:void <clinit>() -> <clinit>
    155:398:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2905:2940:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1008:1017:androidx.viewpager.widget.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    723:727:void addOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> addOnPageChangeListener
    2950:2959:void addTouchables(java.util.ArrayList) -> addTouchables
    1472:1495:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    2793:2855:boolean arrowScroll(int) -> arrowScroll
    1298:1381:void calculatePageOffsets(androidx.viewpager.widget.ViewPager$ItemInfo,int,androidx.viewpager.widget.ViewPager$ItemInfo) -> calculatePageOffsets
    2719:2738:boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    2692:2703:boolean canScrollHorizontally(int) -> canScrollHorizontally
    3029:3029:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1974:2008:void completeScroll(boolean) -> completeScroll
    1793:1815:void computeScroll() -> computeScroll
    1023:1089:void dataSetChanged() -> dataSetChanged
    2406:2421:int determineTargetPage(int,float,int,int) -> determineTargetPage
    2744:2744:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    1923:1937:void dispatchOnPageScrolled(int,float,int) -> dispatchOnPageScrolled
    1940:1954:void dispatchOnPageSelected(int) -> dispatchOnPageSelected
    1957:1971:void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    2997:3014:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    927:929:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    2426:2464:void draw(android.graphics.Canvas) -> draw
    915:920:void drawableStateChanged() -> drawableStateChanged
    2015:2021:void enableLayers(boolean) -> enableLayers
    2659:2666:void endDrag() -> endDrag
    2756:2782:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    3019:3019:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    3024:3024:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    3034:3034:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    572:572:androidx.viewpager.widget.PagerAdapter getAdapter() -> getAdapter
    802:805:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    2859:2881:android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    600:600:int getClientWidth() -> getClientWidth
    627:627:int getCurrentItem() -> getCurrentItem
    828:828:int getOffscreenPageLimit() -> getOffscreenPageLimit
    884:884:int getPageMargin() -> getPageMargin
    1523:1529:androidx.viewpager.widget.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    1512:1518:androidx.viewpager.widget.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    2363:2401:androidx.viewpager.widget.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    1533:1539:androidx.viewpager.widget.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    401:475:void initViewPager() -> initViewPager
    1498:1499:boolean isDecorView(android.view.View) -> isDecorView
    2011:2011:boolean isGutterDrag(float,float) -> isGutterDrag
    1544:1546:void onAttachedToWindow() -> onAttachedToWindow
    479:485:void onDetachedFromWindow() -> onDetachedFromWindow
    2468:2508:void onDraw(android.graphics.Canvas) -> onDraw
    2031:2161:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1682:1789:void onLayout(boolean,int,int,int,int) -> onLayout
    1555:1642:void onMeasure(int,int) -> onMeasure
    1865:1920:void onPageScrolled(int,float,int) -> onPageScrolled
    2970:2991:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1452:1468:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1441:1447:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    2644:2656:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    1646:1652:void onSizeChanged(int,int,int,int) -> onSizeChanged
    2166:2289:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    2885:2889:boolean pageLeft() -> pageLeft
    2893:2897:boolean pageRight() -> pageRight
    1818:1847:boolean pageScrolled(int) -> pageScrolled
    2310:2355:boolean performDrag(float) -> performDrag
    1092:1093:void populate() -> populate
    1096:1279:void populate(int) -> populate
    1655:1678:void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    555:563:void removeNonDecorViews() -> removeNonDecorViews
    1504:1509:void removeView(android.view.View) -> removeView
    2303:2307:void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    2294:2299:boolean resetTouch() -> resetTouch
    676:696:void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    506:552:void setAdapter(androidx.viewpager.widget.PagerAdapter) -> setAdapter
    611:613:void setCurrentItem(int) -> setCurrentItem
    622:624:void setCurrentItem(int,boolean) -> setCurrentItem
    631:632:void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    635:672:void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    849:858:void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    709:710:void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    869:876:void setPageMargin(int) -> setPageMargin
    893:897:void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    905:906:void setPageMarginDrawable(int) -> setPageMarginDrawable
    488:498:void setScrollState(int) -> setScrollState
    2669:2681:void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    950:1005:void smoothScrollTo(int,int,int) -> smoothScrollTo
    1282:1295:void sortChildDrawingOrder() -> sortChildDrawingOrder
    910:910:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.viewpager.widget.ViewPager$1 -> androidx.viewpager.widget.ViewPager$1:
    140:140:void <init>() -> <init>
    140:140:int compare(java.lang.Object,java.lang.Object) -> compare
    143:143:int compare(androidx.viewpager.widget.ViewPager$ItemInfo,androidx.viewpager.widget.ViewPager$ItemInfo) -> compare
androidx.viewpager.widget.ViewPager$2 -> androidx.viewpager.widget.ViewPager$2:
    147:147:void <init>() -> <init>
    150:151:float getInterpolation(float) -> getInterpolation
androidx.viewpager.widget.ViewPager$3 -> androidx.viewpager.widget.ViewPager$3:
    269:269:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    272:274:void run() -> run
androidx.viewpager.widget.ViewPager$4 -> androidx.viewpager.widget.ViewPager$4:
    428:429:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    435:471:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.viewpager.widget.ViewPager$ItemInfo -> androidx.viewpager.widget.ViewPager$ItemInfo:
    132:132:void <init>() -> <init>
androidx.viewpager.widget.ViewPager$LayoutParams -> androidx.viewpager.widget.ViewPager$LayoutParams:
    3126:3146:void <init>() -> <init>
    3126:3154:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate -> androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate:
    3037:3037:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    3087:3087:boolean canScroll() -> canScroll
    3041:3049:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    3053:3062:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    3066:3083:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.viewpager.widget.ViewPager$PagerObserver -> androidx.viewpager.widget.ViewPager$PagerObserver:
    3092:3093:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    3097:3098:void onChanged() -> onChanged
    3101:3102:void onInvalidated() -> onInvalidated
androidx.viewpager.widget.ViewPager$SavedState -> androidx.viewpager.widget.ViewPager$SavedState:
    1412:1412:void <clinit>() -> <clinit>
    1395:1396:void <init>(android.os.Parcelable) -> <init>
    1429:1436:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1407:1408:java.lang.String toString() -> toString
    1400:1403:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.viewpager.widget.ViewPager$SavedState$1 -> androidx.viewpager.widget.ViewPager$SavedState$1:
    1412:1412:void <init>() -> <init>
    1412:1412:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1412:1412:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1415:1415:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1420:1420:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1412:1412:java.lang.Object[] newArray(int) -> newArray
    1424:1424:androidx.viewpager.widget.ViewPager$SavedState[] newArray(int) -> newArray
androidx.viewpager.widget.ViewPager$ViewPositionComparator -> androidx.viewpager.widget.ViewPager$ViewPositionComparator:
    3157:3157:void <init>() -> <init>
    3157:3157:int compare(java.lang.Object,java.lang.Object) -> compare
    3160:3165:int compare(android.view.View,android.view.View) -> compare
androidx.viewpager2.adapter.FragmentStateAdapter$2 -> androidx.viewpager2.adapter.FragmentStateAdapter$2:
    351:351:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.viewpager2.adapter.FragmentStateAdapter$5 -> androidx.viewpager2.adapter.FragmentStateAdapter$5:
    588:592:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3 -> androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3:
    657:658:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
com.bumptech.glide.GeneratedAppGlideModule -> com.bumptech.glide.GeneratedAppGlideModule:
    16:16:void <init>() -> <init>
    20:20:java.util.Set getExcludedModuleClasses() -> getExcludedModuleClasses
    25:25:com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory getRequestManagerFactory() -> getRequestManagerFactory
com.bumptech.glide.GenericTransitionOptions -> com.bumptech.glide.GenericTransitionOptions:
    15:15:void <init>() -> <init>
    62:62:boolean equals(java.lang.Object) -> equals
    70:70:int hashCode() -> hashCode
com.bumptech.glide.Glide -> com.bumptech.glide.Glide:
    70:343:void <init>(android.content.Context,com.bumptech.glide.load.engine.Engine,com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,com.bumptech.glide.manager.RequestManagerRetriever,com.bumptech.glide.manager.ConnectivityMonitorFactory,int,com.bumptech.glide.Glide$RequestOptionsFactory,java.util.Map,java.util.List,java.util.List,com.bumptech.glide.module.AppGlideModule,com.bumptech.glide.GlideExperiments) -> <init>
    144:152:void checkAndInitializeGlide(android.content.Context,com.bumptech.glide.GeneratedAppGlideModule) -> checkAndInitializeGlide
    430:435:void clearMemory() -> clearMemory
    126:136:com.bumptech.glide.Glide get(android.content.Context) -> get
    262:288:com.bumptech.glide.GeneratedAppGlideModule getAnnotationGeneratedGlideModules(android.content.Context) -> getAnnotationGeneratedGlideModules
    370:370:com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool getArrayPool() -> getArrayPool
    365:365:com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool getBitmapPool() -> getBitmapPool
    382:382:com.bumptech.glide.manager.ConnectivityMonitorFactory getConnectivityMonitorFactory() -> getConnectivityMonitorFactory
    378:378:android.content.Context getContext() -> getContext
    387:387:com.bumptech.glide.GlideContext getGlideContext() -> getGlideContext
    628:628:com.bumptech.glide.Registry getRegistry() -> getRegistry
    473:473:com.bumptech.glide.manager.RequestManagerRetriever getRequestManagerRetriever() -> getRequestManagerRetriever
    505:510:com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context) -> getRetriever
    206:207:void initializeGlide(android.content.Context,com.bumptech.glide.GeneratedAppGlideModule) -> initializeGlide
    215:257:void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder,com.bumptech.glide.GeneratedAppGlideModule) -> initializeGlide
    669:669:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    673:674:void onLowMemory() -> onLowMemory
    663:664:void onTrimMemory(int) -> onTrimMemory
    644:650:void registerRequestManager(com.bumptech.glide.RequestManager) -> registerRequestManager
    632:640:boolean removeFromManagers(com.bumptech.glide.request.target.Target) -> removeFromManagers
    292:292:void throwIncorrectGlideModule(java.lang.Exception) -> throwIncorrectGlideModule
    444:456:void trimMemory(int) -> trimMemory
    653:659:void unregisterRequestManager(com.bumptech.glide.RequestManager) -> unregisterRequestManager
    537:537:com.bumptech.glide.RequestManager with(android.content.Context) -> with
    564:564:com.bumptech.glide.RequestManager with(androidx.fragment.app.FragmentActivity) -> with
    576:576:com.bumptech.glide.RequestManager with(androidx.fragment.app.Fragment) -> with
com.bumptech.glide.GlideBuilder -> com.bumptech.glide.GlideBuilder:
    44:57:void <init>() -> <init>
    517:580:com.bumptech.glide.Glide build(android.content.Context,java.util.List,com.bumptech.glide.module.AppGlideModule) -> build
    503:504:void setRequestManagerFactory(com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory) -> setRequestManagerFactory
com.bumptech.glide.GlideBuilder$1 -> com.bumptech.glide.GlideBuilder$1:
    58:58:void <init>(com.bumptech.glide.GlideBuilder) -> <init>
    62:62:com.bumptech.glide.request.RequestOptions build() -> build
com.bumptech.glide.GlideBuilder$EnableImageDecoderForBitmaps -> com.bumptech.glide.GlideBuilder$EnableImageDecoderForBitmaps:
    614:614:void <init>() -> <init>
com.bumptech.glide.GlideBuilder$LogRequestOrigins -> com.bumptech.glide.GlideBuilder$LogRequestOrigins:
    617:617:void <init>() -> <init>
com.bumptech.glide.GlideBuilder$UseLifecycleInsteadOfInjectingFragments -> com.bumptech.glide.GlideBuilder$UseLifecycleInsteadOfInjectingFragments:
    625:625:void <init>() -> <init>
com.bumptech.glide.GlideBuilder$WaitForFramesAfterTrimMemory -> com.bumptech.glide.GlideBuilder$WaitForFramesAfterTrimMemory:
    611:611:void <init>() -> <init>
com.bumptech.glide.GlideContext -> com.bumptech.glide.GlideContext:
    30:30:void <clinit>() -> <clinit>
    58:69:void <init>(android.content.Context,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,com.bumptech.glide.util.GlideSuppliers$GlideSupplier,com.bumptech.glide.request.target.ImageViewTargetFactory,com.bumptech.glide.Glide$RequestOptionsFactory,java.util.Map,java.util.List,com.bumptech.glide.load.engine.Engine,com.bumptech.glide.GlideExperiments,int) -> <init>
    103:103:com.bumptech.glide.request.target.ViewTarget buildImageViewTarget(android.widget.ImageView,java.lang.Class) -> buildImageViewTarget
    122:122:com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool getArrayPool() -> getArrayPool
    72:72:java.util.List getDefaultRequestListeners() -> getDefaultRequestListeners
    75:80:com.bumptech.glide.request.RequestOptions getDefaultRequestOptions() -> getDefaultRequestOptions
    86:97:com.bumptech.glide.TransitionOptions getDefaultTransitionOptions(java.lang.Class) -> getDefaultTransitionOptions
    108:108:com.bumptech.glide.load.engine.Engine getEngine() -> getEngine
    126:126:com.bumptech.glide.GlideExperiments getExperiments() -> getExperiments
    117:117:int getLogLevel() -> getLogLevel
    113:113:com.bumptech.glide.Registry getRegistry() -> getRegistry
com.bumptech.glide.GlideExperiments -> com.bumptech.glide.GlideExperiments:
    22:25:void <init>(com.bumptech.glide.GlideExperiments$Builder) -> <init>
    40:40:boolean isEnabled(java.lang.Class) -> isEnabled
com.bumptech.glide.GlideExperiments$Builder -> com.bumptech.glide.GlideExperiments$Builder:
    45:46:void <init>() -> <init>
    45:45:java.util.Map access$000(com.bumptech.glide.GlideExperiments$Builder) -> access$000
    63:63:com.bumptech.glide.GlideExperiments build() -> build
com.bumptech.glide.MemoryCategory -> com.bumptech.glide.MemoryCategory:
    4:15:void <clinit>() -> <clinit>
    19:21:void <init>(java.lang.String,int,float) -> <init>
    4:4:com.bumptech.glide.MemoryCategory valueOf(java.lang.String) -> valueOf
    4:4:com.bumptech.glide.MemoryCategory[] values() -> values
com.bumptech.glide.Priority -> com.bumptech.glide.Priority:
    8:12:void <clinit>() -> <clinit>
    8:8:void <init>(java.lang.String,int) -> <init>
    8:8:com.bumptech.glide.Priority valueOf(java.lang.String) -> valueOf
    8:8:com.bumptech.glide.Priority[] values() -> values
com.bumptech.glide.Registry -> com.bumptech.glide.Registry:
    60:75:void <init>() -> <init>
    115:116:com.bumptech.glide.Registry append(java.lang.Class,com.bumptech.glide.load.Encoder) -> append
    159:160:com.bumptech.glide.Registry append(java.lang.Class,java.lang.Class,com.bumptech.glide.load.ResourceDecoder) -> append
    189:190:com.bumptech.glide.Registry append(java.lang.String,java.lang.Class,java.lang.Class,com.bumptech.glide.load.ResourceDecoder) -> append
    322:323:com.bumptech.glide.Registry append(java.lang.Class,com.bumptech.glide.load.ResourceEncoder) -> append
    409:410:com.bumptech.glide.Registry append(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory) -> append
    505:531:java.util.List getDecodePaths(java.lang.Class,java.lang.Class,java.lang.Class) -> getDecodePaths
    599:603:java.util.List getImageHeaderParsers() -> getImageHeaderParsers
    479:497:com.bumptech.glide.load.engine.LoadPath getLoadPath(java.lang.Class,java.lang.Class,java.lang.Class) -> getLoadPath
    594:594:java.util.List getModelLoaders(java.lang.Object) -> getModelLoaders
    539:560:java.util.List getRegisteredResourceClasses(java.lang.Class,java.lang.Class,java.lang.Class) -> getRegisteredResourceClasses
    570:574:com.bumptech.glide.load.ResourceEncoder getResultEncoder(com.bumptech.glide.load.engine.Resource) -> getResultEncoder
    589:589:com.bumptech.glide.load.data.DataRewinder getRewinder(java.lang.Object) -> getRewinder
    580:584:com.bumptech.glide.load.Encoder getSourceEncoder(java.lang.Object) -> getSourceEncoder
    564:564:boolean isResourceEncoderAvailable(com.bumptech.glide.load.engine.Resource) -> isResourceEncoderAvailable
    351:352:com.bumptech.glide.Registry register(com.bumptech.glide.load.data.DataRewinder$Factory) -> register
    370:371:com.bumptech.glide.Registry register(java.lang.Class,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder) -> register
    380:381:com.bumptech.glide.Registry register(com.bumptech.glide.load.ImageHeaderParser) -> register
    269:277:com.bumptech.glide.Registry setResourceDecoderBucketPriorityList(java.util.List) -> setResourceDecoderBucketPriorityList
com.bumptech.glide.Registry$MissingComponentException -> com.bumptech.glide.Registry$MissingComponentException:
    661:662:void <init>(java.lang.String) -> <init>
com.bumptech.glide.Registry$NoImageHeaderParserException -> com.bumptech.glide.Registry$NoImageHeaderParserException:
    670:671:void <init>() -> <init>
com.bumptech.glide.Registry$NoModelLoaderAvailableException -> com.bumptech.glide.Registry$NoModelLoaderAvailableException:
    615:616:void <init>(java.lang.Object) -> <init>
    620:625:void <init>(java.lang.Object,java.util.List) -> <init>
    629:630:void <init>(java.lang.Class,java.lang.Class) -> <init>
com.bumptech.glide.Registry$NoResultEncoderAvailableException -> com.bumptech.glide.Registry$NoResultEncoderAvailableException:
    638:644:void <init>(java.lang.Class) -> <init>
com.bumptech.glide.Registry$NoSourceEncoderAvailableException -> com.bumptech.glide.Registry$NoSourceEncoderAvailableException:
    652:653:void <init>(java.lang.Class) -> <init>
com.bumptech.glide.RegistryFactory -> com.bumptech.glide.RegistryFactory:
    117:126:com.bumptech.glide.Registry createAndInitRegistry(com.bumptech.glide.Glide,java.util.List,com.bumptech.glide.module.AppGlideModule) -> createAndInitRegistry
    135:345:void initializeDefaults(android.content.Context,com.bumptech.glide.Registry,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,com.bumptech.glide.GlideExperiments) -> initializeDefaults
    353:369:void initializeModules(android.content.Context,com.bumptech.glide.Glide,com.bumptech.glide.Registry,java.util.List,com.bumptech.glide.module.AppGlideModule) -> initializeModules
    88:88:com.bumptech.glide.util.GlideSuppliers$GlideSupplier lazilyCreateAndInitializeRegistry(com.bumptech.glide.Glide,java.util.List,com.bumptech.glide.module.AppGlideModule) -> lazilyCreateAndInitializeRegistry
com.bumptech.glide.RegistryFactory$1 -> com.bumptech.glide.RegistryFactory$1:
    88:88:void <init>(com.bumptech.glide.Glide,java.util.List,com.bumptech.glide.module.AppGlideModule) -> <init>
    88:88:java.lang.Object get() -> get
    93:106:com.bumptech.glide.Registry get() -> get
com.bumptech.glide.RequestBuilder -> com.bumptech.glide.RequestBuilder:
    59:63:void <clinit>() -> <clinit>
    82:104:void <init>(com.bumptech.glide.Glide,com.bumptech.glide.RequestManager,java.lang.Class,android.content.Context) -> <init>
    264:273:com.bumptech.glide.RequestBuilder addListener(com.bumptech.glide.request.RequestListener) -> addListener
    55:55:com.bumptech.glide.request.BaseRequestOptions apply(com.bumptech.glide.request.BaseRequestOptions) -> apply
    146:147:com.bumptech.glide.RequestBuilder apply(com.bumptech.glide.request.BaseRequestOptions) -> apply
    1033:1041:com.bumptech.glide.request.Request buildRequest(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.BaseRequestOptions,java.util.concurrent.Executor) -> buildRequest
    1059:1102:com.bumptech.glide.request.Request buildRequestRecursive(java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.TransitionOptions,com.bumptech.glide.Priority,int,int,com.bumptech.glide.request.BaseRequestOptions,java.util.concurrent.Executor) -> buildRequestRecursive
    1116:1213:com.bumptech.glide.request.Request buildThumbnailRequestRecursive(java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.TransitionOptions,com.bumptech.glide.Priority,int,int,com.bumptech.glide.request.BaseRequestOptions,java.util.concurrent.Executor) -> buildThumbnailRequestRecursive
    55:55:com.bumptech.glide.request.BaseRequestOptions clone() -> clone
    55:55:java.lang.Object clone() -> clone
    753:764:com.bumptech.glide.RequestBuilder clone() -> clone
    1259:1272:boolean equals(java.lang.Object) -> equals
    1015:1024:com.bumptech.glide.Priority getThumbnailPriority(com.bumptech.glide.Priority) -> getThumbnailPriority
    1277:1287:int hashCode() -> hashCode
    126:129:void initRequestListeners(java.util.List) -> initRequestListeners
    776:776:com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target) -> into
    784:784:com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,java.util.concurrent.Executor) -> into
    792:819:com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.BaseRequestOptions,java.util.concurrent.Executor) -> into
    844:880:com.bumptech.glide.request.target.ViewTarget into(android.widget.ImageView) -> into
    829:829:boolean isSkipMemoryCacheWithCompletePreviousRequest(com.bumptech.glide.request.BaseRequestOptions,com.bumptech.glide.request.Request) -> isSkipMemoryCacheWithCompletePreviousRequest
    531:531:com.bumptech.glide.RequestBuilder load(java.lang.Object) -> load
    637:637:com.bumptech.glide.RequestBuilder load(android.net.Uri) -> load
    536:541:com.bumptech.glide.RequestBuilder loadGeneric(java.lang.Object) -> loadGeneric
    1238:1253:com.bumptech.glide.request.Request obtainRequest(java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.BaseRequestOptions,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.TransitionOptions,com.bumptech.glide.Priority,int,int,java.util.concurrent.Executor) -> obtainRequest
    509:517:com.bumptech.glide.RequestBuilder thumbnail(float) -> thumbnail
com.bumptech.glide.RequestBuilder$1 -> com.bumptech.glide.RequestBuilder$1:
    854:1015:void <clinit>() -> <clinit>
com.bumptech.glide.RequestManager -> com.bumptech.glide.RequestManager:
    59:62:void <clinit>() -> <clinit>
    103:110:void <init>(com.bumptech.glide.Glide,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode,android.content.Context) -> <init>
    77:148:void <init>(com.bumptech.glide.Glide,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.manager.ConnectivityMonitorFactory,android.content.Context) -> <init>
    594:594:com.bumptech.glide.RequestBuilder as(java.lang.Class) -> as
    390:390:com.bumptech.glide.RequestBuilder asBitmap() -> asBitmap
    425:425:com.bumptech.glide.RequestBuilder asDrawable() -> asDrawable
    610:611:void clear(android.view.View) -> clear
    620:625:void clear(com.bumptech.glide.request.target.Target) -> clear
    675:675:java.util.List getDefaultRequestListeners() -> getDefaultRequestListeners
    679:679:com.bumptech.glide.request.RequestOptions getDefaultRequestOptions() -> getDefaultRequestOptions
    684:684:com.bumptech.glide.TransitionOptions getDefaultTransitionOptions(java.lang.Class) -> getDefaultTransitionOptions
    473:473:com.bumptech.glide.RequestBuilder load(android.net.Uri) -> load
    705:705:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    368:379:void onDestroy() -> onDestroy
    702:702:void onLowMemory() -> onLowMemory
    348:351:void onStart() -> onStart
    358:361:void onStop() -> onStop
    694:697:void onTrimMemory(int) -> onTrimMemory
    274:276:void pauseAllRequests() -> pauseAllRequests
    287:292:void pauseAllRequestsRecursive() -> pauseAllRequestsRecursive
    254:256:void pauseRequests() -> pauseRequests
    323:325:void resumeRequests() -> resumeRequests
    150:152:void setRequestOptions(com.bumptech.glide.request.RequestOptions) -> setRequestOptions
    689:689:java.lang.String toString() -> toString
    669:672:void track(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.Request) -> track
    653:665:boolean untrack(com.bumptech.glide.request.target.Target) -> untrack
    628:651:void untrackOrDelegate(com.bumptech.glide.request.target.Target) -> untrackOrDelegate
com.bumptech.glide.RequestManager$1 -> com.bumptech.glide.RequestManager$1:
    81:81:void <init>(com.bumptech.glide.RequestManager) -> <init>
    84:85:void run() -> run
com.bumptech.glide.RequestManager$ClearTarget -> com.bumptech.glide.RequestManager$ClearTarget:
    729:730:void <init>(android.view.View) -> <init>
    740:740:void onLoadFailed(android.graphics.drawable.Drawable) -> onLoadFailed
    735:735:void onResourceCleared(android.graphics.drawable.Drawable) -> onResourceCleared
    746:746:void onResourceReady(java.lang.Object,com.bumptech.glide.request.transition.Transition) -> onResourceReady
com.bumptech.glide.RequestManager$RequestManagerConnectivityListener -> com.bumptech.glide.RequestManager$RequestManagerConnectivityListener:
    712:714:void <init>(com.bumptech.glide.RequestManager,com.bumptech.glide.manager.RequestTracker) -> <init>
    718:723:void onConnectivityChanged(boolean) -> onConnectivityChanged
com.bumptech.glide.TransitionOptions -> com.bumptech.glide.TransitionOptions:
    20:23:void <init>() -> <init>
    20:20:java.lang.Object clone() -> clone
    89:91:com.bumptech.glide.TransitionOptions clone() -> clone
    106:110:boolean equals(java.lang.Object) -> equals
    96:96:com.bumptech.glide.request.transition.TransitionFactory getTransitionFactory() -> getTransitionFactory
    115:115:int hashCode() -> hashCode
com.bumptech.glide.disklrucache.DiskLruCache -> com.bumptech.glide.disklrucache.DiskLruCache:
    149:190:void <init>(java.io.File,int,int,long) -> <init>
    90:90:java.io.Writer access$100(com.bumptech.glide.disklrucache.DiskLruCache) -> access$100
    90:90:int access$1900(com.bumptech.glide.disklrucache.DiskLruCache) -> access$1900
    90:90:void access$200(com.bumptech.glide.disklrucache.DiskLruCache) -> access$200
    90:90:java.io.File access$2000(com.bumptech.glide.disklrucache.DiskLruCache) -> access$2000
    90:90:void access$2100(com.bumptech.glide.disklrucache.DiskLruCache,com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean) -> access$2100
    90:90:boolean access$300(com.bumptech.glide.disklrucache.DiskLruCache) -> access$300
    90:90:void access$400(com.bumptech.glide.disklrucache.DiskLruCache) -> access$400
    90:90:int access$502(com.bumptech.glide.disklrucache.DiskLruCache,int) -> access$502
    623:626:void checkNotClosed() -> checkNotClosed
    636:648:void close() -> close
    679:693:void closeWriter(java.io.Writer) -> closeWriter
    507:568:void completeEdit(com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean) -> completeEdit
    663:665:void delete() -> delete
    393:396:void deleteIfExists(java.io.File) -> deleteIfExists
    447:447:com.bumptech.glide.disklrucache.DiskLruCache$Editor edit(java.lang.String) -> edit
    450:473:com.bumptech.glide.disklrucache.DiskLruCache$Editor edit(java.lang.String,long) -> edit
    703:717:void flushWriter(java.io.Writer) -> flushWriter
    412:439:com.bumptech.glide.disklrucache.DiskLruCache$Value get(java.lang.String) -> get
    575:577:boolean journalRebuildRequired() -> journalRebuildRequired
    203:244:com.bumptech.glide.disklrucache.DiskLruCache open(java.io.File,int,int,long) -> open
    331:347:void processJournal() -> processJournal
    248:285:void readJournal() -> readJournal
    288:324:void readJournalLine(java.lang.String) -> readJournalLine
    353:390:void rebuildJournal() -> rebuildJournal
    586:614:boolean remove(java.lang.String) -> remove
    399:405:void renameTo(java.io.File,java.io.File,boolean) -> renameTo
    651:655:void trimToSize() -> trimToSize
com.bumptech.glide.disklrucache.DiskLruCache$$ExternalSyntheticApiModelOutline0 -> com.bumptech.glide.disklrucache.DiskLruCache$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.os.StrictMode$ThreadPolicy$Builder com.bumptech.glide.disklrucache.DiskLruCache$$InternalSyntheticApiModelOutline$1$09dee791f0d8e3792a0c159b1e8bd38cab0f33d4e1e1fbf8b0359e33b18d5a8e$0.m(android.os.StrictMode$ThreadPolicy$Builder) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.disklrucache.DiskLruCache$1 -> com.bumptech.glide.disklrucache.DiskLruCache$1:
    166:166:void <init>(com.bumptech.glide.disklrucache.DiskLruCache) -> <init>
    166:166:java.lang.Object call() -> call
    168:178:java.lang.Void call() -> call
com.bumptech.glide.disklrucache.DiskLruCache$DiskLruCacheThreadFactory -> com.bumptech.glide.disklrucache.DiskLruCache$DiskLruCacheThreadFactory:
    932:932:void <init>() -> <init>
    932:932:void <init>(com.bumptech.glide.disklrucache.DiskLruCache$1) -> <init>
    934:937:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.bumptech.glide.disklrucache.DiskLruCache$Editor -> com.bumptech.glide.disklrucache.DiskLruCache$Editor:
    759:759:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,com.bumptech.glide.disklrucache.DiskLruCache$Entry,com.bumptech.glide.disklrucache.DiskLruCache$1) -> <init>
    764:767:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,com.bumptech.glide.disklrucache.DiskLruCache$Entry) -> <init>
    842:843:void abort() -> abort
    846:852:void abortUnlessCommitted() -> abortUnlessCommitted
    759:759:com.bumptech.glide.disklrucache.DiskLruCache$Entry access$1500(com.bumptech.glide.disklrucache.DiskLruCache$Editor) -> access$1500
    759:759:boolean[] access$1600(com.bumptech.glide.disklrucache.DiskLruCache$Editor) -> access$1600
    833:835:void commit() -> commit
    799:809:java.io.File getFile(int) -> getFile
com.bumptech.glide.disklrucache.DiskLruCache$Entry -> com.bumptech.glide.disklrucache.DiskLruCache$Entry:
    855:855:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String,com.bumptech.glide.disklrucache.DiskLruCache$1) -> <init>
    874:890:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String) -> <init>
    855:855:long[] access$1100(com.bumptech.glide.disklrucache.DiskLruCache$Entry) -> access$1100
    855:855:java.lang.String access$1200(com.bumptech.glide.disklrucache.DiskLruCache$Entry) -> access$1200
    855:855:long access$1300(com.bumptech.glide.disklrucache.DiskLruCache$Entry) -> access$1300
    855:855:long access$1302(com.bumptech.glide.disklrucache.DiskLruCache$Entry,long) -> access$1302
    855:855:boolean access$700(com.bumptech.glide.disklrucache.DiskLruCache$Entry) -> access$700
    855:855:boolean access$702(com.bumptech.glide.disklrucache.DiskLruCache$Entry,boolean) -> access$702
    855:855:com.bumptech.glide.disklrucache.DiskLruCache$Editor access$800(com.bumptech.glide.disklrucache.DiskLruCache$Entry) -> access$800
    855:855:com.bumptech.glide.disklrucache.DiskLruCache$Editor access$802(com.bumptech.glide.disklrucache.DiskLruCache$Entry,com.bumptech.glide.disklrucache.DiskLruCache$Editor) -> access$802
    855:855:void access$900(com.bumptech.glide.disklrucache.DiskLruCache$Entry,java.lang.String[]) -> access$900
    920:920:java.io.File getCleanFile(int) -> getCleanFile
    924:924:java.io.File getDirtyFile(int) -> getDirtyFile
    893:897:java.lang.String getLengths() -> getLengths
    916:916:java.io.IOException invalidLengths(java.lang.String[]) -> invalidLengths
    902:913:void setLengths(java.lang.String[]) -> setLengths
com.bumptech.glide.disklrucache.DiskLruCache$Value -> com.bumptech.glide.disklrucache.DiskLruCache$Value:
    720:720:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String,long,java.io.File[],long[],com.bumptech.glide.disklrucache.DiskLruCache$1) -> <init>
    726:731:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String,long,java.io.File[],long[]) -> <init>
    743:743:java.io.File getFile(int) -> getFile
com.bumptech.glide.disklrucache.StrictLineReader -> com.bumptech.glide.disklrucache.StrictLineReader:
    72:73:void <init>(java.io.InputStream,java.nio.charset.Charset) -> <init>
    86:100:void <init>(java.io.InputStream,int,java.nio.charset.Charset) -> <init>
    45:45:java.nio.charset.Charset access$000(com.bumptech.glide.disklrucache.StrictLineReader) -> access$000
    109:115:void close() -> close
    188:194:void fillBuf() -> fillBuf
    180:180:boolean hasUnterminatedLine() -> hasUnterminatedLine
    126:176:java.lang.String readLine() -> readLine
com.bumptech.glide.disklrucache.StrictLineReader$1 -> com.bumptech.glide.disklrucache.StrictLineReader$1:
    148:148:void <init>(com.bumptech.glide.disklrucache.StrictLineReader,int) -> <init>
    151:155:java.lang.String toString() -> toString
com.bumptech.glide.disklrucache.Util -> com.bumptech.glide.disklrucache.Util:
    28:29:void <clinit>() -> <clinit>
    68:76:void closeQuietly(java.io.Closeable) -> closeQuietly
    53:65:void deleteContents(java.io.File) -> deleteContents
com.bumptech.glide.gifdecoder.GifFrame -> com.bumptech.glide.gifdecoder.GifFrame:
    13:13:void <init>() -> <init>
com.bumptech.glide.gifdecoder.GifHeader -> com.bumptech.glide.gifdecoder.GifHeader:
    15:51:void <init>() -> <init>
    54:54:int getHeight() -> getHeight
    62:62:int getNumFrames() -> getNumFrames
    70:70:int getStatus() -> getStatus
    58:58:int getWidth() -> getWidth
com.bumptech.glide.gifdecoder.GifHeaderParser -> com.bumptech.glide.gifdecoder.GifHeaderParser:
    21:125:void <init>() -> <init>
    146:148:void clear() -> clear
    513:513:boolean err() -> err
    159:174:com.bumptech.glide.gifdecoder.GifHeader parseHeader() -> parseHeader
    495:501:int read() -> read
    303:344:void readBitmap() -> readBitmap
    470:489:void readBlock() -> readBlock
    416:441:int[] readColorTable(int) -> readColorTable
    193:194:void readContents() -> readContents
    201:257:void readContents(int) -> readContents
    264:296:void readGraphicControlExt() -> readGraphicControlExt
    366:379:void readHeader() -> readHeader
    386:406:void readLSD() -> readLSD
    351:359:void readNetscapeExt() -> readNetscapeExt
    509:509:int readShort() -> readShort
    151:155:void reset() -> reset
    128:132:com.bumptech.glide.gifdecoder.GifHeaderParser setData(java.nio.ByteBuffer) -> setData
    460:464:void skip() -> skip
    449:452:void skipImageData() -> skipImageData
com.bumptech.glide.gifdecoder.StandardGifDecoder -> com.bumptech.glide.gifdecoder.StandardGifDecoder:
    63:63:void <clinit>() -> <clinit>
    132:134:void <init>(com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.gifdecoder.GifHeader,java.nio.ByteBuffer,int) -> <init>
    87:140:void <init>(com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider) -> <init>
    165:166:void advance() -> advance
    647:684:int averageColorsNear(int,int,int) -> averageColorsNear
    328:344:void clear() -> clear
    550:642:void copyCopyIntoScratchRobust(com.bumptech.glide.gifdecoder.GifFrame) -> copyCopyIntoScratchRobust
    503:547:void copyIntoScratchFast(com.bumptech.glide.gifdecoder.GifFrame) -> copyIntoScratchFast
    695:821:void decodeBitmapData(com.bumptech.glide.gifdecoder.GifFrame) -> decodeBitmapData
    228:228:int getByteSize() -> getByteSize
    193:193:int getCurrentFrameIndex() -> getCurrentFrameIndex
    155:155:java.nio.ByteBuffer getData() -> getData
    170:174:int getDelay(int) -> getDelay
    188:188:int getFrameCount() -> getFrameCount
    845:849:android.graphics.Bitmap getNextBitmap() -> getNextBitmap
    179:183:int getNextDelay() -> getNextDelay
    233:291:android.graphics.Bitmap getNextFrame() -> getNextFrame
    836:841:int readBlock() -> readBlock
    827:827:int readByte() -> readByte
    198:199:void resetFrameIndex() -> resetFrameIndex
    358:388:void setData(com.bumptech.glide.gifdecoder.GifHeader,java.nio.ByteBuffer,int) -> setData
    411:417:void setDefaultBitmapConfig(android.graphics.Bitmap$Config) -> setDefaultBitmapConfig
    425:499:android.graphics.Bitmap setPixels(com.bumptech.glide.gifdecoder.GifFrame,com.bumptech.glide.gifdecoder.GifFrame) -> setPixels
com.bumptech.glide.load.DataSource -> com.bumptech.glide.load.DataSource:
    4:17:void <clinit>() -> <clinit>
    4:4:void <init>(java.lang.String,int) -> <init>
    4:4:com.bumptech.glide.load.DataSource valueOf(java.lang.String) -> valueOf
    4:4:com.bumptech.glide.load.DataSource[] values() -> values
com.bumptech.glide.load.DecodeFormat -> com.bumptech.glide.load.DecodeFormat:
    12:43:void <clinit>() -> <clinit>
    12:12:void <init>(java.lang.String,int) -> <init>
    12:12:com.bumptech.glide.load.DecodeFormat valueOf(java.lang.String) -> valueOf
    12:12:com.bumptech.glide.load.DecodeFormat[] values() -> values
com.bumptech.glide.load.EncodeStrategy -> com.bumptech.glide.load.EncodeStrategy:
    6:17:void <clinit>() -> <clinit>
    6:6:void <init>(java.lang.String,int) -> <init>
    6:6:com.bumptech.glide.load.EncodeStrategy valueOf(java.lang.String) -> valueOf
    6:6:com.bumptech.glide.load.EncodeStrategy[] values() -> values
com.bumptech.glide.load.HttpException -> com.bumptech.glide.load.HttpException:
    22:23:void <init>(int) -> <init>
    35:36:void <init>(java.lang.String,int) -> <init>
    39:41:void <init>(java.lang.String,int,java.lang.Throwable) -> <init>
com.bumptech.glide.load.ImageHeaderParser$1 -> com.bumptech.glide.load.ImageHeaderParser$1:
    51:51:void <clinit>() -> <clinit>
com.bumptech.glide.load.ImageHeaderParser$ImageType -> com.bumptech.glide.load.ImageHeaderParser$ImageType:
    21:38:void <clinit>() -> <clinit>
    42:44:void <init>(java.lang.String,int,boolean) -> <init>
    47:47:boolean hasAlpha() -> hasAlpha
    51:57:boolean isWebp() -> isWebp
    21:21:com.bumptech.glide.load.ImageHeaderParser$ImageType valueOf(java.lang.String) -> valueOf
    21:21:com.bumptech.glide.load.ImageHeaderParser$ImageType[] values() -> values
com.bumptech.glide.load.ImageHeaderParserUtils -> com.bumptech.glide.load.ImageHeaderParserUtils:
    142:146:int getOrientation(java.util.List,java.nio.ByteBuffer,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> getOrientation
    166:176:int getOrientation(java.util.List,java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> getOrientation
    196:196:int getOrientation(java.util.List,com.bumptech.glide.load.data.ParcelFileDescriptorRewinder,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> getOrientation
    227:235:int getOrientationInternal(java.util.List,com.bumptech.glide.load.ImageHeaderParserUtils$OrientationReader) -> getOrientationInternal
    33:43:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.util.List,java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> getType
    62:66:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.util.List,java.nio.ByteBuffer) -> getType
    87:87:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.util.List,com.bumptech.glide.load.data.ParcelFileDescriptorRewinder,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> getType
    119:127:com.bumptech.glide.load.ImageHeaderParser$ImageType getTypeInternal(java.util.List,com.bumptech.glide.load.ImageHeaderParserUtils$TypeReader) -> getTypeInternal
com.bumptech.glide.load.ImageHeaderParserUtils$1 -> com.bumptech.glide.load.ImageHeaderParserUtils$1:
    45:45:void <init>(java.io.InputStream) -> <init>
    49:52:com.bumptech.glide.load.ImageHeaderParser$ImageType getTypeAndRewind(com.bumptech.glide.load.ImageHeaderParser) -> getTypeAndRewind
com.bumptech.glide.load.ImageHeaderParserUtils$2 -> com.bumptech.glide.load.ImageHeaderParserUtils$2:
    68:68:void <init>(java.nio.ByteBuffer) -> <init>
    72:75:com.bumptech.glide.load.ImageHeaderParser$ImageType getTypeAndRewind(com.bumptech.glide.load.ImageHeaderParser) -> getTypeAndRewind
com.bumptech.glide.load.ImageHeaderParserUtils$3 -> com.bumptech.glide.load.ImageHeaderParserUtils$3:
    89:89:void <init>(com.bumptech.glide.load.data.ParcelFileDescriptorRewinder,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    94:110:com.bumptech.glide.load.ImageHeaderParser$ImageType getTypeAndRewind(com.bumptech.glide.load.ImageHeaderParser) -> getTypeAndRewind
com.bumptech.glide.load.ImageHeaderParserUtils$4 -> com.bumptech.glide.load.ImageHeaderParserUtils$4:
    148:148:void <init>(java.nio.ByteBuffer,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    152:155:int getOrientationAndRewind(com.bumptech.glide.load.ImageHeaderParser) -> getOrientationAndRewind
com.bumptech.glide.load.ImageHeaderParserUtils$5 -> com.bumptech.glide.load.ImageHeaderParserUtils$5:
    178:178:void <init>(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    182:185:int getOrientationAndRewind(com.bumptech.glide.load.ImageHeaderParser) -> getOrientationAndRewind
com.bumptech.glide.load.ImageHeaderParserUtils$6 -> com.bumptech.glide.load.ImageHeaderParserUtils$6:
    198:198:void <init>(com.bumptech.glide.load.data.ParcelFileDescriptorRewinder,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    203:219:int getOrientationAndRewind(com.bumptech.glide.load.ImageHeaderParser) -> getOrientationAndRewind
com.bumptech.glide.load.Key -> com.bumptech.glide.load.Key:
    17:17:void <clinit>() -> <clinit>
com.bumptech.glide.load.Option -> com.bumptech.glide.load.Option:
    24:24:void <clinit>() -> <clinit>
    90:94:void <init>(java.lang.String,java.lang.Object,com.bumptech.glide.load.Option$CacheKeyUpdater) -> <init>
    86:86:com.bumptech.glide.load.Option disk(java.lang.String,java.lang.Object,com.bumptech.glide.load.Option$CacheKeyUpdater) -> disk
    138:138:com.bumptech.glide.load.Option$CacheKeyUpdater emptyUpdater() -> emptyUpdater
    123:127:boolean equals(java.lang.Object) -> equals
    101:101:java.lang.Object getDefaultValue() -> getDefaultValue
    115:118:byte[] getKeyBytes() -> getKeyBytes
    132:132:int hashCode() -> hashCode
    47:47:com.bumptech.glide.load.Option memory(java.lang.String) -> memory
    59:59:com.bumptech.glide.load.Option memory(java.lang.String,java.lang.Object) -> memory
    143:143:java.lang.String toString() -> toString
    110:111:void update(java.lang.Object,java.security.MessageDigest) -> update
com.bumptech.glide.load.Option$1 -> com.bumptech.glide.load.Option$1:
    25:25:void <init>() -> <init>
    30:30:void update(byte[],java.lang.Object,java.security.MessageDigest) -> update
com.bumptech.glide.load.Options -> com.bumptech.glide.load.Options:
    11:12:void <init>() -> <init>
    33:37:boolean equals(java.lang.Object) -> equals
    28:28:java.lang.Object get(com.bumptech.glide.load.Option) -> get
    42:42:int hashCode() -> hashCode
    15:16:void putAll(com.bumptech.glide.load.Options) -> putAll
    21:22:com.bumptech.glide.load.Options set(com.bumptech.glide.load.Option,java.lang.Object) -> set
    56:56:java.lang.String toString() -> toString
    47:52:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
    62:63:void updateDiskCacheKey(com.bumptech.glide.load.Option,java.lang.Object,java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.PreferredColorSpace -> com.bumptech.glide.load.PreferredColorSpace:
    31:35:void <clinit>() -> <clinit>
    31:31:void <init>(java.lang.String,int) -> <init>
    31:31:com.bumptech.glide.load.PreferredColorSpace valueOf(java.lang.String) -> valueOf
    31:31:com.bumptech.glide.load.PreferredColorSpace[] values() -> values
com.bumptech.glide.load.data.AssetFileDescriptorLocalUriFetcher -> com.bumptech.glide.load.data.AssetFileDescriptorLocalUriFetcher:
    14:15:void <init>(android.content.ContentResolver,android.net.Uri) -> <init>
    11:11:void close(java.lang.Object) -> close
    29:30:void close(android.content.res.AssetFileDescriptor) -> close
    35:35:java.lang.Class getDataClass() -> getDataClass
    11:11:java.lang.Object loadResource(android.net.Uri,android.content.ContentResolver) -> loadResource
    20:24:android.content.res.AssetFileDescriptor loadResource(android.net.Uri,android.content.ContentResolver) -> loadResource
com.bumptech.glide.load.data.AssetPathFetcher -> com.bumptech.glide.load.data.AssetPathFetcher:
    24:27:void <init>(android.content.res.AssetManager,java.lang.String) -> <init>
    57:57:void cancel() -> cancel
    44:52:void cleanup() -> cleanup
    62:62:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    32:40:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.data.BufferedOutputStream -> com.bumptech.glide.load.data.BufferedOutputStream:
    20:21:void <init>(java.io.OutputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    24:28:void <init>(java.io.OutputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,int) -> <init>
    88:93:void close() -> close
    68:70:void flush() -> flush
    73:77:void flushBuffer() -> flushBuffer
    80:83:void maybeFlushBuffer() -> maybeFlushBuffer
    96:100:void release() -> release
    32:34:void write(int) -> write
    38:39:void write(byte[]) -> write
    43:64:void write(byte[],int,int) -> write
com.bumptech.glide.load.data.DataRewinderRegistry -> com.bumptech.glide.load.data.DataRewinderRegistry:
    14:14:void <clinit>() -> <clinit>
    12:13:void <init>() -> <init>
    35:50:com.bumptech.glide.load.data.DataRewinder build(java.lang.Object) -> build
    29:31:void register(com.bumptech.glide.load.data.DataRewinder$Factory) -> register
com.bumptech.glide.load.data.DataRewinderRegistry$1 -> com.bumptech.glide.load.data.DataRewinderRegistry$1:
    15:15:void <init>() -> <init>
    19:19:com.bumptech.glide.load.data.DataRewinder build(java.lang.Object) -> build
    25:25:java.lang.Class getDataClass() -> getDataClass
com.bumptech.glide.load.data.DataRewinderRegistry$DefaultRewinder -> com.bumptech.glide.load.data.DataRewinderRegistry$DefaultRewinder:
    56:58:void <init>(java.lang.Object) -> <init>
    69:69:void cleanup() -> cleanup
    63:63:java.lang.Object rewindAndGet() -> rewindAndGet
com.bumptech.glide.load.data.ExifOrientationStream -> com.bumptech.glide.load.data.ExifOrientationStream:
    19:64:void <clinit>() -> <clinit>
    69:74:void <init>(java.io.InputStream,int) -> <init>
    85:85:void mark(int) -> mark
    78:78:boolean markSupported() -> markSupported
    91:101:int read() -> read
    107:121:int read(byte[],int,int) -> read
    138:138:void reset() -> reset
    126:131:long skip(long) -> skip
com.bumptech.glide.load.data.FileDescriptorAssetPathFetcher -> com.bumptech.glide.load.data.FileDescriptorAssetPathFetcher:
    11:12:void <init>(android.content.res.AssetManager,java.lang.String) -> <init>
    9:9:void close(java.lang.Object) -> close
    22:23:void close(android.content.res.AssetFileDescriptor) -> close
    28:28:java.lang.Class getDataClass() -> getDataClass
    9:9:java.lang.Object loadResource(android.content.res.AssetManager,java.lang.String) -> loadResource
    17:17:android.content.res.AssetFileDescriptor loadResource(android.content.res.AssetManager,java.lang.String) -> loadResource
com.bumptech.glide.load.data.FileDescriptorLocalUriFetcher -> com.bumptech.glide.load.data.FileDescriptorLocalUriFetcher:
    14:15:void <init>(android.content.ContentResolver,android.net.Uri) -> <init>
    12:12:void close(java.lang.Object) -> close
    29:30:void close(android.os.ParcelFileDescriptor) -> close
    35:35:java.lang.Class getDataClass() -> getDataClass
    12:12:java.lang.Object loadResource(android.net.Uri,android.content.ContentResolver) -> loadResource
    20:24:android.os.ParcelFileDescriptor loadResource(android.net.Uri,android.content.ContentResolver) -> loadResource
com.bumptech.glide.load.data.HttpUrlFetcher -> com.bumptech.glide.load.data.HttpUrlFetcher:
    29:29:void <clinit>() -> <clinit>
    43:44:void <init>(com.bumptech.glide.load.model.GlideUrl,int) -> <init>
    47:51:void <init>(com.bumptech.glide.load.model.GlideUrl,int,com.bumptech.glide.load.data.HttpUrlFetcher$HttpUrlConnectionFactory) -> <init>
    149:163:java.net.HttpURLConnection buildAndConfigureConnection(java.net.URL,java.util.Map) -> buildAndConfigureConnection
    214:215:void cancel() -> cancel
    197:208:void cleanup() -> cleanup
    220:220:java.lang.Class getDataClass() -> getDataClass
    226:226:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    136:142:int getHttpStatusCodeOrInvalid(java.net.HttpURLConnection) -> getHttpStatusCodeOrInvalid
    179:192:java.io.InputStream getStreamForSuccessfulRequest(java.net.HttpURLConnection) -> getStreamForSuccessfulRequest
    168:168:boolean isHttpOk(int) -> isHttpOk
    173:173:boolean isHttpRedirect(int) -> isHttpRedirect
    56:70:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
    74:129:java.io.InputStream loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map) -> loadDataWithRedirects
com.bumptech.glide.load.data.HttpUrlFetcher$DefaultHttpUrlConnectionFactory -> com.bumptech.glide.load.data.HttpUrlFetcher$DefaultHttpUrlConnectionFactory:
    236:236:void <init>() -> <init>
    240:240:java.net.HttpURLConnection build(java.net.URL) -> build
com.bumptech.glide.load.data.InputStreamRewinder -> com.bumptech.glide.load.data.InputStreamRewinder:
    21:26:void <init>(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    37:38:void cleanup() -> cleanup
    41:42:void fixMarkLimits() -> fixMarkLimits
    14:14:java.lang.Object rewindAndGet() -> rewindAndGet
    31:32:java.io.InputStream rewindAndGet() -> rewindAndGet
com.bumptech.glide.load.data.InputStreamRewinder$Factory -> com.bumptech.glide.load.data.InputStreamRewinder$Factory:
    51:53:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    48:48:com.bumptech.glide.load.data.DataRewinder build(java.lang.Object) -> build
    58:58:com.bumptech.glide.load.data.DataRewinder build(java.io.InputStream) -> build
    64:64:java.lang.Class getDataClass() -> getDataClass
com.bumptech.glide.load.data.LocalUriFetcher -> com.bumptech.glide.load.data.LocalUriFetcher:
    35:38:void <init>(android.content.ContentResolver,android.net.Uri) -> <init>
    68:68:void cancel() -> cancel
    56:63:void cleanup() -> cleanup
    73:73:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    44:52:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder -> com.bumptech.glide.load.data.ParcelFileDescriptorRewinder:
    27:29:void <init>(android.os.ParcelFileDescriptor) -> <init>
    41:41:void cleanup() -> cleanup
    22:23:boolean isSupported() -> isSupported
    16:16:java.lang.Object rewindAndGet() -> rewindAndGet
    35:35:android.os.ParcelFileDescriptor rewindAndGet() -> rewindAndGet
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$Factory -> com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$Factory:
    47:47:void <init>() -> <init>
    46:46:com.bumptech.glide.load.data.DataRewinder build(java.lang.Object) -> build
    53:53:com.bumptech.glide.load.data.DataRewinder build(android.os.ParcelFileDescriptor) -> build
    59:59:java.lang.Class getDataClass() -> getDataClass
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder -> com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder:
    72:74:void <init>(android.os.ParcelFileDescriptor) -> <init>
    78:82:android.os.ParcelFileDescriptor rewind() -> rewind
com.bumptech.glide.load.data.StreamAssetPathFetcher -> com.bumptech.glide.load.data.StreamAssetPathFetcher:
    11:12:void <init>(android.content.res.AssetManager,java.lang.String) -> <init>
    9:9:void close(java.lang.Object) -> close
    21:22:void close(java.io.InputStream) -> close
    27:27:java.lang.Class getDataClass() -> getDataClass
    9:9:java.lang.Object loadResource(android.content.res.AssetManager,java.lang.String) -> loadResource
    16:16:java.io.InputStream loadResource(android.content.res.AssetManager,java.lang.String) -> loadResource
com.bumptech.glide.load.data.StreamLocalUriFetcher -> com.bumptech.glide.load.data.StreamLocalUriFetcher:
    34:41:void <clinit>() -> <clinit>
    44:45:void <init>(android.content.ContentResolver,android.net.Uri) -> <init>
    13:13:void close(java.lang.Object) -> close
    85:86:void close(java.io.InputStream) -> close
    91:91:java.lang.Class getDataClass() -> getDataClass
    13:13:java.lang.Object loadResource(android.net.Uri,android.content.ContentResolver) -> loadResource
    50:54:java.io.InputStream loadResource(android.net.Uri,android.content.ContentResolver) -> loadResource
    59:74:java.io.InputStream loadResourceFromUri(android.net.Uri,android.content.ContentResolver) -> loadResourceFromUri
    79:79:java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri) -> openContactPhotoInputStream
com.bumptech.glide.load.data.mediastore.FileService -> com.bumptech.glide.load.data.mediastore.FileService:
    5:5:void <init>() -> <init>
    7:7:boolean exists(java.io.File) -> exists
    15:15:java.io.File get(java.lang.String) -> get
    11:11:long length(java.io.File) -> length
com.bumptech.glide.load.data.mediastore.MediaStoreUtil -> com.bumptech.glide.load.data.mediastore.MediaStoreUtil:
    32:32:boolean isMediaStoreImageUri(android.net.Uri) -> isMediaStoreImageUri
    18:20:boolean isMediaStoreUri(android.net.Uri) -> isMediaStoreUri
    28:28:boolean isMediaStoreVideoUri(android.net.Uri) -> isMediaStoreVideoUri
    36:36:boolean isThumbnailSize(int,int) -> isThumbnailSize
    24:24:boolean isVideoUri(android.net.Uri) -> isVideoUri
com.bumptech.glide.load.data.mediastore.ThumbFetcher -> com.bumptech.glide.load.data.mediastore.ThumbFetcher:
    52:55:void <init>(android.net.Uri,com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener) -> <init>
    41:48:com.bumptech.glide.load.data.mediastore.ThumbFetcher build(android.content.Context,android.net.Uri,com.bumptech.glide.load.data.mediastore.ThumbnailQuery) -> build
    33:33:com.bumptech.glide.load.data.mediastore.ThumbFetcher buildImageFetcher(android.content.Context,android.net.Uri) -> buildImageFetcher
    37:37:com.bumptech.glide.load.data.mediastore.ThumbFetcher buildVideoFetcher(android.content.Context,android.net.Uri) -> buildVideoFetcher
    99:99:void cancel() -> cancel
    87:94:void cleanup() -> cleanup
    104:104:java.lang.Class getDataClass() -> getDataClass
    110:110:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    61:69:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
    72:82:java.io.InputStream openThumbInputStream() -> openThumbInputStream
com.bumptech.glide.load.data.mediastore.ThumbFetcher$ImageThumbnailQuery -> com.bumptech.glide.load.data.mediastore.ThumbFetcher$ImageThumbnailQuery:
    150:150:void <clinit>() -> <clinit>
    146:148:void <init>(android.content.ContentResolver) -> <init>
    163:164:android.database.Cursor query(android.net.Uri) -> query
com.bumptech.glide.load.data.mediastore.ThumbFetcher$VideoThumbnailQuery -> com.bumptech.glide.load.data.mediastore.ThumbFetcher$VideoThumbnailQuery:
    121:121:void <clinit>() -> <clinit>
    117:119:void <init>(android.content.ContentResolver) -> <init>
    132:133:android.database.Cursor query(android.net.Uri) -> query
com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener -> com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener:
    21:21:void <clinit>() -> <clinit>
    34:35:void <init>(java.util.List,com.bumptech.glide.load.data.mediastore.ThumbnailQuery,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,android.content.ContentResolver) -> <init>
    42:48:void <init>(java.util.List,com.bumptech.glide.load.data.mediastore.FileService,com.bumptech.glide.load.data.mediastore.ThumbnailQuery,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,android.content.ContentResolver) -> <init>
    51:69:int getOrientation(android.net.Uri) -> getOrientation
    97:114:java.lang.String getPath(android.net.Uri) -> getPath
    118:118:boolean isValid(java.io.File) -> isValid
    73:91:java.io.InputStream open(android.net.Uri) -> open
com.bumptech.glide.load.engine.ActiveResources -> com.bumptech.glide.load.engine.ActiveResources:
    32:49:void <init>(boolean) -> <init>
    23:64:void <init>(boolean,java.util.concurrent.Executor) -> <init>
    74:83:void activate(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource) -> activate
    126:141:void cleanReferenceQueue() -> cleanReferenceQueue
    109:121:void cleanupActiveReference(com.bumptech.glide.load.engine.ActiveResources$ResourceWeakReference) -> cleanupActiveReference
    85:90:void deactivate(com.bumptech.glide.load.Key) -> deactivate
    93:103:com.bumptech.glide.load.engine.EngineResource get(com.bumptech.glide.load.Key) -> get
    67:72:void setListener(com.bumptech.glide.load.engine.EngineResource$ResourceListener) -> setListener
com.bumptech.glide.load.engine.ActiveResources$1 -> com.bumptech.glide.load.engine.ActiveResources$1:
    35:35:void <init>() -> <init>
    38:38:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.bumptech.glide.load.engine.ActiveResources$1$1 -> com.bumptech.glide.load.engine.ActiveResources$1$1:
    39:39:void <init>(com.bumptech.glide.load.engine.ActiveResources$1,java.lang.Runnable) -> <init>
    42:44:void run() -> run
com.bumptech.glide.load.engine.ActiveResources$2 -> com.bumptech.glide.load.engine.ActiveResources$2:
    58:58:void <init>(com.bumptech.glide.load.engine.ActiveResources) -> <init>
    61:62:void run() -> run
com.bumptech.glide.load.engine.ActiveResources$ResourceWeakReference -> com.bumptech.glide.load.engine.ActiveResources$ResourceWeakReference:
    184:191:void <init>(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource,java.lang.ref.ReferenceQueue,boolean) -> <init>
    194:196:void reset() -> reset
com.bumptech.glide.load.engine.CallbackException -> com.bumptech.glide.load.engine.CallbackException:
    13:14:void <init>(java.lang.Throwable) -> <init>
com.bumptech.glide.load.engine.DataCacheGenerator -> com.bumptech.glide.load.engine.DataCacheGenerator:
    34:35:void <init>(com.bumptech.glide.load.engine.DecodeHelper,com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback) -> <init>
    23:43:void <init>(java.util.List,com.bumptech.glide.load.engine.DecodeHelper,com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback) -> <init>
    92:96:void cancel() -> cancel
    87:87:boolean hasNextModelLoader() -> hasNextModelLoader
    100:101:void onDataReady(java.lang.Object) -> onDataReady
    105:106:void onLoadFailed(java.lang.Exception) -> onLoadFailed
    47:83:boolean startNext() -> startNext
com.bumptech.glide.load.engine.DataCacheKey -> com.bumptech.glide.load.engine.DataCacheKey:
    13:16:void <init>(com.bumptech.glide.load.Key,com.bumptech.glide.load.Key) -> <init>
    24:28:boolean equals(java.lang.Object) -> equals
    33:35:int hashCode() -> hashCode
    40:40:java.lang.String toString() -> toString
    45:47:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.engine.DataCacheWriter -> com.bumptech.glide.load.engine.DataCacheWriter:
    22:26:void <init>(com.bumptech.glide.load.Encoder,java.lang.Object,com.bumptech.glide.load.Options) -> <init>
    30:30:boolean write(java.io.File) -> write
com.bumptech.glide.load.engine.DecodeHelper -> com.bumptech.glide.load.engine.DecodeHelper:
    24:27:void <init>() -> <init>
    79:93:void clear() -> clear
    128:128:com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool getArrayPool() -> getArrayPool
    226:243:java.util.List getCacheKeys() -> getCacheKeys
    96:96:com.bumptech.glide.load.engine.cache.DiskCache getDiskCache() -> getDiskCache
    100:100:com.bumptech.glide.load.engine.DiskCacheStrategy getDiskCacheStrategy() -> getDiskCacheStrategy
    124:124:int getHeight() -> getHeight
    209:222:java.util.List getLoadData() -> getLoadData
    150:150:com.bumptech.glide.load.engine.LoadPath getLoadPath(java.lang.Class) -> getLoadPath
    136:136:java.lang.Class getModelClass() -> getModelClass
    193:193:java.util.List getModelLoaders(java.io.File) -> getModelLoaders
    112:112:com.bumptech.glide.load.Options getOptions() -> getOptions
    108:108:com.bumptech.glide.Priority getPriority() -> getPriority
    140:142:java.util.List getRegisteredResourceClasses() -> getRegisteredResourceClasses
    188:188:com.bumptech.glide.load.ResourceEncoder getResultEncoder(com.bumptech.glide.load.engine.Resource) -> getResultEncoder
    104:104:com.bumptech.glide.load.data.DataRewinder getRewinder(java.lang.Object) -> getRewinder
    116:116:com.bumptech.glide.load.Key getSignature() -> getSignature
    247:247:com.bumptech.glide.load.Encoder getSourceEncoder(java.lang.Object) -> getSourceEncoder
    132:132:java.lang.Class getTranscodeClass() -> getTranscodeClass
    159:180:com.bumptech.glide.load.Transformation getTransformation(java.lang.Class) -> getTransformation
    120:120:int getWidth() -> getWidth
    146:146:boolean hasLoadPath(java.lang.Class) -> hasLoadPath
    62:76:void init(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.Key,int,int,com.bumptech.glide.load.engine.DiskCacheStrategy,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.Options,java.util.Map,boolean,boolean,com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider) -> init
    184:184:boolean isResourceEncoderAvailable(com.bumptech.glide.load.engine.Resource) -> isResourceEncoderAvailable
    154:154:boolean isScaleOnlyOrNoTransform() -> isScaleOnlyOrNoTransform
    197:205:boolean isSourceKey(com.bumptech.glide.load.Key) -> isSourceKey
com.bumptech.glide.load.engine.DecodeJob -> com.bumptech.glide.load.engine.DecodeJob:
    45:84:void <init>(com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider,androidx.core.util.Pools$Pool) -> <init>
    212:217:void cancel() -> cancel
    38:38:int compareTo(java.lang.Object) -> compareTo
    200:204:int compareTo(com.bumptech.glide.load.engine.DecodeJob) -> compareTo
    485:496:com.bumptech.glide.load.engine.Resource decodeFromData(com.bumptech.glide.load.data.DataFetcher,java.lang.Object,com.bumptech.glide.load.DataSource) -> decodeFromData
    502:503:com.bumptech.glide.load.engine.Resource decodeFromFetcher(java.lang.Object,com.bumptech.glide.load.DataSource) -> decodeFromFetcher
    421:444:void decodeFromRetrievedData() -> decodeFromRetrievedData
    291:301:com.bumptech.glide.load.engine.DataFetcherGenerator getNextGenerator() -> getNextGenerator
    352:368:com.bumptech.glide.load.engine.DecodeJob$Stage getNextStage(com.bumptech.glide.load.engine.DecodeJob$Stage) -> getNextStage
    508:529:com.bumptech.glide.load.Options getOptionsWithHardwareConfig(com.bumptech.glide.load.DataSource) -> getOptionsWithHardwareConfig
    208:208:int getPriority() -> getPriority
    566:566:com.bumptech.glide.util.pool.StateVerifier getVerifier() -> getVerifier
    104:132:com.bumptech.glide.load.engine.DecodeJob init(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.engine.EngineKey,com.bumptech.glide.load.Key,int,int,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DiskCacheStrategy,java.util.Map,boolean,boolean,boolean,com.bumptech.glide.load.Options,com.bumptech.glide.load.engine.DecodeJob$Callback,int) -> init
    547:548:void logWithTimeAndKey(java.lang.String,long) -> logWithTimeAndKey
    551:561:void logWithTimeAndKey(java.lang.String,long,java.lang.String) -> logWithTimeAndKey
    338:340:void notifyComplete(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource,boolean) -> notifyComplete
    448:480:void notifyEncodeAndRelease(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource,boolean) -> notifyEncodeAndRelease
    330:334:void notifyFailed() -> notifyFailed
    409:418:void onDataFetcherFailed(com.bumptech.glide.load.Key,java.lang.Exception,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.DataSource) -> onDataFetcherFailed
    387:404:void onDataFetcherReady(com.bumptech.glide.load.Key,java.lang.Object,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.Key) -> onDataFetcherReady
    161:164:void onEncodeComplete() -> onEncodeComplete
    168:171:void onLoadFailed() -> onLoadFailed
    573:627:com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.DataSource,com.bumptech.glide.load.engine.Resource) -> onResourceDecoded
    151:154:void release(boolean) -> release
    174:196:void releaseInternal() -> releaseInternal
    373:375:void reschedule(com.bumptech.glide.load.engine.DecodeJob$RunReason) -> reschedule
    381:382:void reschedule() -> reschedule
    226:270:void run() -> run
    306:327:void runGenerators() -> runGenerators
    535:543:com.bumptech.glide.load.engine.Resource runLoadPath(java.lang.Object,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.engine.LoadPath) -> runLoadPath
    273:288:void runWrapped() -> runWrapped
    343:349:void setNotifiedOrThrow() -> setNotifiedOrThrow
    140:141:boolean willDecodeFromCache() -> willDecodeFromCache
com.bumptech.glide.load.engine.DecodeJob$1 -> com.bumptech.glide.load.engine.DecodeJob$1:
    273:603:void <clinit>() -> <clinit>
com.bumptech.glide.load.engine.DecodeJob$DecodeCallback -> com.bumptech.glide.load.engine.DecodeJob$DecodeCallback:
    635:637:void <init>(com.bumptech.glide.load.engine.DecodeJob,com.bumptech.glide.load.DataSource) -> <init>
    642:642:com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.engine.Resource) -> onResourceDecoded
com.bumptech.glide.load.engine.DecodeJob$DeferredEncodeManager -> com.bumptech.glide.load.engine.DecodeJob$DeferredEncodeManager:
    693:693:void <init>() -> <init>
    720:723:void clear() -> clear
    704:713:void encode(com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider,com.bumptech.glide.load.Options) -> encode
    716:716:boolean hasResourceToEncode() -> hasResourceToEncode
    698:701:void init(com.bumptech.glide.load.Key,com.bumptech.glide.load.ResourceEncoder,com.bumptech.glide.load.engine.LockedResource) -> init
com.bumptech.glide.load.engine.DecodeJob$ReleaseManager -> com.bumptech.glide.load.engine.DecodeJob$ReleaseManager:
    655:655:void <init>() -> <init>
    679:679:boolean isComplete(boolean) -> isComplete
    662:664:boolean onEncodeComplete() -> onEncodeComplete
    667:669:boolean onFailed() -> onFailed
    657:659:boolean release(boolean) -> release
    672:676:void reset() -> reset
com.bumptech.glide.load.engine.DecodeJob$RunReason -> com.bumptech.glide.load.engine.DecodeJob$RunReason:
    741:750:void <clinit>() -> <clinit>
    741:741:void <init>(java.lang.String,int) -> <init>
    741:741:com.bumptech.glide.load.engine.DecodeJob$RunReason valueOf(java.lang.String) -> valueOf
    741:741:com.bumptech.glide.load.engine.DecodeJob$RunReason[] values() -> values
com.bumptech.glide.load.engine.DecodeJob$Stage -> com.bumptech.glide.load.engine.DecodeJob$Stage:
    754:766:void <clinit>() -> <clinit>
    754:754:void <init>(java.lang.String,int) -> <init>
    754:754:com.bumptech.glide.load.engine.DecodeJob$Stage valueOf(java.lang.String) -> valueOf
    754:754:com.bumptech.glide.load.engine.DecodeJob$Stage[] values() -> values
com.bumptech.glide.load.engine.DecodePath -> com.bumptech.glide.load.engine.DecodePath:
    37:50:void <init>(java.lang.Class,java.lang.Class,java.lang.Class,java.util.List,com.bumptech.glide.load.resource.transcode.ResourceTranscoder,androidx.core.util.Pools$Pool) -> <init>
    59:61:com.bumptech.glide.load.engine.Resource decode(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options,com.bumptech.glide.load.engine.DecodePath$DecodeCallback) -> decode
    68:73:com.bumptech.glide.load.engine.Resource decodeResource(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options) -> decodeResource
    84:111:com.bumptech.glide.load.engine.Resource decodeResourceWithList(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options,java.util.List) -> decodeResourceWithList
    116:116:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.DiskCacheStrategy -> com.bumptech.glide.load.engine.DiskCacheStrategy:
    13:120:void <clinit>() -> <clinit>
    7:7:void <init>() -> <init>
com.bumptech.glide.load.engine.DiskCacheStrategy$1 -> com.bumptech.glide.load.engine.DiskCacheStrategy$1:
    14:14:void <init>() -> <init>
    34:34:boolean decodeCachedData() -> decodeCachedData
    29:29:boolean decodeCachedResource() -> decodeCachedResource
    17:17:boolean isDataCacheable(com.bumptech.glide.load.DataSource) -> isDataCacheable
    23:23:boolean isResourceCacheable(boolean,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.EncodeStrategy) -> isResourceCacheable
com.bumptech.glide.load.engine.DiskCacheStrategy$2 -> com.bumptech.glide.load.engine.DiskCacheStrategy$2:
    40:40:void <init>() -> <init>
    59:59:boolean decodeCachedData() -> decodeCachedData
    54:54:boolean decodeCachedResource() -> decodeCachedResource
    43:43:boolean isDataCacheable(com.bumptech.glide.load.DataSource) -> isDataCacheable
    49:49:boolean isResourceCacheable(boolean,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.EncodeStrategy) -> isResourceCacheable
com.bumptech.glide.load.engine.DiskCacheStrategy$3 -> com.bumptech.glide.load.engine.DiskCacheStrategy$3:
    65:65:void <init>() -> <init>
    84:84:boolean decodeCachedData() -> decodeCachedData
    79:79:boolean decodeCachedResource() -> decodeCachedResource
    68:68:boolean isDataCacheable(com.bumptech.glide.load.DataSource) -> isDataCacheable
    74:74:boolean isResourceCacheable(boolean,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.EncodeStrategy) -> isResourceCacheable
com.bumptech.glide.load.engine.DiskCacheStrategy$4 -> com.bumptech.glide.load.engine.DiskCacheStrategy$4:
    90:90:void <init>() -> <init>
    110:110:boolean decodeCachedData() -> decodeCachedData
    105:105:boolean decodeCachedResource() -> decodeCachedResource
    93:93:boolean isDataCacheable(com.bumptech.glide.load.DataSource) -> isDataCacheable
    99:99:boolean isResourceCacheable(boolean,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.EncodeStrategy) -> isResourceCacheable
com.bumptech.glide.load.engine.DiskCacheStrategy$5 -> com.bumptech.glide.load.engine.DiskCacheStrategy$5:
    121:121:void <init>() -> <init>
    142:142:boolean decodeCachedData() -> decodeCachedData
    137:137:boolean decodeCachedResource() -> decodeCachedResource
    124:124:boolean isDataCacheable(com.bumptech.glide.load.DataSource) -> isDataCacheable
    130:130:boolean isResourceCacheable(boolean,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.EncodeStrategy) -> isResourceCacheable
com.bumptech.glide.load.engine.Engine -> com.bumptech.glide.load.engine.Engine:
    35:35:void <clinit>() -> <clinit>
    53:67:void <init>(com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.cache.DiskCache$Factory,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,boolean) -> <init>
    83:126:void <init>(com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.cache.DiskCache$Factory,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.Jobs,com.bumptech.glide.load.engine.EngineKeyFactory,com.bumptech.glide.load.engine.ActiveResources,com.bumptech.glide.load.engine.Engine$EngineJobFactory,com.bumptech.glide.load.engine.Engine$DecodeJobFactory,com.bumptech.glide.load.engine.ResourceRecycler,boolean) -> <init>
    345:358:com.bumptech.glide.load.engine.EngineResource getEngineResourceFromCache(com.bumptech.glide.load.Key) -> getEngineResourceFromCache
    175:222:com.bumptech.glide.load.engine.Engine$LoadStatus load(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.Key,int,int,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DiskCacheStrategy,java.util.Map,boolean,boolean,com.bumptech.glide.load.Options,boolean,boolean,boolean,boolean,com.bumptech.glide.request.ResourceCallback,java.util.concurrent.Executor) -> load
    327:332:com.bumptech.glide.load.engine.EngineResource loadFromActiveResources(com.bumptech.glide.load.Key) -> loadFromActiveResources
    336:341:com.bumptech.glide.load.engine.EngineResource loadFromCache(com.bumptech.glide.load.Key) -> loadFromCache
    298:318:com.bumptech.glide.load.engine.EngineResource loadFromMemory(com.bumptech.glide.load.engine.EngineKey,boolean,long) -> loadFromMemory
    322:323:void logWithTimeAndKey(java.lang.String,long,com.bumptech.glide.load.Key) -> logWithTimeAndKey
    382:384:void onEngineJobCancelled(com.bumptech.glide.load.engine.EngineJob,com.bumptech.glide.load.Key) -> onEngineJobCancelled
    373:379:void onEngineJobComplete(com.bumptech.glide.load.engine.EngineJob,com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource) -> onEngineJobComplete
    395:401:void onResourceReleased(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource) -> onResourceReleased
    390:391:void onResourceRemoved(com.bumptech.glide.load.engine.Resource) -> onResourceRemoved
    362:367:void release(com.bumptech.glide.load.engine.Resource) -> release
    248:292:com.bumptech.glide.load.engine.Engine$LoadStatus waitForExistingOrStartNewJob(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.Key,int,int,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DiskCacheStrategy,java.util.Map,boolean,boolean,com.bumptech.glide.load.Options,boolean,boolean,boolean,boolean,com.bumptech.glide.request.ResourceCallback,java.util.concurrent.Executor,com.bumptech.glide.load.engine.EngineKey,long) -> waitForExistingOrStartNewJob
com.bumptech.glide.load.engine.Engine$DecodeJobFactory -> com.bumptech.glide.load.engine.Engine$DecodeJobFactory:
    476:491:void <init>(com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider) -> <init>
    511:512:com.bumptech.glide.load.engine.DecodeJob build(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.engine.EngineKey,com.bumptech.glide.load.Key,int,int,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DiskCacheStrategy,java.util.Map,boolean,boolean,boolean,com.bumptech.glide.load.Options,com.bumptech.glide.load.engine.DecodeJob$Callback) -> build
com.bumptech.glide.load.engine.Engine$DecodeJobFactory$1 -> com.bumptech.glide.load.engine.Engine$DecodeJobFactory$1:
    480:480:void <init>(com.bumptech.glide.load.engine.Engine$DecodeJobFactory) -> <init>
    480:480:java.lang.Object create() -> create
    483:483:com.bumptech.glide.load.engine.DecodeJob create() -> create
com.bumptech.glide.load.engine.Engine$EngineJobFactory -> com.bumptech.glide.load.engine.Engine$EngineJobFactory:
    542:573:void <init>(com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.EngineJobListener,com.bumptech.glide.load.engine.EngineResource$ResourceListener) -> <init>
    590:591:com.bumptech.glide.load.engine.EngineJob build(com.bumptech.glide.load.Key,boolean,boolean,boolean,boolean) -> build
com.bumptech.glide.load.engine.Engine$EngineJobFactory$1 -> com.bumptech.glide.load.engine.Engine$EngineJobFactory$1:
    546:546:void <init>(com.bumptech.glide.load.engine.Engine$EngineJobFactory) -> <init>
    546:546:java.lang.Object create() -> create
    549:549:com.bumptech.glide.load.engine.EngineJob create() -> create
com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider -> com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider:
    444:446:void <init>(com.bumptech.glide.load.engine.cache.DiskCache$Factory) -> <init>
    458:468:com.bumptech.glide.load.engine.cache.DiskCache getDiskCache() -> getDiskCache
com.bumptech.glide.load.engine.Engine$LoadStatus -> com.bumptech.glide.load.engine.Engine$LoadStatus:
    423:426:void <init>(com.bumptech.glide.load.engine.Engine,com.bumptech.glide.request.ResourceCallback,com.bumptech.glide.load.engine.EngineJob) -> <init>
    433:436:void cancel() -> cancel
com.bumptech.glide.load.engine.EngineJob -> com.bumptech.glide.load.engine.EngineJob:
    28:28:void <clinit>() -> <clinit>
    82:91:void <init>(com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.EngineJobListener,com.bumptech.glide.load.engine.EngineResource$ResourceListener,androidx.core.util.Pools$Pool) -> <init>
    30:111:void <init>(com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.EngineJobListener,com.bumptech.glide.load.engine.EngineResource$ResourceListener,androidx.core.util.Pools$Pool,com.bumptech.glide.load.engine.EngineJob$EngineResourceFactory) -> <init>
    135:149:void addCallback(com.bumptech.glide.request.ResourceCallback,java.util.concurrent.Executor) -> addCallback
    173:177:void callCallbackOnLoadFailed(com.bumptech.glide.request.ResourceCallback) -> callCallbackOnLoadFailed
    159:163:void callCallbackOnResourceReady(com.bumptech.glide.request.ResourceCallback) -> callCallbackOnResourceReady
    203:210:void cancel() -> cancel
    279:295:void decrementPendingCallbacks() -> decrementPendingCallbacks
    196:198:com.bumptech.glide.load.engine.executor.GlideExecutor getActiveSourceExecutor() -> getActiveSourceExecutor
    384:384:com.bumptech.glide.util.pool.StateVerifier getVerifier() -> getVerifier
    269:274:void incrementPendingCallbacks(int) -> incrementPendingCallbacks
    119:125:com.bumptech.glide.load.engine.EngineJob init(com.bumptech.glide.load.Key,boolean,boolean,boolean,boolean) -> init
    218:218:boolean isDone() -> isDone
    353:379:void notifyCallbacksOfException() -> notifyCallbacksOfException
    233:265:void notifyCallbacksOfResult() -> notifyCallbacksOfResult
    329:333:void onLoadFailed(com.bumptech.glide.load.engine.GlideException) -> onLoadFailed
    319:325:void onResourceReady(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource,boolean) -> onResourceReady
    192:192:boolean onlyRetrieveFromCache() -> onlyRetrieveFromCache
    297:314:void release() -> release
    179:189:void removeCallback(com.bumptech.glide.request.ResourceCallback) -> removeCallback
    339:340:void reschedule(com.bumptech.glide.load.engine.DecodeJob) -> reschedule
    128:133:void start(com.bumptech.glide.load.engine.DecodeJob) -> start
com.bumptech.glide.load.engine.EngineJob$CallLoadFailed -> com.bumptech.glide.load.engine.EngineJob$CallLoadFailed:
    391:393:void <init>(com.bumptech.glide.load.engine.EngineJob,com.bumptech.glide.request.ResourceCallback) -> <init>
    399:408:void run() -> run
com.bumptech.glide.load.engine.EngineJob$CallResourceReady -> com.bumptech.glide.load.engine.EngineJob$CallResourceReady:
    415:417:void <init>(com.bumptech.glide.load.engine.EngineJob,com.bumptech.glide.request.ResourceCallback) -> <init>
    423:434:void run() -> run
com.bumptech.glide.load.engine.EngineJob$EngineResourceFactory -> com.bumptech.glide.load.engine.EngineJob$EngineResourceFactory:
    513:513:void <init>() -> <init>
    516:516:com.bumptech.glide.load.engine.EngineResource build(com.bumptech.glide.load.engine.Resource,boolean,com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource$ResourceListener) -> build
com.bumptech.glide.load.engine.EngineJob$ResourceCallbackAndExecutor -> com.bumptech.glide.load.engine.EngineJob$ResourceCallbackAndExecutor:
    492:495:void <init>(com.bumptech.glide.request.ResourceCallback,java.util.concurrent.Executor) -> <init>
    499:503:boolean equals(java.lang.Object) -> equals
    508:508:int hashCode() -> hashCode
com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors -> com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors:
    442:443:void <init>() -> <init>
    445:447:void <init>(java.util.List) -> <init>
    450:451:void add(com.bumptech.glide.request.ResourceCallback,java.util.concurrent.Executor) -> add
    470:471:void clear() -> clear
    458:458:boolean contains(com.bumptech.glide.request.ResourceCallback) -> contains
    474:474:com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors copy() -> copy
    478:478:com.bumptech.glide.load.engine.EngineJob$ResourceCallbackAndExecutor defaultCallbackAndExecutor(com.bumptech.glide.request.ResourceCallback) -> defaultCallbackAndExecutor
    462:462:boolean isEmpty() -> isEmpty
    484:484:java.util.Iterator iterator() -> iterator
    454:455:void remove(com.bumptech.glide.request.ResourceCallback) -> remove
    466:466:int size() -> size
com.bumptech.glide.load.engine.EngineKey -> com.bumptech.glide.load.engine.EngineKey:
    31:42:void <init>(java.lang.Object,com.bumptech.glide.load.Key,int,int,java.util.Map,java.lang.Class,java.lang.Class,com.bumptech.glide.load.Options) -> <init>
    46:57:boolean equals(java.lang.Object) -> equals
    62:72:int hashCode() -> hashCode
    77:77:java.lang.String toString() -> toString
    101:101:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.engine.EngineKeyFactory -> com.bumptech.glide.load.engine.EngineKeyFactory:
    8:8:void <init>() -> <init>
    20:20:com.bumptech.glide.load.engine.EngineKey buildKey(java.lang.Object,com.bumptech.glide.load.Key,int,int,java.util.Map,java.lang.Class,java.lang.Class,com.bumptech.glide.load.Options) -> buildKey
com.bumptech.glide.load.engine.EngineResource -> com.bumptech.glide.load.engine.EngineResource:
    32:38:void <init>(com.bumptech.glide.load.engine.Resource,boolean,boolean,com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource$ResourceListener) -> <init>
    88:93:void acquire() -> acquire
    57:57:java.lang.Object get() -> get
    41:41:com.bumptech.glide.load.engine.Resource getResource() -> getResource
    51:51:java.lang.Class getResourceClass() -> getResourceClass
    62:62:int getSize() -> getSize
    45:45:boolean isMemoryCacheable() -> isMemoryCacheable
    66:77:void recycle() -> recycle
    106:118:void release() -> release
    122:122:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.GlideException -> com.bumptech.glide.load.engine.GlideException:
    21:21:void <clinit>() -> <clinit>
    31:32:void <init>(java.lang.String) -> <init>
    35:36:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    38:42:void <init>(java.lang.String,java.util.List) -> <init>
    124:132:void addRootCauses(java.lang.Throwable,java.util.List) -> addRootCauses
    201:205:void appendCauses(java.util.List,java.lang.Appendable) -> appendCauses
    210:227:void appendCausesWrapped(java.util.List,java.lang.Appendable) -> appendCausesWrapped
    190:194:void appendExceptionMessage(java.lang.Throwable,java.lang.Appendable) -> appendExceptionMessage
    80:80:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    92:92:java.util.List getCauses() -> getCauses
    158:182:java.lang.String getMessage() -> getMessage
    104:106:java.util.List getRootCauses() -> getRootCauses
    117:121:void logRootCauses(java.lang.String) -> logRootCauses
    136:137:void printStackTrace() -> printStackTrace
    141:142:void printStackTrace(java.io.PrintStream) -> printStackTrace
    146:147:void printStackTrace(java.io.PrintWriter) -> printStackTrace
    150:152:void printStackTrace(java.lang.Appendable) -> printStackTrace
    45:46:void setLoggingDetails(com.bumptech.glide.load.Key,com.bumptech.glide.load.DataSource) -> setLoggingDetails
    49:52:void setLoggingDetails(com.bumptech.glide.load.Key,com.bumptech.glide.load.DataSource,java.lang.Class) -> setLoggingDetails
    60:61:void setOrigin(java.lang.Exception) -> setOrigin
com.bumptech.glide.load.engine.GlideException$IndentedAppendable -> com.bumptech.glide.load.engine.GlideException$IndentedAppendable:
    233:237:void <init>(java.lang.Appendable) -> <init>
    241:247:java.lang.Appendable append(char) -> append
    252:253:java.lang.Appendable append(java.lang.CharSequence) -> append
    259:266:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    271:274:java.lang.CharSequence safeSequence(java.lang.CharSequence) -> safeSequence
com.bumptech.glide.load.engine.Jobs -> com.bumptech.glide.load.engine.Jobs:
    9:11:void <init>() -> <init>
    19:19:com.bumptech.glide.load.engine.EngineJob get(com.bumptech.glide.load.Key,boolean) -> get
    34:34:java.util.Map getJobMap(boolean) -> getJobMap
    23:24:void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineJob) -> put
    27:31:void removeIfCurrent(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineJob) -> removeIfCurrent
com.bumptech.glide.load.engine.LoadPath -> com.bumptech.glide.load.engine.LoadPath:
    34:46:void <init>(java.lang.Class,java.lang.Class,java.lang.Class,java.util.List,androidx.core.util.Pools$Pool) -> <init>
    55:60:com.bumptech.glide.load.engine.Resource load(com.bumptech.glide.load.data.DataRewinder,com.bumptech.glide.load.Options,int,int,com.bumptech.glide.load.engine.DecodePath$DecodeCallback) -> load
    71:89:com.bumptech.glide.load.engine.Resource loadWithExceptionList(com.bumptech.glide.load.data.DataRewinder,com.bumptech.glide.load.Options,int,int,com.bumptech.glide.load.engine.DecodePath$DecodeCallback,java.util.List) -> loadWithExceptionList
    98:98:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.LockedResource -> com.bumptech.glide.load.engine.LockedResource:
    18:19:void <clinit>() -> <clinit>
    27:42:void <init>() -> <init>
    76:76:java.lang.Object get() -> get
    70:70:java.lang.Class getResourceClass() -> getResourceClass
    81:81:int getSize() -> getSize
    98:98:com.bumptech.glide.util.pool.StateVerifier getVerifier() -> getVerifier
    45:48:void init(com.bumptech.glide.load.engine.Resource) -> init
    35:37:com.bumptech.glide.load.engine.LockedResource obtain(com.bumptech.glide.load.engine.Resource) -> obtain
    85:93:void recycle() -> recycle
    51:53:void release() -> release
    55:65:void unlock() -> unlock
com.bumptech.glide.load.engine.LockedResource$1 -> com.bumptech.glide.load.engine.LockedResource$1:
    21:21:void <init>() -> <init>
    21:21:java.lang.Object create() -> create
    24:24:com.bumptech.glide.load.engine.LockedResource create() -> create
com.bumptech.glide.load.engine.ResourceCacheGenerator -> com.bumptech.glide.load.engine.ResourceCacheGenerator:
    24:39:void <init>(com.bumptech.glide.load.engine.DecodeHelper,com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback) -> <init>
    121:125:void cancel() -> cancel
    116:116:boolean hasNextModelLoader() -> hasNextModelLoader
    129:131:void onDataReady(java.lang.Object) -> onDataReady
    135:136:void onLoadFailed(java.lang.Exception) -> onLoadFailed
    45:112:boolean startNext() -> startNext
com.bumptech.glide.load.engine.ResourceCacheKey -> com.bumptech.glide.load.engine.ResourceCacheKey:
    15:15:void <clinit>() -> <clinit>
    33:42:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,com.bumptech.glide.load.Key,com.bumptech.glide.load.Key,int,int,com.bumptech.glide.load.Transformation,java.lang.Class,com.bumptech.glide.load.Options) -> <init>
    46:56:boolean equals(java.lang.Object) -> equals
    90:95:byte[] getResourceClassBytes() -> getResourceClassBytes
    61:70:int hashCode() -> hashCode
    100:100:java.lang.String toString() -> toString
    76:87:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.engine.ResourceRecycler -> com.bumptech.glide.load.engine.ResourceRecycler:
    9:12:void <init>() -> <init>
    14:25:void recycle(com.bumptech.glide.load.engine.Resource,boolean) -> recycle
com.bumptech.glide.load.engine.ResourceRecycler$ResourceRecyclerCallback -> com.bumptech.glide.load.engine.ResourceRecycler$ResourceRecyclerCallback:
    31:31:void <init>() -> <init>
    35:40:boolean handleMessage(android.os.Message) -> handleMessage
com.bumptech.glide.load.engine.SourceGenerator -> com.bumptech.glide.load.engine.SourceGenerator:
    43:46:void <init>(com.bumptech.glide.load.engine.DecodeHelper,com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback) -> <init>
    132:189:boolean cacheData(java.lang.Object) -> cacheData
    194:198:void cancel() -> cancel
    123:123:boolean hasNextModelLoader() -> hasNextModelLoader
    118:119:boolean isCurrentRequest(com.bumptech.glide.load.model.ModelLoader$LoadData) -> isCurrentRequest
    245:246:void onDataFetcherFailed(com.bumptech.glide.load.Key,java.lang.Exception,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.DataSource) -> onDataFetcherFailed
    239:240:void onDataFetcherReady(com.bumptech.glide.load.Key,java.lang.Object,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.Key) -> onDataFetcherReady
    203:218:void onDataReadyInternal(com.bumptech.glide.load.model.ModelLoader$LoadData,java.lang.Object) -> onDataReadyInternal
    223:224:void onLoadFailedInternal(com.bumptech.glide.load.model.ModelLoader$LoadData,java.lang.Exception) -> onLoadFailedInternal
    230:230:void reschedule() -> reschedule
    52:91:boolean startNext() -> startNext
    95:112:void startNextLoad(com.bumptech.glide.load.model.ModelLoader$LoadData) -> startNextLoad
com.bumptech.glide.load.engine.SourceGenerator$1 -> com.bumptech.glide.load.engine.SourceGenerator$1:
    97:97:void <init>(com.bumptech.glide.load.engine.SourceGenerator,com.bumptech.glide.load.model.ModelLoader$LoadData) -> <init>
    100:103:void onDataReady(java.lang.Object) -> onDataReady
    107:110:void onLoadFailed(java.lang.Exception) -> onLoadFailed
com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool -> com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool:
    6:8:void <init>() -> <init>
    11:15:com.bumptech.glide.load.engine.bitmap_recycle.Poolable get() -> get
    19:22:void offer(com.bumptech.glide.load.engine.bitmap_recycle.Poolable) -> offer
com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter -> com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter:
    11:11:void <init>() -> <init>
    42:42:void clearMemory() -> clearMemory
    30:30:android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config) -> get
    36:36:android.graphics.Bitmap getDirty(int,int,android.graphics.Bitmap$Config) -> getDirty
    24:25:void put(android.graphics.Bitmap) -> put
    47:47:void trimMemory(int) -> trimMemory
com.bumptech.glide.load.engine.bitmap_recycle.ByteArrayAdapter -> com.bumptech.glide.load.engine.bitmap_recycle.ByteArrayAdapter:
    5:5:void <init>() -> <init>
    4:4:int getArrayLength(java.lang.Object) -> getArrayLength
    15:15:int getArrayLength(byte[]) -> getArrayLength
    25:25:int getElementSizeInBytes() -> getElementSizeInBytes
    10:10:java.lang.String getTag() -> getTag
    4:4:java.lang.Object newArray(int) -> newArray
    20:20:byte[] newArray(int) -> newArray
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap -> com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap:
    20:22:void <init>() -> <init>
    40:50:java.lang.Object get(com.bumptech.glide.load.engine.bitmap_recycle.Poolable) -> get
    98:102:void makeHead(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry) -> makeHead
    106:110:void makeTail(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry) -> makeTail
    25:36:void put(com.bumptech.glide.load.engine.bitmap_recycle.Poolable,java.lang.Object) -> put
    118:120:void removeEntry(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry) -> removeEntry
    55:77:java.lang.Object removeLast() -> removeLast
    82:93:java.lang.String toString() -> toString
    113:115:void updateEntry(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry) -> updateEntry
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry -> com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry:
    131:132:void <init>() -> <init>
    134:137:void <init>(java.lang.Object) -> <init>
    150:154:void add(java.lang.Object) -> add
    141:142:java.lang.Object removeLast() -> removeLast
    146:146:int size() -> size
com.bumptech.glide.load.engine.bitmap_recycle.IntegerArrayAdapter -> com.bumptech.glide.load.engine.bitmap_recycle.IntegerArrayAdapter:
    5:5:void <init>() -> <init>
    4:4:int getArrayLength(java.lang.Object) -> getArrayLength
    15:15:int getArrayLength(int[]) -> getArrayLength
    25:25:int getElementSizeInBytes() -> getElementSizeInBytes
    10:10:java.lang.String getTag() -> getTag
    4:4:java.lang.Object newArray(int) -> newArray
    20:20:int[] newArray(int) -> newArray
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool -> com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool:
    29:48:void <init>(int) -> <init>
    133:135:void clearMemory() -> clearMemory
    165:176:void decrementArrayOfSize(int,java.lang.Class) -> decrementArrayOfSize
    148:149:void evict() -> evict
    152:162:void evictToSize(int) -> evictToSize
    84:92:java.lang.Object get(int,java.lang.Class) -> get
    189:189:com.bumptech.glide.load.engine.bitmap_recycle.ArrayAdapterInterface getAdapterFromObject(java.lang.Object) -> getAdapterFromObject
    194:206:com.bumptech.glide.load.engine.bitmap_recycle.ArrayAdapterInterface getAdapterFromType(java.lang.Class) -> getAdapterFromType
    116:116:java.lang.Object getArrayForKey(com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key) -> getArrayForKey
    78:80:java.lang.Object getExact(int,java.lang.Class) -> getExact
    96:109:java.lang.Object getForKey(com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key,java.lang.Class) -> getForKey
    179:184:java.util.NavigableMap getSizesForAdapter(java.lang.Class) -> getSizesForAdapter
    129:129:boolean isNoMoreThanHalfFull() -> isNoMoreThanHalfFull
    120:120:boolean isSmallEnoughForReuse(int) -> isSmallEnoughForReuse
    124:125:boolean mayFillRequest(int,java.lang.Integer) -> mayFillRequest
    58:75:void put(java.lang.Object) -> put
    138:145:void trimMemory(int) -> trimMemory
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key -> com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key:
    243:245:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$KeyPool) -> <init>
    254:258:boolean equals(java.lang.Object) -> equals
    273:275:int hashCode() -> hashCode
    248:250:void init(int,java.lang.Class) -> init
    268:269:void offer() -> offer
    263:263:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$KeyPool -> com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$KeyPool:
    224:224:void <init>() -> <init>
    221:221:com.bumptech.glide.load.engine.bitmap_recycle.Poolable create() -> create
    234:234:com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key create() -> create
    227:229:com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key get(int,java.lang.Class) -> get
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool -> com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool:
    26:26:void <clinit>() -> <clinit>
    41:47:void <init>(long,com.bumptech.glide.load.engine.bitmap_recycle.LruPoolStrategy,java.util.Set) -> <init>
    55:56:void <init>(long) -> <init>
    181:192:void assertNotHardwareConfig(android.graphics.Bitmap$Config) -> assertNotHardwareConfig
    236:240:void clearMemory() -> clearMemory
    175:175:android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config) -> createBitmap
    282:285:void dump() -> dump
    288:304:void dumpUnchecked() -> dumpUnchecked
    144:145:void evict() -> evict
    150:160:android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config) -> get
    318:328:java.util.Set getDefaultAllowedConfigs() -> getDefaultAllowedConfigs
    308:313:com.bumptech.glide.load.engine.bitmap_recycle.LruPoolStrategy getDefaultStrategy() -> getDefaultStrategy
    166:170:android.graphics.Bitmap getDirty(int,int,android.graphics.Bitmap$Config) -> getDirty
    196:217:android.graphics.Bitmap getDirtyOrNull(int,int,android.graphics.Bitmap$Config) -> getDirtyOrNull
    93:93:long getMaxSize() -> getMaxSize
    229:232:void maybeSetPreMultiplied(android.graphics.Bitmap) -> maybeSetPreMultiplied
    223:225:void normalize(android.graphics.Bitmap) -> normalize
    103:141:void put(android.graphics.Bitmap) -> put
    245:256:void trimMemory(int) -> trimMemory
    258:279:void trimToSize(long) -> trimToSize
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$NullBitmapTracker -> com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$NullBitmapTracker:
    369:369:void <init>() -> <init>
    374:374:void add(android.graphics.Bitmap) -> add
    379:379:void remove(android.graphics.Bitmap) -> remove
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy -> com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy:
    34:55:void <clinit>() -> <clinit>
    28:60:void <init>() -> <init>
    118:137:void decrementBitmapOfSize(java.lang.Integer,android.graphics.Bitmap) -> decrementBitmapOfSize
    90:103:com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key findBestKey(int,android.graphics.Bitmap$Config) -> findBestKey
    77:86:android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config) -> get
    247:247:java.lang.String getBitmapString(int,android.graphics.Bitmap$Config) -> getBitmapString
    251:267:android.graphics.Bitmap$Config[] getInConfigs(android.graphics.Bitmap$Config) -> getInConfigs
    162:162:int getSize(android.graphics.Bitmap) -> getSize
    140:145:java.util.NavigableMap getSizesForConfig(android.graphics.Bitmap$Config) -> getSizesForConfig
    150:151:java.lang.String logBitmap(android.graphics.Bitmap) -> logBitmap
    156:157:java.lang.String logBitmap(int,int,android.graphics.Bitmap$Config) -> logBitmap
    64:72:void put(android.graphics.Bitmap) -> put
    109:114:android.graphics.Bitmap removeLast() -> removeLast
    167:178:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$1 -> com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$1:
    257:257:void <clinit>() -> <clinit>
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key -> com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key:
    203:205:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool) -> <init>
    230:234:boolean equals(java.lang.Object) -> equals
    239:241:int hashCode() -> hashCode
    214:216:void init(int,android.graphics.Bitmap$Config) -> init
    220:221:void offer() -> offer
    225:225:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool -> com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool:
    182:182:void <init>() -> <init>
    181:181:com.bumptech.glide.load.engine.bitmap_recycle.Poolable create() -> create
    192:192:com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key create() -> create
    185:187:com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key get(int,android.graphics.Bitmap$Config) -> get
com.bumptech.glide.load.engine.cache.DiskCacheAdapter -> com.bumptech.glide.load.engine.cache.DiskCacheAdapter:
    7:7:void <init>() -> <init>
    11:11:java.io.File get(com.bumptech.glide.load.Key) -> get
    17:17:void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer) -> put
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker -> com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker:
    20:22:void <init>() -> <init>
    26:36:void acquire(java.lang.String) -> acquire
    40:69:void release(java.lang.String) -> release
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock -> com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock:
    72:76:void <init>() -> <init>
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool -> com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool:
    81:84:void <init>() -> <init>
    88:94:com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock obtain() -> obtain
    98:103:void offer(com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock) -> offer
com.bumptech.glide.load.engine.cache.DiskLruCacheFactory -> com.bumptech.glide.load.engine.cache.DiskLruCacheFactory:
    55:58:void <init>(com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$CacheDirectoryGetter,long) -> <init>
    62:72:com.bumptech.glide.load.engine.cache.DiskCache build() -> build
com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper -> com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper:
    30:76:void <init>(java.io.File,long) -> <init>
    63:63:com.bumptech.glide.load.engine.cache.DiskCache create(java.io.File,long) -> create
    87:105:java.io.File get(com.bumptech.glide.load.Key) -> get
    78:82:com.bumptech.glide.disklrucache.DiskLruCache getDiskCache() -> getDiskCache
    112:147:void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer) -> put
com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory -> com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory:
    15:19:void <init>(android.content.Context) -> <init>
    27:42:void <init>(android.content.Context,java.lang.String,long) -> <init>
com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory$1 -> com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory$1:
    28:28:void <init>(android.content.Context,java.lang.String) -> <init>
    31:38:java.io.File getCacheDirectory() -> getCacheDirectory
com.bumptech.glide.load.engine.cache.LruResourceCache -> com.bumptech.glide.load.engine.cache.LruResourceCache:
    20:21:void <init>(long) -> <init>
    11:11:int getSize(java.lang.Object) -> getSize
    37:40:int getSize(com.bumptech.glide.load.engine.Resource) -> getSize
    11:11:void onItemEvicted(java.lang.Object,java.lang.Object) -> onItemEvicted
    30:33:void onItemEvicted(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.Resource) -> onItemEvicted
    11:11:com.bumptech.glide.load.engine.Resource put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.Resource) -> put
    11:11:com.bumptech.glide.load.engine.Resource remove(com.bumptech.glide.load.Key) -> remove
    25:26:void setResourceRemovedListener(com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener) -> setResourceRemovedListener
    47:58:void trimMemory(int) -> trimMemory
com.bumptech.glide.load.engine.cache.MemorySizeCalculator -> com.bumptech.glide.load.engine.cache.MemorySizeCalculator:
    35:83:void <init>(com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder) -> <init>
    97:97:int getArrayPoolSizeInBytes() -> getArrayPoolSizeInBytes
    92:92:int getBitmapPoolSize() -> getBitmapPoolSize
    102:105:int getMaxSize(android.app.ActivityManager,float,float) -> getMaxSize
    87:87:int getMemoryCacheSize() -> getMemoryCacheSize
    118:119:boolean isLowMemoryDevice(android.app.ActivityManager) -> isLowMemoryDevice
    109:109:java.lang.String toMb(int) -> toMb
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder -> com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder:
    139:140:void <clinit>() -> <clinit>
    153:172:void <init>(android.content.Context) -> <init>
    253:253:com.bumptech.glide.load.engine.cache.MemorySizeCalculator build() -> build
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$DisplayMetricsScreenDimensions -> com.bumptech.glide.load.engine.cache.MemorySizeCalculator$DisplayMetricsScreenDimensions:
    260:262:void <init>(android.util.DisplayMetrics) -> <init>
    271:271:int getHeightPixels() -> getHeightPixels
    266:266:int getWidthPixels() -> getWidthPixels
com.bumptech.glide.load.engine.cache.SafeKeyGenerator -> com.bumptech.glide.load.engine.cache.SafeKeyGenerator:
    21:24:void <init>() -> <init>
    52:59:java.lang.String calculateHexStringDigest(com.bumptech.glide.load.Key) -> calculateHexStringDigest
    39:48:java.lang.String getSafeKey(com.bumptech.glide.load.Key) -> getSafeKey
com.bumptech.glide.load.engine.cache.SafeKeyGenerator$1 -> com.bumptech.glide.load.engine.cache.SafeKeyGenerator$1:
    26:26:void <init>(com.bumptech.glide.load.engine.cache.SafeKeyGenerator) -> <init>
    26:26:java.lang.Object create() -> create
    30:32:com.bumptech.glide.load.engine.cache.SafeKeyGenerator$PoolableDigestContainer create() -> create
com.bumptech.glide.load.engine.cache.SafeKeyGenerator$PoolableDigestContainer -> com.bumptech.glide.load.engine.cache.SafeKeyGenerator$PoolableDigestContainer:
    65:69:void <init>(java.security.MessageDigest) -> <init>
    74:74:com.bumptech.glide.util.pool.StateVerifier getVerifier() -> getVerifier
com.bumptech.glide.load.engine.executor.GlideExecutor -> com.bumptech.glide.load.engine.executor.GlideExecutor:
    56:56:void <clinit>() -> <clinit>
    226:228:void <init>(java.util.concurrent.ExecutorService) -> <init>
    305:305:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    317:321:int calculateBestThreadCount() -> calculateBestThreadCount
    232:233:void execute(java.lang.Runnable) -> execute
    245:245:java.util.List invokeAll(java.util.Collection) -> invokeAll
    253:253:java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAll
    260:260:java.lang.Object invokeAny(java.util.Collection) -> invokeAny
    267:267:java.lang.Object invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAny
    294:294:boolean isShutdown() -> isShutdown
    299:299:boolean isTerminated() -> isTerminated
    193:203:com.bumptech.glide.load.engine.executor.GlideExecutor$Builder newAnimationBuilder() -> newAnimationBuilder
    208:208:com.bumptech.glide.load.engine.executor.GlideExecutor newAnimationExecutor() -> newAnimationExecutor
    75:77:com.bumptech.glide.load.engine.executor.GlideExecutor$Builder newDiskCacheBuilder() -> newDiskCacheBuilder
    82:82:com.bumptech.glide.load.engine.executor.GlideExecutor newDiskCacheExecutor() -> newDiskCacheExecutor
    122:124:com.bumptech.glide.load.engine.executor.GlideExecutor$Builder newSourceBuilder() -> newSourceBuilder
    129:129:com.bumptech.glide.load.engine.executor.GlideExecutor newSourceExecutor() -> newSourceExecutor
    172:172:com.bumptech.glide.load.engine.executor.GlideExecutor newUnlimitedSourceExecutor() -> newUnlimitedSourceExecutor
    283:284:void shutdown() -> shutdown
    289:289:java.util.List shutdownNow() -> shutdownNow
    238:238:java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    273:273:java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    278:278:java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    310:310:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.executor.GlideExecutor$Builder -> com.bumptech.glide.load.engine.executor.GlideExecutor$Builder:
    445:456:void <init>(boolean) -> <init>
    496:514:com.bumptech.glide.load.engine.executor.GlideExecutor build() -> build
    490:491:com.bumptech.glide.load.engine.executor.GlideExecutor$Builder setName(java.lang.String) -> setName
    471:473:com.bumptech.glide.load.engine.executor.GlideExecutor$Builder setThreadCount(int) -> setThreadCount
com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultPriorityThreadFactory -> com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultPriorityThreadFactory:
    368:368:void <init>() -> <init>
    368:368:void <init>(com.bumptech.glide.load.engine.executor.GlideExecutor$1) -> <init>
    375:375:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultPriorityThreadFactory$1 -> com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultPriorityThreadFactory$1:
    375:375:void <init>(com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultPriorityThreadFactory,java.lang.Runnable) -> <init>
    379:381:void run() -> run
com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory -> com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory:
    396:407:void <init>(java.util.concurrent.ThreadFactory,java.lang.String,com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy,boolean) -> <init>
    411:428:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory$1 -> com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory$1:
    413:413:void <init>(com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory,java.lang.Runnable) -> <init>
    416:425:void run() -> run
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy -> com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy:
    332:363:void <clinit>() -> <clinit>
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$1 -> com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$1:
    333:333:void <init>() -> <init>
    337:337:void handle(java.lang.Throwable) -> handle
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$2 -> com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$2:
    341:341:void <init>() -> <init>
    344:347:void handle(java.lang.Throwable) -> handle
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$3 -> com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$3:
    353:353:void <init>() -> <init>
    356:359:void handle(java.lang.Throwable) -> handle
com.bumptech.glide.load.engine.executor.RuntimeCompat -> com.bumptech.glide.load.engine.executor.RuntimeCompat:
    23:27:int availableProcessors() -> availableProcessors
com.bumptech.glide.load.model.AssetUriLoader -> com.bumptech.glide.load.model.AssetUriLoader:
    24:24:void <clinit>() -> <clinit>
    31:34:void <init>(android.content.res.AssetManager,com.bumptech.glide.load.model.AssetUriLoader$AssetFetcherFactory) -> <init>
    20:20:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    39:40:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    20:20:boolean handles(java.lang.Object) -> handles
    45:47:boolean handles(android.net.Uri) -> handles
com.bumptech.glide.load.model.AssetUriLoader$FileDescriptorFactory -> com.bumptech.glide.load.model.AssetUriLoader$FileDescriptorFactory:
    93:95:void <init>(android.content.res.AssetManager) -> <init>
    100:100:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    111:111:com.bumptech.glide.load.data.DataFetcher buildFetcher(android.content.res.AssetManager,java.lang.String) -> buildFetcher
com.bumptech.glide.load.model.AssetUriLoader$StreamFactory -> com.bumptech.glide.load.model.AssetUriLoader$StreamFactory:
    65:67:void <init>(android.content.res.AssetManager) -> <init>
    72:72:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    82:82:com.bumptech.glide.load.data.DataFetcher buildFetcher(android.content.res.AssetManager,java.lang.String) -> buildFetcher
com.bumptech.glide.load.model.ByteArrayLoader -> com.bumptech.glide.load.model.ByteArrayLoader:
    24:26:void <init>(com.bumptech.glide.load.model.ByteArrayLoader$Converter) -> <init>
    20:20:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    31:31:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(byte[],int,int,com.bumptech.glide.load.Options) -> buildLoadData
    20:20:boolean handles(java.lang.Object) -> handles
    36:36:boolean handles(byte[]) -> handles
com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory -> com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory:
    98:98:void <init>() -> <init>
    103:103:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory$1 -> com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory$1:
    104:104:void <init>(com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory) -> <init>
    104:104:java.lang.Object convert(byte[]) -> convert
    107:107:java.nio.ByteBuffer convert(byte[]) -> convert
    112:112:java.lang.Class getDataClass() -> getDataClass
com.bumptech.glide.load.model.ByteArrayLoader$Fetcher -> com.bumptech.glide.load.model.ByteArrayLoader$Fetcher:
    60:63:void <init>(byte[],com.bumptech.glide.load.model.ByteArrayLoader$Converter) -> <init>
    79:79:void cancel() -> cancel
    74:74:void cleanup() -> cleanup
    84:84:java.lang.Class getDataClass() -> getDataClass
    90:90:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    67:69:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory -> com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory:
    124:124:void <init>() -> <init>
    129:129:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory$1 -> com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory$1:
    130:130:void <init>(com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory) -> <init>
    130:130:java.lang.Object convert(byte[]) -> convert
    133:133:java.io.InputStream convert(byte[]) -> convert
    138:138:java.lang.Class getDataClass() -> getDataClass
com.bumptech.glide.load.model.ByteBufferEncoder -> com.bumptech.glide.load.model.ByteBufferEncoder:
    13:13:void <init>() -> <init>
    13:13:boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options) -> encode
    18:27:boolean encode(java.nio.ByteBuffer,java.io.File,com.bumptech.glide.load.Options) -> encode
com.bumptech.glide.load.model.ByteBufferFileLoader -> com.bumptech.glide.load.model.ByteBufferFileLoader:
    17:17:void <init>() -> <init>
    17:17:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    23:23:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.io.File,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    17:17:boolean handles(java.lang.Object) -> handles
    28:28:boolean handles(java.io.File) -> handles
com.bumptech.glide.load.model.ByteBufferFileLoader$ByteBufferFetcher -> com.bumptech.glide.load.model.ByteBufferFileLoader$ByteBufferFetcher:
    52:54:void <init>(java.io.File) -> <init>
    79:79:void cancel() -> cancel
    74:74:void cleanup() -> cleanup
    84:84:java.lang.Class getDataClass() -> getDataClass
    90:90:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    61:69:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.model.ByteBufferFileLoader$Factory -> com.bumptech.glide.load.model.ByteBufferFileLoader$Factory:
    32:32:void <init>() -> <init>
    37:37:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.DataUrlLoader -> com.bumptech.glide.load.model.DataUrlLoader:
    36:38:void <init>(com.bumptech.glide.load.model.DataUrlLoader$DataDecoder) -> <init>
    43:44:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    51:51:boolean handles(java.lang.Object) -> handles
com.bumptech.glide.load.model.DataUrlLoader$DataUriFetcher -> com.bumptech.glide.load.model.DataUrlLoader$DataUriFetcher:
    74:77:void <init>(java.lang.String,com.bumptech.glide.load.model.DataUrlLoader$DataDecoder) -> <init>
    101:101:void cancel() -> cancel
    92:96:void cleanup() -> cleanup
    106:106:java.lang.Class getDataClass() -> getDataClass
    112:112:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    82:87:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.model.DataUrlLoader$StreamFactory -> com.bumptech.glide.load.model.DataUrlLoader$StreamFactory:
    125:160:void <init>() -> <init>
    165:165:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.DataUrlLoader$StreamFactory$1 -> com.bumptech.glide.load.model.DataUrlLoader$StreamFactory$1:
    127:127:void <init>(com.bumptech.glide.load.model.DataUrlLoader$StreamFactory) -> <init>
    127:127:void close(java.lang.Object) -> close
    152:153:void close(java.io.InputStream) -> close
    127:127:java.lang.Object decode(java.lang.String) -> decode
    130:147:java.io.InputStream decode(java.lang.String) -> decode
    157:157:java.lang.Class getDataClass() -> getDataClass
com.bumptech.glide.load.model.FileLoader -> com.bumptech.glide.load.model.FileLoader:
    30:32:void <init>(com.bumptech.glide.load.model.FileLoader$FileOpener) -> <init>
    23:23:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    37:37:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.io.File,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    23:23:boolean handles(java.lang.Object) -> handles
    42:42:boolean handles(java.io.File) -> handles
com.bumptech.glide.load.model.FileLoader$Factory -> com.bumptech.glide.load.model.FileLoader$Factory:
    118:120:void <init>(com.bumptech.glide.load.model.FileLoader$FileOpener) -> <init>
    125:125:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.FileLoader$FileDescriptorFactory -> com.bumptech.glide.load.model.FileLoader$FileDescriptorFactory:
    161:178:void <init>() -> <init>
com.bumptech.glide.load.model.FileLoader$FileDescriptorFactory$1 -> com.bumptech.glide.load.model.FileLoader$FileDescriptorFactory$1:
    162:162:void <init>() -> <init>
    162:162:void close(java.lang.Object) -> close
    170:171:void close(android.os.ParcelFileDescriptor) -> close
    175:175:java.lang.Class getDataClass() -> getDataClass
    162:162:java.lang.Object open(java.io.File) -> open
    165:165:android.os.ParcelFileDescriptor open(java.io.File) -> open
com.bumptech.glide.load.model.FileLoader$FileFetcher -> com.bumptech.glide.load.model.FileLoader$FileFetcher:
    63:66:void <init>(java.io.File,com.bumptech.glide.load.model.FileLoader$FileOpener) -> <init>
    95:95:void cancel() -> cancel
    83:90:void cleanup() -> cleanup
    100:100:java.lang.Class getDataClass() -> getDataClass
    106:106:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    71:79:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.model.FileLoader$StreamFactory -> com.bumptech.glide.load.model.FileLoader$StreamFactory:
    137:154:void <init>() -> <init>
com.bumptech.glide.load.model.FileLoader$StreamFactory$1 -> com.bumptech.glide.load.model.FileLoader$StreamFactory$1:
    138:138:void <init>() -> <init>
    138:138:void close(java.lang.Object) -> close
    146:147:void close(java.io.InputStream) -> close
    151:151:java.lang.Class getDataClass() -> getDataClass
    138:138:java.lang.Object open(java.io.File) -> open
    141:141:java.io.InputStream open(java.io.File) -> open
com.bumptech.glide.load.model.GlideUrl -> com.bumptech.glide.load.model.GlideUrl:
    41:42:void <init>(java.net.URL) -> <init>
    45:46:void <init>(java.lang.String) -> <init>
    48:52:void <init>(java.net.URL,com.bumptech.glide.load.model.Headers) -> <init>
    54:58:void <init>(java.lang.String,com.bumptech.glide.load.model.Headers) -> <init>
    133:137:boolean equals(java.lang.Object) -> equals
    111:111:java.lang.String getCacheKey() -> getCacheKey
    125:128:byte[] getCacheKeyBytes() -> getCacheKeyBytes
    98:98:java.util.Map getHeaders() -> getHeaders
    86:93:java.lang.String getSafeStringUrl() -> getSafeStringUrl
    69:72:java.net.URL getSafeUrl() -> getSafeUrl
    142:146:int hashCode() -> hashCode
    116:116:java.lang.String toString() -> toString
    61:61:java.net.URL toURL() -> toURL
    121:122:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.model.Headers -> com.bumptech.glide.load.model.Headers:
    19:31:void <clinit>() -> <clinit>
com.bumptech.glide.load.model.Headers$1 -> com.bumptech.glide.load.model.Headers$1:
    20:20:void <init>() -> <init>
    23:23:java.util.Map getHeaders() -> getHeaders
com.bumptech.glide.load.model.LazyHeaders -> com.bumptech.glide.load.model.LazyHeaders:
    26:28:void <init>(java.util.Map) -> <init>
    58:70:java.lang.String buildHeaderValue(java.util.List) -> buildHeaderValue
    80:84:boolean equals(java.lang.Object) -> equals
    44:53:java.util.Map generateHeaders() -> generateHeaders
    32:40:java.util.Map getHeaders() -> getHeaders
    89:89:int hashCode() -> hashCode
    75:75:java.lang.String toString() -> toString
com.bumptech.glide.load.model.LazyHeaders$Builder -> com.bumptech.glide.load.model.LazyHeaders$Builder:
    105:120:void <clinit>() -> <clinit>
    103:124:void <init>() -> <init>
    212:213:com.bumptech.glide.load.model.LazyHeaders build() -> build
    233:248:java.lang.String getSanitizedUserAgent() -> getSanitizedUserAgent
com.bumptech.glide.load.model.LazyHeaders$StringHeaderFactory -> com.bumptech.glide.load.model.LazyHeaders$StringHeaderFactory:
    256:258:void <init>(java.lang.String) -> <init>
    262:262:java.lang.String buildHeader() -> buildHeader
    272:276:boolean equals(java.lang.Object) -> equals
    281:281:int hashCode() -> hashCode
    267:267:java.lang.String toString() -> toString
com.bumptech.glide.load.model.MediaStoreFileLoader -> com.bumptech.glide.load.model.MediaStoreFileLoader:
    25:27:void <init>(android.content.Context) -> <init>
    19:19:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    32:32:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    19:19:boolean handles(java.lang.Object) -> handles
    37:37:boolean handles(android.net.Uri) -> handles
com.bumptech.glide.load.model.MediaStoreFileLoader$Factory -> com.bumptech.glide.load.model.MediaStoreFileLoader$Factory:
    108:110:void <init>(android.content.Context) -> <init>
    115:115:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.MediaStoreFileLoader$FilePathFetcher -> com.bumptech.glide.load.model.MediaStoreFileLoader$FilePathFetcher:
    41:41:void <clinit>() -> <clinit>
    49:52:void <init>(android.content.Context,android.net.Uri) -> <init>
    88:88:void cancel() -> cancel
    83:83:void cleanup() -> cleanup
    93:93:java.lang.Class getDataClass() -> getDataClass
    99:99:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    56:78:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.model.ModelCache -> com.bumptech.glide.load.model.ModelCache:
    29:37:void <init>(long) -> <init>
    49:52:java.lang.Object get(java.lang.Object,int,int) -> get
    64:66:void put(java.lang.Object,int,int,java.lang.Object) -> put
com.bumptech.glide.load.model.ModelCache$1 -> com.bumptech.glide.load.model.ModelCache$1:
    31:31:void <init>(com.bumptech.glide.load.model.ModelCache,long) -> <init>
    31:31:void onItemEvicted(java.lang.Object,java.lang.Object) -> onItemEvicted
    34:35:void onItemEvicted(com.bumptech.glide.load.model.ModelCache$ModelKey,java.lang.Object) -> onItemEvicted
com.bumptech.glide.load.model.ModelCache$ModelKey -> com.bumptech.glide.load.model.ModelCache$ModelKey:
    75:75:void <clinit>() -> <clinit>
    95:95:void <init>() -> <init>
    111:116:boolean equals(java.lang.Object) -> equals
    84:92:com.bumptech.glide.load.model.ModelCache$ModelKey get(java.lang.Object,int,int) -> get
    121:124:int hashCode() -> hashCode
    98:101:void init(java.lang.Object,int,int) -> init
    104:107:void release() -> release
com.bumptech.glide.load.model.ModelLoader$LoadData -> com.bumptech.glide.load.model.ModelLoader$LoadData:
    50:51:void <init>(com.bumptech.glide.load.Key,com.bumptech.glide.load.data.DataFetcher) -> <init>
    56:60:void <init>(com.bumptech.glide.load.Key,java.util.List,com.bumptech.glide.load.data.DataFetcher) -> <init>
com.bumptech.glide.load.model.ModelLoaderRegistry -> com.bumptech.glide.load.model.ModelLoaderRegistry:
    26:27:void <init>(androidx.core.util.Pools$Pool) -> <init>
    23:31:void <init>(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> <init>
    36:39:void append(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory) -> append
    123:123:java.lang.Class getClass(java.lang.Object) -> getClass
    106:106:java.util.List getDataClasses(java.lang.Class) -> getDataClasses
    75:96:java.util.List getModelLoaders(java.lang.Object) -> getModelLoaders
    111:117:java.util.List getModelLoadersForClass(java.lang.Class) -> getModelLoadersForClass
com.bumptech.glide.load.model.ModelLoaderRegistry$ModelLoaderCache -> com.bumptech.glide.load.model.ModelLoaderRegistry$ModelLoaderCache:
    127:130:void <init>() -> <init>
    133:134:void clear() -> clear
    146:147:java.util.List get(java.lang.Class) -> get
    137:141:void put(java.lang.Class,java.util.List) -> put
com.bumptech.glide.load.model.ModelLoaderRegistry$ModelLoaderCache$Entry -> com.bumptech.glide.load.model.ModelLoaderRegistry$ModelLoaderCache$Entry:
    153:155:void <init>(java.util.List) -> <init>
com.bumptech.glide.load.model.MultiModelLoader -> com.bumptech.glide.load.model.MultiModelLoader:
    34:37:void <init>(java.util.List,androidx.core.util.Pools$Pool) -> <init>
    42:58:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    63:68:boolean handles(java.lang.Object) -> handles
    73:73:java.lang.String toString() -> toString
com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher -> com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher:
    88:93:void <init>(java.util.List,androidx.core.util.Pools$Pool) -> <init>
    124:128:void cancel() -> cancel
    113:120:void cleanup() -> cleanup
    133:133:java.lang.Class getDataClass() -> getDataClass
    139:139:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    97:109:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
    144:149:void onDataReady(java.lang.Object) -> onDataReady
    153:155:void onLoadFailed(java.lang.Exception) -> onLoadFailed
    158:169:void startNextOrFail() -> startNextOrFail
com.bumptech.glide.load.model.MultiModelLoaderFactory -> com.bumptech.glide.load.model.MultiModelLoaderFactory:
    24:25:void <clinit>() -> <clinit>
    32:33:void <init>(androidx.core.util.Pools$Pool) -> <init>
    26:40:void <init>(androidx.core.util.Pools$Pool,com.bumptech.glide.load.model.MultiModelLoaderFactory$Factory) -> <init>
    61:63:void add(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory,boolean) -> add
    45:47:void append(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory) -> append
    92:112:java.util.List build(java.lang.Class) -> build
    130:165:com.bumptech.glide.load.model.ModelLoader build(java.lang.Class,java.lang.Class) -> build
    178:178:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory$Entry) -> build
    184:184:com.bumptech.glide.load.model.ModelLoader emptyModelLoader() -> emptyModelLoader
    117:124:java.util.List getDataClasses(java.lang.Class) -> getDataClasses
com.bumptech.glide.load.model.MultiModelLoaderFactory$EmptyModelLoader -> com.bumptech.glide.load.model.MultiModelLoaderFactory$EmptyModelLoader:
    221:221:void <init>() -> <init>
    227:227:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    232:232:boolean handles(java.lang.Object) -> handles
com.bumptech.glide.load.model.MultiModelLoaderFactory$Entry -> com.bumptech.glide.load.model.MultiModelLoaderFactory$Entry:
    195:199:void <init>(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory) -> <init>
    202:202:boolean handles(java.lang.Class,java.lang.Class) -> handles
    206:206:boolean handles(java.lang.Class) -> handles
com.bumptech.glide.load.model.MultiModelLoaderFactory$Factory -> com.bumptech.glide.load.model.MultiModelLoaderFactory$Factory:
    210:210:void <init>() -> <init>
    215:215:com.bumptech.glide.load.model.MultiModelLoader build(java.util.List,androidx.core.util.Pools$Pool) -> build
com.bumptech.glide.load.model.ResourceLoader -> com.bumptech.glide.load.model.ResourceLoader:
    27:30:void <init>(android.content.res.Resources,com.bumptech.glide.load.model.ModelLoader) -> <init>
    20:20:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    35:36:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Integer,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    42:54:android.net.Uri getResourceUri(java.lang.Integer) -> getResourceUri
    20:20:boolean handles(java.lang.Object) -> handles
    61:61:boolean handles(java.lang.Integer) -> handles
com.bumptech.glide.load.model.ResourceLoader$AssetFileDescriptorFactory -> com.bumptech.glide.load.model.ResourceLoader$AssetFileDescriptorFactory:
    114:116:void <init>(android.content.res.Resources) -> <init>
    120:121:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.ResourceLoader$FileDescriptorFactory -> com.bumptech.glide.load.model.ResourceLoader$FileDescriptorFactory:
    91:93:void <init>(android.content.res.Resources) -> <init>
    98:99:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.ResourceLoader$StreamFactory -> com.bumptech.glide.load.model.ResourceLoader$StreamFactory:
    69:71:void <init>(android.content.res.Resources) -> <init>
    76:76:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.ResourceLoader$UriFactory -> com.bumptech.glide.load.model.ResourceLoader$UriFactory:
    135:137:void <init>(android.content.res.Resources) -> <init>
    142:142:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.StreamEncoder -> com.bumptech.glide.load.model.StreamEncoder:
    21:23:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    17:17:boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options) -> encode
    27:52:boolean encode(java.io.InputStream,java.io.File,com.bumptech.glide.load.Options) -> encode
com.bumptech.glide.load.model.StringLoader -> com.bumptech.glide.load.model.StringLoader:
    24:26:void <init>(com.bumptech.glide.load.model.ModelLoader) -> <init>
    19:19:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    31:35:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.String,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    19:19:boolean handles(java.lang.Object) -> handles
    42:42:boolean handles(java.lang.String) -> handles
    48:60:android.net.Uri parseUri(java.lang.String) -> parseUri
    64:64:android.net.Uri toFileUri(java.lang.String) -> toFileUri
com.bumptech.glide.load.model.StringLoader$AssetFileDescriptorFactory -> com.bumptech.glide.load.model.StringLoader$AssetFileDescriptorFactory:
    100:100:void <init>() -> <init>
    106:106:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.StringLoader$FileDescriptorFactory -> com.bumptech.glide.load.model.StringLoader$FileDescriptorFactory:
    83:83:void <init>() -> <init>
    90:90:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.StringLoader$StreamFactory -> com.bumptech.glide.load.model.StringLoader$StreamFactory:
    68:68:void <init>() -> <init>
    73:73:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.UnitModelLoader -> com.bumptech.glide.load.model.UnitModelLoader:
    18:18:void <clinit>() -> <clinit>
    31:33:void <init>() -> <init>
    38:38:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    22:22:com.bumptech.glide.load.model.UnitModelLoader getInstance() -> getInstance
    43:43:boolean handles(java.lang.Object) -> handles
com.bumptech.glide.load.model.UnitModelLoader$Factory -> com.bumptech.glide.load.model.UnitModelLoader$Factory:
    93:93:void <clinit>() -> <clinit>
    106:108:void <init>() -> <init>
    113:113:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    97:97:com.bumptech.glide.load.model.UnitModelLoader$Factory getInstance() -> getInstance
com.bumptech.glide.load.model.UnitModelLoader$UnitFetcher -> com.bumptech.glide.load.model.UnitModelLoader$UnitFetcher:
    50:52:void <init>(java.lang.Object) -> <init>
    68:68:void cancel() -> cancel
    63:63:void cleanup() -> cleanup
    74:74:java.lang.Class getDataClass() -> getDataClass
    80:80:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    57:58:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.model.UriLoader -> com.bumptech.glide.load.model.UriLoader:
    29:32:void <clinit>() -> <clinit>
    41:43:void <init>(com.bumptech.glide.load.model.UriLoader$LocalUriFetcherFactory) -> <init>
    28:28:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    48:48:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    28:28:boolean handles(java.lang.Object) -> handles
    53:53:boolean handles(android.net.Uri) -> handles
com.bumptech.glide.load.model.UriLoader$AssetFileDescriptorFactory -> com.bumptech.glide.load.model.UriLoader$AssetFileDescriptorFactory:
    127:129:void <init>(android.content.ContentResolver) -> <init>
    133:133:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    143:143:com.bumptech.glide.load.data.DataFetcher build(android.net.Uri) -> build
com.bumptech.glide.load.model.UriLoader$FileDescriptorFactory -> com.bumptech.glide.load.model.UriLoader$FileDescriptorFactory:
    99:101:void <init>(android.content.ContentResolver) -> <init>
    105:105:com.bumptech.glide.load.data.DataFetcher build(android.net.Uri) -> build
    111:111:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.UriLoader$StreamFactory -> com.bumptech.glide.load.model.UriLoader$StreamFactory:
    71:73:void <init>(android.content.ContentResolver) -> <init>
    77:77:com.bumptech.glide.load.data.DataFetcher build(android.net.Uri) -> build
    83:83:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.UrlUriLoader -> com.bumptech.glide.load.model.UrlUriLoader:
    19:20:void <clinit>() -> <clinit>
    25:27:void <init>(com.bumptech.glide.load.model.ModelLoader) -> <init>
    18:18:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    32:33:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    18:18:boolean handles(java.lang.Object) -> handles
    38:38:boolean handles(android.net.Uri) -> handles
com.bumptech.glide.load.model.UrlUriLoader$StreamFactory -> com.bumptech.glide.load.model.UrlUriLoader$StreamFactory:
    45:45:void <init>() -> <init>
    50:50:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.stream.HttpGlideUrlLoader -> com.bumptech.glide.load.model.stream.HttpGlideUrlLoader:
    28:29:void <clinit>() -> <clinit>
    37:39:void <init>(com.bumptech.glide.load.model.ModelCache) -> <init>
    20:20:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    46:55:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(com.bumptech.glide.load.model.GlideUrl,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    20:20:boolean handles(java.lang.Object) -> handles
    60:60:boolean handles(com.bumptech.glide.load.model.GlideUrl) -> handles
com.bumptech.glide.load.model.stream.HttpGlideUrlLoader$Factory -> com.bumptech.glide.load.model.stream.HttpGlideUrlLoader$Factory:
    64:65:void <init>() -> <init>
    70:70:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader -> com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader:
    24:26:void <init>(android.content.Context) -> <init>
    19:19:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    31:34:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    19:19:boolean handles(java.lang.Object) -> handles
    40:40:boolean handles(android.net.Uri) -> handles
com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader$Factory -> com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader$Factory:
    48:50:void <init>(android.content.Context) -> <init>
    55:55:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader -> com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader:
    31:33:void <init>(android.content.Context) -> <init>
    26:26:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    39:42:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    26:26:boolean handles(java.lang.Object) -> handles
    53:53:boolean handles(android.net.Uri) -> handles
    47:48:boolean isRequestingDefaultFrame(com.bumptech.glide.load.Options) -> isRequestingDefaultFrame
com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader$Factory -> com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader$Factory:
    64:66:void <init>(android.content.Context) -> <init>
    71:71:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader -> com.bumptech.glide.load.model.stream.QMediaStoreUriLoader:
    72:77:void <init>(android.content.Context,com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.load.model.ModelLoader,java.lang.Class) -> <init>
    59:59:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    82:82:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    59:59:boolean handles(java.lang.Object) -> handles
    90:90:boolean handles(android.net.Uri) -> handles
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$Factory -> com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$Factory:
    248:251:void <init>(android.content.Context,java.lang.Class) -> <init>
    256:259:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$FileDescriptorFactory -> com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$FileDescriptorFactory:
    239:240:void <init>(android.content.Context) -> <init>
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$InputStreamFactory -> com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$InputStreamFactory:
    231:232:void <init>(android.content.Context) -> <init>
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher -> com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher:
    94:94:void <clinit>() -> <clinit>
    116:125:void <init>(android.content.Context,com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.load.model.ModelLoader,android.net.Uri,int,int,com.bumptech.glide.load.Options,java.lang.Class) -> <init>
    156:160:com.bumptech.glide.load.model.ModelLoader$LoadData buildDelegateData() -> buildDelegateData
    150:151:com.bumptech.glide.load.data.DataFetcher buildDelegateFetcher() -> buildDelegateFetcher
    174:179:void cancel() -> cancel
    166:170:void cleanup() -> cleanup
    184:184:java.lang.Class getDataClass() -> getDataClass
    190:190:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    222:222:boolean isAccessMediaLocationGranted() -> isAccessMediaLocationGranted
    131:146:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
    195:218:java.io.File queryForFilePath(android.net.Uri) -> queryForFilePath
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher$$ExternalSyntheticApiModelOutline0 -> com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher$$InternalSyntheticApiModelOutline$1$5ed3cff3b7b7f13c184a730a43be378cc8332427fc5ed3bf6dc756cbfc388993$0.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher$$ExternalSyntheticApiModelOutline1 -> com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.net.Uri com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher$$InternalSyntheticApiModelOutline$1$5ed3cff3b7b7f13c184a730a43be378cc8332427fc5ed3bf6dc756cbfc388993$1.m(android.net.Uri) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.model.stream.UrlLoader -> com.bumptech.glide.load.model.stream.UrlLoader:
    23:25:void <init>(com.bumptech.glide.load.model.ModelLoader) -> <init>
    18:18:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    30:30:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.net.URL,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    18:18:boolean handles(java.lang.Object) -> handles
    35:35:boolean handles(java.net.URL) -> handles
com.bumptech.glide.load.model.stream.UrlLoader$StreamFactory -> com.bumptech.glide.load.model.stream.UrlLoader$StreamFactory:
    39:39:void <init>() -> <init>
    44:44:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener -> com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener:
    35:55:void <init>(int,int,com.bumptech.glide.load.Options) -> <init>
    60:129:void onHeaderDecoded(android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source) -> onHeaderDecoded
com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener$1 -> com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener$1:
    75:75:void <init>(com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener) -> <init>
    79:79:boolean onPartialImage(android.graphics.ImageDecoder$DecodeException) -> onPartialImage
com.bumptech.glide.load.resource.SimpleResource -> com.bumptech.glide.load.resource.SimpleResource:
    18:20:void <init>(java.lang.Object) -> <init>
    32:32:java.lang.Object get() -> get
    26:26:java.lang.Class getResourceClass() -> getResourceClass
    37:37:int getSize() -> getSize
    43:43:void recycle() -> recycle
com.bumptech.glide.load.resource.UnitTransformation -> com.bumptech.glide.load.resource.UnitTransformation:
    15:15:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    25:25:com.bumptech.glide.load.resource.UnitTransformation get() -> get
    36:36:com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int) -> transform
    42:42:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder -> com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder:
    44:47:void <init>(android.content.res.Resources,com.bumptech.glide.load.ResourceDecoder) -> <init>
    58:59:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    51:51:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder -> com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder:
    19:22:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.ResourceEncoder) -> <init>
    14:14:boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options) -> encode
    27:27:boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options) -> encode
    33:33:com.bumptech.glide.load.EncodeStrategy getEncodeStrategy(com.bumptech.glide.load.Options) -> getEncodeStrategy
com.bumptech.glide.load.resource.bitmap.BitmapEncoder -> com.bumptech.glide.load.resource.bitmap.BitmapEncoder:
    39:50:void <clinit>() -> <clinit>
    55:57:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    33:33:boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options) -> encode
    70:119:boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options) -> encode
    136:136:com.bumptech.glide.load.EncodeStrategy getEncodeStrategy(com.bumptech.glide.load.Options) -> getEncodeStrategy
    123:129:android.graphics.Bitmap$CompressFormat getFormat(android.graphics.Bitmap,com.bumptech.glide.load.Options) -> getFormat
com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder -> com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder:
    19:21:void <init>() -> <init>
    18:18:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    31:49:com.bumptech.glide.load.engine.Resource decode(android.graphics.ImageDecoder$Source,int,int,com.bumptech.glide.load.Options) -> decode
    18:18:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    25:25:boolean handles(android.graphics.ImageDecoder$Source,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.bitmap.BitmapResource -> com.bumptech.glide.load.resource.bitmap.BitmapResource:
    33:36:void <init>(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> <init>
    13:13:java.lang.Object get() -> get
    47:47:android.graphics.Bitmap get() -> get
    41:41:java.lang.Class getResourceClass() -> getResourceClass
    52:52:int getSize() -> getSize
    62:63:void initialize() -> initialize
    26:29:com.bumptech.glide.load.resource.bitmap.BitmapResource obtain(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> obtain
    57:58:void recycle() -> recycle
com.bumptech.glide.load.resource.bitmap.BitmapTransformation -> com.bumptech.glide.load.resource.bitmap.BitmapTransformation:
    65:65:void <init>() -> <init>
    71:91:com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int) -> transform
com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapDecoder -> com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapDecoder:
    15:17:void <init>(com.bumptech.glide.load.resource.bitmap.Downsampler) -> <init>
    12:12:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    28:28:com.bumptech.glide.load.engine.Resource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.load.Options) -> decode
    12:12:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    21:21:boolean handles(java.nio.ByteBuffer,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapImageDecoderResourceDecoder -> com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapImageDecoderResourceDecoder:
    19:21:void <init>() -> <init>
    18:18:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    32:33:com.bumptech.glide.load.engine.Resource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.load.Options) -> decode
    18:18:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    25:25:boolean handles(java.nio.ByteBuffer,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.bitmap.CenterCrop -> com.bumptech.glide.load.resource.bitmap.CenterCrop:
    17:17:void <clinit>() -> <clinit>
    15:15:void <init>() -> <init>
    27:27:boolean equals(java.lang.Object) -> equals
    32:32:int hashCode() -> hashCode
    22:22:android.graphics.Bitmap transform(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> transform
    37:38:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.resource.bitmap.CenterInside -> com.bumptech.glide.load.resource.bitmap.CenterInside:
    17:17:void <clinit>() -> <clinit>
    15:15:void <init>() -> <init>
    27:27:boolean equals(java.lang.Object) -> equals
    32:32:int hashCode() -> hashCode
    22:22:android.graphics.Bitmap transform(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> transform
    37:38:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser -> com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser:
    36:43:void <clinit>() -> <clinit>
    23:23:void <init>() -> <init>
    435:435:int calcTagOffset(int,int) -> calcTagOffset
    83:85:int getOrientation(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> getOrientation
    91:93:int getOrientation(java.nio.ByteBuffer,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> getOrientation
    219:247:int getOrientation(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> getOrientation
    71:71:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.io.InputStream) -> getType
    77:77:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.nio.ByteBuffer) -> getType
    99:172:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader) -> getType
    439:439:boolean handles(int) -> handles
    279:289:boolean hasJpegExifPreamble(byte[],int) -> hasJpegExifPreamble
    298:338:int moveToExifSegmentAndGetLength(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader) -> moveToExifSegmentAndGetLength
    253:274:int parseExifSegment(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader,byte[],int) -> parseExifSegment
    342:431:int parseExifSegment(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$RandomAccessReader) -> parseExifSegment
    183:207:boolean sniffAvif(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader,int) -> sniffAvif
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$ByteBufferReader -> com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$ByteBufferReader:
    512:515:void <init>(java.nio.ByteBuffer) -> <init>
    527:527:int getUInt16() -> getUInt16
    519:522:short getUInt8() -> getUInt8
    532:537:int read(byte[],int) -> read
    542:544:long skip(long) -> skip
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$RandomAccessReader -> com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$RandomAccessReader:
    447:449:void <init>(byte[],int) -> <init>
    464:464:short getInt16(int) -> getInt16
    460:460:int getInt32(int) -> getInt32
    468:468:boolean isAvailable(int,int) -> isAvailable
    456:456:int length() -> length
    452:453:void order(java.nio.ByteOrder) -> order
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException -> com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException:
    503:504:void <init>() -> <init>
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$StreamReader -> com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$StreamReader:
    552:554:void <init>(java.io.InputStream) -> <init>
    568:568:int getUInt16() -> getUInt16
    558:563:short getUInt8() -> getUInt8
    573:584:int read(byte[],int) -> read
    589:611:long skip(long) -> skip
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy:
    39:101:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$AtLeast -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$AtLeast:
    196:196:void <init>() -> <init>
    208:208:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int) -> getSampleSizeRounding
    201:202:float getScaleFactor(int,int,int,int) -> getScaleFactor
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$AtMost -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$AtMost:
    215:215:void <init>() -> <init>
    235:235:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int) -> getSampleSizeRounding
    220:229:float getScaleFactor(int,int,int,int) -> getScaleFactor
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$CenterInside -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$CenterInside:
    260:260:void <init>() -> <init>
    274:276:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int) -> getSampleSizeRounding
    266:268:float getScaleFactor(int,int,int,int) -> getScaleFactor
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$CenterOutside -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$CenterOutside:
    176:176:void <init>() -> <init>
    189:189:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int) -> getSampleSizeRounding
    181:183:float getScaleFactor(int,int,int,int) -> getScaleFactor
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$FitCenter -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$FitCenter:
    140:140:void <init>() -> <init>
    162:168:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int) -> getSampleSizeRounding
    145:155:float getScaleFactor(int,int,int,int) -> getScaleFactor
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$None -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$None:
    242:242:void <init>() -> <init>
    253:253:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int) -> getSampleSizeRounding
    247:247:float getScaleFactor(int,int,int,int) -> getScaleFactor
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding:
    285:295:void <clinit>() -> <clinit>
    285:285:void <init>(java.lang.String,int) -> <init>
    285:285:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding valueOf(java.lang.String) -> valueOf
    285:285:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding[] values() -> values
com.bumptech.glide.load.resource.bitmap.Downsampler -> com.bumptech.glide.load.resource.bitmap.Downsampler:
    55:135:void <clinit>() -> <clinit>
    141:152:void <init>(java.util.List,android.util.DisplayMetrics,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    658:662:int adjustTargetDensityForError(double) -> adjustTargetDensityForError
    700:735:void calculateConfig(com.bumptech.glide.load.resource.bitmap.ImageReader,com.bumptech.glide.load.DecodeFormat,boolean,boolean,android.graphics.BitmapFactory$Options,int,int) -> calculateConfig
    473:650:void calculateScaling(com.bumptech.glide.load.ImageHeaderParser$ImageType,com.bumptech.glide.load.resource.bitmap.ImageReader,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,int,int,int,int,int,android.graphics.BitmapFactory$Options) -> calculateScaling
    187:187:com.bumptech.glide.load.engine.Resource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.load.Options) -> decode
    222:222:com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks) -> decode
    256:256:com.bumptech.glide.load.engine.Resource decode(android.os.ParcelFileDescriptor,int,int,com.bumptech.glide.load.Options) -> decode
    272:300:com.bumptech.glide.load.engine.Resource decode(com.bumptech.glide.load.resource.bitmap.ImageReader,int,int,com.bumptech.glide.load.Options,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks) -> decode
    315:456:android.graphics.Bitmap decodeFromWrappedStreams(com.bumptech.glide.load.resource.bitmap.ImageReader,android.graphics.BitmapFactory$Options,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.DecodeFormat,com.bumptech.glide.load.PreferredColorSpace,boolean,int,int,boolean,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks) -> decodeFromWrappedStreams
    763:805:android.graphics.Bitmap decodeStream(com.bumptech.glide.load.resource.bitmap.ImageReader,android.graphics.BitmapFactory$Options,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> decodeStream
    859:872:java.lang.String getBitmapString(android.graphics.Bitmap) -> getBitmapString
    927:936:android.graphics.BitmapFactory$Options getDefaultOptions() -> getDefaultOptions
    666:669:int getDensityMultiplier(double) -> getDensityMultiplier
    751:754:int[] getDimensions(com.bumptech.glide.load.resource.bitmap.ImageReader,android.graphics.BitmapFactory$Options,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> getDimensions
    853:853:java.lang.String getInBitmapString(android.graphics.BitmapFactory$Options) -> getInBitmapString
    156:156:boolean handles(java.io.InputStream) -> handles
    161:161:boolean handles(java.nio.ByteBuffer) -> handles
    165:165:boolean handles(android.os.ParcelFileDescriptor) -> handles
    976:976:boolean isRotationRequired(int) -> isRotationRequired
    809:809:boolean isScaling(android.graphics.BitmapFactory$Options) -> isScaling
    823:850:void logDecode(int,int,java.lang.String,android.graphics.BitmapFactory$Options,android.graphics.Bitmap,int,int,long) -> logDecode
    886:895:java.io.IOException newIoExceptionForInBitmapAssertion(java.lang.IllegalArgumentException,int,int,java.lang.String,android.graphics.BitmapFactory$Options) -> newIoExceptionForInBitmapAssertion
    940:944:void releaseOptions(android.graphics.BitmapFactory$Options) -> releaseOptions
    948:966:void resetOptions(android.graphics.BitmapFactory$Options) -> resetOptions
    675:675:int round(double) -> round
    903:924:void setInBitmap(android.graphics.BitmapFactory$Options,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int) -> setInBitmap
    681:682:boolean shouldUsePool(com.bumptech.glide.load.ImageHeaderParser$ImageType) -> shouldUsePool
com.bumptech.glide.load.resource.bitmap.Downsampler$1 -> com.bumptech.glide.load.resource.bitmap.Downsampler$1:
    118:118:void <init>() -> <init>
    127:127:void onDecodeComplete(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap) -> onDecodeComplete
    122:122:void onObtainBounds() -> onObtainBounds
com.bumptech.glide.load.resource.bitmap.DrawableToBitmapConverter -> com.bumptech.glide.load.resource.bitmap.DrawableToBitmapConverter:
    18:18:void <clinit>() -> <clinit>
    33:45:com.bumptech.glide.load.engine.Resource convert(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.drawable.Drawable,int,int) -> convert
    51:87:android.graphics.Bitmap drawToBitmap(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.drawable.Drawable,int,int) -> drawToBitmap
com.bumptech.glide.load.resource.bitmap.DrawableToBitmapConverter$1 -> com.bumptech.glide.load.resource.bitmap.DrawableToBitmapConverter$1:
    19:19:void <init>() -> <init>
    23:23:void put(android.graphics.Bitmap) -> put
com.bumptech.glide.load.resource.bitmap.DrawableTransformation -> com.bumptech.glide.load.resource.bitmap.DrawableTransformation:
    35:38:void <init>(com.bumptech.glide.load.Transformation,boolean) -> <init>
    42:42:com.bumptech.glide.load.Transformation asBitmapDrawable() -> asBitmapDrawable
    81:85:boolean equals(java.lang.Object) -> equals
    90:90:int hashCode() -> hashCode
    74:76:com.bumptech.glide.load.engine.Resource newDrawableResource(android.content.Context,com.bumptech.glide.load.engine.Resource) -> newDrawableResource
    49:67:com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int) -> transform
    95:96:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.resource.bitmap.ExifInterfaceImageHeaderParser -> com.bumptech.glide.load.resource.bitmap.ExifInterfaceImageHeaderParser:
    23:23:void <init>() -> <init>
    40:47:int getOrientation(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> getOrientation
    53:53:int getOrientation(java.nio.ByteBuffer,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> getOrientation
    28:28:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.io.InputStream) -> getType
    34:34:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.nio.ByteBuffer) -> getType
com.bumptech.glide.load.resource.bitmap.FitCenter -> com.bumptech.glide.load.resource.bitmap.FitCenter:
    15:15:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    25:25:boolean equals(java.lang.Object) -> equals
    30:30:int hashCode() -> hashCode
    20:20:android.graphics.Bitmap transform(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> transform
    35:36:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.resource.bitmap.HardwareConfigState -> com.bumptech.glide.load.resource.bitmap.HardwareConfigState:
    28:86:void <clinit>() -> <clinit>
    95:127:void <init>() -> <init>
    203:204:boolean areHardwareBitmapsBlockedByAppState() -> areHardwareBitmapsBlockedByAppState
    107:114:com.bumptech.glide.load.resource.bitmap.HardwareConfigState getInstance() -> getInstance
    294:296:int getMaxFdCount() -> getMaxFdCount
    299:317:boolean isFdSizeBelowHardwareLimit() -> isFdSizeBelowHardwareLimit
    149:199:boolean isHardwareConfigAllowed(int,int,boolean,boolean) -> isHardwareConfigAllowed
    225:225:boolean isHardwareConfigAllowedByDeviceModel() -> isHardwareConfigAllowedByDeviceModel
    259:290:boolean isHardwareConfigDisallowedByB112551574() -> isHardwareConfigDisallowedByB112551574
    229:255:boolean isHardwareConfigDisallowedByB147430447() -> isHardwareConfigDisallowedByB147430447
    214:221:boolean setHardwareConfigIfAllowed(int,int,android.graphics.BitmapFactory$Options,boolean,boolean) -> setHardwareConfigIfAllowed
com.bumptech.glide.load.resource.bitmap.ImageReader$ByteBufferReader -> com.bumptech.glide.load.resource.bitmap.ImageReader$ByteBufferReader:
    147:151:void <init>(java.nio.ByteBuffer,java.util.List,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    156:156:android.graphics.Bitmap decodeBitmap(android.graphics.BitmapFactory$Options) -> decodeBitmap
    166:167:int getImageOrientation() -> getImageOrientation
    161:161:com.bumptech.glide.load.ImageHeaderParser$ImageType getImageType() -> getImageType
    171:171:void stopGrowingBuffers() -> stopGrowingBuffers
    174:174:java.io.InputStream stream() -> stream
com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader -> com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader:
    184:189:void <init>(java.io.InputStream,java.util.List,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    194:194:android.graphics.Bitmap decodeBitmap(android.graphics.BitmapFactory$Options) -> decodeBitmap
    204:205:int getImageOrientation() -> getImageOrientation
    199:199:com.bumptech.glide.load.ImageHeaderParser$ImageType getImageType() -> getImageType
    210:211:void stopGrowingBuffers() -> stopGrowingBuffers
com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader -> com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader:
    223:228:void <init>(android.os.ParcelFileDescriptor,java.util.List,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    233:234:android.graphics.Bitmap decodeBitmap(android.graphics.BitmapFactory$Options) -> decodeBitmap
    244:244:int getImageOrientation() -> getImageOrientation
    239:239:com.bumptech.glide.load.ImageHeaderParser$ImageType getImageType() -> getImageType
    250:250:void stopGrowingBuffers() -> stopGrowingBuffers
com.bumptech.glide.load.resource.bitmap.InputStreamBitmapImageDecoderResourceDecoder -> com.bumptech.glide.load.resource.bitmap.InputStreamBitmapImageDecoderResourceDecoder:
    18:20:void <init>() -> <init>
    17:17:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    31:33:com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options) -> decode
    17:17:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    24:24:boolean handles(java.io.InputStream,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource -> com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource:
    57:60:void <init>(android.content.res.Resources,com.bumptech.glide.load.engine.Resource) -> <init>
    19:19:java.lang.Object get() -> get
    71:71:android.graphics.drawable.BitmapDrawable get() -> get
    65:65:java.lang.Class getResourceClass() -> getResourceClass
    76:76:int getSize() -> getSize
    86:89:void initialize() -> initialize
    50:53:com.bumptech.glide.load.engine.Resource obtain(android.content.res.Resources,com.bumptech.glide.load.engine.Resource) -> obtain
    81:82:void recycle() -> recycle
com.bumptech.glide.load.resource.bitmap.ParcelFileDescriptorBitmapDecoder -> com.bumptech.glide.load.resource.bitmap.ParcelFileDescriptorBitmapDecoder:
    27:29:void <init>(com.bumptech.glide.load.resource.bitmap.Downsampler) -> <init>
    15:15:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    49:49:com.bumptech.glide.load.engine.Resource decode(android.os.ParcelFileDescriptor,int,int,com.bumptech.glide.load.Options) -> decode
    15:15:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    33:33:boolean handles(android.os.ParcelFileDescriptor,com.bumptech.glide.load.Options) -> handles
    37:41:boolean isSafeToTryDecoding(android.os.ParcelFileDescriptor) -> isSafeToTryDecoding
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream -> com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream:
    62:63:void <init>(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    54:71:void <init>(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,int) -> <init>
    83:88:int available() -> available
    123:132:void close() -> close
    135:175:int fillbuf(java.io.InputStream,byte[]) -> fillbuf
    104:106:void fixMarkLimit() -> fixMarkLimit
    192:195:void mark(int) -> mark
    207:207:boolean markSupported() -> markSupported
    222:246:int read() -> read
    266:328:int read(byte[],int,int) -> read
    108:113:void release() -> release
    339:348:void reset() -> reset
    360:403:long skip(long) -> skip
    92:92:java.io.IOException streamClosed() -> streamClosed
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream$InvalidMarkException -> com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream$InvalidMarkException:
    414:415:void <init>(java.lang.String) -> <init>
com.bumptech.glide.load.resource.bitmap.ResourceBitmapDecoder -> com.bumptech.glide.load.resource.bitmap.ResourceBitmapDecoder:
    35:38:void <init>(com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> <init>
    30:30:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    49:54:com.bumptech.glide.load.engine.Resource decode(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> decode
    30:30:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    42:42:boolean handles(android.net.Uri,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder -> com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder:
    23:26:void <init>(com.bumptech.glide.load.resource.bitmap.Downsampler,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    18:18:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    41:68:com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options) -> decode
    18:18:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    30:30:boolean handles(java.io.InputStream,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder$UntrustedCallbacks -> com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder$UntrustedCallbacks:
    81:84:void <init>(com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream,com.bumptech.glide.util.ExceptionPassthroughInputStream) -> <init>
    100:107:void onDecodeComplete(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap) -> onDecodeComplete
    91:92:void onObtainBounds() -> onObtainBounds
com.bumptech.glide.load.resource.bitmap.TransformationUtils -> com.bumptech.glide.load.resource.bitmap.TransformationUtils:
    38:91:void <clinit>() -> <clinit>
    583:591:void applyMatrix(android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Matrix) -> applyMatrix
    114:140:android.graphics.Bitmap centerCrop(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> centerCrop
    217:226:android.graphics.Bitmap centerInside(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> centerInside
    573:574:void clear(android.graphics.Canvas) -> clear
    156:201:android.graphics.Bitmap fitCenter(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> fitCenter
    98:98:java.util.concurrent.locks.Lock getBitmapDrawableLock() -> getBitmapDrawableLock
    284:301:int getExifOrientationDegrees(int) -> getExifOrientationDegrees
    578:578:android.graphics.Bitmap$Config getNonNullConfig(android.graphics.Bitmap) -> getNonNullConfig
    595:623:void initializeMatrixForRotation(int,android.graphics.Matrix) -> initializeMatrixForRotation
    344:354:boolean isExifOrientationRequired(int) -> isExifOrientationRequired
    314:336:android.graphics.Bitmap rotateImageExif(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int) -> rotateImageExif
    240:241:void setAlpha(android.graphics.Bitmap,android.graphics.Bitmap) -> setAlpha
com.bumptech.glide.load.resource.bitmap.TransformationUtils$NoLock -> com.bumptech.glide.load.resource.bitmap.TransformationUtils$NoLock:
    634:634:void <init>() -> <init>
    639:639:void lock() -> lock
    644:644:void lockInterruptibly() -> lockInterruptibly
    664:664:java.util.concurrent.locks.Condition newCondition() -> newCondition
    648:648:boolean tryLock() -> tryLock
    653:653:boolean tryLock(long,java.util.concurrent.TimeUnit) -> tryLock
    659:659:void unlock() -> unlock
com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder -> com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder:
    14:14:void <init>() -> <init>
    14:14:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    24:24:com.bumptech.glide.load.engine.Resource decode(android.graphics.Bitmap,int,int,com.bumptech.glide.load.Options) -> decode
    14:14:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    18:18:boolean handles(android.graphics.Bitmap,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder$NonOwnedBitmapResource -> com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder$NonOwnedBitmapResource:
    31:33:void <init>(android.graphics.Bitmap) -> <init>
    27:27:java.lang.Object get() -> get
    44:44:android.graphics.Bitmap get() -> get
    38:38:java.lang.Class getResourceClass() -> getResourceClass
    49:49:int getSize() -> getSize
    55:55:void recycle() -> recycle
com.bumptech.glide.load.resource.bitmap.VideoDecoder -> com.bumptech.glide.load.resource.bitmap.VideoDecoder:
    62:126:void <clinit>() -> <clinit>
    146:147:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverInitializer) -> <init>
    153:157:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverInitializer,com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverFactory) -> <init>
    133:133:com.bumptech.glide.load.ResourceDecoder asset(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> asset
    142:142:com.bumptech.glide.load.ResourceDecoder byteBuffer(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> byteBuffer
    268:301:android.graphics.Bitmap correctHdr180DegVideoFrameOrientation(android.media.MediaMetadataRetriever,android.graphics.Bitmap) -> correctHdr180DegVideoFrameOrientation
    171:205:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    216:249:android.graphics.Bitmap decodeFrame(android.media.MediaMetadataRetriever,long,int,int,int,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy) -> decodeFrame
    402:402:android.graphics.Bitmap decodeOriginalFrame(android.media.MediaMetadataRetriever,long,int) -> decodeOriginalFrame
    356:396:android.graphics.Bitmap decodeScaledFrame(android.media.MediaMetadataRetriever,long,int,int,int,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy) -> decodeScaledFrame
    164:164:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    309:317:boolean isHDR(android.media.MediaMetadataRetriever) -> isHDR
    326:329:boolean isHdr180RotationFixRequired() -> isHdr180RotationFixRequired
    338:343:boolean isTBuildRequiringRotationFix() -> isTBuildRequiringRotationFix
    137:137:com.bumptech.glide.load.ResourceDecoder parcel(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> parcel
com.bumptech.glide.load.resource.bitmap.VideoDecoder$$ExternalSyntheticApiModelOutline0 -> com.bumptech.glide.load.resource.bitmap.VideoDecoder$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void com.bumptech.glide.load.resource.bitmap.VideoDecoder$$InternalSyntheticApiModelOutline$1$36185dc1ee3bfd23c4df00c5d813bfbc50c21c1abc12b09e8df223547e1c501e$0.m(android.media.MediaMetadataRetriever) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.resource.bitmap.VideoDecoder$$ExternalSyntheticApiModelOutline1 -> com.bumptech.glide.load.resource.bitmap.VideoDecoder$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.graphics.Bitmap com.bumptech.glide.load.resource.bitmap.VideoDecoder$$InternalSyntheticApiModelOutline$2$12c47324c121d2c1bbe3d56f4d2e057087043dcebc57b50cd496f5d325cc1f31$0.m(android.media.MediaMetadataRetriever,long,int,int,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.resource.bitmap.VideoDecoder$1 -> com.bumptech.glide.load.resource.bitmap.VideoDecoder$1:
    66:67:void <init>() -> <init>
    66:66:void update(byte[],java.lang.Object,java.security.MessageDigest) -> update
    74:79:void update(byte[],java.lang.Long,java.security.MessageDigest) -> update
com.bumptech.glide.load.resource.bitmap.VideoDecoder$2 -> com.bumptech.glide.load.resource.bitmap.VideoDecoder$2:
    96:97:void <init>() -> <init>
    96:96:void update(byte[],java.lang.Object,java.security.MessageDigest) -> update
    105:113:void update(byte[],java.lang.Integer,java.security.MessageDigest) -> update
com.bumptech.glide.load.resource.bitmap.VideoDecoder$AssetFileDescriptorInitializer -> com.bumptech.glide.load.resource.bitmap.VideoDecoder$AssetFileDescriptorInitializer:
    417:417:void <init>() -> <init>
    417:417:void <init>(com.bumptech.glide.load.resource.bitmap.VideoDecoder$1) -> <init>
    417:417:void initialize(android.media.MediaMetadataRetriever,java.lang.Object) -> initialize
    422:423:void initialize(android.media.MediaMetadataRetriever,android.content.res.AssetFileDescriptor) -> initialize
com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer -> com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer:
    437:437:void <init>() -> <init>
    436:436:void initialize(android.media.MediaMetadataRetriever,java.lang.Object) -> initialize
    442:463:void initialize(android.media.MediaMetadataRetriever,java.nio.ByteBuffer) -> initialize
com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer$1 -> com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer$1:
    443:443:void <init>(com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer,java.nio.ByteBuffer) -> <init>
    461:461:void close() -> close
    457:457:long getSize() -> getSize
    446:452:int readAt(long,byte[],int,int) -> readAt
com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverFactory -> com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverFactory:
    406:406:void <init>() -> <init>
    408:408:android.media.MediaMetadataRetriever build() -> build
com.bumptech.glide.load.resource.bitmap.VideoDecoder$ParcelFileDescriptorInitializer -> com.bumptech.glide.load.resource.bitmap.VideoDecoder$ParcelFileDescriptorInitializer:
    427:427:void <init>() -> <init>
    427:427:void initialize(android.media.MediaMetadataRetriever,java.lang.Object) -> initialize
    432:433:void initialize(android.media.MediaMetadataRetriever,android.os.ParcelFileDescriptor) -> initialize
com.bumptech.glide.load.resource.bitmap.VideoDecoder$VideoDecoderException -> com.bumptech.glide.load.resource.bitmap.VideoDecoder$VideoDecoderException:
    471:474:void <init>() -> <init>
com.bumptech.glide.load.resource.bytes.ByteBufferRewinder -> com.bumptech.glide.load.resource.bytes.ByteBufferRewinder:
    13:15:void <init>(java.nio.ByteBuffer) -> <init>
    27:27:void cleanup() -> cleanup
    8:8:java.lang.Object rewindAndGet() -> rewindAndGet
    20:21:java.nio.ByteBuffer rewindAndGet() -> rewindAndGet
com.bumptech.glide.load.resource.bytes.ByteBufferRewinder$Factory -> com.bumptech.glide.load.resource.bytes.ByteBufferRewinder$Factory:
    30:30:void <init>() -> <init>
    30:30:com.bumptech.glide.load.data.DataRewinder build(java.lang.Object) -> build
    35:35:com.bumptech.glide.load.data.DataRewinder build(java.nio.ByteBuffer) -> build
    41:41:java.lang.Class getDataClass() -> getDataClass
com.bumptech.glide.load.resource.bytes.BytesResource -> com.bumptech.glide.load.resource.bytes.BytesResource:
    11:13:void <init>(byte[]) -> <init>
    8:8:java.lang.Object get() -> get
    34:34:byte[] get() -> get
    18:18:java.lang.Class getResourceClass() -> getResourceClass
    39:39:int getSize() -> getSize
    45:45:void recycle() -> recycle
com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder -> com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder:
    48:51:void <init>(java.util.List,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    44:44:com.bumptech.glide.load.ResourceDecoder byteBufferDecoder(java.util.List,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> byteBufferDecoder
    70:77:com.bumptech.glide.load.engine.Resource decode(android.graphics.ImageDecoder$Source,int,int,com.bumptech.glide.load.Options) -> decode
    55:55:boolean handles(java.nio.ByteBuffer) -> handles
    60:60:boolean handles(java.io.InputStream) -> handles
    64:64:boolean isHandled(com.bumptech.glide.load.ImageHeaderParser$ImageType) -> isHandled
    39:39:com.bumptech.glide.load.ResourceDecoder streamDecoder(java.util.List,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> streamDecoder
com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder$AnimatedImageDrawableResource -> com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder$AnimatedImageDrawableResource:
    86:88:void <init>(android.graphics.drawable.AnimatedImageDrawable) -> <init>
    80:80:java.lang.Object get() -> get
    99:99:android.graphics.drawable.AnimatedImageDrawable get() -> get
    93:93:java.lang.Class getResourceClass() -> getResourceClass
    104:106:int getSize() -> getSize
    112:114:void recycle() -> recycle
com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder$ByteBufferAnimatedWebpDecoder -> com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder$ByteBufferAnimatedWebpDecoder:
    146:148:void <init>(com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder) -> <init>
    141:141:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    160:161:com.bumptech.glide.load.engine.Resource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.load.Options) -> decode
    141:141:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    153:153:boolean handles(java.nio.ByteBuffer,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder$StreamAnimatedWebpDecoder -> com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder$StreamAnimatedWebpDecoder:
    122:124:void <init>(com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder) -> <init>
    117:117:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    136:137:com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options) -> decode
    117:117:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    129:129:boolean handles(java.io.InputStream,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.drawable.DrawableDecoderCompat -> com.bumptech.glide.load.resource.drawable.DrawableDecoderCompat:
    19:19:void <clinit>() -> <clinit>
    28:28:android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.Context,int) -> getDrawable
    40:40:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,android.content.res.Resources$Theme) -> getDrawable
    48:63:android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.Context,int,android.content.res.Resources$Theme) -> getDrawable
    74:75:android.graphics.drawable.Drawable loadDrawableV4(android.content.Context,int,android.content.res.Resources$Theme) -> loadDrawableV4
    68:69:android.graphics.drawable.Drawable loadDrawableV7(android.content.Context,int,android.content.res.Resources$Theme) -> loadDrawableV7
com.bumptech.glide.load.resource.drawable.DrawableResource -> com.bumptech.glide.load.resource.drawable.DrawableResource:
    26:28:void <init>(android.graphics.drawable.Drawable) -> <init>
    23:23:java.lang.Object get() -> get
    34:42:android.graphics.drawable.Drawable get() -> get
    47:52:void initialize() -> initialize
com.bumptech.glide.load.resource.drawable.NonOwnedDrawableResource -> com.bumptech.glide.load.resource.drawable.NonOwnedDrawableResource:
    21:22:void <init>(android.graphics.drawable.Drawable) -> <init>
    28:28:java.lang.Class getResourceClass() -> getResourceClass
    35:35:int getSize() -> getSize
    17:17:com.bumptech.glide.load.engine.Resource newInstance(android.graphics.drawable.Drawable) -> newInstance
    41:41:void recycle() -> recycle
com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder -> com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder:
    31:32:void <clinit>() -> <clinit>
    56:58:void <init>(android.content.Context) -> <init>
    28:28:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    69:81:com.bumptech.glide.load.engine.Resource decode(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> decode
    87:99:android.content.Context findContextForPackage(android.net.Uri,java.lang.String) -> findContextForPackage
    136:140:int findResourceIdFromResourceIdUri(android.net.Uri) -> findResourceIdFromResourceIdUri
    119:130:int findResourceIdFromTypeAndNameResourceUri(android.content.Context,android.net.Uri) -> findResourceIdFromTypeAndNameResourceUri
    106:112:int findResourceIdFromUri(android.content.Context,android.net.Uri) -> findResourceIdFromUri
    28:28:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    62:62:boolean handles(android.net.Uri,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.drawable.UnitDrawableDecoder -> com.bumptech.glide.load.resource.drawable.UnitDrawableDecoder:
    11:11:void <init>() -> <init>
    11:11:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    21:21:com.bumptech.glide.load.engine.Resource decode(android.graphics.drawable.Drawable,int,int,com.bumptech.glide.load.Options) -> decode
    11:11:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    14:14:boolean handles(android.graphics.drawable.Drawable,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.file.FileDecoder -> com.bumptech.glide.load.resource.file.FileDecoder:
    13:13:void <init>() -> <init>
    13:13:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    23:23:com.bumptech.glide.load.engine.Resource decode(java.io.File,int,int,com.bumptech.glide.load.Options) -> decode
    13:13:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    17:17:boolean handles(java.io.File,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.file.FileResource -> com.bumptech.glide.load.resource.file.FileResource:
    11:12:void <init>(java.io.File) -> <init>
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder -> com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder:
    37:38:void <clinit>() -> <clinit>
    61:62:void <init>(android.content.Context,java.util.List,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    71:77:void <init>(android.content.Context,java.util.List,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifHeaderParserPool,com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifDecoderFactory) -> <init>
    35:35:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    88:93:com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.load.Options) -> decode
    99:131:com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.load.Options) -> decode
    135:158:int getSampleSize(com.bumptech.glide.gifdecoder.GifHeader,int,int) -> getSampleSize
    35:35:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    81:82:boolean handles(java.nio.ByteBuffer,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifDecoderFactory -> com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifDecoderFactory:
    162:162:void <init>() -> <init>
    165:165:com.bumptech.glide.gifdecoder.GifDecoder build(com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.gifdecoder.GifHeader,java.nio.ByteBuffer,int) -> build
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifHeaderParserPool -> com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifHeaderParserPool:
    170:171:void <init>() -> <init>
    173:178:com.bumptech.glide.gifdecoder.GifHeaderParser obtain(java.nio.ByteBuffer) -> obtain
    181:184:void release(com.bumptech.glide.gifdecoder.GifHeaderParser) -> release
com.bumptech.glide.load.resource.gif.GifBitmapProvider -> com.bumptech.glide.load.resource.gif.GifBitmapProvider:
    29:32:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    37:37:android.graphics.Bitmap obtain(int,int,android.graphics.Bitmap$Config) -> obtain
    48:51:byte[] obtainByteArray(int) -> obtainByteArray
    65:68:int[] obtainIntArray(int) -> obtainIntArray
    42:43:void release(android.graphics.Bitmap) -> release
    56:60:void release(byte[]) -> release
    74:78:void release(int[]) -> release
com.bumptech.glide.load.resource.gif.GifDrawable -> com.bumptech.glide.load.resource.gif.GifDrawable:
    128:138:void <init>(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,com.bumptech.glide.load.Transformation,int,int,android.graphics.Bitmap) -> <init>
    61:142:void <init>(com.bumptech.glide.load.resource.gif.GifDrawable$GifState) -> <init>
    281:292:void draw(android.graphics.Canvas) -> draw
    326:330:android.graphics.drawable.Drawable$Callback findCallback() -> findCallback
    170:170:java.nio.ByteBuffer getBuffer() -> getBuffer
    363:363:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    305:308:android.graphics.Rect getDestRect() -> getDestRect
    155:155:android.graphics.Bitmap getFirstFrame() -> getFirstFrame
    174:174:int getFrameCount() -> getFrameCount
    184:184:int getFrameIndex() -> getFrameIndex
    260:260:int getIntrinsicHeight() -> getIntrinsicHeight
    255:255:int getIntrinsicWidth() -> getIntrinsicWidth
    321:321:int getOpacity() -> getOpacity
    312:315:android.graphics.Paint getPaint() -> getPaint
    151:151:int getSize() -> getSize
    265:265:boolean isRunning() -> isRunning
    354:359:void notifyAnimationEndToListeners() -> notifyAnimationEndToListeners
    275:277:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    335:351:void onFrameReady() -> onFrameReady
    368:370:void recycle() -> recycle
    188:189:void resetLoopCount() -> resetLoopCount
    296:297:void setAlpha(int) -> setAlpha
    301:302:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    162:163:void setFrameTransformation(com.bumptech.glide.load.Transformation,android.graphics.Bitmap) -> setFrameTransformation
    239:250:boolean setVisible(boolean,boolean) -> setVisible
    204:209:void start() -> start
    218:230:void startRunning() -> startRunning
    213:215:void stop() -> stop
    233:235:void stopRunning() -> stopRunning
com.bumptech.glide.load.resource.gif.GifDrawable$GifState -> com.bumptech.glide.load.resource.gif.GifDrawable$GifState:
    434:436:void <init>(com.bumptech.glide.load.resource.gif.GifFrameLoader) -> <init>
    452:452:int getChangingConfigurations() -> getChangingConfigurations
    441:441:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    447:447:android.graphics.drawable.Drawable newDrawable() -> newDrawable
com.bumptech.glide.load.resource.gif.GifDrawableEncoder -> com.bumptech.glide.load.resource.gif.GifDrawableEncoder:
    17:17:void <init>() -> <init>
    17:17:boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options) -> encode
    29:39:boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options) -> encode
    23:23:com.bumptech.glide.load.EncodeStrategy getEncodeStrategy(com.bumptech.glide.load.Options) -> getEncodeStrategy
com.bumptech.glide.load.resource.gif.GifDrawableResource -> com.bumptech.glide.load.resource.gif.GifDrawableResource:
    12:13:void <init>(com.bumptech.glide.load.resource.gif.GifDrawable) -> <init>
    18:18:java.lang.Class getResourceClass() -> getResourceClass
    23:23:int getSize() -> getSize
    34:35:void initialize() -> initialize
    28:30:void recycle() -> recycle
com.bumptech.glide.load.resource.gif.GifDrawableTransformation -> com.bumptech.glide.load.resource.gif.GifDrawableTransformation:
    22:24:void <init>(com.bumptech.glide.load.Transformation) -> <init>
    55:59:boolean equals(java.lang.Object) -> equals
    64:64:int hashCode() -> hashCode
    33:50:com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int) -> transform
    69:70:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.resource.gif.GifFrameLoader -> com.bumptech.glide.load.resource.gif.GifFrameLoader:
    71:79:void <init>(com.bumptech.glide.Glide,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.Transformation,android.graphics.Bitmap) -> <init>
    37:101:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.RequestManager,com.bumptech.glide.gifdecoder.GifDecoder,android.os.Handler,com.bumptech.glide.RequestBuilder,com.bumptech.glide.load.Transformation,android.graphics.Bitmap) -> <init>
    185:202:void clear() -> clear
    159:159:java.nio.ByteBuffer getBuffer() -> getBuffer
    205:205:android.graphics.Bitmap getCurrentFrame() -> getCurrentFrame
    155:155:int getCurrentIndex() -> getCurrentIndex
    118:118:android.graphics.Bitmap getFirstFrame() -> getFirstFrame
    163:163:int getFrameCount() -> getFrameCount
    363:363:com.bumptech.glide.load.Key getFrameSignature() -> getFrameSignature
    147:147:int getHeight() -> getHeight
    351:357:com.bumptech.glide.RequestBuilder getRequestBuilder(com.bumptech.glide.RequestManager,int,int) -> getRequestBuilder
    151:151:int getSize() -> getSize
    143:143:int getWidth() -> getWidth
    209:233:void loadNextFrame() -> loadNextFrame
    258:295:void onFrameReady(com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget) -> onFrameReady
    236:240:void recycleFirstFrame() -> recycleFirstFrame
    104:111:void setFrameTransformation(com.bumptech.glide.load.Transformation,android.graphics.Bitmap) -> setFrameTransformation
    171:178:void start() -> start
    181:182:void stop() -> stop
    122:133:void subscribe(com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback) -> subscribe
    136:140:void unsubscribe(com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback) -> unsubscribe
com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget -> com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget:
    325:329:void <init>(android.os.Handler,int,long) -> <init>
    332:332:android.graphics.Bitmap getResource() -> getResource
    345:346:void onLoadCleared(android.graphics.drawable.Drawable) -> onLoadCleared
    318:318:void onResourceReady(java.lang.Object,com.bumptech.glide.request.transition.Transition) -> onResourceReady
    338:341:void onResourceReady(android.graphics.Bitmap,com.bumptech.glide.request.transition.Transition) -> onResourceReady
com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameLoaderCallback -> com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameLoaderCallback:
    302:302:void <init>(com.bumptech.glide.load.resource.gif.GifFrameLoader) -> <init>
    306:314:boolean handleMessage(android.os.Message) -> handleMessage
com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder -> com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder:
    19:21:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> <init>
    16:16:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    31:32:com.bumptech.glide.load.engine.Resource decode(com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.Options) -> decode
    16:16:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    25:25:boolean handles(com.bumptech.glide.gifdecoder.GifDecoder,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.gif.GifOptions -> com.bumptech.glide.load.resource.gif.GifOptions:
    16:26:void <clinit>() -> <clinit>
com.bumptech.glide.load.resource.gif.StreamGifDecoder -> com.bumptech.glide.load.resource.gif.StreamGifDecoder:
    33:37:void <init>(java.util.List,com.bumptech.glide.load.ResourceDecoder,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    23:23:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    49:54:com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options) -> decode
    23:23:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    41:42:boolean handles(java.io.InputStream,com.bumptech.glide.load.Options) -> handles
    58:73:byte[] inputStreamToBytes(java.io.InputStream) -> inputStreamToBytes
com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder -> com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder:
    21:22:void <init>() -> <init>
    26:29:void <init>(android.graphics.Bitmap$CompressFormat,int) -> <init>
    35:38:com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.Options) -> transcode
com.bumptech.glide.load.resource.transcode.BitmapDrawableTranscoder -> com.bumptech.glide.load.resource.transcode.BitmapDrawableTranscoder:
    37:39:void <init>(android.content.res.Resources) -> <init>
    45:45:com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.Options) -> transcode
com.bumptech.glide.load.resource.transcode.DrawableBytesTranscoder -> com.bumptech.glide.load.resource.transcode.DrawableBytesTranscoder:
    26:30:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.transcode.ResourceTranscoder,com.bumptech.glide.load.resource.transcode.ResourceTranscoder) -> <init>
    49:49:com.bumptech.glide.load.engine.Resource toGifDrawableResource(com.bumptech.glide.load.engine.Resource) -> toGifDrawableResource
    36:43:com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.Options) -> transcode
com.bumptech.glide.load.resource.transcode.GifDrawableBytesTranscoder -> com.bumptech.glide.load.resource.transcode.GifDrawableBytesTranscoder:
    17:17:void <init>() -> <init>
    22:24:com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.Options) -> transcode
com.bumptech.glide.load.resource.transcode.TranscoderRegistry -> com.bumptech.glide.load.resource.transcode.TranscoderRegistry:
    12:13:void <init>() -> <init>
    48:58:com.bumptech.glide.load.resource.transcode.ResourceTranscoder get(java.lang.Class,java.lang.Class) -> get
    65:80:java.util.List getTranscodeClasses(java.lang.Class,java.lang.Class) -> getTranscodeClasses
    28:30:void register(java.lang.Class,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder) -> register
com.bumptech.glide.load.resource.transcode.TranscoderRegistry$Entry -> com.bumptech.glide.load.resource.transcode.TranscoderRegistry$Entry:
    91:95:void <init>(java.lang.Class,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder) -> <init>
    104:104:boolean handles(java.lang.Class,java.lang.Class) -> handles
com.bumptech.glide.load.resource.transcode.UnitTranscoder -> com.bumptech.glide.load.resource.transcode.UnitTranscoder:
    14:14:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    18:18:com.bumptech.glide.load.resource.transcode.ResourceTranscoder get() -> get
    24:24:com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.Options) -> transcode
com.bumptech.glide.manager.ActivityFragmentLifecycle -> com.bumptech.glide.manager.ActivityFragmentLifecycle:
    13:15:void <init>() -> <init>
    32:41:void addListener(com.bumptech.glide.manager.LifecycleListener) -> addListener
    63:67:void onDestroy() -> onDestroy
    49:53:void onStart() -> onStart
    56:60:void onStop() -> onStop
    45:46:void removeListener(com.bumptech.glide.manager.LifecycleListener) -> removeListener
com.bumptech.glide.manager.ApplicationLifecycle -> com.bumptech.glide.manager.ApplicationLifecycle:
    12:12:void <init>() -> <init>
    15:16:void addListener(com.bumptech.glide.manager.LifecycleListener) -> addListener
    21:21:void removeListener(com.bumptech.glide.manager.LifecycleListener) -> removeListener
com.bumptech.glide.manager.DefaultConnectivityMonitor -> com.bumptech.glide.manager.DefaultConnectivityMonitor:
    19:22:void <init>(android.content.Context,com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener) -> <init>
    45:45:void onDestroy() -> onDestroy
    34:35:void onStart() -> onStart
    39:40:void onStop() -> onStop
    25:26:void register() -> register
    29:30:void unregister() -> unregister
com.bumptech.glide.manager.DefaultConnectivityMonitorFactory -> com.bumptech.glide.manager.DefaultConnectivityMonitorFactory:
    15:15:void <init>() -> <init>
    23:34:com.bumptech.glide.manager.ConnectivityMonitor build(android.content.Context,com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener) -> build
com.bumptech.glide.manager.DoNothingFirstFrameWaiter -> com.bumptech.glide.manager.DoNothingFirstFrameWaiter:
    5:5:void <init>() -> <init>
    10:10:void registerSelf(android.app.Activity) -> registerSelf
com.bumptech.glide.manager.EmptyRequestManagerTreeNode -> com.bumptech.glide.manager.EmptyRequestManagerTreeNode:
    9:9:void <init>() -> <init>
    13:13:java.util.Set getDescendants() -> getDescendants
com.bumptech.glide.manager.FirstFrameAndAfterTrimMemoryWaiter -> com.bumptech.glide.manager.FirstFrameAndAfterTrimMemoryWaiter:
    11:11:void <init>() -> <init>
    20:20:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    24:25:void onLowMemory() -> onLowMemory
    17:17:void onTrimMemory(int) -> onTrimMemory
    14:14:void registerSelf(android.app.Activity) -> registerSelf
com.bumptech.glide.manager.FirstFrameWaiter -> com.bumptech.glide.manager.FirstFrameWaiter:
    8:8:void <init>() -> <init>
    11:11:void registerSelf(android.app.Activity) -> registerSelf
com.bumptech.glide.manager.LifecycleLifecycle -> com.bumptech.glide.manager.LifecycleLifecycle:
    15:23:void <init>(androidx.lifecycle.Lifecycle) -> <init>
    49:58:void addListener(com.bumptech.glide.manager.LifecycleListener) -> addListener
    41:45:void onDestroy(androidx.lifecycle.LifecycleOwner) -> onDestroy
    27:30:void onStart(androidx.lifecycle.LifecycleOwner) -> onStart
    34:37:void onStop(androidx.lifecycle.LifecycleOwner) -> onStop
    62:63:void removeListener(com.bumptech.glide.manager.LifecycleListener) -> removeListener
com.bumptech.glide.manager.LifecycleRequestManagerRetriever -> com.bumptech.glide.manager.LifecycleRequestManagerRetriever:
    20:25:void <init>(com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory) -> <init>
    28:29:com.bumptech.glide.RequestManager getOnly(androidx.lifecycle.Lifecycle) -> getOnly
    38:69:com.bumptech.glide.RequestManager getOrCreate(android.content.Context,com.bumptech.glide.Glide,androidx.lifecycle.Lifecycle,androidx.fragment.app.FragmentManager,boolean) -> getOrCreate
com.bumptech.glide.manager.LifecycleRequestManagerRetriever$1 -> com.bumptech.glide.manager.LifecycleRequestManagerRetriever$1:
    50:50:void <init>(com.bumptech.glide.manager.LifecycleRequestManagerRetriever,androidx.lifecycle.Lifecycle) -> <init>
    59:60:void onDestroy() -> onDestroy
    52:52:void onStart() -> onStart
    55:55:void onStop() -> onStop
com.bumptech.glide.manager.LifecycleRequestManagerRetriever$SupportRequestManagerTreeNode -> com.bumptech.glide.manager.LifecycleRequestManagerRetriever$SupportRequestManagerTreeNode:
    75:77:void <init>(com.bumptech.glide.manager.LifecycleRequestManagerRetriever,androidx.fragment.app.FragmentManager) -> <init>
    89:98:void getChildFragmentsRecursive(androidx.fragment.app.FragmentManager,java.util.Set) -> getChildFragmentsRecursive
    82:84:java.util.Set getDescendants() -> getDescendants
com.bumptech.glide.manager.NullConnectivityMonitor -> com.bumptech.glide.manager.NullConnectivityMonitor:
    4:4:void <init>() -> <init>
    19:19:void onDestroy() -> onDestroy
    9:9:void onStart() -> onStart
    14:14:void onStop() -> onStop
com.bumptech.glide.manager.RequestManagerFragment -> com.bumptech.glide.manager.RequestManagerFragment:
    48:49:void <init>() -> <init>
    33:55:void <init>(com.bumptech.glide.manager.ActivityFragmentLifecycle) -> <init>
    85:86:void addChildRequestManagerFragment(com.bumptech.glide.manager.RequestManagerFragment) -> addChildRequestManagerFragment
    102:117:java.util.Set getDescendantRequestManagerFragments() -> getDescendantRequestManagerFragments
    68:68:com.bumptech.glide.manager.ActivityFragmentLifecycle getGlideLifecycle() -> getGlideLifecycle
    136:141:android.app.Fragment getParentFragmentUsingHint() -> getParentFragmentUsingHint
    74:74:com.bumptech.glide.RequestManager getRequestManager() -> getRequestManager
    80:80:com.bumptech.glide.manager.RequestManagerTreeNode getRequestManagerTreeNode() -> getRequestManagerTreeNode
    147:155:boolean isDescendant(android.app.Fragment) -> isDescendant
    178:187:void onAttach(android.app.Activity) -> onAttach
    209:212:void onDestroy() -> onDestroy
    191:193:void onDetach() -> onDetach
    197:199:void onStart() -> onStart
    203:205:void onStop() -> onStop
    160:166:void registerFragmentWithRoot(android.app.Activity) -> registerFragmentWithRoot
    90:91:void removeChildRequestManagerFragment(com.bumptech.glide.manager.RequestManagerFragment) -> removeChildRequestManagerFragment
    126:130:void setParentFragmentHint(android.app.Fragment) -> setParentFragmentHint
    63:64:void setRequestManager(com.bumptech.glide.RequestManager) -> setRequestManager
    216:216:java.lang.String toString() -> toString
    169:173:void unregisterFragmentWithRoot() -> unregisterFragmentWithRoot
com.bumptech.glide.manager.RequestManagerFragment$FragmentRequestManagerTreeNode -> com.bumptech.glide.manager.RequestManagerFragment$FragmentRequestManagerTreeNode:
    222:222:void <init>(com.bumptech.glide.manager.RequestManagerFragment) -> <init>
    228:235:java.util.Set getDescendants() -> getDescendants
    241:241:java.lang.String toString() -> toString
com.bumptech.glide.manager.RequestManagerRetriever -> com.bumptech.glide.manager.RequestManagerRetriever:
    730:730:void <clinit>() -> <clinit>
    60:93:void <init>(com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory,com.bumptech.glide.GlideExperiments) -> <init>
    382:385:void assertNotDestroyed(android.app.Activity) -> assertNotDestroyed
    96:102:com.bumptech.glide.manager.FrameWaiter buildFrameWaiter(com.bumptech.glide.GlideExperiments) -> buildFrameWaiter
    371:376:android.app.Activity findActivity(android.content.Context) -> findActivity
    455:471:com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean) -> fragmentGet
    133:149:com.bumptech.glide.RequestManager get(android.content.Context) -> get
    154:171:com.bumptech.glide.RequestManager get(androidx.fragment.app.FragmentActivity) -> get
    181:201:com.bumptech.glide.RequestManager get(androidx.fragment.app.Fragment) -> get
    213:221:com.bumptech.glide.RequestManager get(android.app.Activity) -> get
    108:128:com.bumptech.glide.RequestManager getApplicationManager(android.content.Context) -> getApplicationManager
    422:422:com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.Activity) -> getRequestManagerFragment
    433:444:com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager,android.app.Fragment) -> getRequestManagerFragment
    476:476:com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(androidx.fragment.app.FragmentManager) -> getSupportRequestManagerFragment
    493:504:com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> getSupportRequestManagerFragment
    686:717:boolean handleMessage(android.os.Message) -> handleMessage
    482:483:boolean isActivityVisible(android.content.Context) -> isActivityVisible
    513:529:com.bumptech.glide.RequestManager supportFragmentGet(android.content.Context,androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,boolean) -> supportFragmentGet
    176:176:boolean useLifecycleInsteadOfInjectingFragments() -> useLifecycleInsteadOfInjectingFragments
    536:598:boolean verifyOurFragmentWasAddedOrCantBeAdded(android.app.FragmentManager,boolean) -> verifyOurFragmentWasAddedOrCantBeAdded
    605:680:boolean verifyOurSupportFragmentWasAddedOrCantBeAdded(androidx.fragment.app.FragmentManager,boolean) -> verifyOurSupportFragmentWasAddedOrCantBeAdded
com.bumptech.glide.manager.RequestManagerRetriever$1 -> com.bumptech.glide.manager.RequestManagerRetriever$1:
    731:731:void <init>() -> <init>
    739:739:com.bumptech.glide.RequestManager build(com.bumptech.glide.Glide,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode,android.content.Context) -> build
com.bumptech.glide.manager.RequestTracker -> com.bumptech.glide.manager.RequestTracker:
    19:33:void <init>() -> <init>
    61:72:boolean clearAndRemove(com.bumptech.glide.request.Request) -> clearAndRemove
    127:133:void clearRequests() -> clearRequests
    96:105:void pauseAllRequests() -> pauseAllRequests
    82:92:void pauseRequests() -> pauseRequests
    137:148:void restartRequests() -> restartRequests
    109:119:void resumeRequests() -> resumeRequests
    39:49:void runRequest(com.bumptech.glide.request.Request) -> runRequest
    152:152:java.lang.String toString() -> toString
com.bumptech.glide.manager.SingletonConnectivityReceiver -> com.bumptech.glide.manager.SingletonConnectivityReceiver:
    38:90:void <init>(android.content.Context) -> <init>
    46:53:com.bumptech.glide.manager.SingletonConnectivityReceiver get(android.content.Context) -> get
    110:114:void maybeRegisterReceiver() -> maybeRegisterReceiver
    118:124:void maybeUnregisterReceiver() -> maybeUnregisterReceiver
    92:95:void register(com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener) -> register
    103:106:void unregister(com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener) -> unregister
com.bumptech.glide.manager.SingletonConnectivityReceiver$1 -> com.bumptech.glide.manager.SingletonConnectivityReceiver$1:
    64:64:void <init>(com.bumptech.glide.manager.SingletonConnectivityReceiver,android.content.Context) -> <init>
    64:64:java.lang.Object get() -> get
    67:67:android.net.ConnectivityManager get() -> get
com.bumptech.glide.manager.SingletonConnectivityReceiver$2 -> com.bumptech.glide.manager.SingletonConnectivityReceiver$2:
    71:71:void <init>(com.bumptech.glide.manager.SingletonConnectivityReceiver) -> <init>
    74:82:void onConnectivityChanged(boolean) -> onConnectivityChanged
com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPostApi24 -> com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPostApi24:
    139:183:void <init>(com.bumptech.glide.util.GlideSuppliers$GlideSupplier,com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener) -> <init>
    189:199:boolean register() -> register
    205:206:void unregister() -> unregister
com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPostApi24$1 -> com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPostApi24$1:
    140:140:void <init>(com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPostApi24) -> <init>
    143:144:void onAvailable(android.net.Network) -> onAvailable
    169:176:void onConnectivityChange(boolean) -> onConnectivityChange
    148:149:void onLost(android.net.Network) -> onLost
    157:164:void postOnConnectivityChange(boolean) -> postOnConnectivityChange
com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPostApi24$1$1 -> com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPostApi24$1$1:
    158:158:void <init>(com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPostApi24$1,boolean) -> <init>
    161:162:void run() -> run
com.bumptech.glide.manager.SupportRequestManagerFragment -> com.bumptech.glide.manager.SupportRequestManagerFragment:
    39:40:void <init>() -> <init>
    30:46:void <init>(com.bumptech.glide.manager.ActivityFragmentLifecycle) -> <init>
    78:79:void addChildRequestManagerFragment(com.bumptech.glide.manager.SupportRequestManagerFragment) -> addChildRequestManagerFragment
    92:104:java.util.Set getDescendantRequestManagerFragments() -> getDescendantRequestManagerFragments
    59:59:com.bumptech.glide.manager.ActivityFragmentLifecycle getGlideLifecycle() -> getGlideLifecycle
    134:135:androidx.fragment.app.Fragment getParentFragmentUsingHint() -> getParentFragmentUsingHint
    65:65:com.bumptech.glide.RequestManager getRequestManager() -> getRequestManager
    74:74:com.bumptech.glide.manager.RequestManagerTreeNode getRequestManagerTreeNode() -> getRequestManagerTreeNode
    126:129:androidx.fragment.app.FragmentManager getRootFragmentManager(androidx.fragment.app.Fragment) -> getRootFragmentManager
    140:148:boolean isDescendant(androidx.fragment.app.Fragment) -> isDescendant
    172:191:void onAttach(android.content.Context) -> onAttach
    214:217:void onDestroy() -> onDestroy
    195:198:void onDetach() -> onDetach
    202:204:void onStart() -> onStart
    208:210:void onStop() -> onStop
    153:161:void registerFragmentWithRoot(android.content.Context,androidx.fragment.app.FragmentManager) -> registerFragmentWithRoot
    82:83:void removeChildRequestManagerFragment(com.bumptech.glide.manager.SupportRequestManagerFragment) -> removeChildRequestManagerFragment
    113:122:void setParentFragmentHint(androidx.fragment.app.Fragment) -> setParentFragmentHint
    54:55:void setRequestManager(com.bumptech.glide.RequestManager) -> setRequestManager
    221:221:java.lang.String toString() -> toString
    164:168:void unregisterFragmentWithRoot() -> unregisterFragmentWithRoot
com.bumptech.glide.manager.SupportRequestManagerFragment$SupportFragmentRequestManagerTreeNode -> com.bumptech.glide.manager.SupportRequestManagerFragment$SupportFragmentRequestManagerTreeNode:
    227:227:void <init>(com.bumptech.glide.manager.SupportRequestManagerFragment) -> <init>
    232:240:java.util.Set getDescendants() -> getDescendants
    245:245:java.lang.String toString() -> toString
com.bumptech.glide.manager.TargetTracker -> com.bumptech.glide.manager.TargetTracker:
    15:17:void <init>() -> <init>
    54:55:void clear() -> clear
    50:50:java.util.List getAll() -> getAll
    43:46:void onDestroy() -> onDestroy
    29:32:void onStart() -> onStart
    36:39:void onStop() -> onStop
    20:21:void track(com.bumptech.glide.request.target.Target) -> track
    24:25:void untrack(com.bumptech.glide.request.target.Target) -> untrack
com.bumptech.glide.module.AppGlideModule -> com.bumptech.glide.module.AppGlideModule:
    26:26:void <init>() -> <init>
    42:42:void applyOptions(android.content.Context,com.bumptech.glide.GlideBuilder) -> applyOptions
    36:36:boolean isManifestParsingEnabled() -> isManifestParsingEnabled
com.bumptech.glide.module.GlideModule -> com.bumptech.glide.module.GlideModule:
    void applyOptions(android.content.Context,com.bumptech.glide.GlideBuilder) -> applyOptions
      # {"id":"com.android.tools.r8.synthesized"}
    void registerComponents(android.content.Context,com.bumptech.glide.Glide,com.bumptech.glide.Registry) -> registerComponents
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.module.LibraryGlideModule -> com.bumptech.glide.module.LibraryGlideModule:
    20:20:void <init>() -> <init>
    25:25:void registerComponents(android.content.Context,com.bumptech.glide.Glide,com.bumptech.glide.Registry) -> registerComponents
com.bumptech.glide.module.ManifestParser -> com.bumptech.glide.module.ManifestParser:
    23:25:void <init>(android.content.Context) -> <init>
    29:62:java.util.List parse() -> parse
    69:91:com.bumptech.glide.module.GlideModule parseModule(java.lang.String) -> parseModule
    95:95:void throwInstantiateGlideModuleException(java.lang.Class,java.lang.Exception) -> throwInstantiateGlideModuleException
com.bumptech.glide.provider.EncoderRegistry -> com.bumptech.glide.provider.EncoderRegistry:
    11:13:void <init>() -> <init>
    26:28:void append(java.lang.Class,com.bumptech.glide.load.Encoder) -> append
    17:23:com.bumptech.glide.load.Encoder getEncoder(java.lang.Class) -> getEncoder
com.bumptech.glide.provider.EncoderRegistry$Entry -> com.bumptech.glide.provider.EncoderRegistry$Entry:
    41:44:void <init>(java.lang.Class,com.bumptech.glide.load.Encoder) -> <init>
    47:47:boolean handles(java.lang.Class) -> handles
com.bumptech.glide.provider.ImageHeaderParserRegistry -> com.bumptech.glide.provider.ImageHeaderParserRegistry:
    9:10:void <init>() -> <init>
    17:19:void add(com.bumptech.glide.load.ImageHeaderParser) -> add
    14:14:java.util.List getParsers() -> getParsers
com.bumptech.glide.provider.LoadPathCache -> com.bumptech.glide.provider.LoadPathCache:
    18:28:void <clinit>() -> <clinit>
    17:34:void <init>() -> <init>
    54:61:com.bumptech.glide.load.engine.LoadPath get(java.lang.Class,java.lang.Class,java.lang.Class) -> get
    78:83:com.bumptech.glide.util.MultiClassKey getKey(java.lang.Class,java.lang.Class,java.lang.Class) -> getKey
    42:42:boolean isEmptyLoadPath(com.bumptech.glide.load.engine.LoadPath) -> isEmptyLoadPath
    69:74:void put(java.lang.Class,java.lang.Class,java.lang.Class,com.bumptech.glide.load.engine.LoadPath) -> put
com.bumptech.glide.provider.ModelToResourceClassCache -> com.bumptech.glide.provider.ModelToResourceClassCache:
    14:16:void <init>() -> <init>
    24:35:java.util.List get(java.lang.Class,java.lang.Class,java.lang.Class) -> get
    43:47:void put(java.lang.Class,java.lang.Class,java.lang.Class,java.util.List) -> put
com.bumptech.glide.provider.ResourceDecoderRegistry -> com.bumptech.glide.provider.ResourceDecoderRegistry:
    16:18:void <init>() -> <init>
    82:84:void append(java.lang.String,com.bumptech.glide.load.ResourceDecoder,java.lang.Class,java.lang.Class) -> append
    40:55:java.util.List getDecoders(java.lang.Class,java.lang.Class) -> getDecoders
    95:105:java.util.List getOrAddEntryList(java.lang.String) -> getOrAddEntryList
    61:75:java.util.List getResourceClasses(java.lang.Class,java.lang.Class) -> getResourceClasses
    20:35:void setBucketPriorityList(java.util.List) -> setBucketPriorityList
com.bumptech.glide.provider.ResourceDecoderRegistry$Entry -> com.bumptech.glide.provider.ResourceDecoderRegistry$Entry:
    116:120:void <init>(java.lang.Class,java.lang.Class,com.bumptech.glide.load.ResourceDecoder) -> <init>
    123:124:boolean handles(java.lang.Class,java.lang.Class) -> handles
com.bumptech.glide.provider.ResourceEncoderRegistry -> com.bumptech.glide.provider.ResourceEncoderRegistry:
    14:16:void <init>() -> <init>
    19:21:void append(java.lang.Class,com.bumptech.glide.load.ResourceEncoder) -> append
    31:39:com.bumptech.glide.load.ResourceEncoder get(java.lang.Class) -> get
com.bumptech.glide.provider.ResourceEncoderRegistry$Entry -> com.bumptech.glide.provider.ResourceEncoderRegistry$Entry:
    46:49:void <init>(java.lang.Class,com.bumptech.glide.load.ResourceEncoder) -> <init>
    53:53:boolean handles(java.lang.Class) -> handles
com.bumptech.glide.request.BaseRequestOptions -> com.bumptech.glide.request.BaseRequestOptions:
    50:100:void <init>() -> <init>
    1106:1198:com.bumptech.glide.request.BaseRequestOptions apply(com.bumptech.glide.request.BaseRequestOptions) -> apply
    1279:1284:com.bumptech.glide.request.BaseRequestOptions autoClone() -> autoClone
    725:725:com.bumptech.glide.request.BaseRequestOptions centerCrop() -> centerCrop
    49:49:java.lang.Object clone() -> clone
    535:544:com.bumptech.glide.request.BaseRequestOptions clone() -> clone
    564:570:com.bumptech.glide.request.BaseRequestOptions decode(java.lang.Class) -> decode
    223:229:com.bumptech.glide.request.BaseRequestOptions diskCacheStrategy(com.bumptech.glide.load.engine.DiskCacheStrategy) -> diskCacheStrategy
    679:679:com.bumptech.glide.request.BaseRequestOptions downsample(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy) -> downsample
    1203:1227:boolean equals(java.lang.Object) -> equals
    395:404:com.bumptech.glide.request.BaseRequestOptions error(int) -> error
    1330:1330:com.bumptech.glide.load.engine.DiskCacheStrategy getDiskCacheStrategy() -> getDiskCacheStrategy
    1341:1341:int getErrorId() -> getErrorId
    1336:1336:android.graphics.drawable.Drawable getErrorPlaceholder() -> getErrorPlaceholder
    1363:1363:android.graphics.drawable.Drawable getFallbackDrawable() -> getFallbackDrawable
    1357:1357:int getFallbackId() -> getFallbackId
    1429:1429:boolean getOnlyRetrieveFromCache() -> getOnlyRetrieveFromCache
    1320:1320:com.bumptech.glide.load.Options getOptions() -> getOptions
    1399:1399:int getOverrideHeight() -> getOverrideHeight
    1391:1391:int getOverrideWidth() -> getOverrideWidth
    1352:1352:android.graphics.drawable.Drawable getPlaceholderDrawable() -> getPlaceholderDrawable
    1346:1346:int getPlaceholderId() -> getPlaceholderId
    1387:1387:com.bumptech.glide.Priority getPriority() -> getPriority
    1325:1325:java.lang.Class getResourceClass() -> getResourceClass
    1378:1378:com.bumptech.glide.load.Key getSignature() -> getSignature
    1403:1403:float getSizeMultiplier() -> getSizeMultiplier
    1368:1368:android.content.res.Resources$Theme getTheme() -> getTheme
    1310:1310:java.util.Map getTransformations() -> getTransformations
    1423:1423:boolean getUseAnimationPool() -> getUseAnimationPool
    1417:1417:boolean getUseUnlimitedSourceGeneratorsPool() -> getUseUnlimitedSourceGeneratorsPool
    1232:1253:int hashCode() -> hashCode
    1297:1297:boolean isAutoCloneEnabled() -> isAutoCloneEnabled
    1373:1373:boolean isMemoryCacheable() -> isMemoryCacheable
    1382:1382:boolean isPrioritySet() -> isPrioritySet
    1407:1407:boolean isScaleOnlyOrNoTransform() -> isScaleOnlyOrNoTransform
    104:104:boolean isSet(int,int) -> isSet
    1411:1411:boolean isSet(int) -> isSet
    574:574:boolean isTransformationAllowed() -> isTransformationAllowed
    1315:1315:boolean isTransformationRequired() -> isTransformationRequired
    578:578:boolean isTransformationSet() -> isTransformationSet
    1395:1395:boolean isValidOverride() -> isValidOverride
    1264:1266:com.bumptech.glide.request.BaseRequestOptions lock() -> lock
    710:710:com.bumptech.glide.request.BaseRequestOptions optionalCenterCrop() -> optionalCenterCrop
    773:773:com.bumptech.glide.request.BaseRequestOptions optionalCenterInside() -> optionalCenterInside
    741:741:com.bumptech.glide.request.BaseRequestOptions optionalFitCenter() -> optionalFitCenter
    861:861:com.bumptech.glide.request.BaseRequestOptions optionalScaleOnlyTransform(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.Transformation) -> optionalScaleOnlyTransform
    828:833:com.bumptech.glide.request.BaseRequestOptions optionalTransform(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.Transformation) -> optionalTransform
    465:473:com.bumptech.glide.request.BaseRequestOptions override(int,int) -> override
    287:297:com.bumptech.glide.request.BaseRequestOptions placeholder(int) -> placeholder
    241:248:com.bumptech.glide.request.BaseRequestOptions priority(com.bumptech.glide.Priority) -> priority
    872:876:com.bumptech.glide.request.BaseRequestOptions scaleOnlyTransform(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.Transformation,boolean) -> scaleOnlyTransform
    1434:1434:com.bumptech.glide.request.BaseRequestOptions self() -> self
    1290:1293:com.bumptech.glide.request.BaseRequestOptions selfOrThrowIfLocked() -> selfOrThrowIfLocked
    551:558:com.bumptech.glide.request.BaseRequestOptions set(com.bumptech.glide.load.Option,java.lang.Object) -> set
    504:510:com.bumptech.glide.request.BaseRequestOptions signature(com.bumptech.glide.load.Key) -> signature
    119:129:com.bumptech.glide.request.BaseRequestOptions sizeMultiplier(float) -> sizeMultiplier
    443:450:com.bumptech.glide.request.BaseRequestOptions skipMemoryCache(boolean) -> skipMemoryCache
    844:849:com.bumptech.glide.request.BaseRequestOptions transform(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.Transformation) -> transform
    896:896:com.bumptech.glide.request.BaseRequestOptions transform(com.bumptech.glide.load.Transformation) -> transform
    968:982:com.bumptech.glide.request.BaseRequestOptions transform(com.bumptech.glide.load.Transformation,boolean) -> transform
    1014:1031:com.bumptech.glide.request.BaseRequestOptions transform(java.lang.Class,com.bumptech.glide.load.Transformation,boolean) -> transform
    172:179:com.bumptech.glide.request.BaseRequestOptions useAnimationPool(boolean) -> useAnimationPool
com.bumptech.glide.request.ErrorRequestCoordinator -> com.bumptech.glide.request.ErrorRequestCoordinator:
    18:27:void <init>(java.lang.Object,com.bumptech.glide.request.RequestCoordinator) -> <init>
    36:42:void begin() -> begin
    125:127:boolean canNotifyCleared(com.bumptech.glide.request.Request) -> canNotifyCleared
    118:120:boolean canNotifyStatusChanged(com.bumptech.glide.request.Request) -> canNotifyStatusChanged
    104:108:boolean canSetImage(com.bumptech.glide.request.Request) -> canSetImage
    46:56:void clear() -> clear
    197:199:com.bumptech.glide.request.RequestCoordinator getRoot() -> getRoot
    156:158:boolean isAnyResourceSet() -> isAnyResourceSet
    88:90:boolean isCleared() -> isCleared
    81:83:boolean isComplete() -> isComplete
    95:99:boolean isEquivalentTo(com.bumptech.glide.request.Request) -> isEquivalentTo
    74:76:boolean isRunning() -> isRunning
    142:145:boolean isValidRequestForStatusChanged(com.bumptech.glide.request.Request) -> isValidRequestForStatusChanged
    177:193:void onRequestFailed(com.bumptech.glide.request.Request) -> onRequestFailed
    163:173:void onRequestSuccess(com.bumptech.glide.request.Request) -> onRequestSuccess
    132:132:boolean parentCanNotifyCleared() -> parentCanNotifyCleared
    137:137:boolean parentCanNotifyStatusChanged() -> parentCanNotifyStatusChanged
    113:113:boolean parentCanSetImage() -> parentCanSetImage
    60:70:void pause() -> pause
    30:32:void setRequests(com.bumptech.glide.request.Request,com.bumptech.glide.request.Request) -> setRequests
com.bumptech.glide.request.ExperimentalRequestListener -> com.bumptech.glide.request.ExperimentalRequestListener:
    17:17:void <init>() -> <init>
    19:19:void onRequestStarted(java.lang.Object) -> onRequestStarted
com.bumptech.glide.request.RequestCoordinator$RequestState -> com.bumptech.glide.request.RequestCoordinator$RequestState:
    51:56:void <clinit>() -> <clinit>
    60:63:void <init>(java.lang.String,int,boolean) -> <init>
    66:66:boolean isComplete() -> isComplete
    51:51:com.bumptech.glide.request.RequestCoordinator$RequestState valueOf(java.lang.String) -> valueOf
    51:51:com.bumptech.glide.request.RequestCoordinator$RequestState[] values() -> values
com.bumptech.glide.request.RequestOptions -> com.bumptech.glide.request.RequestOptions:
    26:26:void <init>() -> <init>
    213:213:com.bumptech.glide.request.RequestOptions decodeTypeOf(java.lang.Class) -> decodeTypeOf
    52:52:com.bumptech.glide.request.RequestOptions diskCacheStrategyOf(com.bumptech.glide.load.engine.DiskCacheStrategy) -> diskCacheStrategyOf
    286:286:boolean equals(java.lang.Object) -> equals
    294:294:int hashCode() -> hashCode
    134:134:com.bumptech.glide.request.RequestOptions signatureOf(com.bumptech.glide.load.Key) -> signatureOf
com.bumptech.glide.request.SingleRequest -> com.bumptech.glide.request.SingleRequest:
    42:42:void <clinit>() -> <clinit>
    60:212:void <init>(android.content.Context,com.bumptech.glide.GlideContext,java.lang.Object,java.lang.Object,java.lang.Class,com.bumptech.glide.request.BaseRequestOptions,int,int,com.bumptech.glide.Priority,com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,java.util.List,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.load.engine.Engine,com.bumptech.glide.request.transition.TransitionFactory,java.util.concurrent.Executor) -> <init>
    304:311:void assertNotCallingCallbacks() -> assertNotCallingCallbacks
    216:269:void begin() -> begin
    512:512:boolean canNotifyCleared() -> canNotifyCleared
    517:517:boolean canNotifyStatusChanged() -> canNotifyStatusChanged
    507:507:boolean canSetResource() -> canSetResource
    292:299:void cancel() -> cancel
    323:347:void clear() -> clear
    272:280:void experimentalNotifyRequestStarted(java.lang.Object) -> experimentalNotifyRequestStarted
    388:394:android.graphics.drawable.Drawable getErrorDrawable() -> getErrorDrawable
    410:416:android.graphics.drawable.Drawable getFallbackDrawable() -> getFallbackDrawable
    676:677:java.lang.Object getLock() -> getLock
    399:405:android.graphics.drawable.Drawable getPlaceholderDrawable() -> getPlaceholderDrawable
    381:383:boolean isAnyResourceSet() -> isAnyResourceSet
    374:376:boolean isCleared() -> isCleared
    367:369:boolean isComplete() -> isComplete
    727:773:boolean isEquivalentTo(com.bumptech.glide.request.Request) -> isEquivalentTo
    522:522:boolean isFirstReadyResource() -> isFirstReadyResource
    360:362:boolean isRunning() -> isRunning
    422:423:android.graphics.drawable.Drawable loadDrawable(int) -> loadDrawable
    782:783:void logV(java.lang.String) -> logV
    502:502:int maybeApplySizeMultiplier(int,float) -> maybeApplySizeMultiplier
    534:537:void notifyRequestCoordinatorLoadFailed() -> notifyRequestCoordinatorLoadFailed
    527:530:void notifyRequestCoordinatorLoadSucceeded() -> notifyRequestCoordinatorLoadSucceeded
    153:153:com.bumptech.glide.request.SingleRequest obtain(android.content.Context,com.bumptech.glide.GlideContext,java.lang.Object,java.lang.Object,java.lang.Class,com.bumptech.glide.request.BaseRequestOptions,int,int,com.bumptech.glide.Priority,com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,java.util.List,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.load.engine.Engine,com.bumptech.glide.request.transition.TransitionFactory,java.util.concurrent.Executor) -> obtain
    671:672:void onLoadFailed(com.bumptech.glide.load.engine.GlideException) -> onLoadFailed
    681:723:void onLoadFailed(com.bumptech.glide.load.engine.GlideException,int) -> onLoadFailed
    544:604:void onResourceReady(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource,boolean) -> onResourceReady
    620:666:void onResourceReady(com.bumptech.glide.load.engine.Resource,java.lang.Object,com.bumptech.glide.load.DataSource,boolean) -> onResourceReady
    450:499:void onSizeReady(int,int) -> onSizeReady
    351:356:void pause() -> pause
    428:445:void setErrorPlaceholder() -> setErrorPlaceholder
    789:793:java.lang.String toString() -> toString
com.bumptech.glide.request.SingleRequest$Status -> com.bumptech.glide.request.SingleRequest$Status:
    45:57:void <clinit>() -> <clinit>
    45:45:void <init>(java.lang.String,int) -> <init>
    45:45:com.bumptech.glide.request.SingleRequest$Status valueOf(java.lang.String) -> valueOf
    45:45:com.bumptech.glide.request.SingleRequest$Status[] values() -> values
com.bumptech.glide.request.ThumbnailRequestCoordinator -> com.bumptech.glide.request.ThumbnailRequestCoordinator:
    17:29:void <init>(java.lang.Object,com.bumptech.glide.request.RequestCoordinator) -> <init>
    136:153:void begin() -> begin
    69:71:boolean canNotifyCleared(com.bumptech.glide.request.Request) -> canNotifyCleared
    62:64:boolean canNotifyStatusChanged(com.bumptech.glide.request.Request) -> canNotifyStatusChanged
    44:46:boolean canSetImage(com.bumptech.glide.request.Request) -> canSetImage
    157:164:void clear() -> clear
    128:130:com.bumptech.glide.request.RequestCoordinator getRoot() -> getRoot
    86:88:boolean isAnyResourceSet() -> isAnyResourceSet
    196:198:boolean isCleared() -> isCleared
    189:191:boolean isComplete() -> isComplete
    203:208:boolean isEquivalentTo(com.bumptech.glide.request.Request) -> isEquivalentTo
    182:184:boolean isRunning() -> isRunning
    113:124:void onRequestFailed(com.bumptech.glide.request.Request) -> onRequestFailed
    93:109:void onRequestSuccess(com.bumptech.glide.request.Request) -> onRequestSuccess
    76:76:boolean parentCanNotifyCleared() -> parentCanNotifyCleared
    81:81:boolean parentCanNotifyStatusChanged() -> parentCanNotifyStatusChanged
    51:51:boolean parentCanSetImage() -> parentCanSetImage
    168:178:void pause() -> pause
    32:34:void setRequests(com.bumptech.glide.request.Request,com.bumptech.glide.request.Request) -> setRequests
com.bumptech.glide.request.target.BaseTarget -> com.bumptech.glide.request.target.BaseTarget:
    28:28:void <init>() -> <init>
    71:71:void onDestroy() -> onDestroy
    46:46:void onLoadCleared(android.graphics.drawable.Drawable) -> onLoadCleared
    56:56:void onLoadFailed(android.graphics.drawable.Drawable) -> onLoadFailed
    51:51:void onLoadStarted(android.graphics.drawable.Drawable) -> onLoadStarted
    61:61:void onStart() -> onStart
    66:66:void onStop() -> onStop
com.bumptech.glide.request.target.BitmapImageViewTarget -> com.bumptech.glide.request.target.BitmapImageViewTarget:
    14:15:void <init>(android.widget.ImageView) -> <init>
    10:10:void setResource(java.lang.Object) -> setResource
    35:36:void setResource(android.graphics.Bitmap) -> setResource
com.bumptech.glide.request.target.CustomTarget -> com.bumptech.glide.request.target.CustomTarget:
    54:55:void <init>() -> <init>
    67:79:void <init>(int,int) -> <init>
    124:124:com.bumptech.glide.request.Request getRequest() -> getRequest
    108:109:void getSize(com.bumptech.glide.request.target.SizeReadyCallback) -> getSize
    94:94:void onDestroy() -> onDestroy
    104:104:void onLoadFailed(android.graphics.drawable.Drawable) -> onLoadFailed
    99:99:void onLoadStarted(android.graphics.drawable.Drawable) -> onLoadStarted
    84:84:void onStart() -> onStart
    89:89:void onStop() -> onStop
    114:114:void removeCallback(com.bumptech.glide.request.target.SizeReadyCallback) -> removeCallback
    118:119:void setRequest(com.bumptech.glide.request.Request) -> setRequest
com.bumptech.glide.request.target.CustomViewTarget -> com.bumptech.glide.request.target.CustomViewTarget:
    37:37:void <clinit>() -> <clinit>
    47:50:void <init>(android.view.View) -> <init>
    230:238:com.bumptech.glide.request.Request getRequest() -> getRequest
    192:193:void getSize(com.bumptech.glide.request.target.SizeReadyCallback) -> getSize
    272:272:java.lang.Object getTag() -> getTag
    276:282:void maybeAddAttachStateListener() -> maybeAddAttachStateListener
    285:291:void maybeRemoveAttachStateListener() -> maybeRemoveAttachStateListener
    86:86:void onDestroy() -> onDestroy
    208:214:void onLoadCleared(android.graphics.drawable.Drawable) -> onLoadCleared
    202:204:void onLoadStarted(android.graphics.drawable.Drawable) -> onLoadStarted
    71:71:void onResourceLoading(android.graphics.drawable.Drawable) -> onResourceLoading
    76:76:void onStart() -> onStart
    81:81:void onStop() -> onStop
    197:198:void removeCallback(com.bumptech.glide.request.target.SizeReadyCallback) -> removeCallback
    223:224:void setRequest(com.bumptech.glide.request.Request) -> setRequest
    267:268:void setTag(java.lang.Object) -> setTag
    243:243:java.lang.String toString() -> toString
com.bumptech.glide.request.target.CustomViewTarget$SizeDeterminer -> com.bumptech.glide.request.target.CustomViewTarget$SizeDeterminer:
    299:306:void <init>(android.view.View) -> <init>
    333:345:void checkCurrentDimens() -> checkCurrentDimens
    384:390:void clearCallbacksAndListener() -> clearCallbacksAndListener
    310:318:int getMaxDisplayLength(android.content.Context) -> getMaxDisplayLength
    348:365:void getSize(com.bumptech.glide.request.target.SizeReadyCallback) -> getSize
    414:466:int getTargetDimen(int,int,int) -> getTargetDimen
    397:400:int getTargetHeight() -> getTargetHeight
    404:407:int getTargetWidth() -> getTargetWidth
    470:470:boolean isDimensionValid(int) -> isDimensionValid
    393:393:boolean isViewStateAndSizeValid(int,int) -> isViewStateAndSizeValid
    326:329:void notifyCbs(int,int) -> notifyCbs
    374:375:void removeCallback(com.bumptech.glide.request.target.SizeReadyCallback) -> removeCallback
com.bumptech.glide.request.target.CustomViewTarget$SizeDeterminer$SizeDeterminerLayoutListener -> com.bumptech.glide.request.target.CustomViewTarget$SizeDeterminer$SizeDeterminerLayoutListener:
    477:479:void <init>(com.bumptech.glide.request.target.CustomViewTarget$SizeDeterminer) -> <init>
    483:490:boolean onPreDraw() -> onPreDraw
com.bumptech.glide.request.target.DrawableImageViewTarget -> com.bumptech.glide.request.target.DrawableImageViewTarget:
    11:12:void <init>(android.widget.ImageView) -> <init>
    8:8:void setResource(java.lang.Object) -> setResource
    26:27:void setResource(android.graphics.drawable.Drawable) -> setResource
com.bumptech.glide.request.target.ImageViewTarget -> com.bumptech.glide.request.target.ImageViewTarget:
    25:26:void <init>(android.widget.ImageView) -> <init>
    131:137:void maybeUpdateAnimatable(java.lang.Object) -> maybeUpdateAnimatable
    92:98:void onLoadCleared(android.graphics.drawable.Drawable) -> onLoadCleared
    79:82:void onLoadFailed(android.graphics.drawable.Drawable) -> onLoadFailed
    66:69:void onLoadStarted(android.graphics.drawable.Drawable) -> onLoadStarted
    102:107:void onResourceReady(java.lang.Object,com.bumptech.glide.request.transition.Transition) -> onResourceReady
    111:114:void onStart() -> onStart
    118:121:void onStop() -> onStop
    55:56:void setDrawable(android.graphics.drawable.Drawable) -> setDrawable
    126:128:void setResourceInternal(java.lang.Object) -> setResourceInternal
com.bumptech.glide.request.target.ImageViewTargetFactory -> com.bumptech.glide.request.target.ImageViewTargetFactory:
    12:12:void <init>() -> <init>
    17:22:com.bumptech.glide.request.target.ViewTarget buildTarget(android.widget.ImageView,java.lang.Class) -> buildTarget
com.bumptech.glide.request.target.ViewTarget -> com.bumptech.glide.request.target.ViewTarget:
    52:52:void <clinit>() -> <clinit>
    61:64:void <init>(android.view.View) -> <init>
    262:272:com.bumptech.glide.request.Request getRequest() -> getRequest
    218:219:void getSize(com.bumptech.glide.request.target.SizeReadyCallback) -> getSize
    287:287:java.lang.Object getTag() -> getTag
    183:189:void maybeAddAttachStateListener() -> maybeAddAttachStateListener
    192:198:void maybeRemoveAttachStateListener() -> maybeRemoveAttachStateListener
    230:236:void onLoadCleared(android.graphics.drawable.Drawable) -> onLoadCleared
    178:180:void onLoadStarted(android.graphics.drawable.Drawable) -> onLoadStarted
    224:225:void removeCallback(com.bumptech.glide.request.target.SizeReadyCallback) -> removeCallback
    245:246:void setRequest(com.bumptech.glide.request.Request) -> setRequest
    281:283:void setTag(java.lang.Object) -> setTag
    277:277:java.lang.String toString() -> toString
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer -> com.bumptech.glide.request.target.ViewTarget$SizeDeterminer:
    324:331:void <init>(android.view.View) -> <init>
    358:370:void checkCurrentDimens() -> checkCurrentDimens
    409:415:void clearCallbacksAndListener() -> clearCallbacksAndListener
    335:343:int getMaxDisplayLength(android.content.Context) -> getMaxDisplayLength
    373:390:void getSize(com.bumptech.glide.request.target.SizeReadyCallback) -> getSize
    439:491:int getTargetDimen(int,int,int) -> getTargetDimen
    422:425:int getTargetHeight() -> getTargetHeight
    429:432:int getTargetWidth() -> getTargetWidth
    495:495:boolean isDimensionValid(int) -> isDimensionValid
    418:418:boolean isViewStateAndSizeValid(int,int) -> isViewStateAndSizeValid
    351:354:void notifyCbs(int,int) -> notifyCbs
    399:400:void removeCallback(com.bumptech.glide.request.target.SizeReadyCallback) -> removeCallback
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener -> com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener:
    502:504:void <init>(com.bumptech.glide.request.target.ViewTarget$SizeDeterminer) -> <init>
    508:515:boolean onPreDraw() -> onPreDraw
com.bumptech.glide.request.transition.NoTransition -> com.bumptech.glide.request.transition.NoTransition:
    13:16:void <clinit>() -> <clinit>
    12:12:void <init>() -> <init>
    35:35:com.bumptech.glide.request.transition.TransitionFactory getFactory() -> getFactory
    47:47:boolean transition(java.lang.Object,com.bumptech.glide.request.transition.Transition$ViewAdapter) -> transition
com.bumptech.glide.request.transition.NoTransition$NoAnimationFactory -> com.bumptech.glide.request.transition.NoTransition$NoAnimationFactory:
    24:24:void <init>() -> <init>
    28:28:com.bumptech.glide.request.transition.Transition build(com.bumptech.glide.load.DataSource,boolean) -> build
com.bumptech.glide.signature.EmptySignature -> com.bumptech.glide.signature.EmptySignature:
    9:9:void <clinit>() -> <clinit>
    16:18:void <init>() -> <init>
    13:13:com.bumptech.glide.signature.EmptySignature obtain() -> obtain
    22:22:java.lang.String toString() -> toString
    28:28:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.signature.ObjectKey -> com.bumptech.glide.signature.ObjectKey:
    20:22:void <init>(java.lang.Object) -> <init>
    31:35:boolean equals(java.lang.Object) -> equals
    40:40:int hashCode() -> hashCode
    26:26:java.lang.String toString() -> toString
    45:46:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.util.ByteBufferUtil -> com.bumptech.glide.util.ByteBufferUtil:
    20:20:void <clinit>() -> <clinit>
    28:59:java.nio.ByteBuffer fromFile(java.io.File) -> fromFile
    136:153:java.nio.ByteBuffer fromStream(java.io.InputStream) -> fromStream
    162:165:com.bumptech.glide.util.ByteBufferUtil$SafeArray getSafeArray(java.nio.ByteBuffer) -> getSafeArray
    157:157:java.nio.ByteBuffer rewind(java.nio.ByteBuffer) -> rewind
    117:126:byte[] toBytes(java.nio.ByteBuffer) -> toBytes
    63:89:void toFile(java.nio.ByteBuffer,java.io.File) -> toFile
    131:131:java.io.InputStream toStream(java.nio.ByteBuffer) -> toStream
com.bumptech.glide.util.ByteBufferUtil$ByteBufferStream -> com.bumptech.glide.util.ByteBufferUtil$ByteBufferStream:
    185:189:void <init>(java.nio.ByteBuffer) -> <init>
    193:193:int available() -> available
    205:207:void mark(int) -> mark
    211:211:boolean markSupported() -> markSupported
    198:201:int read() -> read
    216:221:int read(byte[],int,int) -> read
    225:231:void reset() -> reset
    235:241:long skip(long) -> skip
com.bumptech.glide.util.ByteBufferUtil$SafeArray -> com.bumptech.glide.util.ByteBufferUtil$SafeArray:
    175:179:void <init>(byte[],int,int) -> <init>
com.bumptech.glide.util.CachedHashCodeArrayMap -> com.bumptech.glide.util.CachedHashCodeArrayMap:
    15:15:void <init>() -> <init>
    21:23:void clear() -> clear
    51:54:int hashCode() -> hashCode
    33:34:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    39:41:void putAll(androidx.collection.SimpleArrayMap) -> putAll
    45:46:java.lang.Object removeAt(int) -> removeAt
    27:28:java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
com.bumptech.glide.util.ContentLengthInputStream -> com.bumptech.glide.util.ContentLengthInputStream:
    48:50:void <init>(java.io.InputStream,long) -> <init>
    54:54:int available() -> available
    75:85:int checkReadSoFarOrThrow(int) -> checkReadSoFarOrThrow
    30:30:java.io.InputStream obtain(java.io.InputStream,long) -> obtain
    58:61:int read() -> read
    66:66:int read(byte[]) -> read
    71:71:int read(byte[],int,int) -> read
com.bumptech.glide.util.ExceptionPassthroughInputStream -> com.bumptech.glide.util.ExceptionPassthroughInputStream:
    27:27:void <clinit>() -> <clinit>
    54:56:void <init>() -> <init>
    64:64:int available() -> available
    69:70:void close() -> close
    129:129:java.io.IOException getException() -> getException
    74:75:void mark(int) -> mark
    79:79:boolean markSupported() -> markSupported
    35:42:com.bumptech.glide.util.ExceptionPassthroughInputStream obtain(java.io.InputStream) -> obtain
    85:88:int read() -> read
    95:98:int read(byte[]) -> read
    105:108:int read(byte[],int,int) -> read
    133:138:void release() -> release
    113:115:void reset() -> reset
    59:60:void setInputStream(java.io.InputStream) -> setInputStream
    120:123:long skip(long) -> skip
com.bumptech.glide.util.Executors -> com.bumptech.glide.util.Executors:
    15:22:void <clinit>() -> <clinit>
    37:37:java.util.concurrent.Executor directExecutor() -> directExecutor
    32:32:java.util.concurrent.Executor mainThreadExecutor() -> mainThreadExecutor
com.bumptech.glide.util.Executors$1 -> com.bumptech.glide.util.Executors$1:
    16:16:void <init>() -> <init>
    19:20:void execute(java.lang.Runnable) -> execute
com.bumptech.glide.util.Executors$2 -> com.bumptech.glide.util.Executors$2:
    23:23:void <init>() -> <init>
    26:27:void execute(java.lang.Runnable) -> execute
com.bumptech.glide.util.GlideSuppliers -> com.bumptech.glide.util.GlideSuppliers:
    17:17:com.bumptech.glide.util.GlideSuppliers$GlideSupplier memorize(com.bumptech.glide.util.GlideSuppliers$GlideSupplier) -> memorize
com.bumptech.glide.util.GlideSuppliers$1 -> com.bumptech.glide.util.GlideSuppliers$1:
    17:17:void <init>(com.bumptech.glide.util.GlideSuppliers$GlideSupplier) -> <init>
    22:29:java.lang.Object get() -> get
com.bumptech.glide.util.LogTime -> com.bumptech.glide.util.LogTime:
    9:10:void <clinit>() -> <clinit>
    35:35:double getElapsedMillis(long) -> getElapsedMillis
    22:23:long getLogTime() -> getLogTime
com.bumptech.glide.util.LruCache -> com.bumptech.glide.util.LruCache:
    18:32:void <init>(long) -> <init>
    170:171:void clearMemory() -> clearMemory
    194:195:void evict() -> evict
    100:102:java.lang.Object get(java.lang.Object) -> get
    77:77:long getMaxSize() -> getMaxSize
    57:57:int getSize(java.lang.Object) -> getSize
    73:73:void onItemEvicted(java.lang.Object,java.lang.Object) -> onItemEvicted
    130:150:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    159:165:java.lang.Object remove(java.lang.Object) -> remove
    181:191:void trimToSize(long) -> trimToSize
com.bumptech.glide.util.LruCache$Entry -> com.bumptech.glide.util.LruCache$Entry:
    203:206:void <init>(java.lang.Object,int) -> <init>
com.bumptech.glide.util.MarkEnforcingInputStream -> com.bumptech.glide.util.MarkEnforcingInputStream:
    16:20:void <init>(java.io.InputStream) -> <init>
    71:73:int available() -> available
    77:82:long getBytesToRead(long) -> getBytesToRead
    23:26:void mark(int) -> mark
    30:36:int read() -> read
    41:48:int read(byte[],int,int) -> read
    52:55:void reset() -> reset
    59:66:long skip(long) -> skip
    87:91:void updateAvailableBytesAfterRead(long) -> updateAvailableBytesAfterRead
com.bumptech.glide.util.MultiClassKey -> com.bumptech.glide.util.MultiClassKey:
    13:15:void <init>() -> <init>
    22:24:void <init>(java.lang.Class,java.lang.Class,java.lang.Class) -> <init>
    44:63:boolean equals(java.lang.Object) -> equals
    68:71:int hashCode() -> hashCode
    31:34:void set(java.lang.Class,java.lang.Class,java.lang.Class) -> set
    38:38:java.lang.String toString() -> toString
com.bumptech.glide.util.Preconditions -> com.bumptech.glide.util.Preconditions:
    16:19:void checkArgument(boolean,java.lang.String) -> checkArgument
    36:39:java.lang.String checkNotEmpty(java.lang.String) -> checkNotEmpty
    44:47:java.util.Collection checkNotEmpty(java.util.Collection) -> checkNotEmpty
    23:23:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    28:31:java.lang.Object checkNotNull(java.lang.Object,java.lang.String) -> checkNotNull
com.bumptech.glide.util.Util -> com.bumptech.glide.util.Util:
    22:24:void <clinit>() -> <clinit>
    27:29:void <init>() -> <init>
    174:177:void assertMainThread() -> assertMainThread
    234:240:boolean bothModelsNullEquivalentOrEquals(java.lang.Object,java.lang.Object) -> bothModelsNullEquivalentOrEquals
    230:230:boolean bothNullOrEqual(java.lang.Object,java.lang.Object) -> bothNullOrEqual
    46:51:java.lang.String bytesToHex(byte[],char[]) -> bytesToHex
    199:199:java.util.Queue createQueue(int) -> createQueue
    72:93:int getBitmapByteSize(android.graphics.Bitmap) -> getBitmapByteSize
    101:101:int getBitmapByteSize(int,int,android.graphics.Bitmap$Config) -> getBitmapByteSize
    112:133:int getBytesPerPixel(android.graphics.Bitmap$Config) -> getBytesPerPixel
    215:221:java.util.List getSnapshot(java.util.Collection) -> getSnapshot
    159:166:android.os.Handler getUiThreadHandler() -> getUiThreadHandler
    248:248:int hashCode(int,int) -> hashCode
    252:252:int hashCode(float) -> hashCode
    256:256:int hashCode(float,int) -> hashCode
    260:260:int hashCode(java.lang.Object,int) -> hashCode
    264:264:int hashCode(boolean,int) -> hashCode
    193:193:boolean isOnBackgroundThread() -> isOnBackgroundThread
    188:188:boolean isOnMainThread() -> isOnMainThread
    145:145:boolean isValidDimension(int) -> isValidDimension
    141:141:boolean isValidDimensions(int,int) -> isValidDimensions
    150:151:void postOnUiThread(java.lang.Runnable) -> postOnUiThread
    155:156:void removeCallbacksOnUiThread(java.lang.Runnable) -> removeCallbacksOnUiThread
    34:36:java.lang.String sha256BytesToHex(byte[]) -> sha256BytesToHex
com.bumptech.glide.util.Util$1 -> com.bumptech.glide.util.Util$1:
    117:117:void <clinit>() -> <clinit>
com.bumptech.glide.util.pool.FactoryPools -> com.bumptech.glide.util.pool.FactoryPools:
    19:19:void <clinit>() -> <clinit>
    106:106:androidx.core.util.Pools$Pool build(androidx.core.util.Pools$Pool,com.bumptech.glide.util.pool.FactoryPools$Factory) -> build
    112:112:androidx.core.util.Pools$Pool build(androidx.core.util.Pools$Pool,com.bumptech.glide.util.pool.FactoryPools$Factory,com.bumptech.glide.util.pool.FactoryPools$Resetter) -> build
    118:118:com.bumptech.glide.util.pool.FactoryPools$Resetter emptyResetter() -> emptyResetter
    56:56:androidx.core.util.Pools$Pool threadSafe(int,com.bumptech.glide.util.pool.FactoryPools$Factory) -> threadSafe
    70:70:androidx.core.util.Pools$Pool threadSafeList() -> threadSafeList
    86:86:androidx.core.util.Pools$Pool threadSafeList(int) -> threadSafeList
com.bumptech.glide.util.pool.FactoryPools$1 -> com.bumptech.glide.util.pool.FactoryPools$1:
    20:20:void <init>() -> <init>
    24:24:void reset(java.lang.Object) -> reset
com.bumptech.glide.util.pool.FactoryPools$2 -> com.bumptech.glide.util.pool.FactoryPools$2:
    88:88:void <init>() -> <init>
    88:88:java.lang.Object create() -> create
    92:92:java.util.List create() -> create
com.bumptech.glide.util.pool.FactoryPools$3 -> com.bumptech.glide.util.pool.FactoryPools$3:
    95:95:void <init>() -> <init>
    95:95:void reset(java.lang.Object) -> reset
    98:99:void reset(java.util.List) -> reset
com.bumptech.glide.util.pool.FactoryPools$FactoryPool -> com.bumptech.glide.util.pool.FactoryPools$FactoryPool:
    153:157:void <init>(androidx.core.util.Pools$Pool,com.bumptech.glide.util.pool.FactoryPools$Factory,com.bumptech.glide.util.pool.FactoryPools$Resetter) -> <init>
    161:171:java.lang.Object acquire() -> acquire
    176:180:boolean release(java.lang.Object) -> release
com.bumptech.glide.util.pool.GlideTrace -> com.bumptech.glide.util.pool.GlideTrace:
    11:11:void <clinit>() -> <clinit>
    31:31:void beginSection(java.lang.String) -> beginSection
    57:57:int beginSectionAsync(java.lang.String) -> beginSectionAsync
    43:43:void beginSectionFormat(java.lang.String,java.lang.Object,java.lang.Object) -> beginSectionFormat
    49:49:void beginSectionFormat(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> beginSectionFormat
    70:70:void endSection() -> endSection
    64:64:void endSectionAsync(java.lang.String,int) -> endSectionAsync
com.bumptech.glide.util.pool.StateVerifier -> com.bumptech.glide.util.pool.StateVerifier:
    7:7:void <init>(com.bumptech.glide.util.pool.StateVerifier$1) -> <init>
    20:20:void <init>() -> <init>
    16:16:com.bumptech.glide.util.pool.StateVerifier newInstance() -> newInstance
com.bumptech.glide.util.pool.StateVerifier$DefaultStateVerifier -> com.bumptech.glide.util.pool.StateVerifier$DefaultStateVerifier:
    35:35:void <init>() -> <init>
    46:47:void setRecycled(boolean) -> setRecycled
    39:42:void throwIfRecycled() -> throwIfRecycled
com.google.android.material.animation.AnimationUtils -> com.google.android.material.animation.AnimationUtils:
    36:43:void <clinit>() -> <clinit>
    47:47:float lerp(float,float,float) -> lerp
    52:52:int lerp(int,int,float) -> lerp
    64:71:float lerp(float,float,float,float,float) -> lerp
com.google.android.material.animation.AnimatorSetCompat -> com.google.android.material.animation.AnimatorSetCompat:
    38:48:void playTogether(android.animation.AnimatorSet,java.util.List) -> playTogether
com.google.android.material.animation.ArgbEvaluatorCompat -> com.google.android.material.animation.ArgbEvaluatorCompat:
    29:29:void <clinit>() -> <clinit>
    28:28:void <init>() -> <init>
    28:28:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    58:91:java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer) -> evaluate
    40:40:com.google.android.material.animation.ArgbEvaluatorCompat getInstance() -> getInstance
com.google.android.material.animation.ChildrenAlphaProperty -> com.google.android.material.animation.ChildrenAlphaProperty:
    38:38:void <clinit>() -> <clinit>
    42:43:void <init>(java.lang.String) -> <init>
    33:33:java.lang.Object get(java.lang.Object) -> get
    48:52:java.lang.Float get(android.view.ViewGroup) -> get
    33:33:void set(java.lang.Object,java.lang.Object) -> set
    58:66:void set(android.view.ViewGroup,java.lang.Float) -> set
com.google.android.material.animation.DrawableAlphaProperty -> com.google.android.material.animation.DrawableAlphaProperty:
    36:36:void <clinit>() -> <clinit>
    39:43:void <init>() -> <init>
    30:30:java.lang.Object get(java.lang.Object) -> get
    48:49:java.lang.Integer get(android.graphics.drawable.Drawable) -> get
    30:30:void set(java.lang.Object,java.lang.Object) -> set
    59:64:void set(android.graphics.drawable.Drawable,java.lang.Integer) -> set
com.google.android.material.animation.ImageMatrixProperty -> com.google.android.material.animation.ImageMatrixProperty:
    28:32:void <init>() -> <init>
    27:27:java.lang.Object get(java.lang.Object) -> get
    42:43:android.graphics.Matrix get(android.widget.ImageView) -> get
    27:27:void set(java.lang.Object,java.lang.Object) -> set
    36:37:void set(android.widget.ImageView,android.graphics.Matrix) -> set
com.google.android.material.animation.MatrixEvaluator -> com.google.android.material.animation.MatrixEvaluator:
    26:29:void <init>() -> <init>
    34:41:android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix) -> evaluate
com.google.android.material.animation.MotionSpec -> com.google.android.material.animation.MotionSpec:
    66:71:void <init>() -> <init>
    215:222:void addInfoFromAnimator(com.google.android.material.animation.MotionSpec,android.animation.Animator) -> addInfoFromAnimator
    175:181:com.google.android.material.animation.MotionSpec createFromAttribute(android.content.Context,android.content.res.TypedArray,int) -> createFromAttribute
    188:201:com.google.android.material.animation.MotionSpec createFromResource(android.content.Context,int) -> createFromResource
    207:211:com.google.android.material.animation.MotionSpec createSpecFromAnimators(java.util.List) -> createSpecFromAnimators
    226:235:boolean equals(java.lang.Object) -> equals
    84:87:com.google.android.material.animation.MotionTiming getTiming(java.lang.String) -> getTiming
    160:165:long getTotalDuration() -> getTotalDuration
    76:76:boolean hasTiming(java.lang.String) -> hasTiming
    240:240:int hashCode() -> hashCode
    123:124:void setPropertyValues(java.lang.String,android.animation.PropertyValuesHolder[]) -> setPropertyValues
    92:93:void setTiming(java.lang.String,com.google.android.material.animation.MotionTiming) -> setTiming
    246:254:java.lang.String toString() -> toString
com.google.android.material.animation.MotionTiming -> com.google.android.material.animation.MotionTiming:
    30:42:void <init>(long,long) -> <init>
    30:48:void <init>(long,long,android.animation.TimeInterpolator) -> <init>
    51:58:void apply(android.animation.Animator) -> apply
    83:88:com.google.android.material.animation.MotionTiming createFromAnimator(android.animation.ValueAnimator) -> createFromAnimator
    116:137:boolean equals(java.lang.Object) -> equals
    61:61:long getDelay() -> getDelay
    65:65:long getDuration() -> getDuration
    70:70:android.animation.TimeInterpolator getInterpolator() -> getInterpolator
    102:110:android.animation.TimeInterpolator getInterpolatorCompat(android.animation.ValueAnimator) -> getInterpolatorCompat
    74:74:int getRepeatCount() -> getRepeatCount
    78:78:int getRepeatMode() -> getRepeatMode
    142:147:int hashCode() -> hashCode
    153:169:java.lang.String toString() -> toString
com.google.android.material.animation.Positioning -> com.google.android.material.animation.Positioning:
    34:38:void <init>(int,float,float) -> <init>
com.google.android.material.appbar.AppBarLayout -> com.google.android.material.appbar.AppBarLayout:
    void $r8$lambda$L4UAs858CLQVMmD1QMlZMKD6UY8(com.google.android.material.appbar.AppBarLayout,com.google.android.material.shape.MaterialShapeDrawable,android.animation.ValueAnimator) -> $r8$lambda$L4UAs858CLQVMmD1QMlZMKD6UY8
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$XV3VI5THqRjqH1lLQck6TBMHyoU(com.google.android.material.appbar.AppBarLayout,com.google.android.material.shape.MaterialShapeDrawable,android.animation.ValueAnimator) -> $r8$lambda$XV3VI5THqRjqH1lLQck6TBMHyoU
      # {"id":"com.android.tools.r8.synthesized"}
    185:185:void <clinit>() -> <clinit>
    229:230:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    189:323:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    697:697:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1099:1103:void clearLiftOnScrollTargetView() -> clearLiftOnScrollTargetView
    482:491:void draw(android.graphics.Canvas) -> draw
    495:503:void drawableStateChanged() -> drawableStateChanged
    1081:1095:android.view.View findLiftOnScrollTargetView(android.view.View) -> findLiftOnScrollTargetView
    141:141:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    141:141:android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    702:702:com.google.android.material.appbar.AppBarLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    141:141:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    141:141:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    141:141:android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    141:141:android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    707:707:com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    712:717:com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    645:646:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    788:830:int getDownNestedPreScrollRange() -> getDownNestedPreScrollRange
    835:870:int getDownNestedScrollRange() -> getDownNestedScrollRange
    1067:1067:int getLiftOnScrollTargetViewId() -> getLiftOnScrollTargetViewId
    893:910:int getMinimumHeightForVisibleOverlappingContent() -> getMinimumHeightForVisibleOverlappingContent
    1129:1129:int getPendingAction() -> getPendingAction
    477:477:android.graphics.drawable.Drawable getStatusBarForeground() -> getStatusBarForeground
    1125:1125:float getTargetElevation() -> getTargetElevation
    1138:1138:int getTopInset() -> getTopInset
    737:774:int getTotalScrollRange() -> getTotalScrollRange
    783:783:int getUpNestedPreScrollRange() -> getUpNestedPreScrollRange
    728:728:boolean hasChildWithInterpolator() -> hasChildWithInterpolator
    596:601:boolean hasCollapsibleChild() -> hasCollapsibleChild
    778:778:boolean hasScrollableChildren() -> hasScrollableChildren
    326:339:void initializeLiftOnScrollWithColor(com.google.android.material.shape.MaterialShapeDrawable) -> initializeLiftOnScrollWithColor
    343:354:void initializeLiftOnScrollWithElevation(android.content.Context,com.google.android.material.shape.MaterialShapeDrawable) -> initializeLiftOnScrollWithElevation
    611:624:void invalidateScrollRanges() -> invalidateScrollRanges
    1035:1035:boolean isLiftOnScroll() -> isLiftOnScroll
    329:338:void lambda$initializeLiftOnScrollWithColor$0(com.google.android.material.shape.MaterialShapeDrawable,android.animation.ValueAnimator) -> lambda$initializeLiftOnScrollWithColor$0
    345:353:void lambda$initializeLiftOnScrollWithElevation$1(com.google.android.material.shape.MaterialShapeDrawable,android.animation.ValueAnimator) -> lambda$initializeLiftOnScrollWithElevation$1
    637:640:void onAttachedToWindow() -> onAttachedToWindow
    915:931:int[] onCreateDrawableState(int) -> onCreateDrawableState
    722:725:void onDetachedFromWindow() -> onDetachedFromWindow
    553:585:void onLayout(boolean,int,int,int,int) -> onLayout
    522:549:void onMeasure(int,int) -> onMeasure
    874:890:void onOffsetChanged(int) -> onOffsetChanged
    1154:1168:androidx.core.view.WindowInsetsCompat onWindowInsetChanged(androidx.core.view.WindowInsetsCompat) -> onWindowInsetChanged
    1133:1134:void resetPendingAction() -> resetPendingAction
    652:655:void setElevation(float) -> setElevation
    669:670:void setExpanded(boolean) -> setExpanded
    684:685:void setExpanded(boolean,boolean) -> setExpanded
    688:693:void setExpanded(boolean,boolean,boolean) -> setExpanded
    1030:1031:void setLiftOnScroll(boolean) -> setLiftOnScroll
    1043:1049:void setLiftOnScrollTargetView(android.view.View) -> setLiftOnScrollTargetView
    1056:1059:void setLiftOnScrollTargetViewId(int) -> setLiftOnScrollTargetViewId
    956:957:void setLiftableOverrideEnabled(boolean) -> setLiftableOverrideEnabled
    961:966:boolean setLiftableState(boolean) -> setLiftableState
    984:984:boolean setLiftedState(boolean) -> setLiftedState
    989:1003:boolean setLiftedState(boolean,boolean) -> setLiftedState
    628:633:void setOrientation(int) -> setOrientation
    425:441:void setStatusBarForeground(android.graphics.drawable.Drawable) -> setStatusBarForeground
    453:454:void setStatusBarForegroundColor(int) -> setStatusBarForegroundColor
    466:467:void setStatusBarForegroundResource(int) -> setStatusBarForegroundResource
    1114:1117:void setTargetElevation(float) -> setTargetElevation
    512:518:void setVisibility(int) -> setVisibility
    592:592:boolean shouldDrawStatusBarForeground() -> shouldDrawStatusBarForeground
    1071:1076:boolean shouldLift(android.view.View) -> shouldLift
    1146:1150:boolean shouldOffsetFirstChild() -> shouldOffsetFirstChild
    1008:1019:void startLiftOnScrollColorAnimation(float,float) -> startLiftOnScrollColorAnimation
    588:589:void updateWillNotDraw() -> updateWillNotDraw
    507:507:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.google.android.material.appbar.AppBarLayout$$ExternalSyntheticLambda0 -> com.google.android.material.appbar.AppBarLayout$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.appbar.AppBarLayout com.google.android.material.appbar.AppBarLayout$$InternalSyntheticLambda$1$62ff5e24e16581cf11391e651817586e7ec846c9afec44a99725bb1880889007$0.f$0 -> f$0
    com.google.android.material.shape.MaterialShapeDrawable com.google.android.material.appbar.AppBarLayout$$InternalSyntheticLambda$1$62ff5e24e16581cf11391e651817586e7ec846c9afec44a99725bb1880889007$0.f$1 -> f$1
    void com.google.android.material.appbar.AppBarLayout$$InternalSyntheticLambda$1$62ff5e24e16581cf11391e651817586e7ec846c9afec44a99725bb1880889007$0.<init>(com.google.android.material.appbar.AppBarLayout,com.google.android.material.shape.MaterialShapeDrawable) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.appbar.AppBarLayout$$InternalSyntheticLambda$1$62ff5e24e16581cf11391e651817586e7ec846c9afec44a99725bb1880889007$0.onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.appbar.AppBarLayout$$ExternalSyntheticLambda1 -> com.google.android.material.appbar.AppBarLayout$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.appbar.AppBarLayout com.google.android.material.appbar.AppBarLayout$$InternalSyntheticLambda$1$6fdf0d613a93346b5c80a2aeb382ac8e451e7029141b5a67c1f3e062033b8aa2$0.f$0 -> f$0
    com.google.android.material.shape.MaterialShapeDrawable com.google.android.material.appbar.AppBarLayout$$InternalSyntheticLambda$1$6fdf0d613a93346b5c80a2aeb382ac8e451e7029141b5a67c1f3e062033b8aa2$0.f$1 -> f$1
    void com.google.android.material.appbar.AppBarLayout$$InternalSyntheticLambda$1$6fdf0d613a93346b5c80a2aeb382ac8e451e7029141b5a67c1f3e062033b8aa2$0.<init>(com.google.android.material.appbar.AppBarLayout,com.google.android.material.shape.MaterialShapeDrawable) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.appbar.AppBarLayout$$InternalSyntheticLambda$1$6fdf0d613a93346b5c80a2aeb382ac8e451e7029141b5a67c1f3e062033b8aa2$0.onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.appbar.AppBarLayout$1 -> com.google.android.material.appbar.AppBarLayout$1:
    317:317:void <init>(com.google.android.material.appbar.AppBarLayout) -> <init>
    320:320:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.appbar.AppBarLayout$BaseBehavior -> com.google.android.material.appbar.AppBarLayout$BaseBehavior:
    boolean $r8$lambda$QeS_UGSkShOdio730SqysJJGrYc(com.google.android.material.appbar.AppBarLayout$BaseBehavior,android.view.View,com.google.android.material.appbar.AppBarLayout,android.view.View,int,android.view.KeyEvent) -> $r8$lambda$QeS_UGSkShOdio730SqysJJGrYc
      # {"id":"com.android.tools.r8.synthesized"}
    boolean $r8$lambda$n_zC0BmoMwb1UwxgpoyEBoSiwM4(com.google.android.material.appbar.AppBarLayout$BaseBehavior,android.view.View,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.KeyEvent) -> $r8$lambda$n_zC0BmoMwb1UwxgpoyEBoSiwM4
      # {"id":"com.android.tools.r8.synthesized"}
    1477:1477:void <init>() -> <init>
    1480:1481:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1446:1446:boolean access$000(com.google.android.material.appbar.AppBarLayout$BaseBehavior) -> access$000
    1446:1446:int access$100(com.google.android.material.appbar.AppBarLayout$BaseBehavior) -> access$100
    1951:1994:boolean addAccessibilityScrollActions(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View) -> addAccessibilityScrollActions
    2002:2013:void addActionToExpand(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,boolean) -> addActionToExpand
    1606:1618:void animateOffsetTo(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,float) -> animateOffsetTo
    1625:1651:void animateOffsetWithDuration(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int) -> animateOffsetWithDuration
    1729:1729:int calculateSnapOffset(int,int,int) -> calculateSnapOffset
    1446:1446:boolean canDragView(android.view.View) -> canDragView
    2017:2031:boolean canDragView(com.google.android.material.appbar.AppBarLayout) -> canDragView
    1514:1515:boolean canScrollChildren(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View) -> canScrollChildren
    1733:1733:boolean checkFlag(int,int) -> checkFlag
    1934:1944:boolean childrenHaveScrollFlags(com.google.android.material.appbar.AppBarLayout) -> childrenHaveScrollFlags
    1860:1878:void controlExpansionOnKeyPress(android.view.KeyEvent,android.view.View,com.google.android.material.appbar.AppBarLayout) -> controlExpansionOnKeyPress
    2253:2261:android.view.View findFirstScrollingChild(androidx.coordinatorlayout.widget.CoordinatorLayout) -> findFirstScrollingChild
    2241:2248:android.view.View getAppBarChildOnOffset(com.google.android.material.appbar.AppBarLayout,int) -> getAppBarChildOnOffset
    1654:1670:int getChildIndexOnOffset(com.google.android.material.appbar.AppBarLayout,int) -> getChildIndexOnOffset
    1920:1930:android.view.View getChildWithScrollingBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout) -> getChildWithScrollingBehavior
    1446:1446:int getMaxDragOffset(android.view.View) -> getMaxDragOffset
    2046:2046:int getMaxDragOffset(com.google.android.material.appbar.AppBarLayout) -> getMaxDragOffset
    1446:1446:int getScrollRangeForDragFling(android.view.View) -> getScrollRangeForDragFling
    2051:2051:int getScrollRangeForDragFling(com.google.android.material.appbar.AppBarLayout) -> getScrollRangeForDragFling
    2266:2266:int getTopBottomOffsetForScrollingSibling() -> getTopBottomOffsetForScrollingSibling
    2128:2172:int interpolateOffset(com.google.android.material.appbar.AppBarLayout,int) -> interpolateOffset
    1837:1838:boolean lambda$onLayoutChild$0(android.view.View,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.KeyEvent) -> lambda$onLayoutChild$0
    1848:1849:boolean lambda$onLayoutChild$1(android.view.View,com.google.android.material.appbar.AppBarLayout,android.view.View,int,android.view.KeyEvent) -> lambda$onLayoutChild$1
    1446:1446:void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onFlingFinished
    2038:2042:void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> onFlingFinished
    1446:1446:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1768:1853:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int) -> onLayoutChild
    1446:1446:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    1744:1761:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int,int) -> onMeasureChild
    1446:1446:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    1527:1546:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int[],int) -> onNestedPreScroll
    1446:1446:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1559:1571:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1446:1446:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    2279:2286:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.os.Parcelable) -> onRestoreInstanceState
    1446:1446:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    2271:2273:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> onSaveInstanceState
    1446:1446:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1493:1508:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1446:1446:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    1580:1590:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int) -> onStopNestedScroll
    2313:2316:void restoreScrollState(com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState,boolean) -> restoreScrollState
    2290:2309:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState saveScrollState(android.os.Parcelable,com.google.android.material.appbar.AppBarLayout) -> saveScrollState
    1446:1446:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int) -> setHeaderTopBottomOffset
    2061:2119:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int) -> setHeaderTopBottomOffset
    2224:2235:boolean shouldJumpElevationState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> shouldJumpElevationState
    1674:1726:void snapToChildIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> snapToChildIfNeeded
    1882:1916:void updateAccessibilityActions(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> updateAccessibilityActions
    2181:2219:void updateAppBarLayoutDrawableState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,boolean) -> updateAppBarLayoutDrawableState
com.google.android.material.appbar.AppBarLayout$BaseBehavior$$ExternalSyntheticLambda0 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.appbar.AppBarLayout com.google.android.material.appbar.AppBarLayout$BaseBehavior$$InternalSyntheticLambda$1$1ff26bedcaf7b0e7cde68f7f43c2667bb5e26a2a254c5c8251146eb700793b54$0.f$2 -> f$2
    com.google.android.material.appbar.AppBarLayout$BaseBehavior com.google.android.material.appbar.AppBarLayout$BaseBehavior$$InternalSyntheticLambda$1$1ff26bedcaf7b0e7cde68f7f43c2667bb5e26a2a254c5c8251146eb700793b54$0.f$0 -> f$0
    android.view.View com.google.android.material.appbar.AppBarLayout$BaseBehavior$$InternalSyntheticLambda$1$1ff26bedcaf7b0e7cde68f7f43c2667bb5e26a2a254c5c8251146eb700793b54$0.f$1 -> f$1
    void com.google.android.material.appbar.AppBarLayout$BaseBehavior$$InternalSyntheticLambda$1$1ff26bedcaf7b0e7cde68f7f43c2667bb5e26a2a254c5c8251146eb700793b54$0.<init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,android.view.View,com.google.android.material.appbar.AppBarLayout) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean com.google.android.material.appbar.AppBarLayout$BaseBehavior$$InternalSyntheticLambda$1$1ff26bedcaf7b0e7cde68f7f43c2667bb5e26a2a254c5c8251146eb700793b54$0.onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.appbar.AppBarLayout$BaseBehavior$$ExternalSyntheticLambda1 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.appbar.AppBarLayout com.google.android.material.appbar.AppBarLayout$BaseBehavior$$InternalSyntheticLambda$1$1ff26bedcaf7b0e7cde68f7f43c2667bb5e26a2a254c5c8251146eb700793b54$2.f$2 -> f$2
    com.google.android.material.appbar.AppBarLayout$BaseBehavior com.google.android.material.appbar.AppBarLayout$BaseBehavior$$InternalSyntheticLambda$1$1ff26bedcaf7b0e7cde68f7f43c2667bb5e26a2a254c5c8251146eb700793b54$2.f$0 -> f$0
    android.view.View com.google.android.material.appbar.AppBarLayout$BaseBehavior$$InternalSyntheticLambda$1$1ff26bedcaf7b0e7cde68f7f43c2667bb5e26a2a254c5c8251146eb700793b54$2.f$1 -> f$1
    void com.google.android.material.appbar.AppBarLayout$BaseBehavior$$InternalSyntheticLambda$1$1ff26bedcaf7b0e7cde68f7f43c2667bb5e26a2a254c5c8251146eb700793b54$2.<init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,android.view.View,com.google.android.material.appbar.AppBarLayout) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean com.google.android.material.appbar.AppBarLayout$BaseBehavior$$InternalSyntheticLambda$1$1ff26bedcaf7b0e7cde68f7f43c2667bb5e26a2a254c5c8251146eb700793b54$2.onKey(android.view.View,int,android.view.KeyEvent) -> onKey
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.appbar.AppBarLayout$BaseBehavior$1 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$1:
    1637:1637:void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> <init>
    1640:1642:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.appbar.AppBarLayout$BaseBehavior$2 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$2:
    1903:1903:void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior) -> <init>
    1907:1910:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.appbar.AppBarLayout$BaseBehavior$3 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$3:
    1971:1971:void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int) -> <init>
    1974:1982:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
com.google.android.material.appbar.AppBarLayout$BaseBehavior$4 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$4:
    2006:2006:void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,com.google.android.material.appbar.AppBarLayout,boolean) -> <init>
    2009:2010:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState:
    2349:2349:void <clinit>() -> <clinit>
    2327:2333:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2336:2337:void <init>(android.os.Parcelable) -> <init>
    2341:2347:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1:
    2350:2350:void <init>() -> <init>
    2350:2350:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2350:2350:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2354:2354:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2360:2360:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2350:2350:java.lang.Object[] newArray(int) -> newArray
    2366:2366:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState[] newArray(int) -> newArray
com.google.android.material.appbar.AppBarLayout$Behavior -> com.google.android.material.appbar.AppBarLayout$Behavior:
    1433:1434:void <init>() -> <init>
    1437:1438:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1427:1427:int getTopAndBottomOffset() -> getTopAndBottomOffset
    1427:1427:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    1427:1427:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int) -> onLayoutChild
    1427:1427:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int,int) -> onMeasureChild
    1427:1427:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int[],int) -> onNestedPreScroll
    1427:1427:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1427:1427:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.os.Parcelable) -> onRestoreInstanceState
    1427:1427:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> onSaveInstanceState
    1427:1427:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1427:1427:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int) -> onStopNestedScroll
    1427:1427:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    1427:1427:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
com.google.android.material.appbar.AppBarLayout$ChildScrollEffect -> com.google.android.material.appbar.AppBarLayout$ChildScrollEffect:
    2520:2520:void <init>() -> <init>
com.google.android.material.appbar.AppBarLayout$CompressChildScrollEffect -> com.google.android.material.appbar.AppBarLayout$CompressChildScrollEffect:
    2540:2549:void <init>() -> <init>
    2561:2596:void onOffsetChanged(com.google.android.material.appbar.AppBarLayout,android.view.View,float) -> onOffsetChanged
    2552:2556:void updateRelativeRect(android.graphics.Rect,com.google.android.material.appbar.AppBarLayout,android.view.View) -> updateRelativeRect
com.google.android.material.appbar.AppBarLayout$LayoutParams -> com.google.android.material.appbar.AppBarLayout$LayoutParams:
    1250:1293:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1250:1297:void <init>(int,int) -> <init>
    1250:1305:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1250:1309:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1250:1315:void <init>(android.widget.LinearLayout$LayoutParams) -> <init>
    1354:1358:com.google.android.material.appbar.AppBarLayout$ChildScrollEffect createScrollEffectFromInt(int) -> createScrollEffectFromInt
    1367:1367:com.google.android.material.appbar.AppBarLayout$ChildScrollEffect getScrollEffect() -> getScrollEffect
    1349:1349:int getScrollFlags() -> getScrollFlags
    1412:1412:android.view.animation.Interpolator getScrollInterpolator() -> getScrollInterpolator
    1417:1417:boolean isCollapsible() -> isCollapsible
    1388:1389:void setScrollEffect(int) -> setScrollEffect
    1338:1339:void setScrollFlags(int) -> setScrollFlags
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior -> com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior:
    2378:2378:void <init>() -> <init>
    2381:2388:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2376:2376:android.view.View findFirstDependency(java.util.List) -> findFirstDependency
    2488:2494:com.google.android.material.appbar.AppBarLayout findFirstDependency(java.util.List) -> findFirstDependency
    2477:2482:int getAppBarLayoutOffset(com.google.android.material.appbar.AppBarLayout) -> getAppBarLayoutOffset
    2456:2473:float getOverlapRatioForOffset(android.view.View) -> getOverlapRatioForOffset
    2499:2502:int getScrollRange(android.view.View) -> getScrollRange
    2393:2393:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    2439:2452:void offsetChildAsNeeded(android.view.View,android.view.View) -> offsetChildAsNeeded
    2399:2401:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    2407:2412:void onDependentViewRemoved(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewRemoved
    2376:2376:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    2376:2376:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    2420:2435:boolean onRequestChildRectangleOnScreen(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean) -> onRequestChildRectangleOnScreen
    2507:2513:void updateLiftedStateIfNeeded(android.view.View,android.view.View) -> updateLiftedStateIfNeeded
com.google.android.material.appbar.HeaderBehavior -> com.google.android.material.appbar.HeaderBehavior:
    45:50:void <init>() -> <init>
    45:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    241:241:boolean canDragView(android.view.View) -> canDragView
    254:257:void ensureVelocityTracker() -> ensureVelocityTracker
    202:227:boolean fling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,float) -> fling
    246:246:int getMaxDragOffset(android.view.View) -> getMaxDragOffset
    250:250:int getScrollRangeForDragFling(android.view.View) -> getScrollRangeForDragFling
    183:183:int getTopBottomOffsetForScrollingSibling() -> getTopBottomOffsetForScrollingSibling
    237:237:void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onFlingFinished
    59:105:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    111:154:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    188:191:int scroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int) -> scroll
    158:158:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> setHeaderTopBottomOffset
    164:179:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int) -> setHeaderTopBottomOffset
com.google.android.material.appbar.HeaderBehavior$FlingRunnable -> com.google.android.material.appbar.HeaderBehavior$FlingRunnable:
    263:266:void <init>(com.google.android.material.appbar.HeaderBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> <init>
    270:279:void run() -> run
com.google.android.material.appbar.HeaderScrollingViewBehavior -> com.google.android.material.appbar.HeaderScrollingViewBehavior:
    41:47:void <init>() -> <init>
    41:51:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    167:169:int getOverlapPixelsForOffset(android.view.View) -> getOverlapPixelsForOffset
    163:163:float getOverlapRatioForOffset(android.view.View) -> getOverlapRatioForOffset
    205:205:int getOverlayTop() -> getOverlayTop
    180:180:int getScrollRange(android.view.View) -> getScrollRange
    187:187:int getVerticalLayoutGap() -> getVerticalLayoutGap
    114:156:void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> layoutChild
    61:106:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    173:173:int resolveGravity(int) -> resolveGravity
    197:198:void setOverlayTop(int) -> setOverlayTop
    159:159:boolean shouldHeaderOverlapScrollingChild() -> shouldHeaderOverlapScrollingChild
com.google.android.material.appbar.MaterialToolbar -> com.google.android.material.appbar.MaterialToolbar:
    72:74:void <clinit>() -> <clinit>
    97:98:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    101:128:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    163:180:android.util.Pair calculateTitleBoundLimits(android.widget.TextView,android.widget.TextView) -> calculateTitleBoundLimits
    227:227:android.widget.ImageView$ScaleType getLogoScaleType() -> getLogoScaleType
    313:313:java.lang.Integer getNavigationIconTint() -> getNavigationIconTint
    365:376:void initBackground(android.content.Context) -> initBackground
    185:205:void layoutTitleCenteredHorizontally(android.view.View,android.util.Pair) -> layoutTitleCenteredHorizontally
    139:159:void maybeCenterTitleViews() -> maybeCenterTitleViews
    380:385:android.graphics.drawable.Drawable maybeTintNavigationIcon(android.graphics.drawable.Drawable) -> maybeTintNavigationIcon
    257:260:void onAttachedToWindow() -> onAttachedToWindow
    132:136:void onLayout(boolean,int,int,int,int) -> onLayout
    265:268:void setElevation(float) -> setElevation
    249:253:void setLogoAdjustViewBounds(boolean) -> setLogoAdjustViewBounds
    232:236:void setLogoScaleType(android.widget.ImageView$ScaleType) -> setLogoScaleType
    272:273:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    281:287:void setNavigationIconTint(int) -> setNavigationIconTint
    348:352:void setSubtitleCentered(boolean) -> setSubtitleCentered
    324:328:void setTitleCentered(boolean) -> setTitleCentered
    208:218:void updateLogoImageView() -> updateLogoImageView
com.google.android.material.appbar.ViewOffsetBehavior -> com.google.android.material.appbar.ViewOffsetBehavior:
    30:33:void <init>() -> <init>
    30:37:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    88:88:int getTopAndBottomOffset() -> getTopAndBottomOffset
    66:67:void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> layoutChild
    43:60:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    70:75:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
com.google.android.material.appbar.ViewOffsetHelper -> com.google.android.material.appbar.ViewOffsetHelper:
    37:42:void <init>(android.view.View) -> <init>
    51:53:void applyOffsets() -> applyOffsets
    86:86:int getTopAndBottomOffset() -> getTopAndBottomOffset
    46:48:void onViewLayout() -> onViewLayout
    77:82:boolean setLeftAndRightOffset(int) -> setLeftAndRightOffset
    62:67:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
com.google.android.material.appbar.ViewUtilsLollipop -> com.google.android.material.appbar.ViewUtilsLollipop:
    36:36:void <clinit>() -> <clinit>
    39:40:void setBoundsViewOutlineProvider(android.view.View) -> setBoundsViewOutlineProvider
    62:80:void setDefaultAppBarLayoutStateListAnimator(android.view.View,float) -> setDefaultAppBarLayoutStateListAnimator
    44:57:void setStateListAnimatorFromAttrs(android.view.View,android.util.AttributeSet,int,int) -> setStateListAnimatorFromAttrs
com.google.android.material.behavior.HideBottomViewOnScrollBehavior -> com.google.android.material.behavior.HideBottomViewOnScrollBehavior:
    71:73:void <clinit>() -> <clinit>
    65:102:void <init>() -> <init>
    65:106:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:47:android.view.ViewPropertyAnimator access$002(com.google.android.material.behavior.HideBottomViewOnScrollBehavior,android.view.ViewPropertyAnimator) -> access$002
    259:272:void animateChildTo(android.view.View,int,long,android.animation.TimeInterpolator) -> animateChildTo
    215:215:boolean isScrolledDown() -> isScrolledDown
    178:178:boolean isScrolledUp() -> isScrolledUp
    111:130:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    169:174:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    155:155:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    140:145:void setAdditionalHiddenOffsetY(android.view.View,int) -> setAdditionalHiddenOffsetY
    223:224:void slideDown(android.view.View) -> slideDown
    233:248:void slideDown(android.view.View,boolean) -> slideDown
    186:187:void slideUp(android.view.View) -> slideUp
    196:211:void slideUp(android.view.View,boolean) -> slideUp
    251:255:void updateCurrentState(android.view.View,int) -> updateCurrentState
com.google.android.material.behavior.HideBottomViewOnScrollBehavior$1 -> com.google.android.material.behavior.HideBottomViewOnScrollBehavior$1:
    266:266:void <init>(com.google.android.material.behavior.HideBottomViewOnScrollBehavior) -> <init>
    269:270:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.behavior.SwipeDismissBehavior -> com.google.android.material.behavior.SwipeDismissBehavior:
    43:237:void <init>() -> <init>
    43:43:boolean access$002(com.google.android.material.behavior.SwipeDismissBehavior,boolean) -> access$002
    234:234:boolean canSwipeDismissView(android.view.View) -> canSwipeDismissView
    451:451:float clamp(float,float,float) -> clamp
    455:455:int clamp(int,int,int) -> clamp
    391:397:void ensureViewDragHelper(android.view.ViewGroup) -> ensureViewDragHelper
    470:470:float fraction(float,float,float) -> fraction
    191:211:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    179:185:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    216:224:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    161:162:void setEndAlphaSwipeDistance(float) -> setEndAlphaSwipeDistance
    118:119:void setListener(com.google.android.material.behavior.SwipeDismissBehavior$OnDismissListener) -> setListener
    152:153:void setStartAlphaSwipeDistance(float) -> setStartAlphaSwipeDistance
    134:135:void setSwipeDirection(int) -> setSwipeDirection
    421:448:void updateAccessibilityActions(android.view.View) -> updateAccessibilityActions
com.google.android.material.behavior.SwipeDismissBehavior$1 -> com.google.android.material.behavior.SwipeDismissBehavior$1:
    238:242:void <init>(com.google.android.material.behavior.SwipeDismissBehavior) -> <init>
    336:362:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    367:367:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    331:331:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    253:267:void onViewCaptured(android.view.View,int) -> onViewCaptured
    271:274:void onViewDragStateChanged(int) -> onViewDragStateChanged
    372:387:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    279:301:void onViewReleased(android.view.View,float,float) -> onViewReleased
    304:326:boolean shouldDismiss(android.view.View,float) -> shouldDismiss
    247:248:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
com.google.android.material.behavior.SwipeDismissBehavior$2 -> com.google.android.material.behavior.SwipeDismissBehavior$2:
    427:427:void <init>(com.google.android.material.behavior.SwipeDismissBehavior) -> <init>
    430:444:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
com.google.android.material.behavior.SwipeDismissBehavior$SettleRunnable -> com.google.android.material.behavior.SwipeDismissBehavior$SettleRunnable:
    403:406:void <init>(com.google.android.material.behavior.SwipeDismissBehavior,android.view.View,boolean) -> <init>
    410:417:void run() -> run
com.google.android.material.bottomappbar.BottomAppBar -> com.google.android.material.bottomappbar.BottomAppBar:
    void $r8$lambda$w7TZ-1dukS0NyaoArwjwMZK7i-E(android.view.View) -> $r8$lambda$w7TZ-1dukS0NyaoArwjwMZK7i-E
      # {"id":"com.android.tools.r8.synthesized"}
    122:126:void <clinit>() -> <clinit>
    120:120:boolean access$002(com.google.android.material.bottomappbar.BottomAppBar,boolean) -> access$002
    120:120:void access$1400(com.google.android.material.bottomappbar.BottomAppBar) -> access$1400
    120:120:void access$1600(com.google.android.material.bottomappbar.BottomAppBar) -> access$1600
    120:120:void access$1700(com.google.android.material.bottomappbar.BottomAppBar) -> access$1700
    120:120:android.animation.Animator access$1802(com.google.android.material.bottomappbar.BottomAppBar,android.animation.Animator) -> access$1802
    120:120:float access$1900(com.google.android.material.bottomappbar.BottomAppBar,int) -> access$1900
    120:120:android.animation.Animator access$2002(com.google.android.material.bottomappbar.BottomAppBar,android.animation.Animator) -> access$2002
    120:120:int access$2100(com.google.android.material.bottomappbar.BottomAppBar) -> access$2100
    120:120:void access$2200(com.google.android.material.bottomappbar.BottomAppBar,androidx.appcompat.widget.ActionMenuView,int,boolean,boolean) -> access$2200
    120:120:com.google.android.material.floatingactionbutton.FloatingActionButton access$2300(com.google.android.material.bottomappbar.BottomAppBar) -> access$2300
    120:120:float access$2400(com.google.android.material.bottomappbar.BottomAppBar) -> access$2400
    120:120:int access$2800(com.google.android.material.bottomappbar.BottomAppBar) -> access$2800
    120:120:int access$2900(com.google.android.material.bottomappbar.BottomAppBar) -> access$2900
    120:120:int access$3000(com.google.android.material.bottomappbar.BottomAppBar) -> access$3000
    120:120:int access$3100(com.google.android.material.bottomappbar.BottomAppBar) -> access$3100
    120:120:android.view.View access$3200(com.google.android.material.bottomappbar.BottomAppBar) -> access$3200
    120:120:void access$3300(com.google.android.material.bottomappbar.BottomAppBar,android.view.View) -> access$3300
    120:120:boolean access$3400(com.google.android.material.bottomappbar.BottomAppBar) -> access$3400
    120:120:void access$3500(com.google.android.material.bottomappbar.BottomAppBar,com.google.android.material.floatingactionbutton.FloatingActionButton) -> access$3500
    120:120:int access$400(com.google.android.material.bottomappbar.BottomAppBar) -> access$400
    1244:1259:void addFabAnimationListeners(com.google.android.material.floatingactionbutton.FloatingActionButton) -> addFabAnimationListeners
    1171:1177:void cancelAnimations() -> cancelAnimations
    893:915:void createFabDefaultXAnimation(int,java.util.List) -> createFabDefaultXAnimation
    919:923:void createFabTranslationXAnimation(int,java.util.List) -> createFabTranslationXAnimation
    989:1037:void createMenuViewTranslationAnimation(int,boolean,java.util.List) -> createMenuViewTranslationAnimation
    788:794:void dispatchAnimationEnd() -> dispatchAnimationEnd
    779:785:void dispatchAnimationStart() -> dispatchAnimationStart
    858:859:com.google.android.material.floatingactionbutton.FloatingActionButton findDependentFab() -> findDependentFab
    864:876:android.view.View findDependentView() -> findDependentView
    1072:1079:androidx.appcompat.widget.ActionMenuView getActionMenuView() -> getActionMenuView
    1131:1167:int getActionMenuViewTranslationX(androidx.appcompat.widget.ActionMenuView,int,boolean) -> getActionMenuViewTranslationX
    566:566:android.content.res.ColorStateList getBackgroundTint() -> getBackgroundTint
    120:120:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    1286:1289:com.google.android.material.bottomappbar.BottomAppBar$Behavior getBehavior() -> getBehavior
    1262:1262:int getBottomInset() -> getBottomInset
    615:615:float getCradleVerticalOffset() -> getCradleVerticalOffset
    926:927:int getFabAlignmentAnimationDuration() -> getFabAlignmentAnimationDuration
    442:442:int getFabAlignmentMode() -> getFabAlignmentMode
    639:639:int getFabAlignmentModeEndMargin() -> getFabAlignmentModeEndMargin
    483:483:int getFabAnchorMode() -> getFabAnchorMode
    521:521:int getFabAnimationMode() -> getFabAnimationMode
    573:573:float getFabCradleMargin() -> getFabCradleMargin
    595:595:float getFabCradleRoundedCornerRadius() -> getFabCradleRoundedCornerRadius
    1047:1062:float getFabTranslationX(int) -> getFabTranslationX
    1067:1067:float getFabTranslationX() -> getFabTranslationX
    1040:1043:float getFabTranslationY() -> getFabTranslationY
    661:661:boolean getHideOnScroll() -> getHideOnScroll
    1270:1270:int getLeftInset() -> getLeftInset
    557:557:int getMenuAlignmentMode() -> getMenuAlignmentMode
    1266:1266:int getRightInset() -> getRightInset
    1205:1206:com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment getTopEdgeTreatment() -> getTopEdgeTreatment
    880:881:boolean isFabVisibleOrWillBeShown() -> isFabVisibleOrWillBeShown
    1195:1195:void lambda$onLayout$0(android.view.View) -> lambda$onLayout$0
    942:982:void maybeAnimateMenuView(int,boolean) -> maybeAnimateMenuView
    818:854:void maybeAnimateModeChange(int) -> maybeAnimateModeChange
    932:937:android.graphics.drawable.Drawable maybeTintNavigationIcon(android.graphics.drawable.Drawable) -> maybeTintNavigationIcon
    1294:1303:void onAttachedToWindow() -> onAttachedToWindow
    1181:1201:void onLayout(boolean,int,int,int,int) -> onLayout
    1483:1491:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1474:1478:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    755:761:void replaceMenu(int) -> replaceMenu
    1224:1235:void setActionMenuViewPosition() -> setActionMenuViewPosition
    561:562:void setBackgroundTint(android.content.res.ColorStateList) -> setBackgroundTint
    625:630:void setCradleVerticalOffset(float) -> setCradleVerticalOffset
    1211:1221:void setCutoutStateAndTranslateFab() -> setCutoutStateAndTranslateFab
    742:747:void setElevation(float) -> setElevation
    453:454:void setFabAlignmentMode(int) -> setFabAlignmentMode
    470:475:void setFabAlignmentModeAndReplaceMenu(int,int) -> setFabAlignmentModeAndReplaceMenu
    649:653:void setFabAlignmentModeEndMargin(int) -> setFabAlignmentModeEndMargin
    493:501:void setFabAnchorMode(int) -> setFabAnchorMode
    531:532:void setFabAnimationMode(int) -> setFabAnimationMode
    811:815:void setFabCornerSize(float) -> setFabCornerSize
    583:587:void setFabCradleMargin(float) -> setFabCradleMargin
    603:607:void setFabCradleRoundedCornerRadius(float) -> setFabCradleRoundedCornerRadius
    801:807:boolean setFabDiameter(int) -> setFabDiameter
    670:671:void setHideOnScroll(boolean) -> setHideOnScroll
    542:549:void setMenuAlignmentMode(int) -> setMenuAlignmentMode
    419:420:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    428:434:void setNavigationIconTint(int) -> setNavigationIconTint
    1281:1281:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    1276:1276:void setTitle(java.lang.CharSequence) -> setTitle
    1086:1087:void translateActionMenuView(androidx.appcompat.widget.ActionMenuView,int,boolean) -> translateActionMenuView
    1104:1119:void translateActionMenuView(androidx.appcompat.widget.ActionMenuView,int,boolean,boolean) -> translateActionMenuView
    504:513:void updateFabAnchorGravity(com.google.android.material.bottomappbar.BottomAppBar,android.view.View) -> updateFabAnchorGravity
com.google.android.material.bottomappbar.BottomAppBar$$ExternalSyntheticLambda0 -> com.google.android.material.bottomappbar.BottomAppBar$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.View com.google.android.material.bottomappbar.BottomAppBar$$InternalSyntheticLambda$1$efcc82ee6a03aa82dfe086b78806067225c6d7807963df5249f394c0878016ab$0.f$0 -> f$0
    void com.google.android.material.bottomappbar.BottomAppBar$$InternalSyntheticLambda$1$efcc82ee6a03aa82dfe086b78806067225c6d7807963df5249f394c0878016ab$0.<init>(android.view.View) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.bottomappbar.BottomAppBar$$InternalSyntheticLambda$1$efcc82ee6a03aa82dfe086b78806067225c6d7807963df5249f394c0878016ab$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.bottomappbar.BottomAppBar$4 -> com.google.android.material.bottomappbar.BottomAppBar$4:
    841:841:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    849:851:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    844:845:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.bottomappbar.BottomAppBar$5 -> com.google.android.material.bottomappbar.BottomAppBar$5:
    902:902:void <init>(com.google.android.material.bottomappbar.BottomAppBar,int) -> <init>
    905:913:void onHidden(com.google.android.material.floatingactionbutton.FloatingActionButton) -> onHidden
com.google.android.material.bottomappbar.BottomAppBar$5$1 -> com.google.android.material.bottomappbar.BottomAppBar$5$1:
    907:907:void <init>(com.google.android.material.bottomappbar.BottomAppBar$5) -> <init>
    910:911:void onShown(com.google.android.material.floatingactionbutton.FloatingActionButton) -> onShown
com.google.android.material.bottomappbar.BottomAppBar$6 -> com.google.android.material.bottomappbar.BottomAppBar$6:
    968:968:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    976:979:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    971:972:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.bottomappbar.BottomAppBar$7 -> com.google.android.material.bottomappbar.BottomAppBar$7:
    1011:1011:void <init>(com.google.android.material.bottomappbar.BottomAppBar,androidx.appcompat.widget.ActionMenuView,int,boolean) -> <init>
    1016:1017:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    1021:1026:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.bottomappbar.BottomAppBar$8 -> com.google.android.material.bottomappbar.BottomAppBar$8:
    1105:1105:void <init>(com.google.android.material.bottomappbar.BottomAppBar,androidx.appcompat.widget.ActionMenuView,int,boolean) -> <init>
    1108:1110:void run() -> run
com.google.android.material.bottomappbar.BottomAppBar$9 -> com.google.android.material.bottomappbar.BottomAppBar$9:
    1246:1246:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    1249:1256:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.bottomappbar.BottomAppBar$Behavior -> com.google.android.material.bottomappbar.BottomAppBar$Behavior:
    1317:1400:void <init>() -> <init>
    1317:1405:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1309:1309:java.lang.ref.WeakReference access$2500(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> access$2500
    1309:1309:android.graphics.Rect access$2600(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> access$2600
    1309:1309:int access$2700(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> access$2700
    1309:1309:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1410:1453:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,int) -> onLayoutChild
    1309:1309:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1465:1466:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,android.view.View,android.view.View,int,int) -> onStartNestedScroll
com.google.android.material.bottomappbar.BottomAppBar$Behavior$1 -> com.google.android.material.bottomappbar.BottomAppBar$Behavior$1:
    1318:1318:void <init>(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> <init>
    1330:1395:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.google.android.material.bottomappbar.BottomAppBar$SavedState -> com.google.android.material.bottomappbar.BottomAppBar$SavedState:
    1514:1514:void <clinit>() -> <clinit>
    1498:1499:void <init>(android.os.Parcelable) -> <init>
    1502:1505:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1509:1512:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.bottomappbar.BottomAppBar$SavedState$1 -> com.google.android.material.bottomappbar.BottomAppBar$SavedState$1:
    1515:1515:void <init>() -> <init>
    1515:1515:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1515:1515:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1519:1519:com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1525:1525:com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1515:1515:java.lang.Object[] newArray(int) -> newArray
    1531:1531:com.google.android.material.bottomappbar.BottomAppBar$SavedState[] newArray(int) -> newArray
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment -> com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment:
    223:223:float getCradleVerticalOffset() -> getCradleVerticalOffset
    74:180:void getEdgePath(float,float,float,com.google.android.material.shape.ShapePath) -> getEdgePath
    255:255:float getFabCornerRadius() -> getFabCornerRadius
    239:239:float getFabCradleMargin() -> getFabCradleMargin
    247:247:float getFabCradleRoundedCornerRadius() -> getFabCradleRoundedCornerRadius
    189:189:float getFabDiameter() -> getFabDiameter
    232:236:void setCradleVerticalOffset(float) -> setCradleVerticalOffset
    259:260:void setFabCornerSize(float) -> setFabCornerSize
    243:244:void setFabCradleMargin(float) -> setFabCradleMargin
    251:252:void setFabCradleRoundedCornerRadius(float) -> setFabCradleRoundedCornerRadius
    199:200:void setFabDiameter(float) -> setFabDiameter
    204:205:void setHorizontalOffset(float) -> setHorizontalOffset
com.google.android.material.bottomsheet.BottomSheetBehavior -> com.google.android.material.bottomsheet.BottomSheetBehavior:
    273:273:void <clinit>() -> <clinit>
    204:1698:void <init>() -> <init>
    204:1698:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    87:87:void access$100(com.google.android.material.bottomsheet.BottomSheetBehavior,android.view.View,int,boolean) -> access$100
    87:87:boolean access$1000(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$1000
    87:87:int access$1102(com.google.android.material.bottomsheet.BottomSheetBehavior,int) -> access$1102
    87:87:void access$1200(com.google.android.material.bottomsheet.BottomSheetBehavior,boolean) -> access$1200
    87:87:boolean access$1300(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$1300
    87:87:boolean access$1400(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$1400
    87:87:int access$1500(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$1500
    87:87:boolean access$1600(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$1600
    87:87:int access$1900(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$1900
    87:87:com.google.android.material.shape.MaterialShapeDrawable access$200(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$200
    87:87:boolean access$2000(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$2000
    87:87:int access$302(com.google.android.material.bottomsheet.BottomSheetBehavior,int) -> access$302
    87:87:boolean access$400(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$400
    87:87:int access$500(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$500
    87:87:int access$502(com.google.android.material.bottomsheet.BottomSheetBehavior,int) -> access$502
    87:87:boolean access$600(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$600
    87:87:boolean access$700(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$700
    87:87:boolean access$800(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$800
    87:87:boolean access$900(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$900
    2259:2262:int addAccessibilityActionForState(android.view.View,int,int) -> addAccessibilityActionForState
    1440:1447:void calculateCollapsedOffset() -> calculateCollapsedOffset
    1450:1451:void calculateHalfExpandedOffset() -> calculateHalfExpandedOffset
    1427:1436:int calculatePeekHeight() -> calculatePeekHeight
    1454:1457:float calculateSlideOffsetWithTop(int) -> calculateSlideOffsetWithTop
    1931:1931:boolean canBeHiddenByDragging() -> canBeHiddenByDragging
    2237:2249:void clearAccessibilityAction(android.view.View,int) -> clearAccessibilityAction
    2266:2266:androidx.core.view.accessibility.AccessibilityViewCommand createAccessibilityViewCommandForState(int) -> createAccessibilityViewCommandForState
    1532:1547:void createMaterialShapeDrawableIfNeeded(android.content.Context) -> createMaterialShapeDrawableIfNeeded
    1554:1566:void createShapeValueAnimator() -> createShapeValueAnimator
    1860:1867:void dispatchOnSlide(int) -> dispatchOnSlide
    1507:1522:android.view.View findScrollingChild(android.view.View) -> findScrollingChild
    502:515:int getChildMeasureSpec(int,int,int,int) -> getChildMeasureSpec
    1075:1077:int getExpandedOffset() -> getExpandedOffset
    1683:1695:int getTopOffsetForState(int) -> getTopOffsetForState
    1658:1662:float getYVelocity() -> getYVelocity
    1423:1423:boolean isExpandedAndShouldRemoveCorners() -> isExpandedAndShouldRemoveCorners
    1345:1345:boolean isGestureInsetBottomIgnored() -> isGestureInsetBottomIgnored
    1122:1122:boolean isHideable() -> isHideable
    1927:1927:boolean isHideableWhenDragging() -> isHideableWhenDragging
    1324:1325:boolean isLayouting(android.view.View) -> isLayouting
    1896:1896:boolean isNestedScrollingCheckEnabled() -> isNestedScrollingCheckEnabled
    452:457:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    461:465:void onDetachedFromLayoutParams() -> onDetachedFromLayoutParams
    598:655:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    523:592:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    475:497:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    855:860:boolean onNestedPreFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float) -> onNestedPreFling
    711:757:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    845:845:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    436:448:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    430:430:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    697:699:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    765:831:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    661:686:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    2253:2255:void replaceAccessibilityActionForState(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,int) -> replaceAccessibilityActionForState
    1461:1466:void reset() -> reset
    1469:1486:void restoreOptionalState(com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState) -> restoreOptionalState
    1316:1321:void runAfterLayout(android.view.View,java.lang.Runnable) -> runAfterLayout
    1157:1158:void setDraggable(boolean) -> setDraggable
    1060:1065:void setExpandedOffset(int) -> setExpandedOffset
    881:896:void setFitToContents(boolean) -> setFitToContents
    1338:1339:void setGestureInsetBottomIgnored(boolean) -> setGestureInsetBottomIgnored
    1027:1036:void setHalfExpandedRatio(float) -> setHalfExpandedRatio
    1105:1113:void setHideable(boolean) -> setHideable
    931:932:void setMaxHeight(int) -> setMaxHeight
    908:909:void setMaxWidth(int) -> setMaxWidth
    954:955:void setPeekHeight(int) -> setPeekHeight
    968:984:void setPeekHeight(int,boolean) -> setPeekHeight
    1195:1196:void setSaveFlags(int) -> setSaveFlags
    1173:1174:void setSignificantVelocityThreshold(int) -> setSignificantVelocityThreshold
    1134:1135:void setSkipCollapsed(boolean) -> setSkipCollapsed
    1280:1313:void setState(int) -> setState
    1360:1391:void setStateInternal(int) -> setStateInternal
    1571:1655:void setWindowInsetsListener(android.view.View) -> setWindowInsetsListener
    1945:1945:boolean shouldExpandOnUpwardDrag(long,float) -> shouldExpandOnUpwardDrag
    1528:1528:boolean shouldHandleDraggingWithHelper() -> shouldHandleDraggingWithHelper
    1489:1501:boolean shouldHide(android.view.View,float) -> shouldHide
    1907:1907:boolean shouldSkipHalfExpandedStateWhenDragging() -> shouldSkipHalfExpandedStateWhenDragging
    1917:1917:boolean shouldSkipSmoothAnimation() -> shouldSkipSmoothAnimation
    1666:1680:void startSettling(android.view.View,int,boolean) -> startSettling
    2179:2186:void updateAccessibilityActions() -> updateAccessibilityActions
    2189:2234:void updateAccessibilityActions(android.view.View,int) -> updateAccessibilityActions
    1394:1419:void updateDrawableForTargetState(int,boolean) -> updateDrawableForTargetState
    2113:2165:void updateImportantForAccessibility(boolean) -> updateImportantForAccessibility
    987:1000:void updatePeekHeight(boolean) -> updatePeekHeight
com.google.android.material.bottomsheet.BottomSheetBehavior$1 -> com.google.android.material.bottomsheet.BottomSheetBehavior$1:
    1306:1306:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,android.view.View,int) -> <init>
    1309:1310:void run() -> run
com.google.android.material.bottomsheet.BottomSheetBehavior$2 -> com.google.android.material.bottomsheet.BottomSheetBehavior$2:
    1557:1557:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    1560:1564:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.bottomsheet.BottomSheetBehavior$3 -> com.google.android.material.bottomsheet.BottomSheetBehavior$3:
    1586:1586:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,boolean) -> <init>
    1591:1652:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,com.google.android.material.internal.ViewUtils$RelativePadding) -> onApplyWindowInsets
com.google.android.material.bottomsheet.BottomSheetBehavior$4 -> com.google.android.material.bottomsheet.BottomSheetBehavior$4:
    1699:1699:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    1846:1846:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    1838:1841:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    1851:1854:int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    1730:1733:void onViewDragStateChanged(int) -> onViewDragStateChanged
    1725:1726:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    1743:1834:void onViewReleased(android.view.View,float,float) -> onViewReleased
    1737:1737:boolean releasedLow(android.view.View) -> releasedLow
    1705:1719:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
com.google.android.material.bottomsheet.BottomSheetBehavior$5 -> com.google.android.material.bottomsheet.BottomSheetBehavior$5:
    2266:2266:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,int) -> <init>
    2269:2270:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback -> com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback:
    90:90:void <init>() -> <init>
    112:112:void onLayout(android.view.View) -> onLayout
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState -> com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState:
    2057:2057:void <clinit>() -> <clinit>
    2015:2022:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2025:2031:void <init>(android.os.Parcelable,com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    2049:2055:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1 -> com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1:
    2058:2058:void <init>() -> <init>
    2058:2058:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2058:2058:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2062:2062:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2068:2068:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2058:2058:java.lang.Object[] newArray(int) -> newArray
    2074:2074:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState[] newArray(int) -> newArray
com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker -> com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker:
    1972:1976:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    1972:1972:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,com.google.android.material.bottomsheet.BottomSheetBehavior$1) -> <init>
    1972:1972:boolean access$1702(com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker,boolean) -> access$1702
    1972:1972:int access$1800(com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker) -> access$1800
    1991:1999:void continueSettlingToState(int) -> continueSettlingToState
com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker$1 -> com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker$1:
    1977:1977:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker) -> <init>
    1980:1987:void run() -> run
com.google.android.material.button.MaterialButton -> com.google.android.material.button.MaterialButton:
    132:197:void <clinit>() -> <clinit>
    222:223:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    200:257:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    262:262:java.lang.String getA11yClassName() -> getA11yClassName
    533:548:android.text.Layout$Alignment getActualTextAlignment() -> getActualTextAlignment
    384:384:android.content.res.ColorStateList getBackgroundTintList() -> getBackgroundTintList
    395:395:android.graphics.PorterDuff$Mode getBackgroundTintMode() -> getBackgroundTintMode
    1049:1049:int getCornerRadius() -> getCornerRadius
    511:520:android.text.Layout$Alignment getGravityTextAlignment() -> getGravityTextAlignment
    757:757:android.graphics.drawable.Drawable getIcon() -> getIcon
    1061:1061:int getIconGravity() -> getIconGravity
    682:682:int getIconPadding() -> getIconPadding
    712:712:int getIconSize() -> getIconSize
    796:796:android.content.res.ColorStateList getIconTint() -> getIconTint
    821:821:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    1096:1096:int getInsetBottom() -> getInsetBottom
    1116:1116:int getInsetTop() -> getInsetTop
    923:923:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    1273:1276:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    965:965:android.content.res.ColorStateList getStrokeColor() -> getStrokeColor
    1008:1008:int getStrokeWidth() -> getStrokeWidth
    329:335:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    367:372:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    626:641:int getTextHeight() -> getTextHeight
    617:622:int getTextLayoutWidth() -> getTextLayoutWidth
    1232:1232:boolean isCheckable() -> isCheckable
    1188:1188:boolean isChecked() -> isChecked
    878:878:boolean isIconEnd() -> isIconEnd
    874:874:boolean isIconStart() -> isIconStart
    882:882:boolean isIconTop() -> isIconTop
    645:645:boolean isLayoutRTL() -> isLayoutRTL
    1299:1299:boolean isUsingOriginalBackground() -> isUsingOriginalBackground
    465:471:void onAttachedToWindow() -> onAttachedToWindow
    1121:1131:int[] onCreateDrawableState(int) -> onCreateDrawableState
    276:279:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    267:272:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    449:455:void onLayout(boolean,int,int,int,int) -> onLayout
    292:299:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    284:287:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    459:461:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    1198:1202:boolean performClick() -> performClick
    484:494:void refreshDrawableState() -> refreshDrawableState
    864:871:void resetIconDrawable() -> resetIconDrawable
    411:412:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    400:407:void setBackgroundColor(int) -> setBackgroundColor
    425:445:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    416:421:void setBackgroundResource(int) -> setBackgroundResource
    378:379:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    389:390:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1242:1245:void setCheckable(boolean) -> setCheckable
    1164:1184:void setChecked(boolean) -> setChecked
    1020:1023:void setCornerRadius(int) -> setCornerRadius
    1034:1037:void setCornerRadiusResource(int) -> setCornerRadiusResource
    476:480:void setElevation(float) -> setElevation
    725:730:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    1072:1076:void setIconGravity(int) -> setIconGravity
    667:671:void setIconPadding(int) -> setIconPadding
    741:746:void setIconResource(int) -> setIconResource
    693:701:void setIconSize(int) -> setIconSize
    769:773:void setIconTint(android.content.res.ColorStateList) -> setIconTint
    807:811:void setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    784:785:void setIconTintResource(int) -> setIconTintResource
    1085:1086:void setInsetBottom(int) -> setInsetBottom
    1105:1106:void setInsetTop(int) -> setInsetTop
    656:657:void setInternalBackground(android.graphics.drawable.Drawable) -> setInternalBackground
    1287:1288:void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener) -> setOnPressedChangeListenerInternal
    1292:1296:void setPressed(boolean) -> setPressed
    894:897:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    908:911:void setRippleColorResource(int) -> setRippleColorResource
    1254:1261:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    1303:1306:void setShouldDrawSurfaceColorStroke(boolean) -> setShouldDrawSurfaceColorStroke
    936:939:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    951:954:void setStrokeColorResource(int) -> setStrokeColorResource
    978:981:void setStrokeWidth(int) -> setStrokeWidth
    993:996:void setStrokeWidthResource(int) -> setStrokeWidthResource
    310:317:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    348:355:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    499:501:void setTextAlignment(int) -> setTextAlignment
    1222:1223:void setToggleCheckedStateOnClick(boolean) -> setToggleCheckedStateOnClick
    1193:1194:void toggle() -> toggle
    829:861:void updateIcon(boolean) -> updateIcon
    553:614:void updateIconPosition(int,int) -> updateIconPosition
com.google.android.material.button.MaterialButton$SavedState -> com.google.android.material.button.MaterialButton$SavedState:
    1334:1334:void <clinit>() -> <clinit>
    1313:1314:void <init>(android.os.Parcelable) -> <init>
    1317:1322:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1331:1332:void readFromParcel(android.os.Parcel) -> readFromParcel
    1326:1328:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.button.MaterialButton$SavedState$1 -> com.google.android.material.button.MaterialButton$SavedState$1:
    1335:1335:void <init>() -> <init>
    1335:1335:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1335:1335:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1339:1339:com.google.android.material.button.MaterialButton$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1345:1345:com.google.android.material.button.MaterialButton$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1335:1335:java.lang.Object[] newArray(int) -> newArray
    1351:1351:com.google.android.material.button.MaterialButton$SavedState[] newArray(int) -> newArray
com.google.android.material.button.MaterialButtonHelper -> com.google.android.material.button.MaterialButtonHelper:
    55:57:void <clinit>() -> <clinit>
    75:86:void <init>(com.google.android.material.button.MaterialButton,com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    215:251:android.graphics.drawable.Drawable createBackground() -> createBackground
    336:336:int getCornerRadius() -> getCornerRadius
    437:437:int getInsetBottom() -> getInsetBottom
    467:467:int getInsetTop() -> getInsetTop
    410:419:com.google.android.material.shape.Shapeable getMaskDrawable() -> getMaskDrawable
    341:353:com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable(boolean) -> getMaterialShapeDrawable
    358:358:com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable() -> getMaterialShapeDrawable
    283:283:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    429:429:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    295:295:android.content.res.ColorStateList getStrokeColor() -> getStrokeColor
    306:306:int getStrokeWidth() -> getStrokeWidth
    188:188:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    201:201:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    379:379:com.google.android.material.shape.MaterialShapeDrawable getSurfaceColorStrokeDrawable() -> getSurfaceColorStrokeDrawable
    170:170:boolean isBackgroundOverwritten() -> isBackgroundOverwritten
    366:366:boolean isCheckable() -> isCheckable
    370:370:boolean isToggleCheckedStateOnClick() -> isToggleCheckedStateOnClick
    89:143:void loadFromAttributes(android.content.res.TypedArray) -> loadFromAttributes
    262:265:void setBackgroundColor(int) -> setBackgroundColor
    162:167:void setBackgroundOverwritten() -> setBackgroundOverwritten
    362:363:void setCheckable(boolean) -> setCheckable
    327:333:void setCornerRadius(int) -> setCornerRadius
    433:434:void setInsetBottom(int) -> setInsetBottom
    441:442:void setInsetTop(int) -> setInsetTop
    268:279:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    423:425:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    205:207:void setShouldDrawSurfaceColorStroke(boolean) -> setShouldDrawSurfaceColorStroke
    287:291:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    299:303:void setStrokeWidth(int) -> setStrokeWidth
    179:185:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    192:198:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    374:375:void setToggleCheckedStateOnClick(boolean) -> setToggleCheckedStateOnClick
    446:464:void setVerticalInsets(int,int) -> setVerticalInsets
    146:154:void updateBackground() -> updateBackground
    385:406:void updateButtonShape(com.google.android.material.shape.ShapeAppearanceModel) -> updateButtonShape
    310:322:void updateStroke() -> updateStroke
    175:175:android.graphics.drawable.InsetDrawable wrapDrawableWithInset(android.graphics.drawable.Drawable) -> wrapDrawableWithInset
com.google.android.material.button.MaterialButtonToggleGroup -> com.google.android.material.button.MaterialButtonToggleGroup:
    143:143:void <clinit>() -> <clinit>
    184:185:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    146:208:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    125:125:int access$100(com.google.android.material.button.MaterialButtonToggleGroup,android.view.View) -> access$100
    410:411:void addOnButtonCheckedListener(com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener) -> addOnButtonCheckedListener
    230:273:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    504:533:void adjustChildMarginsAndUpdateLayout() -> adjustChildMarginsAndUpdateLayout
    736:741:android.widget.LinearLayout$LayoutParams buildLayoutParams(android.view.View) -> buildLayoutParams
    668:688:void checkInternal(int,boolean) -> checkInternal
    353:354:void clearChecked() -> clearChecked
    220:222:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    704:707:void dispatchOnButtonChecked(int,boolean) -> dispatchOnButtonChecked
    372:372:int getCheckedButtonId() -> getCheckedButtonId
    389:397:java.util.List getCheckedButtonIds() -> getCheckedButtonIds
    536:536:com.google.android.material.button.MaterialButton getChildButton(int) -> getChildButton
    750:755:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    579:586:int getFirstVisibleChildIndex() -> getFirstVisibleChildIndex
    616:628:int getIndexWithinVisibleButtons(android.view.View) -> getIndexWithinVisibleButtons
    590:597:int getLastVisibleChildIndex() -> getLastVisibleChildIndex
    634:650:com.google.android.material.button.MaterialButtonToggleGroup$CornerData getNewCornerData(int,int,int) -> getNewCornerData
    606:612:int getVisibleButtonCount() -> getVisibleButtonCount
    601:602:boolean isChildVisible(int) -> isChildVisible
    435:435:boolean isSingleSelection() -> isSingleSelection
    770:774:void onButtonCheckedStateChanged(com.google.android.material.button.MaterialButton,boolean) -> onButtonCheckedStateChanged
    212:216:void onFinishInflate() -> onFinishInflate
    302:312:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    294:298:void onMeasure(int,int) -> onMeasure
    277:290:void onViewRemoved(android.view.View) -> onViewRemoved
    540:556:void resetChildMargins(int) -> resetChildMargins
    484:490:void setCheckedStateForView(int,boolean) -> setCheckedStateForView
    783:789:void setEnabled(boolean) -> setEnabled
    711:714:void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton) -> setGeneratedIdIfNeeded
    459:460:void setSelectionRequired(boolean) -> setSelectionRequired
    447:451:void setSingleSelection(boolean) -> setSingleSelection
    480:481:void setSingleSelection(int) -> setSingleSelection
    724:732:void setupButtonChild(com.google.android.material.button.MaterialButton) -> setupButtonChild
    655:665:void updateBuilderWithCornerData(com.google.android.material.shape.ShapeAppearanceModel$Builder,com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> updateBuilderWithCornerData
    691:701:void updateCheckedIds(java.util.Set) -> updateCheckedIds
    759:766:void updateChildOrder() -> updateChildOrder
    561:576:void updateChildShapes() -> updateChildShapes
com.google.android.material.button.MaterialButtonToggleGroup$1 -> com.google.android.material.button.MaterialButtonToggleGroup$1:
    152:152:void <init>(com.google.android.material.button.MaterialButtonToggleGroup) -> <init>
    152:152:int compare(java.lang.Object,java.lang.Object) -> compare
    155:166:int compare(com.google.android.material.button.MaterialButton,com.google.android.material.button.MaterialButton) -> compare
com.google.android.material.button.MaterialButtonToggleGroup$2 -> com.google.android.material.button.MaterialButtonToggleGroup$2:
    258:258:void <init>(com.google.android.material.button.MaterialButtonToggleGroup) -> <init>
    262:271:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.button.MaterialButtonToggleGroup$CornerData -> com.google.android.material.button.MaterialButtonToggleGroup$CornerData:
    801:801:void <clinit>() -> <clinit>
    809:814:void <init>(com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize) -> <init>
    843:843:com.google.android.material.button.MaterialButtonToggleGroup$CornerData bottom(com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> bottom
    823:823:com.google.android.material.button.MaterialButtonToggleGroup$CornerData end(com.google.android.material.button.MaterialButtonToggleGroup$CornerData,android.view.View) -> end
    828:828:com.google.android.material.button.MaterialButtonToggleGroup$CornerData left(com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> left
    833:833:com.google.android.material.button.MaterialButtonToggleGroup$CornerData right(com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> right
    818:818:com.google.android.material.button.MaterialButtonToggleGroup$CornerData start(com.google.android.material.button.MaterialButtonToggleGroup$CornerData,android.view.View) -> start
    838:838:com.google.android.material.button.MaterialButtonToggleGroup$CornerData top(com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> top
com.google.android.material.button.MaterialButtonToggleGroup$PressedStateTracker -> com.google.android.material.button.MaterialButtonToggleGroup$PressedStateTracker:
    791:791:void <init>(com.google.android.material.button.MaterialButtonToggleGroup) -> <init>
    791:791:void <init>(com.google.android.material.button.MaterialButtonToggleGroup,com.google.android.material.button.MaterialButtonToggleGroup$1) -> <init>
    795:796:void onPressedChanged(com.google.android.material.button.MaterialButton,boolean) -> onPressedChanged
com.google.android.material.canvas.CanvasCompat -> com.google.android.material.canvas.CanvasCompat:
    58:59:int saveLayerAlpha(android.graphics.Canvas,float,float,float,float,int) -> saveLayerAlpha
com.google.android.material.card.MaterialCardView -> com.google.android.material.card.MaterialCardView:
    93:97:void <clinit>() -> <clinit>
    80:80:float access$001(com.google.android.material.card.MaterialCardView) -> access$001
    680:683:void forceRippleRedrawIfNeeded() -> forceRippleRedrawIfNeeded
    655:656:android.graphics.RectF getBoundsAsRectF() -> getBoundsAsRectF
    336:336:android.content.res.ColorStateList getCardBackgroundColor() -> getCardBackgroundColor
    358:358:android.content.res.ColorStateList getCardForegroundColor() -> getCardForegroundColor
    270:270:float getCardViewRadius() -> getCardViewRadius
    559:559:android.graphics.drawable.Drawable getCheckedIcon() -> getCheckedIcon
    694:694:int getCheckedIconGravity() -> getCheckedIconGravity
    633:633:int getCheckedIconMargin() -> getCheckedIconMargin
    606:606:int getCheckedIconSize() -> getCheckedIconSize
    590:590:android.content.res.ColorStateList getCheckedIconTint() -> getCheckedIconTint
    320:320:int getContentPaddingBottom() -> getContentPaddingBottom
    305:305:int getContentPaddingLeft() -> getContentPaddingLeft
    315:315:int getContentPaddingRight() -> getContentPaddingRight
    310:310:int getContentPaddingTop() -> getContentPaddingTop
    291:291:float getProgress() -> getProgress
    266:266:float getRadius() -> getRadius
    548:548:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    676:676:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    233:233:int getStrokeColor() -> getStrokeColor
    239:239:android.content.res.ColorStateList getStrokeColorStateList() -> getStrokeColorStateList
    255:255:int getStrokeWidth() -> getStrokeWidth
    461:461:boolean isCheckable() -> isCheckable
    426:426:boolean isChecked() -> isChecked
    451:451:boolean isDragged() -> isDragged
    371:373:void onAttachedToWindow() -> onAttachedToWindow
    489:502:int[] onCreateDrawableState(int) -> onCreateDrawableState
    199:202:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    190:195:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    206:208:void onMeasure(int,int) -> onMeasure
    404:405:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    409:417:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    421:422:void setBackgroundInternal(android.graphics.drawable.Drawable) -> setBackgroundInternal
    325:326:void setCardBackgroundColor(int) -> setCardBackgroundColor
    330:331:void setCardBackgroundColor(android.content.res.ColorStateList) -> setCardBackgroundColor
    378:380:void setCardElevation(float) -> setCardElevation
    347:348:void setCardForegroundColor(android.content.res.ColorStateList) -> setCardForegroundColor
    471:472:void setCheckable(boolean) -> setCheckable
    431:434:void setChecked(boolean) -> setChecked
    579:580:void setCheckedIcon(android.graphics.drawable.Drawable) -> setCheckedIcon
    705:705:void setCheckedIconGravity(int) -> setCheckedIconGravity
    637:638:void setCheckedIconMargin(int) -> setCheckedIconMargin
    647:651:void setCheckedIconMarginResource(int) -> setCheckedIconMarginResource
    569:570:void setCheckedIconResource(int) -> setCheckedIconResource
    616:617:void setCheckedIconSize(int) -> setCheckedIconSize
    626:629:void setCheckedIconSizeResource(int) -> setCheckedIconSizeResource
    601:602:void setCheckedIconTint(android.content.res.ColorStateList) -> setCheckedIconTint
    363:367:void setClickable(boolean) -> setClickable
    442:448:void setDragged(boolean) -> setDragged
    384:386:void setMaxCardElevation(float) -> setMaxCardElevation
    511:512:void setOnCheckedChangeListener(com.google.android.material.card.MaterialCardView$OnCheckedChangeListener) -> setOnCheckedChangeListener
    397:399:void setPreventCornerOverlap(boolean) -> setPreventCornerOverlap
    280:281:void setProgress(float) -> setProgress
    260:262:void setRadius(float) -> setRadius
    523:524:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    535:537:void setRippleColorResource(int) -> setRippleColorResource
    662:666:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    216:217:void setStrokeColor(int) -> setStrokeColor
    225:226:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    248:249:void setStrokeWidth(int) -> setStrokeWidth
    390:392:void setUseCompatPadding(boolean) -> setUseCompatPadding
    476:485:void toggle() -> toggle
com.google.android.material.checkbox.MaterialCheckBox -> com.google.android.material.checkbox.MaterialCheckBox:
    83:134:void <clinit>() -> <clinit>
    227:228:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    136:283:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    81:81:int[] access$000(com.google.android.material.checkbox.MaterialCheckBox) -> access$000
    567:567:android.graphics.drawable.Drawable getButtonDrawable() -> getButtonDrawable
    630:630:android.graphics.drawable.Drawable getButtonIconDrawable() -> getButtonIconDrawable
    658:658:android.content.res.ColorStateList getButtonIconTintList() -> getButtonIconTintList
    686:686:android.graphics.PorterDuff$Mode getButtonIconTintMode() -> getButtonIconTintMode
    811:816:java.lang.String getButtonStateDescription() -> getButtonStateDescription
    582:582:android.content.res.ColorStateList getButtonTintList() -> getButtonTintList
    429:429:int getCheckedState() -> getCheckedState
    521:521:java.lang.CharSequence getErrorAccessibilityLabel() -> getErrorAccessibilityLabel
    844:864:android.content.res.ColorStateList getMaterialThemeColorsTintList() -> getMaterialThemeColorsTintList
    822:828:android.content.res.ColorStateList getSuperButtonTintList() -> getSuperButtonTintList
    832:839:boolean isButtonDrawableLegacy(androidx.appcompat.widget.TintTypedArray) -> isButtonDrawableLegacy
    353:353:boolean isChecked() -> isChecked
    486:486:boolean isErrorShown() -> isErrorShown
    314:319:void onAttachedToWindow() -> onAttachedToWindow
    323:337:int[] onCreateDrawableState(int) -> onCreateDrawableState
    288:310:void onDraw(android.graphics.Canvas) -> onDraw
    368:376:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    880:887:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    870:875:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    724:738:void refreshButtonDrawable() -> refreshButtonDrawable
    554:555:void setButtonDrawable(int) -> setButtonDrawable
    559:562:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    616:618:void setButtonIconDrawable(android.graphics.drawable.Drawable) -> setButtonIconDrawable
    602:603:void setButtonIconDrawableResource(int) -> setButtonIconDrawableResource
    643:648:void setButtonIconTintList(android.content.res.ColorStateList) -> setButtonIconTintList
    671:676:void setButtonIconTintMode(android.graphics.PorterDuff$Mode) -> setButtonIconTintMode
    572:577:void setButtonTintList(android.content.res.ColorStateList) -> setButtonTintList
    587:589:void setButtonTintMode(android.graphics.PorterDuff$Mode) -> setButtonTintMode
    712:713:void setCenterIfNoTextEnabled(boolean) -> setCenterIfNoTextEnabled
    348:349:void setChecked(boolean) -> setChecked
    385:420:void setCheckedState(int) -> setCheckedState
    804:807:void setDefaultStateDescription() -> setDefaultStateDescription
    342:344:void setEnabled(boolean) -> setEnabled
    510:511:void setErrorAccessibilityLabel(java.lang.CharSequence) -> setErrorAccessibilityLabel
    498:499:void setErrorAccessibilityLabelResource(int) -> setErrorAccessibilityLabelResource
    469:477:void setErrorShown(boolean) -> setErrorShown
    363:364:void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener) -> setOnCheckedChangeListener
    795:801:void setStateDescription(java.lang.CharSequence) -> setStateDescription
    745:767:void setUpDefaultButtonDrawableAnimationIfNeeded() -> setUpDefaultButtonDrawableAnimationIfNeeded
    694:700:void setUseMaterialThemeColors(boolean) -> setUseMaterialThemeColors
    358:359:void toggle() -> toggle
    770:777:void updateButtonTints() -> updateButtonTints
    783:790:void updateIconTintIfNeeded() -> updateIconTintIfNeeded
com.google.android.material.checkbox.MaterialCheckBox$1 -> com.google.android.material.checkbox.MaterialCheckBox$1:
    168:168:void <init>(com.google.android.material.checkbox.MaterialCheckBox) -> <init>
    183:189:void onAnimationEnd(android.graphics.drawable.Drawable) -> onAnimationEnd
    171:179:void onAnimationStart(android.graphics.drawable.Drawable) -> onAnimationStart
com.google.android.material.checkbox.MaterialCheckBox$SavedState -> com.google.android.material.checkbox.MaterialCheckBox$SavedState:
    923:923:void <clinit>() -> <clinit>
    889:889:void <init>(android.os.Parcel,com.google.android.material.checkbox.MaterialCheckBox$1) -> <init>
    897:898:void <init>(android.os.Parcelable) -> <init>
    904:906:void <init>(android.os.Parcel) -> <init>
    938:945:java.lang.String getCheckedStateString() -> getCheckedStateString
    917:919:java.lang.String toString() -> toString
    910:912:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.checkbox.MaterialCheckBox$SavedState$1 -> com.google.android.material.checkbox.MaterialCheckBox$SavedState$1:
    924:924:void <init>() -> <init>
    924:924:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    927:927:com.google.android.material.checkbox.MaterialCheckBox$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    924:924:java.lang.Object[] newArray(int) -> newArray
    932:932:com.google.android.material.checkbox.MaterialCheckBox$SavedState[] newArray(int) -> newArray
com.google.android.material.chip.Chip -> com.google.android.material.chip.Chip:
    void $r8$lambda$SrupMt7y9EGNLPrqW-9UBo9kKNA(com.google.android.material.chip.Chip,android.widget.CompoundButton,boolean) -> $r8$lambda$SrupMt7y9EGNLPrqW-9UBo9kKNA
      # {"id":"com.android.tools.r8.synthesized"}
    136:143:void <clinit>() -> <clinit>
    198:199:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    177:265:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    131:131:com.google.android.material.chip.ChipDrawable access$000(com.google.android.material.chip.Chip) -> access$000
    131:131:boolean access$100(com.google.android.material.chip.Chip) -> access$100
    131:131:android.graphics.RectF access$200(com.google.android.material.chip.Chip) -> access$200
    131:131:android.view.View$OnClickListener access$300(com.google.android.material.chip.Chip) -> access$300
    131:131:boolean access$402(com.google.android.material.chip.Chip,boolean) -> access$402
    131:131:android.graphics.Rect access$500(com.google.android.material.chip.Chip) -> access$500
    131:131:android.graphics.Rect access$600() -> access$600
    497:498:void applyChipDrawable(com.google.android.material.chip.ChipDrawable) -> applyChipDrawable
    898:938:int[] createCloseIconDrawableState() -> createCloseIconDrawableState
    822:826:boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    831:845:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    883:894:void drawableStateChanged() -> drawableStateChanged
    2278:2327:boolean ensureAccessibleTouchTarget(int) -> ensureAccessibleTouchTarget
    462:467:void ensureChipDrawableHasCallback() -> ensureChipDrawableHasCallback
    2342:2354:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    471:474:android.graphics.drawable.Drawable getBackgroundDrawable() -> getBackgroundDrawable
    1842:1842:android.graphics.drawable.Drawable getCheckedIcon() -> getCheckedIcon
    1877:1877:android.content.res.ColorStateList getCheckedIconTint() -> getCheckedIconTint
    1076:1076:android.content.res.ColorStateList getChipBackgroundColor() -> getChipBackgroundColor
    1144:1144:float getChipCornerRadius() -> getChipCornerRadius
    434:434:android.graphics.drawable.Drawable getChipDrawable() -> getChipDrawable
    2220:2220:float getChipEndPadding() -> getChipEndPadding
    1467:1467:android.graphics.drawable.Drawable getChipIcon() -> getChipIcon
    1539:1539:float getChipIconSize() -> getChipIconSize
    1502:1502:android.content.res.ColorStateList getChipIconTint() -> getChipIconTint
    1110:1110:float getChipMinHeight() -> getChipMinHeight
    1982:1982:float getChipStartPadding() -> getChipStartPadding
    1192:1192:android.content.res.ColorStateList getChipStrokeColor() -> getChipStrokeColor
    1226:1226:float getChipStrokeWidth() -> getChipStrokeWidth
    1301:1301:java.lang.CharSequence getChipText() -> getChipText
    1629:1629:android.graphics.drawable.Drawable getCloseIcon() -> getCloseIcon
    1745:1745:java.lang.CharSequence getCloseIconContentDescription() -> getCloseIconContentDescription
    2186:2186:float getCloseIconEndPadding() -> getCloseIconEndPadding
    1700:1700:float getCloseIconSize() -> getCloseIconSize
    2152:2152:float getCloseIconStartPadding() -> getCloseIconStartPadding
    1666:1666:android.content.res.ColorStateList getCloseIconTint() -> getCloseIconTint
    947:954:android.graphics.RectF getCloseIconTouchBounds() -> getCloseIconTouchBounds
    959:961:android.graphics.Rect getCloseIconTouchBoundsInt() -> getCloseIconTouchBoundsInt
    650:650:android.text.TextUtils$TruncateAt getEllipsize() -> getEllipsize
    858:865:void getFocusedRect(android.graphics.Rect) -> getFocusedRect
    1948:1948:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    2050:2050:float getIconEndPadding() -> getIconEndPadding
    2016:2016:float getIconStartPadding() -> getIconStartPadding
    1261:1261:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    1168:1168:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    1913:1913:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    1404:1404:com.google.android.material.resources.TextAppearance getTextAppearance() -> getTextAppearance
    2118:2118:float getTextEndPadding() -> getTextEndPadding
    2084:2084:float getTextStartPadding() -> getTextStartPadding
    942:942:boolean hasCloseIcon() -> hasCloseIcon
    321:338:void initMinTouchTarget(android.content.Context,android.util.AttributeSet,int) -> initMinTouchTarget
    416:430:void initOutlineProvider() -> initOutlineProvider
    2369:2371:void insetChipBackgroundDrawable(int,int,int,int) -> insetChipBackgroundDrawable
    1755:1755:boolean isCheckable() -> isCheckable
    1577:1577:boolean isCloseIconVisible() -> isCloseIconVisible
    258:264:void lambda$new$0(android.widget.CompoundButton,boolean) -> lambda$new$0
    269:272:void onAttachedToWindow() -> onAttachedToWindow
    709:714:void onChipDrawableSizeChange() -> onChipDrawableSizeChange
    502:509:int[] onCreateDrawableState(int) -> onCreateDrawableState
    850:854:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    806:817:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    285:304:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    968:971:android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int) -> onResolvePointerIcon
    372:380:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    770:801:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    749:763:boolean performCloseIconClick() -> performCloseIconClick
    2359:2365:void removeBackgroundInset() -> removeBackgroundInset
    2336:2337:void setAccessibilityClassName(java.lang.CharSequence) -> setAccessibilityClassName
    542:547:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    532:533:void setBackgroundColor(int) -> setBackgroundColor
    551:556:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    537:538:void setBackgroundResource(int) -> setBackgroundResource
    522:523:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    527:528:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1777:1780:void setCheckable(boolean) -> setCheckable
    1765:1768:void setCheckableResource(int) -> setCheckableResource
    718:724:void setChecked(boolean) -> setChecked
    1864:1867:void setCheckedIcon(android.graphics.drawable.Drawable) -> setCheckedIcon
    1831:1832:void setCheckedIconEnabled(boolean) -> setCheckedIconEnabled
    1825:1826:void setCheckedIconEnabledResource(int) -> setCheckedIconEnabledResource
    1852:1855:void setCheckedIconResource(int) -> setCheckedIconResource
    1900:1903:void setCheckedIconTint(android.content.res.ColorStateList) -> setCheckedIconTint
    1887:1890:void setCheckedIconTintResource(int) -> setCheckedIconTintResource
    1805:1808:void setCheckedIconVisible(int) -> setCheckedIconVisible
    1817:1820:void setCheckedIconVisible(boolean) -> setCheckedIconVisible
    1098:1101:void setChipBackgroundColor(android.content.res.ColorStateList) -> setChipBackgroundColor
    1086:1089:void setChipBackgroundColorResource(int) -> setChipBackgroundColorResource
    1179:1182:void setChipCornerRadius(float) -> setChipCornerRadius
    1155:1158:void setChipCornerRadiusResource(int) -> setChipCornerRadiusResource
    439:448:void setChipDrawable(com.google.android.material.chip.ChipDrawable) -> setChipDrawable
    2242:2245:void setChipEndPadding(float) -> setChipEndPadding
    2230:2233:void setChipEndPaddingResource(int) -> setChipEndPaddingResource
    1489:1492:void setChipIcon(android.graphics.drawable.Drawable) -> setChipIcon
    1456:1457:void setChipIconEnabled(boolean) -> setChipIconEnabled
    1450:1451:void setChipIconEnabledResource(int) -> setChipIconEnabledResource
    1477:1480:void setChipIconResource(int) -> setChipIconResource
    1565:1568:void setChipIconSize(float) -> setChipIconSize
    1551:1554:void setChipIconSizeResource(int) -> setChipIconSizeResource
    1525:1528:void setChipIconTint(android.content.res.ColorStateList) -> setChipIconTint
    1512:1515:void setChipIconTintResource(int) -> setChipIconTintResource
    1430:1433:void setChipIconVisible(int) -> setChipIconVisible
    1442:1445:void setChipIconVisible(boolean) -> setChipIconVisible
    1132:1135:void setChipMinHeight(float) -> setChipMinHeight
    1120:1123:void setChipMinHeightResource(int) -> setChipMinHeightResource
    2004:2007:void setChipStartPadding(float) -> setChipStartPadding
    1992:1995:void setChipStartPaddingResource(int) -> setChipStartPaddingResource
    1214:1217:void setChipStrokeColor(android.content.res.ColorStateList) -> setChipStrokeColor
    1202:1205:void setChipStrokeColorResource(int) -> setChipStrokeColorResource
    1248:1251:void setChipStrokeWidth(float) -> setChipStrokeWidth
    1236:1239:void setChipStrokeWidthResource(int) -> setChipStrokeWidthResource
    1337:1338:void setChipText(java.lang.CharSequence) -> setChipText
    1331:1332:void setChipTextResource(int) -> setChipTextResource
    1652:1656:void setCloseIcon(android.graphics.drawable.Drawable) -> setCloseIcon
    1733:1736:void setCloseIconContentDescription(java.lang.CharSequence) -> setCloseIconContentDescription
    1618:1619:void setCloseIconEnabled(boolean) -> setCloseIconEnabled
    1612:1613:void setCloseIconEnabledResource(int) -> setCloseIconEnabledResource
    2208:2211:void setCloseIconEndPadding(float) -> setCloseIconEndPadding
    2196:2199:void setCloseIconEndPaddingResource(int) -> setCloseIconEndPaddingResource
    875:879:void setCloseIconHovered(boolean) -> setCloseIconHovered
    868:872:void setCloseIconPressed(boolean) -> setCloseIconPressed
    1639:1643:void setCloseIconResource(int) -> setCloseIconResource
    1722:1725:void setCloseIconSize(float) -> setCloseIconSize
    1710:1713:void setCloseIconSizeResource(int) -> setCloseIconSizeResource
    2174:2177:void setCloseIconStartPadding(float) -> setCloseIconStartPadding
    2162:2165:void setCloseIconStartPaddingResource(int) -> setCloseIconStartPaddingResource
    1688:1691:void setCloseIconTint(android.content.res.ColorStateList) -> setCloseIconTint
    1676:1679:void setCloseIconTintResource(int) -> setCloseIconTintResource
    1593:1594:void setCloseIconVisible(int) -> setCloseIconVisible
    1603:1607:void setCloseIconVisible(boolean) -> setCloseIconVisible
    564:572:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    609:617:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    622:630:void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    638:645:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    576:584:void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesWithIntrinsicBounds
    592:600:void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesWithIntrinsicBounds
    277:281:void setElevation(float) -> setElevation
    655:665:void setEllipsize(android.text.TextUtils$TruncateAt) -> setEllipsize
    2266:2268:void setEnsureMinTouchTargetSize(boolean) -> setEnsureMinTouchTargetSize
    514:519:void setGravity(int) -> setGravity
    1970:1973:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    1958:1961:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    2072:2075:void setIconEndPadding(float) -> setIconEndPadding
    2060:2063:void setIconEndPaddingResource(int) -> setIconEndPaddingResource
    2038:2041:void setIconStartPadding(float) -> setIconStartPadding
    2026:2029:void setIconStartPaddingResource(int) -> setIconStartPaddingResource
    979:980:void setInternalOnCheckedChangeListener(com.google.android.material.internal.MaterialCheckable$OnCheckedChangeListener) -> setInternalOnCheckedChangeListener
    1306:1312:void setLayoutDirection(int) -> setLayoutDirection
    677:681:void setLines(int) -> setLines
    693:697:void setMaxLines(int) -> setMaxLines
    701:705:void setMaxWidth(int) -> setMaxWidth
    685:689:void setMinLines(int) -> setMinLines
    730:731:void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener) -> setOnCheckedChangeListener
    735:737:void setOnCloseIconClickListener(android.view.View$OnClickListener) -> setOnCloseIconClickListener
    1286:1292:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    1271:1277:void setRippleColorResource(int) -> setRippleColorResource
    1162:1163:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    1935:1938:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    1923:1926:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    669:673:void setSingleLine(boolean) -> setSingleLine
    1316:1326:void setText(java.lang.CharSequence,android.widget.TextView$BufferType) -> setText
    1357:1361:void setTextAppearance(com.google.android.material.resources.TextAppearance) -> setTextAppearance
    1365:1370:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    1374:1379:void setTextAppearance(int) -> setTextAppearance
    1347:1348:void setTextAppearanceResource(int) -> setTextAppearanceResource
    2140:2143:void setTextEndPadding(float) -> setTextEndPadding
    2128:2131:void setTextEndPaddingResource(int) -> setTextEndPaddingResource
    1383:1389:void setTextSize(int,float) -> setTextSize
    2106:2109:void setTextStartPadding(float) -> setTextStartPadding
    2094:2097:void setTextStartPaddingResource(int) -> setTextStartPaddingResource
    2255:2255:boolean shouldEnsureMinTouchTargetSize() -> shouldEnsureMinTouchTargetSize
    491:494:void unapplyChipDrawable(com.google.android.material.chip.ChipDrawable) -> unapplyChipDrawable
    309:317:void updateAccessibilityDelegate() -> updateAccessibilityDelegate
    451:459:void updateBackgroundDrawable() -> updateBackgroundDrawable
    479:488:void updateFrameworkRippleBackground() -> updateFrameworkRippleBackground
    345:367:void updatePaddingInternal() -> updatePaddingInternal
    1392:1400:void updateTextPaintDrawState() -> updateTextPaintDrawState
    383:413:void validateAttributes(android.util.AttributeSet) -> validateAttributes
com.google.android.material.chip.Chip$$ExternalSyntheticLambda0 -> com.google.android.material.chip.Chip$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.chip.Chip com.google.android.material.chip.Chip$$InternalSyntheticLambda$1$860a95f2ba16f11470ac682f45bacaa4f73f666c1689a0905cdb57dc12e2eff5$0.f$0 -> f$0
    void com.google.android.material.chip.Chip$$InternalSyntheticLambda$1$860a95f2ba16f11470ac682f45bacaa4f73f666c1689a0905cdb57dc12e2eff5$0.<init>(com.google.android.material.chip.Chip) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.chip.Chip$$InternalSyntheticLambda$1$860a95f2ba16f11470ac682f45bacaa4f73f666c1689a0905cdb57dc12e2eff5$0.onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.chip.Chip$1 -> com.google.android.material.chip.Chip$1:
    180:180:void <init>(com.google.android.material.chip.Chip) -> <init>
    190:190:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    184:187:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
com.google.android.material.chip.Chip$2 -> com.google.android.material.chip.Chip$2:
    418:418:void <init>(com.google.android.material.chip.Chip) -> <init>
    422:427:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
com.google.android.material.chip.Chip$ChipTouchHelper -> com.google.android.material.chip.Chip$ChipTouchHelper:
    985:987:void <init>(com.google.android.material.chip.Chip,com.google.android.material.chip.Chip) -> <init>
    991:993:int getVirtualViewAt(float,float) -> getVirtualViewAt
    998:1002:void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    1055:1062:boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    1039:1050:void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForHost
    1015:1035:void onPopulateNodeForVirtualView(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    1006:1010:void onVirtualViewKeyboardFocusChanged(int,boolean) -> onVirtualViewKeyboardFocusChanged
com.google.android.material.chip.ChipDrawable -> com.google.android.material.chip.ChipDrawable:
    166:170:void <clinit>() -> <clinit>
    176:334:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1326:1347:void applyChildDrawable(android.graphics.drawable.Drawable) -> applyChildDrawable
    823:841:void calculateChipIconBounds(android.graphics.Rect,android.graphics.RectF) -> calculateChipIconBounds
    538:541:float calculateChipIconWidth() -> calculateChipIconWidth
    933:949:void calculateChipTouchBounds(android.graphics.Rect,android.graphics.RectF) -> calculateChipTouchBounds
    914:930:void calculateCloseIconBounds(android.graphics.Rect,android.graphics.RectF) -> calculateCloseIconBounds
    952:973:void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF) -> calculateCloseIconTouchBounds
    578:581:float calculateCloseIconWidth() -> calculateCloseIconWidth
    888:907:void calculateTextBounds(android.graphics.Rect,android.graphics.RectF) -> calculateTextBounds
    879:880:float calculateTextCenterFromBaseline() -> calculateTextCenterFromBaseline
    846:863:android.graphics.Paint$Align calculateTextOriginAndAlignment(android.graphics.Rect,android.graphics.PointF) -> calculateTextOriginAndAlignment
    533:533:boolean canShowCheckedIcon() -> canShowCheckedIcon
    280:282:com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int) -> createFromAttributes
    590:637:void draw(android.graphics.Canvas) -> draw
    709:721:void drawCheckedIcon(android.graphics.Canvas,android.graphics.Rect) -> drawCheckedIcon
    649:656:void drawChipBackground(android.graphics.Canvas,android.graphics.Rect) -> drawChipBackground
    694:706:void drawChipIcon(android.graphics.Canvas,android.graphics.Rect) -> drawChipIcon
    663:679:void drawChipStroke(android.graphics.Canvas,android.graphics.Rect) -> drawChipStroke
    640:646:void drawChipSurface(android.graphics.Canvas,android.graphics.Rect) -> drawChipSurface
    760:779:void drawCloseIcon(android.graphics.Canvas,android.graphics.Rect) -> drawCloseIcon
    682:691:void drawCompatRipple(android.graphics.Canvas,android.graphics.Rect) -> drawCompatRipple
    782:816:void drawDebug(android.graphics.Canvas,android.graphics.Rect) -> drawDebug
    725:757:void drawText(android.graphics.Canvas,android.graphics.Rect) -> drawText
    1238:1238:int getAlpha() -> getAlpha
    2040:2040:android.graphics.drawable.Drawable getCheckedIcon() -> getCheckedIcon
    2079:2079:android.content.res.ColorStateList getCheckedIconTint() -> getCheckedIconTint
    1422:1422:android.content.res.ColorStateList getChipBackgroundColor() -> getChipBackgroundColor
    1489:1489:float getChipCornerRadius() -> getChipCornerRadius
    2432:2432:float getChipEndPadding() -> getChipEndPadding
    1718:1718:android.graphics.drawable.Drawable getChipIcon() -> getChipIcon
    1786:1786:float getChipIconSize() -> getChipIconSize
    1747:1747:android.content.res.ColorStateList getChipIconTint() -> getChipIconTint
    1455:1455:float getChipMinHeight() -> getChipMinHeight
    2180:2180:float getChipStartPadding() -> getChipStartPadding
    1526:1526:android.content.res.ColorStateList getChipStrokeColor() -> getChipStrokeColor
    1562:1562:float getChipStrokeWidth() -> getChipStrokeWidth
    1868:1868:android.graphics.drawable.Drawable getCloseIcon() -> getCloseIcon
    1958:1958:java.lang.CharSequence getCloseIconContentDescription() -> getCloseIconContentDescription
    2396:2396:float getCloseIconEndPadding() -> getCloseIconEndPadding
    1930:1930:float getCloseIconSize() -> getCloseIconSize
    2360:2360:float getCloseIconStartPadding() -> getCloseIconStartPadding
    1013:1013:int[] getCloseIconState() -> getCloseIconState
    1910:1910:android.content.res.ColorStateList getCloseIconTint() -> getCloseIconTint
    492:493:void getCloseIconTouchBounds(android.graphics.RectF) -> getCloseIconTouchBounds
    1252:1252:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    561:570:float getCurrentChipIconHeight() -> getCurrentChipIconHeight
    549:553:float getCurrentChipIconWidth() -> getCurrentChipIconWidth
    1663:1663:android.text.TextUtils$TruncateAt getEllipsize() -> getEllipsize
    2150:2150:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    2253:2253:float getIconEndPadding() -> getIconEndPadding
    2214:2214:float getIconStartPadding() -> getIconStartPadding
    513:513:int getIntrinsicHeight() -> getIntrinsicHeight
    498:507:int getIntrinsicWidth() -> getIntrinsicWidth
    1274:1274:int getOpacity() -> getOpacity
    1280:1292:void getOutline(android.graphics.Outline) -> getOutline
    1601:1601:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    2119:2119:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    1630:1630:java.lang.CharSequence getText() -> getText
    1651:1651:com.google.android.material.resources.TextAppearance getTextAppearance() -> getTextAppearance
    2326:2326:float getTextEndPadding() -> getTextEndPadding
    2292:2292:float getTextStartPadding() -> getTextStartPadding
    1355:1355:android.graphics.ColorFilter getTintColorFilter() -> getTintColorFilter
    463:463:boolean getUseCompatRipple() -> getUseCompatRipple
    1372:1381:boolean hasState(int[],int) -> hasState
    1296:1300:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    1962:1962:boolean isCheckable() -> isCheckable
    993:993:boolean isCloseIconStateful() -> isCloseIconStateful
    1821:1821:boolean isCloseIconVisible() -> isCloseIconVisible
    979:987:boolean isStateful() -> isStateful
    1151:1151:boolean isStateful(android.content.res.ColorStateList) -> isStateful
    1155:1155:boolean isStateful(android.graphics.drawable.Drawable) -> isStateful
    1159:1161:boolean isStateful(com.google.android.material.resources.TextAppearance) -> isStateful
    338:450:void loadFromAttributes(android.util.AttributeSet,int,int) -> loadFromAttributes
    1166:1181:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    1186:1201:boolean onLevelChange(int) -> onLevelChange
    473:477:void onSizeChange() -> onSizeChange
    1024:1027:boolean onStateChange(int[]) -> onStateChange
    1033:1147:boolean onStateChange(int[],int[]) -> onStateChange
    1018:1020:void onTextSizeChange() -> onTextSizeChange
    1304:1308:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    1230:1234:void setAlpha(int) -> setAlpha
    1970:1984:void setCheckable(boolean) -> setCheckable
    1966:1967:void setCheckableResource(int) -> setCheckableResource
    2060:2074:void setCheckedIcon(android.graphics.drawable.Drawable) -> setCheckedIcon
    2050:2051:void setCheckedIconResource(int) -> setCheckedIconResource
    2100:2109:void setCheckedIconTint(android.content.res.ColorStateList) -> setCheckedIconTint
    2089:2090:void setCheckedIconTintResource(int) -> setCheckedIconTintResource
    1997:1998:void setCheckedIconVisible(int) -> setCheckedIconVisible
    2001:2018:void setCheckedIconVisible(boolean) -> setCheckedIconVisible
    1442:1446:void setChipBackgroundColor(android.content.res.ColorStateList) -> setChipBackgroundColor
    1432:1433:void setChipBackgroundColorResource(int) -> setChipBackgroundColorResource
    1511:1516:void setChipCornerRadius(float) -> setChipCornerRadius
    1500:1501:void setChipCornerRadiusResource(int) -> setChipCornerRadiusResource
    2452:2457:void setChipEndPadding(float) -> setChipEndPadding
    2442:2443:void setChipEndPaddingResource(int) -> setChipEndPaddingResource
    1726:1742:void setChipIcon(android.graphics.drawable.Drawable) -> setChipIcon
    1722:1723:void setChipIconResource(int) -> setChipIconResource
    1808:1818:void setChipIconSize(float) -> setChipIconSize
    1797:1798:void setChipIconSizeResource(int) -> setChipIconSizeResource
    1767:1776:void setChipIconTint(android.content.res.ColorStateList) -> setChipIconTint
    1757:1758:void setChipIconTintResource(int) -> setChipIconTintResource
    1681:1682:void setChipIconVisible(int) -> setChipIconVisible
    1685:1702:void setChipIconVisible(boolean) -> setChipIconVisible
    1475:1480:void setChipMinHeight(float) -> setChipMinHeight
    1465:1466:void setChipMinHeightResource(int) -> setChipMinHeightResource
    2200:2205:void setChipStartPadding(float) -> setChipStartPadding
    2190:2191:void setChipStartPaddingResource(int) -> setChipStartPaddingResource
    1546:1553:void setChipStrokeColor(android.content.res.ColorStateList) -> setChipStrokeColor
    1536:1537:void setChipStrokeColorResource(int) -> setChipStrokeColorResource
    1582:1591:void setChipStrokeWidth(float) -> setChipStrokeWidth
    1572:1573:void setChipStrokeWidthResource(int) -> setChipStrokeWidthResource
    1364:1368:void setChipSurfaceColor(android.content.res.ColorStateList) -> setChipSurfaceColor
    1876:1895:void setCloseIcon(android.graphics.drawable.Drawable) -> setCloseIcon
    1948:1954:void setCloseIconContentDescription(java.lang.CharSequence) -> setCloseIconContentDescription
    2416:2423:void setCloseIconEndPadding(float) -> setCloseIconEndPadding
    2406:2407:void setCloseIconEndPaddingResource(int) -> setCloseIconEndPaddingResource
    1872:1873:void setCloseIconResource(int) -> setCloseIconResource
    1938:1945:void setCloseIconSize(float) -> setCloseIconSize
    1934:1935:void setCloseIconSizeResource(int) -> setCloseIconSizeResource
    2380:2387:void setCloseIconStartPadding(float) -> setCloseIconStartPadding
    2370:2371:void setCloseIconStartPaddingResource(int) -> setCloseIconStartPaddingResource
    1001:1007:boolean setCloseIconState(int[]) -> setCloseIconState
    1918:1927:void setCloseIconTint(android.content.res.ColorStateList) -> setCloseIconTint
    1914:1915:void setCloseIconTintResource(int) -> setCloseIconTintResource
    1835:1852:void setCloseIconVisible(boolean) -> setCloseIconVisible
    1243:1247:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    468:469:void setDelegate(com.google.android.material.chip.ChipDrawable$Delegate) -> setDelegate
    1667:1668:void setEllipsize(android.text.TextUtils$TruncateAt) -> setEllipsize
    2170:2171:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    2160:2161:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    2273:2283:void setIconEndPadding(float) -> setIconEndPadding
    2263:2264:void setIconEndPaddingResource(int) -> setIconEndPaddingResource
    2234:2244:void setIconStartPadding(float) -> setIconStartPadding
    2224:2225:void setIconStartPaddingResource(int) -> setIconStartPaddingResource
    2475:2476:void setMaxWidth(int) -> setMaxWidth
    1621:1626:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    1611:1612:void setRippleColorResource(int) -> setRippleColorResource
    2489:2490:void setShouldDrawText(boolean) -> setShouldDrawText
    2139:2140:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    2129:2130:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    1638:1647:void setText(java.lang.CharSequence) -> setText
    1659:1660:void setTextAppearance(com.google.android.material.resources.TextAppearance) -> setTextAppearance
    1655:1656:void setTextAppearanceResource(int) -> setTextAppearanceResource
    2346:2351:void setTextEndPadding(float) -> setTextEndPadding
    2336:2337:void setTextEndPaddingResource(int) -> setTextEndPaddingResource
    1385:1391:void setTextSize(float) -> setTextSize
    2312:2317:void setTextStartPadding(float) -> setTextStartPadding
    2302:2303:void setTextStartPaddingResource(int) -> setTextStartPaddingResource
    1257:1261:void setTintList(android.content.res.ColorStateList) -> setTintList
    1265:1270:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    454:459:void setUseCompatRipple(boolean) -> setUseCompatRipple
    1206:1221:boolean setVisible(boolean,boolean) -> setVisible
    2479:2479:boolean shouldDrawText() -> shouldDrawText
    523:523:boolean showsCheckedIcon() -> showsCheckedIcon
    518:518:boolean showsChipIcon() -> showsChipIcon
    528:528:boolean showsCloseIcon() -> showsCloseIcon
    1319:1322:void unapplyChildDrawable(android.graphics.drawable.Drawable) -> unapplyChildDrawable
    1312:1316:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    1359:1361:void updateCompatRippleColor() -> updateCompatRippleColor
    1899:1906:void updateFrameworkCloseIconRipple() -> updateFrameworkCloseIconRipple
com.google.android.material.chip.ChipGroup -> com.google.android.material.chip.ChipGroup:
    113:113:void <clinit>() -> <clinit>
    208:208:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    203:203:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    191:191:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    197:197:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    290:290:int getCheckedChipId() -> getCheckedChipId
    306:306:java.util.List getCheckedChipIds() -> getCheckedChipIds
    408:408:int getChipSpacingHorizontal() -> getChipSpacingHorizontal
    428:428:int getChipSpacingVertical() -> getChipSpacingVertical
    373:387:int getIndexOfChip(android.view.View) -> getIndexOfChip
    358:364:int getVisibleChipCount() -> getVisibleChipCount
    391:391:boolean isChildVisible(int) -> isChildVisible
    449:449:boolean isSingleLine() -> isSingleLine
    466:466:boolean isSingleSelection() -> isSingleSelection
    219:225:void onFinishInflate() -> onFinishInflate
    174:186:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    396:398:void setChipSpacing(int) -> setChipSpacing
    413:418:void setChipSpacingHorizontal(int) -> setChipSpacingHorizontal
    422:423:void setChipSpacingHorizontalResource(int) -> setChipSpacingHorizontalResource
    402:403:void setChipSpacingResource(int) -> setChipSpacingResource
    433:438:void setChipSpacingVertical(int) -> setChipSpacingVertical
    442:443:void setChipSpacingVerticalResource(int) -> setChipSpacingVerticalResource
    230:230:void setDividerDrawableHorizontal(android.graphics.drawable.Drawable) -> setDividerDrawableHorizontal
    238:238:void setDividerDrawableVertical(android.graphics.drawable.Drawable) -> setDividerDrawableVertical
    260:260:void setFlexWrap(int) -> setFlexWrap
    330:345:void setOnCheckedChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedChangeListener) -> setOnCheckedChangeListener
    354:355:void setOnCheckedStateChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedStateChangeListener) -> setOnCheckedStateChangeListener
    214:215:void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener) -> setOnHierarchyChangeListener
    494:495:void setSelectionRequired(boolean) -> setSelectionRequired
    246:246:void setShowDividerHorizontal(int) -> setShowDividerHorizontal
    253:253:void setShowDividerVertical(int) -> setShowDividerVertical
    456:457:void setSingleLine(boolean) -> setSingleLine
    461:462:void setSingleLine(int) -> setSingleLine
    475:476:void setSingleSelection(boolean) -> setSingleSelection
    484:485:void setSingleSelection(int) -> setSingleSelection
com.google.android.material.chip.ChipGroup$2 -> com.google.android.material.chip.ChipGroup$2:
    335:335:void <init>(com.google.android.material.chip.ChipGroup,com.google.android.material.chip.ChipGroup$OnCheckedChangeListener) -> <init>
com.google.android.material.chip.ChipGroup$LayoutParams -> com.google.android.material.chip.ChipGroup$LayoutParams:
    97:98:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    101:102:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    105:106:void <init>(int,int) -> <init>
com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener -> com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener:
    513:513:android.view.ViewGroup$OnHierarchyChangeListener access$302(com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener,android.view.ViewGroup$OnHierarchyChangeListener) -> access$302
com.google.android.material.circularreveal.CircularRevealCompat -> com.google.android.material.circularreveal.CircularRevealCompat:
    57:77:android.animation.Animator createCircularReveal(com.google.android.material.circularreveal.CircularRevealWidget,float,float,float) -> createCircularReveal
    123:123:android.animation.Animator$AnimatorListener createCircularRevealListener(com.google.android.material.circularreveal.CircularRevealWidget) -> createCircularRevealListener
com.google.android.material.circularreveal.CircularRevealCompat$1 -> com.google.android.material.circularreveal.CircularRevealCompat$1:
    123:123:void <init>(com.google.android.material.circularreveal.CircularRevealWidget) -> <init>
    131:132:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    126:127:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.circularreveal.CircularRevealFrameLayout -> com.google.android.material.circularreveal.CircularRevealFrameLayout:
    44:45:void buildCircularRevealCache() -> buildCircularRevealCache
    49:50:void destroyCircularRevealCache() -> destroyCircularRevealCache
    87:92:void draw(android.graphics.Canvas) -> draw
    76:76:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    65:65:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    55:55:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    101:104:boolean isOpaque() -> isOpaque
    81:82:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    70:71:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    60:61:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.circularreveal.CircularRevealHelper -> com.google.android.material.circularreveal.CircularRevealHelper:
    127:134:void <clinit>() -> <clinit>
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator -> com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator:
    209:209:void <clinit>() -> <clinit>
    207:210:void <init>() -> <init>
    207:207:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    216:220:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo evaluate(float,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> evaluate
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty -> com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty:
    181:181:void <clinit>() -> <clinit>
    185:186:void <init>(java.lang.String) -> <init>
    179:179:java.lang.Object get(java.lang.Object) -> get
    191:191:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo get(com.google.android.material.circularreveal.CircularRevealWidget) -> get
    179:179:void set(java.lang.Object,java.lang.Object) -> set
    196:197:void set(com.google.android.material.circularreveal.CircularRevealWidget,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> set
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty -> com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty:
    230:230:void <clinit>() -> <clinit>
    234:235:void <init>(java.lang.String) -> <init>
    228:228:java.lang.Object get(java.lang.Object) -> get
    240:240:java.lang.Integer get(com.google.android.material.circularreveal.CircularRevealWidget) -> get
    228:228:void set(java.lang.Object,java.lang.Object) -> set
    245:246:void set(com.google.android.material.circularreveal.CircularRevealWidget,java.lang.Integer) -> set
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo -> com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo:
    132:132:void <init>(com.google.android.material.circularreveal.CircularRevealWidget$1) -> <init>
    144:144:void <init>() -> <init>
    146:150:void <init>(float,float,float) -> <init>
    157:160:void set(float,float,float) -> set
com.google.android.material.circularreveal.cardview.CircularRevealCardView -> com.google.android.material.circularreveal.cardview.CircularRevealCardView:
    47:48:void buildCircularRevealCache() -> buildCircularRevealCache
    52:53:void destroyCircularRevealCache() -> destroyCircularRevealCache
    89:94:void draw(android.graphics.Canvas) -> draw
    79:79:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    73:73:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    63:63:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    103:106:boolean isOpaque() -> isOpaque
    84:85:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    68:69:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    57:58:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.color.MaterialColors -> com.google.android.material.color.MaterialColors:
    233:234:int compositeARGBWithAlpha(int,int) -> compositeARGBWithAlpha
    74:76:int getColor(android.view.View,int) -> getColor
    87:89:int getColor(android.content.Context,int,java.lang.String) -> getColor
    100:100:int getColor(android.view.View,int,int) -> getColor
    110:114:int getColor(android.content.Context,int,int) -> getColor
    142:150:android.content.res.ColorStateList getColorStateListOrNull(android.content.Context,int) -> getColorStateListOrNull
    239:239:boolean isColorLight(int) -> isColorLight
    194:196:int layer(android.view.View,int,int,float) -> layer
    208:210:int layer(int,int,float) -> layer
    219:219:int layer(int,int) -> layer
    154:159:int resolveColor(android.content.Context,android.util.TypedValue) -> resolveColor
com.google.android.material.datepicker.CalendarConstraints -> com.google.android.material.datepicker.CalendarConstraints:
    189:189:void <clinit>() -> <clinit>
    38:38:void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.CalendarConstraints$DateValidator,com.google.android.material.datepicker.Month,int,com.google.android.material.datepicker.CalendarConstraints$1) -> <init>
    67:88:void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.CalendarConstraints$DateValidator,com.google.android.material.datepicker.Month,int) -> <init>
    38:38:com.google.android.material.datepicker.Month access$100(com.google.android.material.datepicker.CalendarConstraints) -> access$100
    38:38:com.google.android.material.datepicker.Month access$200(com.google.android.material.datepicker.CalendarConstraints) -> access$200
    38:38:com.google.android.material.datepicker.Month access$300(com.google.android.material.datepicker.CalendarConstraints) -> access$300
    38:38:int access$400(com.google.android.material.datepicker.CalendarConstraints) -> access$400
    38:38:com.google.android.material.datepicker.CalendarConstraints$DateValidator access$500(com.google.android.material.datepicker.CalendarConstraints) -> access$500
    227:235:com.google.android.material.datepicker.Month clamp(com.google.android.material.datepicker.Month) -> clamp
    211:211:int describeContents() -> describeContents
    166:177:boolean equals(java.lang.Object) -> equals
    98:98:com.google.android.material.datepicker.CalendarConstraints$DateValidator getDateValidator() -> getDateValidator
    110:110:com.google.android.material.datepicker.Month getEnd() -> getEnd
    126:126:int getFirstDayOfWeek() -> getFirstDayOfWeek
    134:134:int getMonthSpan() -> getMonthSpan
    116:116:com.google.android.material.datepicker.Month getOpenAt() -> getOpenAt
    104:104:com.google.android.material.datepicker.Month getStart() -> getStart
    142:142:int getYearSpan() -> getYearSpan
    182:183:int hashCode() -> hashCode
    216:221:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.CalendarConstraints$1 -> com.google.android.material.datepicker.CalendarConstraints$1:
    190:190:void <init>() -> <init>
    190:190:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    194:199:com.google.android.material.datepicker.CalendarConstraints createFromParcel(android.os.Parcel) -> createFromParcel
    190:190:java.lang.Object[] newArray(int) -> newArray
    205:205:com.google.android.material.datepicker.CalendarConstraints[] newArray(int) -> newArray
com.google.android.material.datepicker.CalendarConstraints$Builder -> com.google.android.material.datepicker.CalendarConstraints$Builder:
    245:252:void <clinit>() -> <clinit>
    256:270:void <init>(com.google.android.material.datepicker.CalendarConstraints) -> <init>
    385:391:com.google.android.material.datepicker.CalendarConstraints build() -> build
    352:353:com.google.android.material.datepicker.CalendarConstraints$Builder setOpenAt(long) -> setOpenAt
com.google.android.material.datepicker.CalendarItemStyle -> com.google.android.material.datepicker.CalendarItemStyle:
    67:79:void <init>(android.content.res.ColorStateList,android.content.res.ColorStateList,android.content.res.ColorStateList,int,com.google.android.material.shape.ShapeAppearanceModel,android.graphics.Rect) -> <init>
    88:131:com.google.android.material.datepicker.CalendarItemStyle create(android.content.Context,int) -> create
    179:179:int getBottomInset() -> getBottomInset
    175:175:int getTopInset() -> getTopInset
    140:141:void styleItem(android.widget.TextView) -> styleItem
    148:164:void styleItem(android.widget.TextView,android.content.res.ColorStateList) -> styleItem
com.google.android.material.datepicker.CalendarStyle -> com.google.android.material.datepicker.CalendarStyle:
    74:116:void <init>(android.content.Context) -> <init>
com.google.android.material.datepicker.DateStrings -> com.google.android.material.datepicker.DateStrings:
    221:234:java.lang.String getDayContentDescription(android.content.Context,long,boolean,boolean,boolean) -> getDayContentDescription
    85:85:java.lang.String getMonthDayOfWeekDay(long) -> getMonthDayOfWeekDay
    89:90:java.lang.String getMonthDayOfWeekDay(long,java.util.Locale) -> getMonthDayOfWeekDay
    113:116:java.lang.String getOptionalYearMonthDayOfWeekDay(long) -> getOptionalYearMonthDayOfWeekDay
    245:250:java.lang.String getYearContentDescription(android.content.Context,int) -> getYearContentDescription
    38:39:java.lang.String getYearMonth(long) -> getYearMonth
    96:96:java.lang.String getYearMonthDayOfWeekDay(long) -> getYearMonthDayOfWeekDay
    100:101:java.lang.String getYearMonthDayOfWeekDay(long,java.util.Locale) -> getYearMonthDayOfWeekDay
    145:148:boolean isDateWithinCurrentYear(long) -> isDateWithinCurrentYear
com.google.android.material.datepicker.DateValidatorPointForward -> com.google.android.material.datepicker.DateValidatorPointForward:
    57:57:void <clinit>() -> <clinit>
    30:30:void <init>(long,com.google.android.material.datepicker.DateValidatorPointForward$1) -> <init>
    34:36:void <init>(long) -> <init>
    79:79:int describeContents() -> describeContents
    89:96:boolean equals(java.lang.Object) -> equals
    44:44:com.google.android.material.datepicker.DateValidatorPointForward from(long) -> from
    101:102:int hashCode() -> hashCode
    74:74:boolean isValid(long) -> isValid
    84:85:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.DateValidatorPointForward$1 -> com.google.android.material.datepicker.DateValidatorPointForward$1:
    58:58:void <init>() -> <init>
    58:58:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    62:62:com.google.android.material.datepicker.DateValidatorPointForward createFromParcel(android.os.Parcel) -> createFromParcel
    58:58:java.lang.Object[] newArray(int) -> newArray
    68:68:com.google.android.material.datepicker.DateValidatorPointForward[] newArray(int) -> newArray
com.google.android.material.datepicker.DayViewDecorator -> com.google.android.material.datepicker.DayViewDecorator:
    28:28:void <init>() -> <init>
    147:147:android.content.res.ColorStateList getBackgroundColor(android.content.Context,int,int,int,boolean,boolean) -> getBackgroundColor
    125:125:android.graphics.drawable.Drawable getCompoundDrawableBottom(android.content.Context,int,int,int,boolean,boolean) -> getCompoundDrawableBottom
    59:59:android.graphics.drawable.Drawable getCompoundDrawableLeft(android.content.Context,int,int,int,boolean,boolean) -> getCompoundDrawableLeft
    103:103:android.graphics.drawable.Drawable getCompoundDrawableRight(android.content.Context,int,int,int,boolean,boolean) -> getCompoundDrawableRight
    81:81:android.graphics.drawable.Drawable getCompoundDrawableTop(android.content.Context,int,int,int,boolean,boolean) -> getCompoundDrawableTop
    175:175:java.lang.CharSequence getContentDescription(android.content.Context,int,int,int,boolean,boolean,java.lang.CharSequence) -> getContentDescription
    38:38:void initialize(android.content.Context) -> initialize
com.google.android.material.datepicker.DaysOfWeekAdapter -> com.google.android.material.datepicker.DaysOfWeekAdapter:
    46:47:void <clinit>() -> <clinit>
    40:55:void <init>() -> <init>
    40:59:void <init>(int) -> <init>
    78:78:int getCount() -> getCount
    38:38:java.lang.Object getItem(int) -> getItem
    64:67:java.lang.Integer getItem(int) -> getItem
    73:73:long getItemId(int) -> getItemId
    85:99:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    104:108:int positionToDayOfWeek(int) -> positionToDayOfWeek
com.google.android.material.datepicker.MaterialCalendar -> com.google.android.material.datepicker.MaterialCalendar:
    76:82:void <clinit>() -> <clinit>
    61:61:void <init>() -> <init>
    61:61:androidx.recyclerview.widget.RecyclerView access$000(com.google.android.material.datepicker.MaterialCalendar) -> access$000
    61:61:com.google.android.material.datepicker.CalendarConstraints access$100(com.google.android.material.datepicker.MaterialCalendar) -> access$100
    61:61:com.google.android.material.datepicker.DateSelector access$200(com.google.android.material.datepicker.MaterialCalendar) -> access$200
    61:61:androidx.recyclerview.widget.RecyclerView access$300(com.google.android.material.datepicker.MaterialCalendar) -> access$300
    61:61:com.google.android.material.datepicker.CalendarStyle access$400(com.google.android.material.datepicker.MaterialCalendar) -> access$400
    61:61:android.view.View access$500(com.google.android.material.datepicker.MaterialCalendar) -> access$500
    61:61:com.google.android.material.datepicker.Month access$602(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.Month) -> access$602
    405:486:void addActionsToMonthNavigation(android.view.View,com.google.android.material.datepicker.MonthsPagerAdapter) -> addActionsToMonthNavigation
    522:522:boolean addOnSelectionChangedListener(com.google.android.material.datepicker.OnSelectionChangedListener) -> addOnSelectionChangedListener
    267:267:androidx.recyclerview.widget.RecyclerView$ItemDecoration createItemDecoration() -> createItemDecoration
    325:325:com.google.android.material.datepicker.CalendarConstraints getCalendarConstraints() -> getCalendarConstraints
    359:359:com.google.android.material.datepicker.CalendarStyle getCalendarStyle() -> getCalendarStyle
    319:319:com.google.android.material.datepicker.Month getCurrentMonth() -> getCurrentMonth
    355:355:com.google.android.material.datepicker.DateSelector getDateSelector() -> getDateSelector
    370:370:int getDayHeight(android.content.Context) -> getDayHeight
    499:512:int getDialogPickerHeight(android.content.Context) -> getDialogPickerHeight
    517:517:androidx.recyclerview.widget.LinearLayoutManager getLayoutManager() -> getLayoutManager
    112:120:com.google.android.material.datepicker.MaterialCalendar newInstance(com.google.android.material.datepicker.DateSelector,int,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.DayViewDecorator) -> newInstance
    135:142:void onCreate(android.os.Bundle) -> onCreate
    150:249:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    125:131:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    489:496:void postSmoothRecyclerViewScroll(int) -> postSmoothRecyclerViewScroll
    335:350:void setCurrentMonth(com.google.android.material.datepicker.Month) -> setCurrentMonth
    374:393:void setSelector(com.google.android.material.datepicker.MaterialCalendar$CalendarSelector) -> setSelector
    253:263:void setUpForAccessibility() -> setUpForAccessibility
    396:401:void toggleVisibleSelector() -> toggleVisibleSelector
com.google.android.material.datepicker.MaterialCalendar$1 -> com.google.android.material.datepicker.MaterialCalendar$1:
    171:171:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    175:178:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.datepicker.MaterialCalendar$10 -> com.google.android.material.datepicker.MaterialCalendar$10:
    477:477:void <init>(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.MonthsPagerAdapter) -> <init>
    480:484:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialCalendar$11 -> com.google.android.material.datepicker.MaterialCalendar$11:
    490:490:void <init>(com.google.android.material.datepicker.MaterialCalendar,int) -> <init>
    493:494:void run() -> run
com.google.android.material.datepicker.MaterialCalendar$2 -> com.google.android.material.datepicker.MaterialCalendar$2:
    189:189:void <init>(com.google.android.material.datepicker.MaterialCalendar,android.content.Context,int,boolean,int) -> <init>
    192:199:void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[]) -> calculateExtraLayoutSpace
com.google.android.material.datepicker.MaterialCalendar$3 -> com.google.android.material.datepicker.MaterialCalendar$3:
    210:210:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    214:225:void onDayClick(long) -> onDayClick
com.google.android.material.datepicker.MaterialCalendar$4 -> com.google.android.material.datepicker.MaterialCalendar$4:
    255:255:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    259:261:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.datepicker.MaterialCalendar$5 -> com.google.android.material.datepicker.MaterialCalendar$5:
    267:270:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    275:313:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
com.google.android.material.datepicker.MaterialCalendar$6 -> com.google.android.material.datepicker.MaterialCalendar$6:
    409:409:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    414:419:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.datepicker.MaterialCalendar$7 -> com.google.android.material.datepicker.MaterialCalendar$7:
    432:432:void <init>(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.MonthsPagerAdapter,com.google.android.material.button.MaterialButton) -> <init>
    447:455:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    436:443:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
com.google.android.material.datepicker.MaterialCalendar$8 -> com.google.android.material.datepicker.MaterialCalendar$8:
    459:459:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    462:463:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialCalendar$9 -> com.google.android.material.datepicker.MaterialCalendar$9:
    467:467:void <init>(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.MonthsPagerAdapter) -> <init>
    470:474:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector -> com.google.android.material.datepicker.MaterialCalendar$CalendarSelector:
    64:66:void <clinit>() -> <clinit>
    64:64:void <init>(java.lang.String,int) -> <init>
    64:64:com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String) -> valueOf
    64:64:com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values() -> values
com.google.android.material.datepicker.MaterialCalendarGridView -> com.google.android.material.datepicker.MaterialCalendarGridView:
    51:52:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    43:72:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    229:236:void gainFocus(int,android.graphics.Rect) -> gainFocus
    41:41:android.widget.Adapter getAdapter() -> getAdapter
    41:41:android.widget.ListAdapter getAdapter() -> getAdapter
    109:109:com.google.android.material.datepicker.MonthAdapter getAdapter() -> getAdapter
    239:239:android.view.View getChildAtPosition(int) -> getChildAtPosition
    254:254:int horizontalMidPoint(android.view.View) -> horizontalMidPoint
    76:78:void onAttachedToWindow() -> onAttachedToWindow
    126:203:void onDraw(android.graphics.Canvas) -> onDraw
    221:226:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    91:103:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    207:217:void onMeasure(int,int) -> onMeasure
    41:41:void setAdapter(android.widget.Adapter) -> setAdapter
    114:122:void setAdapter(android.widget.ListAdapter) -> setAdapter
    82:87:void setSelection(int) -> setSelection
    247:250:boolean skipMonth(java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long) -> skipMonth
com.google.android.material.datepicker.MaterialCalendarGridView$1 -> com.google.android.material.datepicker.MaterialCalendarGridView$1:
    63:63:void <init>(com.google.android.material.datepicker.MaterialCalendarGridView) -> <init>
    67:70:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.datepicker.MaterialDatePicker -> com.google.android.material.datepicker.MaterialDatePicker:
    87:89:void <clinit>() -> <clinit>
    73:130:void <init>() -> <init>
    73:73:java.util.LinkedHashSet access$000(com.google.android.material.datepicker.MaterialDatePicker) -> access$000
    73:73:com.google.android.material.datepicker.DateSelector access$100(com.google.android.material.datepicker.MaterialDatePicker) -> access$100
    73:73:java.util.LinkedHashSet access$200(com.google.android.material.datepicker.MaterialDatePicker) -> access$200
    73:73:android.widget.Button access$300(com.google.android.material.datepicker.MaterialDatePicker) -> access$300
    73:73:com.google.android.material.internal.CheckableImageButton access$400(com.google.android.material.datepicker.MaterialDatePicker) -> access$400
    73:73:void access$500(com.google.android.material.datepicker.MaterialDatePicker,com.google.android.material.internal.CheckableImageButton) -> access$500
    73:73:void access$600(com.google.android.material.datepicker.MaterialDatePicker) -> access$600
    511:518:android.graphics.drawable.Drawable createHeaderToggleDrawable(android.content.Context) -> createHeaderToggleDrawable
    391:419:void enableEdgeToEdgeIfNeeded(android.view.Window) -> enableEdgeToEdgeIfNeeded
    502:505:com.google.android.material.datepicker.DateSelector getDateSelector() -> getDateSelector
    523:527:java.lang.CharSequence getFirstLineBySeparator(java.lang.CharSequence) -> getFirstLineBySeparator
    434:434:java.lang.String getHeaderContentDescription() -> getHeaderContentDescription
    121:121:java.lang.String getHeaderText() -> getHeaderText
    554:560:int getPaddedPickerWidth(android.content.Context) -> getPaddedPickerWidth
    387:387:java.lang.Object getSelection() -> getSelection
    220:223:int getThemeResId(android.content.Context) -> getThemeResId
    471:491:void initHeaderToggle(android.content.Context) -> initHeaderToggle
    535:535:boolean isFullscreen(android.content.Context) -> isFullscreen
    531:531:boolean isLandscape() -> isLandscape
    539:539:boolean isNestedScrollable(android.content.Context) -> isNestedScrollable
    363:367:void onCancel(android.content.DialogInterface) -> onCancel
    200:217:void onCreate(android.os.Bundle) -> onCreate
    229:244:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    253:330:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    371:379:void onDismiss(android.content.DialogInterface) -> onDismiss
    179:196:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    335:353:void onStart() -> onStart
    357:359:void onStop() -> onStop
    543:550:boolean readMaterialCalendarStyleBoolean(android.content.Context,int) -> readMaterialCalendarStyleBoolean
    438:468:void startPickerFragment() -> startPickerFragment
    429:431:void updateHeader(java.lang.String) -> updateHeader
    423:425:void updateTitle(boolean) -> updateTitle
    495:499:void updateToggleContentDescription(com.google.android.material.internal.CheckableImageButton) -> updateToggleContentDescription
com.google.android.material.datepicker.MaterialDatePicker$1 -> com.google.android.material.datepicker.MaterialDatePicker$1:
    291:291:void <init>(com.google.android.material.datepicker.MaterialDatePicker) -> <init>
    295:299:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialDatePicker$2 -> com.google.android.material.datepicker.MaterialDatePicker$2:
    303:303:void <init>(com.google.android.material.datepicker.MaterialDatePicker) -> <init>
    307:310:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.datepicker.MaterialDatePicker$3 -> com.google.android.material.datepicker.MaterialDatePicker$3:
    321:321:void <init>(com.google.android.material.datepicker.MaterialDatePicker) -> <init>
    324:328:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialDatePicker$4 -> com.google.android.material.datepicker.MaterialDatePicker$4:
    402:402:void <init>(com.google.android.material.datepicker.MaterialDatePicker,int,android.view.View,int) -> <init>
    405:415:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.datepicker.MaterialDatePicker$5 -> com.google.android.material.datepicker.MaterialDatePicker$5:
    456:456:void <init>(com.google.android.material.datepicker.MaterialDatePicker) -> <init>
    459:461:void onSelectionChanged(java.lang.Object) -> onSelectionChanged
com.google.android.material.datepicker.MaterialDatePicker$6 -> com.google.android.material.datepicker.MaterialDatePicker$6:
    480:480:void <init>(com.google.android.material.datepicker.MaterialDatePicker) -> <init>
    484:489:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialTextInputPicker -> com.google.android.material.datepicker.MaterialTextInputPicker:
    35:35:void <init>() -> <init>
    50:56:com.google.android.material.datepicker.MaterialTextInputPicker newInstance(com.google.android.material.datepicker.DateSelector,int,com.google.android.material.datepicker.CalendarConstraints) -> newInstance
    69:74:void onCreate(android.os.Bundle) -> onCreate
    82:84:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    61:65:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
com.google.android.material.datepicker.MaterialTextInputPicker$1 -> com.google.android.material.datepicker.MaterialTextInputPicker$1:
    89:89:void <init>(com.google.android.material.datepicker.MaterialTextInputPicker) -> <init>
    92:95:void onSelectionChanged(java.lang.Object) -> onSelectionChanged
com.google.android.material.datepicker.Month -> com.google.android.material.datepicker.Month:
    203:203:void <clinit>() -> <clinit>
    59:67:void <init>(java.util.Calendar) -> <init>
    30:30:int compareTo(java.lang.Object) -> compareTo
    135:135:int compareTo(com.google.android.material.datepicker.Month) -> compareTo
    75:77:com.google.android.material.datepicker.Month create(long) -> create
    90:93:com.google.android.material.datepicker.Month create(int,int) -> create
    102:102:com.google.android.material.datepicker.Month current() -> current
    106:112:int daysFromStartOfWeekToFirstOfMonth(int) -> daysFromStartOfWeekToFirstOfMonth
    222:222:int describeContents() -> describeContents
    117:124:boolean equals(java.lang.Object) -> equals
    169:171:long getDay(int) -> getDay
    175:177:int getDayOfMonth(long) -> getDayOfMonth
    194:197:java.lang.String getLongName() -> getLongName
    156:156:long getStableId() -> getStableId
    129:130:int hashCode() -> hashCode
    186:188:com.google.android.material.datepicker.Month monthsLater(int) -> monthsLater
    148:151:int monthsUntil(com.google.android.material.datepicker.Month) -> monthsUntil
    227:229:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.Month$1 -> com.google.android.material.datepicker.Month$1:
    204:204:void <init>() -> <init>
    204:204:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    208:210:com.google.android.material.datepicker.Month createFromParcel(android.os.Parcel) -> createFromParcel
    204:204:java.lang.Object[] newArray(int) -> newArray
    216:216:com.google.android.material.datepicker.Month[] newArray(int) -> newArray
com.google.android.material.datepicker.MonthAdapter -> com.google.android.material.datepicker.MonthAdapter:
    47:52:void <clinit>() -> <clinit>
    74:80:void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.DateSelector,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.DayViewDecorator) -> <init>
    320:321:int dayToPosition(int) -> dayToPosition
    293:293:int firstPositionInMonth() -> firstPositionInMonth
    119:119:int getCount() -> getCount
    242:243:java.lang.String getDayContentDescription(android.content.Context,long) -> getDayContentDescription
    42:42:java.lang.Object getItem(int) -> getItem
    99:102:java.lang.Long getItem(int) -> getItem
    107:107:long getItemId(int) -> getItemId
    42:42:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    125:151:android.widget.TextView getView(int,android.view.View,android.view.ViewGroup) -> getView
    84:84:boolean hasStableIds() -> hasStableIds
    280:283:void initializeStyles(android.content.Context) -> initializeStyles
    262:267:boolean isEndOfRange(long) -> isEndOfRange
    334:334:boolean isFirstInRow(int) -> isFirstInRow
    342:342:boolean isLastInRow(int) -> isLastInRow
    271:276:boolean isSelected(long) -> isSelected
    252:257:boolean isStartOfRange(long) -> isStartOfRange
    247:247:boolean isToday(long) -> isToday
    304:304:int lastPositionInMonth() -> lastPositionInMonth
    315:315:int positionToDay(int) -> positionToDay
    184:239:void updateSelectedState(android.widget.TextView,long,int) -> updateSelectedState
    171:181:void updateSelectedStateForDate(com.google.android.material.datepicker.MaterialCalendarGridView,long) -> updateSelectedStateForDate
    156:168:void updateSelectedStates(com.google.android.material.datepicker.MaterialCalendarGridView) -> updateSelectedStates
    326:326:boolean withinMonth(int) -> withinMonth
com.google.android.material.datepicker.MonthsPagerAdapter -> com.google.android.material.datepicker.MonthsPagerAdapter:
    52:74:void <init>(android.content.Context,com.google.android.material.datepicker.DateSelector,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.DayViewDecorator,com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener) -> <init>
    39:39:com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener access$000(com.google.android.material.datepicker.MonthsPagerAdapter) -> access$000
    142:142:int getItemCount() -> getItemCount
    137:137:long getItemId(int) -> getItemId
    152:152:com.google.android.material.datepicker.Month getPageMonth(int) -> getPageMonth
    147:147:java.lang.CharSequence getPageTitle(int) -> getPageTitle
    156:156:int getPosition(com.google.android.material.datepicker.Month) -> getPosition
    39:39:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    110:133:void onBindViewHolder(com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder,int) -> onBindViewHolder
    39:39:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    95:104:com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
com.google.android.material.datepicker.MonthsPagerAdapter$1 -> com.google.android.material.datepicker.MonthsPagerAdapter$1:
    125:125:void <init>(com.google.android.material.datepicker.MonthsPagerAdapter,com.google.android.material.datepicker.MaterialCalendarGridView) -> <init>
    128:131:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder -> com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder:
    82:89:void <init>(android.widget.LinearLayout,boolean) -> <init>
com.google.android.material.datepicker.OnSelectionChangedListener -> com.google.android.material.datepicker.OnSelectionChangedListener:
    24:24:void <init>() -> <init>
com.google.android.material.datepicker.PickerFragment -> com.google.android.material.datepicker.PickerFragment:
    21:23:void <init>() -> <init>
    30:30:boolean addOnSelectionChangedListener(com.google.android.material.datepicker.OnSelectionChangedListener) -> addOnSelectionChangedListener
    40:41:void clearOnSelectionChangedListeners() -> clearOnSelectionChangedListeners
com.google.android.material.datepicker.SmoothCalendarLayoutManager -> com.google.android.material.datepicker.SmoothCalendarLayoutManager:
    34:35:void <init>(android.content.Context,int,boolean) -> <init>
    40:50:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
com.google.android.material.datepicker.SmoothCalendarLayoutManager$1 -> com.google.android.material.datepicker.SmoothCalendarLayoutManager$1:
    41:41:void <init>(com.google.android.material.datepicker.SmoothCalendarLayoutManager,android.content.Context) -> <init>
    45:45:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
com.google.android.material.datepicker.TimeSource -> com.google.android.material.datepicker.TimeSource:
    25:25:void <clinit>() -> <clinit>
    31:34:void <init>(java.lang.Long,java.util.TimeZone) -> <init>
    80:80:java.util.Calendar now() -> now
    90:95:java.util.Calendar now(java.util.TimeZone) -> now
    43:43:com.google.android.material.datepicker.TimeSource system() -> system
com.google.android.material.datepicker.UtcDates -> com.google.android.material.datepicker.UtcDates:
    40:40:void <clinit>() -> <clinit>
    130:133:long canonicalYearMonthDay(long) -> canonicalYearMonthDay
    198:198:android.icu.text.DateFormat getAbbrMonthWeekdayDayFormat(java.util.Locale) -> getAbbrMonthWeekdayDayFormat
    138:141:android.icu.text.DateFormat getAndroidFormat(java.lang.String,java.util.Locale) -> getAndroidFormat
    113:119:java.util.Calendar getDayCopy(java.util.Calendar) -> getDayCopy
    47:48:com.google.android.material.datepicker.TimeSource getTimeSource() -> getTimeSource
    54:54:java.util.TimeZone getTimeZone() -> getTimeZone
    66:72:java.util.Calendar getTodayCalendar() -> getTodayCalendar
    59:59:android.icu.util.TimeZone getUtcAndroidTimeZone() -> getUtcAndroidTimeZone
    83:83:java.util.Calendar getUtcCalendar() -> getUtcCalendar
    95:101:java.util.Calendar getUtcCalendarOf(java.util.Calendar) -> getUtcCalendarOf
    203:203:android.icu.text.DateFormat getYearAbbrMonthWeekdayDayFormat(java.util.Locale) -> getYearAbbrMonthWeekdayDayFormat
com.google.android.material.datepicker.YearGridAdapter -> com.google.android.material.datepicker.YearGridAdapter:
    45:47:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    31:31:com.google.android.material.datepicker.MaterialCalendar access$000(com.google.android.material.datepicker.YearGridAdapter) -> access$000
    80:80:android.view.View$OnClickListener createYearClickListener(int) -> createYearClickListener
    94:94:int getItemCount() -> getItemCount
    98:98:int getPositionForYear(int) -> getPositionForYear
    102:102:int getYearForPosition(int) -> getYearForPosition
    31:31:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    61:76:void onBindViewHolder(com.google.android.material.datepicker.YearGridAdapter$ViewHolder,int) -> onBindViewHolder
    31:31:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    52:56:com.google.android.material.datepicker.YearGridAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
com.google.android.material.datepicker.YearGridAdapter$1 -> com.google.android.material.datepicker.YearGridAdapter$1:
    80:80:void <init>(com.google.android.material.datepicker.YearGridAdapter,int) -> <init>
    83:88:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.YearGridAdapter$ViewHolder -> com.google.android.material.datepicker.YearGridAdapter$ViewHolder:
    40:42:void <init>(android.widget.TextView) -> <init>
com.google.android.material.dialog.InsetDialogOnTouchListener -> com.google.android.material.dialog.InsetDialogOnTouchListener:
    45:50:void <init>(android.app.Dialog,android.graphics.Rect) -> <init>
    54:76:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.android.material.drawable.DrawableUtils -> com.google.android.material.drawable.DrawableUtils:
    202:250:android.graphics.drawable.Drawable compositeTwoLayeredDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> compositeTwoLayeredDrawable
    168:168:android.graphics.drawable.Drawable createTintableMutatedDrawableIfNeeded(android.graphics.drawable.Drawable,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> createTintableMutatedDrawableIfNeeded
    178:189:android.graphics.drawable.Drawable createTintableMutatedDrawableIfNeeded(android.graphics.drawable.Drawable,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,boolean) -> createTintableMutatedDrawableIfNeeded
    256:267:int[] getCheckedState(int[]) -> getCheckedState
    285:299:void setOutlineToPath(android.graphics.Outline,android.graphics.Path) -> setOutlineToPath
    92:97:android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.drawable.Drawable,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> updateTintFilter
com.google.android.material.drawable.DrawableUtils$$ExternalSyntheticApiModelOutline0 -> com.google.android.material.drawable.DrawableUtils$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.drawable.DrawableUtils$$InternalSyntheticApiModelOutline$1$f5923863e87451774c032344458021795757d7a20f0d93fc99337241970341f1$0.m(android.graphics.Outline,android.graphics.Path) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.elevation.ElevationOverlayProvider -> com.google.android.material.elevation.ElevationOverlayProvider:
    36:36:void <clinit>() -> <clinit>
    45:51:void <init>(android.content.Context) -> <init>
    58:64:void <init>(boolean,int,int,int,float) -> <init>
    158:164:float calculateOverlayAlphaFraction(float) -> calculateOverlayAlphaFraction
    132:142:int compositeOverlay(int,float) -> compositeOverlay
    109:112:int compositeOverlayIfNeeded(int,float) -> compositeOverlayIfNeeded
    85:85:int compositeOverlayWithThemeSurfaceColorIfNeeded(float) -> compositeOverlayWithThemeSurfaceColorIfNeeded
    169:169:boolean isThemeElevationOverlayEnabled() -> isThemeElevationOverlayEnabled
    193:193:boolean isThemeSurfaceColor(int) -> isThemeSurfaceColor
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton:
    83:986:void <clinit>() -> <clinit>
    81:81:void access$400(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> access$400
    477:477:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    1017:1017:int getCollapsedPadding() -> getCollapsedPadding
    1011:1013:int getCollapsedSize() -> getCollapsedSize
    764:764:com.google.android.material.animation.MotionSpec getExtendMotionSpec() -> getExtendMotionSpec
    740:740:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    716:716:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    790:790:com.google.android.material.animation.MotionSpec getShrinkMotionSpec() -> getShrinkMotionSpec
    889:894:boolean isOrWillBeShown() -> isOrWillBeShown
    466:472:void onAttachedToWindow() -> onAttachedToWindow
    814:886:void performMotion(int,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> performMotion
    453:454:void saveOriginalTextCsl() -> saveOriginalTextCsl
    509:510:void setAnimateShowBeforeLayout(boolean) -> setAnimateShowBeforeLayout
    773:774:void setExtendMotionSpec(com.google.android.material.animation.MotionSpec) -> setExtendMotionSpec
    782:783:void setExtendMotionSpecResource(int) -> setExtendMotionSpecResource
    485:495:void setExtended(boolean) -> setExtended
    749:750:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    758:759:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    523:528:void setPadding(int,int,int,int) -> setPadding
    514:519:void setPaddingRelative(int,int,int,int) -> setPaddingRelative
    725:726:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    734:735:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    799:800:void setShrinkMotionSpec(com.google.android.material.animation.MotionSpec) -> setShrinkMotionSpec
    808:809:void setShrinkMotionSpecResource(int) -> setShrinkMotionSpecResource
    442:444:void setTextColor(int) -> setTextColor
    448:450:void setTextColor(android.content.res.ColorStateList) -> setTextColor
    909:910:boolean shouldAnimateVisibilityChange() -> shouldAnimateVisibilityChange
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$5 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$5:
    857:857:void <init>(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,com.google.android.material.floatingactionbutton.MotionStrategy,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> <init>
    868:870:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    874:878:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    862:864:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$6 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$6:
    918:918:void <init>(java.lang.Class,java.lang.String) -> <init>
    918:918:java.lang.Object get(java.lang.Object) -> get
    932:932:java.lang.Float get(android.view.View) -> get
    918:918:void set(java.lang.Object,java.lang.Object) -> set
    923:925:void set(android.view.View,java.lang.Float) -> set
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$7 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$7:
    941:941:void <init>(java.lang.Class,java.lang.String) -> <init>
    941:941:java.lang.Object get(java.lang.Object) -> get
    955:955:java.lang.Float get(android.view.View) -> get
    941:941:void set(java.lang.Object,java.lang.Object) -> set
    946:948:void set(android.view.View,java.lang.Float) -> set
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$8 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$8:
    964:964:void <init>(java.lang.Class,java.lang.String) -> <init>
    964:964:java.lang.Object get(java.lang.Object) -> get
    978:978:java.lang.Float get(android.view.View) -> get
    964:964:void set(java.lang.Object,java.lang.Object) -> set
    967:973:void set(android.view.View,java.lang.Float) -> set
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$9 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$9:
    987:987:void <init>(java.lang.Class,java.lang.String) -> <init>
    987:987:java.lang.Object get(java.lang.Object) -> get
    1001:1001:java.lang.Float get(android.view.View) -> get
    987:987:void set(java.lang.Object,java.lang.Object) -> set
    990:996:void set(android.view.View,java.lang.Float) -> set
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior:
    1038:1041:void <init>() -> <init>
    1047:1060:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1259:1264:void extendOrShow(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> extendOrShow
    1025:1025:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> getInsetDodgeRect
    1122:1122:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,android.graphics.Rect) -> getInsetDodgeRect
    1148:1152:boolean isBottomSheet(android.view.View) -> isBottomSheet
    1127:1132:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    1025:1025:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    1137:1144:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,android.view.View) -> onDependentViewChanged
    1025:1025:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1272:1287:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int) -> onLayoutChild
    1169:1181:boolean shouldUpdateVisibility(android.view.View,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> shouldUpdateVisibility
    1239:1244:void shrinkOrHide(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> shrinkOrHide
    1188:1207:boolean updateFabVisibilityForAppBarLayout(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> updateFabVisibilityForAppBarLayout
    1214:1223:boolean updateFabVisibilityForBottomSheet(android.view.View,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> updateFabVisibilityForBottomSheet
com.google.android.material.floatingactionbutton.FloatingActionButton -> com.google.android.material.floatingactionbutton.FloatingActionButton:
    110:110:void <clinit>() -> <clinit>
    101:101:int access$000(com.google.android.material.floatingactionbutton.FloatingActionButton) -> access$000
    101:101:void access$101(com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.drawable.Drawable) -> access$101
    639:640:void addOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> addOnHideAnimationListener
    607:608:void addOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> addOnShowAnimationListener
    1351:1352:void addTransformationCallback(com.google.android.material.animation.TransformationCallback) -> addTransformationCallback
    1444:1445:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl createImpl() -> createImpl
    835:837:void drawableStateChanged() -> drawableStateChanged
    364:364:android.content.res.ColorStateList getBackgroundTintList() -> getBackgroundTintList
    390:390:android.graphics.PorterDuff$Mode getBackgroundTintMode() -> getBackgroundTintMode
    352:352:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    1200:1200:float getCompatElevation() -> getCompatElevation
    1236:1236:float getCompatHoveredFocusedTranslationZ() -> getCompatHoveredFocusedTranslationZ
    1273:1273:float getCompatPressedTranslationZ() -> getCompatPressedTranslationZ
    913:913:android.graphics.drawable.Drawable getContentBackground() -> getContentBackground
    885:890:boolean getContentRect(android.graphics.Rect) -> getContentRect
    782:782:int getCustomSize() -> getCustomSize
    663:663:int getExpandedComponentIdHint() -> getExpandedComponentIdHint
    1327:1327:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    1436:1439:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl() -> getImpl
    899:901:void getMeasuredContentRect(android.graphics.Rect) -> getMeasuredContentRect
    304:304:int getRippleColor() -> getRippleColor
    315:315:android.content.res.ColorStateList getRippleColorStateList() -> getRippleColorStateList
    539:539:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    1303:1303:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    723:723:int getSize() -> getSize
    796:796:int getSizeDimension() -> getSizeDimension
    800:817:int getSizeDimension(int) -> getSizeDimension
    424:424:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    443:443:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    457:457:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    471:471:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    691:691:boolean getUseCompatPadding() -> getUseCompatPadding
    631:632:void hide(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> hide
    635:636:void hide(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener,boolean) -> hide
    653:653:boolean isExpanded() -> isExpanded
    747:747:boolean isOrWillBeHidden() -> isOrWillBeHidden
    751:751:boolean isOrWillBeShown() -> isOrWillBeShown
    841:843:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    904:908:void offsetRectWithShadow(android.graphics.Rect) -> offsetRectWithShadow
    475:494:void onApplySupportImageTint() -> onApplySupportImageTint
    823:825:void onAttachedToWindow() -> onAttachedToWindow
    829:831:void onDetachedFromWindow() -> onDetachedFromWindow
    276:292:void onMeasure(int,int) -> onMeasure
    863:873:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    847:854:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    918:924:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    508:509:void setBackgroundColor(int) -> setBackgroundColor
    498:499:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    503:504:void setBackgroundResource(int) -> setBackgroundResource
    375:379:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    402:406:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1212:1213:void setCompatElevation(float) -> setCompatElevation
    1224:1225:void setCompatElevationResource(int) -> setCompatElevationResource
    1249:1250:void setCompatHoveredFocusedTranslationZ(float) -> setCompatHoveredFocusedTranslationZ
    1262:1263:void setCompatHoveredFocusedTranslationZResource(int) -> setCompatHoveredFocusedTranslationZResource
    1285:1286:void setCompatPressedTranslationZ(float) -> setCompatPressedTranslationZ
    1297:1298:void setCompatPressedTranslationZResource(int) -> setCompatPressedTranslationZResource
    765:773:void setCustomSize(int) -> setCustomSize
    1188:1190:void setElevation(float) -> setElevation
    560:564:void setEnsureMinTouchTargetSize(boolean) -> setEnsureMinTouchTargetSize
    658:659:void setExpandedComponentIdHint(int) -> setExpandedComponentIdHint
    1336:1337:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    1345:1346:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    520:527:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    514:516:void setImageResource(int) -> setImageResource
    578:580:void setMaxImageSize(int) -> setMaxImageSize
    329:330:void setRippleColor(int) -> setRippleColor
    343:347:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    1414:1416:void setScaleX(float) -> setScaleX
    1420:1422:void setScaleY(float) -> setScaleY
    1432:1433:void setShadowPaddingEnabled(boolean) -> setShadowPaddingEnabled
    532:533:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    1312:1313:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    1321:1322:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    708:713:void setSize(int) -> setSize
    414:415:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    433:434:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    448:452:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    462:466:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    1396:1398:void setTranslationX(float) -> setTranslationX
    1402:1404:void setTranslationY(float) -> setTranslationY
    1408:1410:void setTranslationZ(float) -> setTranslationZ
    676:680:void setUseCompatPadding(boolean) -> setUseCompatPadding
    568:569:void setVisibility(int) -> setVisibility
    599:600:void show(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> show
    603:604:void show(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener,boolean) -> show
    729:733:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener wrapOnVisibilityChangedListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> wrapOnVisibilityChangedListener
com.google.android.material.floatingactionbutton.FloatingActionButton$1 -> com.google.android.material.floatingactionbutton.FloatingActionButton$1:
    733:733:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> <init>
    741:742:void onHidden() -> onHidden
    736:737:void onShown() -> onShown
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior -> com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior:
    959:961:void <init>() -> <init>
    964:972:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    950:950:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> getInsetDodgeRect
    1133:1139:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.Rect) -> getInsetDodgeRect
    1021:1025:boolean isBottomSheet(android.view.View) -> isBottomSheet
    1151:1182:void offsetIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton) -> offsetIfNeeded
    1000:1005:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    950:950:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    1010:1017:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.view.View) -> onDependentViewChanged
    950:950:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1106:1123:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int) -> onLayoutChild
    1037:1055:boolean shouldUpdateVisibility(android.view.View,com.google.android.material.floatingactionbutton.FloatingActionButton) -> shouldUpdateVisibility
    1062:1081:boolean updateFabVisibilityForAppBarLayout(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,com.google.android.material.floatingactionbutton.FloatingActionButton) -> updateFabVisibilityForAppBarLayout
    1088:1097:boolean updateFabVisibilityForBottomSheet(android.view.View,com.google.android.material.floatingactionbutton.FloatingActionButton) -> updateFabVisibilityForBottomSheet
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior -> com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior:
    936:937:void <init>() -> <init>
    940:941:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    933:933:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.Rect) -> getInsetDodgeRect
    933:933:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    933:933:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.view.View) -> onDependentViewChanged
    933:933:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int) -> onLayoutChild
com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener -> com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener:
    113:113:void <init>() -> <init>
    127:127:void onHidden(com.google.android.material.floatingactionbutton.FloatingActionButton) -> onHidden
    119:119:void onShown(com.google.android.material.floatingactionbutton.FloatingActionButton) -> onShown
com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl -> com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl:
    1452:1452:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton) -> <init>
    1475:1475:boolean isCompatPaddingEnabled() -> isCompatPaddingEnabled
    1468:1471:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    1461:1464:void setShadowPadding(int,int,int,int) -> setShadowPadding
com.google.android.material.floatingactionbutton.FloatingActionButton$TransformationCallbackWrapper -> com.google.android.material.floatingactionbutton.FloatingActionButton$TransformationCallbackWrapper:
    1368:1370:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.animation.TransformationCallback) -> <init>
    1384:1385:boolean equals(java.lang.Object) -> equals
    1390:1390:int hashCode() -> hashCode
    1379:1380:void onScaleChanged() -> onScaleChanged
    1374:1375:void onTranslationChanged() -> onTranslationChanged
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl:
    70:150:void <clinit>() -> <clinit>
    103:191:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.shadow.ShadowViewDelegate) -> <init>
    68:68:int access$002(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,int) -> access$002
    68:68:android.animation.Animator access$102(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,android.animation.Animator) -> access$102
    68:68:float access$202(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,float) -> access$202
    68:68:void access$300(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,float,android.graphics.Matrix) -> access$300
    410:414:void addOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> addOnHideAnimationListener
    394:398:void addOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> addOnShowAnimationListener
    694:698:void addTransformationCallback(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback) -> addTransformationCallback
    302:316:void calculateImageMatrixFromScale(float,android.graphics.Matrix) -> calculateImageMatrixFromScale
    581:618:android.animation.AnimatorSet createAnimator(com.google.android.material.animation.MotionSpec,float,float,float) -> createAnimator
    633:671:android.animation.AnimatorSet createDefaultAnimator(float,float,float,int,int) -> createDefaultAnimator
    840:846:android.animation.ValueAnimator createElevationAnimator(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl) -> createElevationAnimator
    727:727:android.graphics.drawable.Drawable getContentBackground() -> getContentBackground
    361:361:boolean getEnsureMinTouchTargetSize() -> getEnsureMinTouchTargetSize
    349:349:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    259:259:float getHoveredFocusedTranslationZ() -> getHoveredFocusedTranslationZ
    799:810:android.view.ViewTreeObserver$OnPreDrawListener getOrCreatePreDrawListener() -> getOrCreatePreDrawListener
    742:750:void getPadding(android.graphics.Rect) -> getPadding
    263:263:float getPressedTranslationZ() -> getPressedTranslationZ
    335:335:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearance() -> getShapeAppearance
    340:340:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    426:498:void hide(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> hide
    829:834:boolean isOrWillBeHidden() -> isOrWillBeHidden
    819:824:boolean isOrWillBeShown() -> isOrWillBeShown
    768:775:void onAttachedToWindow() -> onAttachedToWindow
    778:783:void onDetachedFromWindow() -> onDetachedFromWindow
    753:761:void onPaddingUpdated(android.graphics.Rect) -> onPaddingUpdated
    790:795:void onPreDraw() -> onPreDraw
    718:723:void onScaleChanged() -> onScaleChanged
    710:715:void onTranslationChanged() -> onTranslationChanged
    222:228:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    231:234:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    248:252:void setElevation(float) -> setElevation
    365:366:void setEnsureMinTouchTargetSize(boolean) -> setEnsureMinTouchTargetSize
    353:354:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    267:271:void setHoveredFocusedTranslationZ(float) -> setHoveredFocusedTranslationZ
    294:299:void setImageMatrixScale(float) -> setImageMatrixScale
    281:285:void setMaxImageSize(int) -> setMaxImageSize
    274:278:void setPressedTranslationZ(float) -> setPressedTranslationZ
    241:245:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    369:371:void setShadowPaddingEnabled(boolean) -> setShadowPaddingEnabled
    319:331:void setShapeAppearance(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearance
    344:345:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    917:917:boolean shouldAnimateVisibilityChange() -> shouldAnimateVisibilityChange
    357:357:boolean shouldExpandBoundsForA11y() -> shouldExpandBoundsForA11y
    501:576:void show(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> show
    290:291:void updateImageMatrixScale() -> updateImageMatrixScale
    735:739:void updatePadding() -> updatePadding
    380:383:void updateShapeElevation(float) -> updateShapeElevation
    679:691:void workAroundOreoBug(android.animation.ObjectAnimator) -> workAroundOreoBug
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1:
    455:455:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,boolean,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener) -> <init>
    469:470:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    474:483:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    460:465:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$2 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$2:
    541:541:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,boolean,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener) -> <init>
    552:558:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    544:548:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3:
    602:602:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    602:602:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    608:609:android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix) -> evaluate
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$4 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$4:
    642:642:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,float,float,float,float,float,float,float,android.graphics.Matrix) -> <init>
    645:655:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$5 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$5:
    683:684:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    683:683:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    687:688:java.lang.Float evaluate(float,java.lang.Float,java.lang.Float) -> evaluate
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$6 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$6:
    801:801:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    804:805:boolean onPreDraw() -> onPreDraw
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation:
    908:908:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    912:912:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation:
    890:890:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    894:894:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation:
    899:899:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    903:903:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ResetElevationAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ResetElevationAnimation:
    881:881:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    885:885:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl:
    849:849:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    849:849:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1) -> <init>
    872:874:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    858:868:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop -> com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop:
    54:55:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.shadow.ShadowViewDelegate) -> <init>
    125:163:android.animation.StateListAnimator createDefaultStateListAnimator(float,float,float) -> createDefaultStateListAnimator
    168:174:android.animation.Animator createElevationAnimator(float,float) -> createElevationAnimator
    179:179:float getElevation() -> getElevation
    249:257:void getPadding(android.graphics.Rect) -> getPadding
    214:214:void jumpDrawableToCurrentState() -> jumpDrawableToCurrentState
    184:185:void onCompatShadowChanged() -> onCompatShadowChanged
    194:209:void onDrawableStateChanged(int[]) -> onDrawableStateChanged
    104:118:void onElevationsChanged(float,float,float) -> onElevationsChanged
    223:223:boolean requirePreDrawListener() -> requirePreDrawListener
    90:96:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    189:189:boolean shouldAddPadding() -> shouldAddPadding
    219:219:void updateFromViewRotation() -> updateFromViewRotation
com.google.android.material.internal.BaselineLayout -> com.google.android.material.internal.BaselineLayout:
    31:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    114:114:int getBaseline() -> getBaseline
    85:110:void onLayout(boolean,int,int,int,int) -> onLayout
    47:81:void onMeasure(int,int) -> onMeasure
com.google.android.material.internal.CheckableImageButton -> com.google.android.material.internal.CheckableImageButton:
    41:41:void <clinit>() -> <clinit>
    52:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    44:75:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    144:144:boolean isCheckable() -> isCheckable
    88:88:boolean isChecked() -> isChecked
    105:110:int[] onCreateDrawableState(int) -> onCreateDrawableState
    125:132:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    117:120:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    136:140:void setCheckable(boolean) -> setCheckable
    79:84:void setChecked(boolean) -> setChecked
    149:150:void setPressable(boolean) -> setPressable
    98:101:void setPressed(boolean) -> setPressed
    93:94:void toggle() -> toggle
com.google.android.material.internal.CheckableImageButton$1 -> com.google.android.material.internal.CheckableImageButton$1:
    60:60:void <init>(com.google.android.material.internal.CheckableImageButton) -> <init>
    63:65:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    70:73:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.internal.CheckableImageButton$SavedState -> com.google.android.material.internal.CheckableImageButton$SavedState:
    180:180:void <clinit>() -> <clinit>
    162:163:void <init>(android.os.Parcelable) -> <init>
    166:168:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    177:178:void readFromParcel(android.os.Parcel) -> readFromParcel
    172:174:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.internal.CheckableImageButton$SavedState$1 -> com.google.android.material.internal.CheckableImageButton$SavedState$1:
    181:181:void <init>() -> <init>
    181:181:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    181:181:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    185:185:com.google.android.material.internal.CheckableImageButton$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    191:191:com.google.android.material.internal.CheckableImageButton$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    181:181:java.lang.Object[] newArray(int) -> newArray
    197:197:com.google.android.material.internal.CheckableImageButton$SavedState[] newArray(int) -> newArray
com.google.android.material.internal.ClippableRoundedCornerLayout -> com.google.android.material.internal.ClippableRoundedCornerLayout:
    47:48:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:65:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
com.google.android.material.internal.CollapsingTextHelper -> com.google.android.material.internal.CollapsingTextHelper:
    76:91:void <clinit>() -> <clinit>
    104:193:void <init>(android.view.View) -> <init>
    1274:1279:int blendARGB(int,int,float) -> blendARGB
    721:808:void calculateBaseOffsets(boolean) -> calculateBaseOffsets
    603:604:void calculateCurrentOffsets() -> calculateCurrentOffsets
    681:689:float calculateFadeModeTextAlpha(float) -> calculateFadeModeTextAlpha
    336:336:float calculateFadeModeThresholdFraction() -> calculateFadeModeThresholdFraction
    947:950:boolean calculateIsRtl(java.lang.CharSequence) -> calculateIsRtl
    607:678:void calculateOffsets(float) -> calculateOffsets
    979:980:void calculateUsingTextSize(float) -> calculateUsingTextSize
    984:1071:void calculateUsingTextSize(float,boolean) -> calculateUsingTextSize
    1167:1171:void clearTexture() -> clearTexture
    1074:1093:android.text.StaticLayout createStaticLayout(int,float,boolean) -> createStaticLayout
    839:878:void draw(android.graphics.Canvas) -> draw
    885:944:void drawMultilineTransition(android.graphics.Canvas,float,float) -> drawMultilineTransition
    1112:1132:void ensureExpandedTexture() -> ensureExpandedTexture
    276:282:void getCollapsedTextActualBounds(android.graphics.RectF,int,int) -> getCollapsedTextActualBounds
    1255:1255:android.content.res.ColorStateList getCollapsedTextColor() -> getCollapsedTextColor
    321:323:float getCollapsedTextHeight() -> getCollapsedTextHeight
    285:292:float getCollapsedTextLeftBound(int,int) -> getCollapsedTextLeftBound
    297:304:float getCollapsedTextRightBound(android.graphics.RectF,int,int) -> getCollapsedTextRightBound
    705:705:int getCurrentCollapsedTextColor() -> getCurrentCollapsedTextColor
    710:716:int getCurrentColor(android.content.res.ColorStateList) -> getCurrentColor
    700:700:int getCurrentExpandedTextColor() -> getCurrentExpandedTextColor
    309:311:float getExpandedTextHeight() -> getExpandedTextHeight
    583:583:float getExpansionFraction() -> getExpansionFraction
    1097:1107:android.text.Layout$Alignment getMultilineTextLayoutAlignment() -> getMultilineTextLayoutAlignment
    353:358:void getTextPaintCollapsed(android.text.TextPaint) -> getTextPaintCollapsed
    345:350:void getTextPaintExpanded(android.text.TextPaint) -> getTextPaintExpanded
    815:826:void interpolateBounds(float) -> interpolateBounds
    1247:1247:boolean isClose(float,float) -> isClose
    954:954:boolean isDefaultIsRtl() -> isDefaultIsRtl
    574:575:boolean isStateful() -> isStateful
    958:961:boolean isTextDirectionHeuristicsIsRtl(java.lang.CharSequence,boolean) -> isTextDirectionHeuristicsIsRtl
    1284:1287:float lerp(float,float,float,android.animation.TimeInterpolator) -> lerp
    528:544:void maybeUpdateFontWeightAdjustment(android.content.res.Configuration) -> maybeUpdateFontWeightAdjustment
    811:811:float measureTextWidth(android.text.TextPaint,java.lang.CharSequence) -> measureTextWidth
    1135:1136:void recalculate() -> recalculate
    1139:1145:void recalculate(boolean) -> recalculate
    1291:1291:boolean rectEquals(android.graphics.Rect,int,int,int,int) -> rectEquals
    239:244:void setCollapsedAndExpandedTextColor(android.content.res.ColorStateList) -> setCollapsedAndExpandedTextColor
    265:269:void setCollapsedBounds(int,int,int,int) -> setCollapsedBounds
    272:273:void setCollapsedBounds(android.graphics.Rect) -> setCollapsedBounds
    383:415:void setCollapsedTextAppearance(int) -> setCollapsedTextAppearance
    829:831:void setCollapsedTextBlend(float) -> setCollapsedTextBlend
    225:229:void setCollapsedTextColor(android.content.res.ColorStateList) -> setCollapsedTextColor
    372:376:void setCollapsedTextGravity(int) -> setCollapsedTextGravity
    462:465:void setCollapsedTypeface(android.graphics.Typeface) -> setCollapsedTypeface
    485:497:boolean setCollapsedTypefaceInternal(android.graphics.Typeface) -> setCollapsedTypefaceInternal
    254:258:void setExpandedBounds(int,int,int,int) -> setExpandedBounds
    261:262:void setExpandedBounds(android.graphics.Rect) -> setExpandedBounds
    247:251:void setExpandedLetterSpacing(float) -> setExpandedLetterSpacing
    834:836:void setExpandedTextBlend(float) -> setExpandedTextBlend
    361:365:void setExpandedTextGravity(int) -> setExpandedTextGravity
    211:215:void setExpandedTextSize(float) -> setExpandedTextSize
    504:516:boolean setExpandedTypefaceInternal(android.graphics.Typeface) -> setExpandedTypefaceInternal
    554:560:void setExpansionFraction(float) -> setExpansionFraction
    965:976:void setInterpolatedTextSize(float) -> setInterpolatedTextSize
    201:203:void setPositionInterpolator(android.animation.TimeInterpolator) -> setPositionInterpolator
    563:570:boolean setState(int[]) -> setState
    1153:1159:void setText(java.lang.CharSequence) -> setText
    196:198:void setTextSizeInterpolator(android.animation.TimeInterpolator) -> setTextSizeInterpolator
    474:479:void setTypefaces(android.graphics.Typeface) -> setTypefaces
    881:881:boolean shouldDrawMultiline() -> shouldDrawMultiline
com.google.android.material.internal.CollapsingTextHelper$1 -> com.google.android.material.internal.CollapsingTextHelper$1:
    405:405:void <init>(com.google.android.material.internal.CollapsingTextHelper) -> <init>
    408:409:void apply(android.graphics.Typeface) -> apply
com.google.android.material.internal.ContextUtils -> com.google.android.material.internal.ContextUtils:
    41:47:android.app.Activity getActivity(android.content.Context) -> getActivity
com.google.android.material.internal.DescendantOffsetUtils -> com.google.android.material.internal.DescendantOffsetUtils:
    37:38:void <clinit>() -> <clinit>
    83:85:void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> getDescendantRect
    89:101:void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> offsetDescendantMatrix
    50:72:void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> offsetDescendantRect
com.google.android.material.internal.EdgeToEdgeUtils -> com.google.android.material.internal.EdgeToEdgeUtils:
    77:112:void applyEdgeToEdge(android.view.Window,boolean,java.lang.Integer,java.lang.Integer) -> applyEdgeToEdge
    159:167:int getNavigationBarColor(android.content.Context,boolean) -> getNavigationBarColor
    142:152:int getStatusBarColor(android.content.Context,boolean) -> getStatusBarColor
    171:171:boolean isUsingLightSystemBar(int,boolean) -> isUsingLightSystemBar
    135:138:void setLightNavigationBar(android.view.Window,boolean) -> setLightNavigationBar
    122:125:void setLightStatusBar(android.view.Window,boolean) -> setLightStatusBar
com.google.android.material.internal.FadeThroughDrawable -> com.google.android.material.internal.FadeThroughDrawable:
    54:56:void draw(android.graphics.Canvas) -> draw
    72:72:int getIntrinsicHeight() -> getIntrinsicHeight
    67:67:int getIntrinsicWidth() -> getIntrinsicWidth
    82:82:int getMinimumHeight() -> getMinimumHeight
    77:77:int getMinimumWidth() -> getMinimumWidth
    106:106:int getOpacity() -> getOpacity
    111:111:boolean isStateful() -> isStateful
    87:95:void setAlpha(int) -> setAlpha
    60:63:void setBounds(int,int,int,int) -> setBounds
    99:102:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    123:132:void setProgress(float) -> setProgress
    116:118:boolean setState(int[]) -> setState
com.google.android.material.internal.FadeThroughUtils -> com.google.android.material.internal.FadeThroughUtils:
    28:35:void calculateFadeOutAndInAlphas(float,float[]) -> calculateFadeOutAndInAlphas
com.google.android.material.internal.FlowLayout -> com.google.android.material.internal.FlowLayout:
    88:88:int getItemSpacing() -> getItemSpacing
    80:80:int getLineSpacing() -> getLineSpacing
    178:184:int getMeasuredDimension(int,int,int) -> getMeasuredDimension
    248:248:int getRowCount() -> getRowCount
    253:257:int getRowIndex(android.view.View) -> getRowIndex
    97:97:boolean isSingleLine() -> isSingleLine
    190:245:void onLayout(boolean,int,int,int,int) -> onLayout
    107:175:void onMeasure(int,int) -> onMeasure
    92:93:void setItemSpacing(int) -> setItemSpacing
    84:85:void setLineSpacing(int) -> setLineSpacing
    102:103:void setSingleLine(boolean) -> setSingleLine
com.google.android.material.internal.ForegroundLinearLayout -> com.google.android.material.internal.ForegroundLinearLayout:
    58:59:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    43:81:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    205:236:void draw(android.graphics.Canvas) -> draw
    242:246:void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    137:141:void drawableStateChanged() -> drawableStateChanged
    188:188:android.graphics.drawable.Drawable getForeground() -> getForeground
    91:91:int getForegroundGravity() -> getForegroundGravity
    129:133:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    193:195:void onLayout(boolean,int,int,int,int) -> onLayout
    199:201:void onSizeChanged(int,int,int,int) -> onSizeChanged
    152:177:void setForeground(android.graphics.drawable.Drawable) -> setForeground
    102:120:void setForegroundGravity(int) -> setForegroundGravity
    124:124:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.google.android.material.internal.ManufacturerUtils -> com.google.android.material.internal.ManufacturerUtils:
    36:36:boolean isMeizuDevice() -> isMeizuDevice
com.google.android.material.internal.NavigationMenuItemView -> com.google.android.material.internal.NavigationMenuItemView:
    56:56:void <clinit>() -> <clinit>
    92:93:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    76:104:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    137:153:void adjustAppearance() -> adjustAppearance
    176:185:android.graphics.drawable.StateListDrawable createDefaultBackground() -> createDefaultBackground
    190:190:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    108:128:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    258:262:int[] onCreateDrawableState(int) -> onCreateDrawableState
    248:248:boolean prefersCondensedTitle() -> prefersCondensedTitle
    163:172:void setActionView(android.view.View) -> setActionView
    200:206:void setCheckable(boolean) -> setCheckable
    210:214:void setChecked(boolean) -> setChecked
    287:288:void setHorizontalPadding(int) -> setHorizontalPadding
    221:240:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    291:292:void setIconPadding(int) -> setIconPadding
    243:244:void setIconSize(int) -> setIconSize
    266:272:void setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    295:296:void setMaxLines(int) -> setMaxLines
    283:284:void setNeedsEmptyIcon(boolean) -> setNeedsEmptyIcon
    275:276:void setTextAppearance(int) -> setTextAppearance
    279:280:void setTextColor(android.content.res.ColorStateList) -> setTextColor
    195:196:void setTitle(java.lang.CharSequence) -> setTitle
    131:133:boolean shouldExpandActionArea() -> shouldExpandActionArea
com.google.android.material.internal.NavigationMenuItemView$1 -> com.google.android.material.internal.NavigationMenuItemView$1:
    77:77:void <init>(com.google.android.material.internal.NavigationMenuItemView) -> <init>
    82:84:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.internal.NavigationMenuView -> com.google.android.material.internal.NavigationMenuView:
    38:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:44:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    51:51:int getWindowAnimations() -> getWindowAnimations
    47:47:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
com.google.android.material.internal.StateListAnimator -> com.google.android.material.internal.StateListAnimator:
    37:44:void <init>() -> <init>
    62:65:void addState(int[],android.animation.ValueAnimator) -> addState
com.google.android.material.internal.StateListAnimator$1 -> com.google.android.material.internal.StateListAnimator$1:
    45:45:void <init>(com.google.android.material.internal.StateListAnimator) -> <init>
    48:51:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.internal.StateListAnimator$Tuple -> com.google.android.material.internal.StateListAnimator$Tuple:
    120:123:void <init>(int[],android.animation.ValueAnimator) -> <init>
com.google.android.material.internal.StaticLayoutBuilderCompat -> com.google.android.material.internal.StaticLayoutBuilderCompat:
    57:58:void <clinit>() -> <clinit>
    90:103:void <init>(java.lang.CharSequence,android.text.TextPaint,int) -> <init>
    246:287:android.text.StaticLayout build() -> build
    116:116:com.google.android.material.internal.StaticLayoutBuilderCompat obtain(java.lang.CharSequence,android.text.TextPaint,int) -> obtain
    128:129:com.google.android.material.internal.StaticLayoutBuilderCompat setAlignment(android.text.Layout$Alignment) -> setAlignment
    228:229:com.google.android.material.internal.StaticLayoutBuilderCompat setEllipsize(android.text.TextUtils$TruncateAt) -> setEllipsize
    213:214:com.google.android.material.internal.StaticLayoutBuilderCompat setHyphenationFrequency(int) -> setHyphenationFrequency
    143:144:com.google.android.material.internal.StaticLayoutBuilderCompat setIncludePad(boolean) -> setIncludePad
    378:379:com.google.android.material.internal.StaticLayoutBuilderCompat setIsRtl(boolean) -> setIsRtl
    198:200:com.google.android.material.internal.StaticLayoutBuilderCompat setLineSpacing(float,float) -> setLineSpacing
    183:184:com.google.android.material.internal.StaticLayoutBuilderCompat setMaxLines(int) -> setMaxLines
    240:241:com.google.android.material.internal.StaticLayoutBuilderCompat setStaticLayoutBuilderConfigurer(com.google.android.material.internal.StaticLayoutBuilderConfigurer) -> setStaticLayoutBuilderConfigurer
com.google.android.material.internal.TextDrawableHelper -> com.google.android.material.internal.TextDrawableHelper:
    41:78:void <init>(com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate) -> <init>
    39:39:boolean access$002(com.google.android.material.internal.TextDrawableHelper,boolean) -> access$002
    39:39:java.lang.ref.WeakReference access$100(com.google.android.material.internal.TextDrawableHelper) -> access$100
    110:113:float calculateTextWidth(java.lang.CharSequence) -> calculateTextWidth
    123:123:com.google.android.material.resources.TextAppearance getTextAppearance() -> getTextAppearance
    87:87:android.text.TextPaint getTextPaint() -> getTextPaint
    100:106:float getTextWidth(java.lang.String) -> getTextWidth
    82:83:void setDelegate(com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate) -> setDelegate
    134:153:void setTextAppearance(com.google.android.material.resources.TextAppearance,android.content.Context) -> setTextAppearance
    91:92:void setTextWidthDirty(boolean) -> setTextWidthDirty
    156:157:void updateTextPaintDrawState(android.content.Context) -> updateTextPaintDrawState
com.google.android.material.internal.TextDrawableHelper$1 -> com.google.android.material.internal.TextDrawableHelper$1:
    44:44:void <init>(com.google.android.material.internal.TextDrawableHelper) -> <init>
    59:65:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    47:55:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
com.google.android.material.internal.TextWatcherAdapter -> com.google.android.material.internal.TextWatcherAdapter:
    33:33:void <init>() -> <init>
    36:36:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    39:39:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.google.android.material.internal.ThemeEnforcement -> com.google.android.material.internal.ThemeEnforcement:
    44:47:void <clinit>() -> <clinit>
    212:213:void checkAppCompatTheme(android.content.Context) -> checkAppCompatTheme
    128:148:void checkCompatibleTheme(android.content.Context,android.util.AttributeSet,int,int) -> checkCompatibleTheme
    216:217:void checkMaterialTheme(android.content.Context) -> checkMaterialTheme
    157:190:void checkTextAppearance(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> checkTextAppearance
    246:252:void checkTheme(android.content.Context,int[],java.lang.String) -> checkTheme
    199:208:boolean isCustomTextAppearanceValid(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> isCustomTextAppearanceValid
    228:229:boolean isMaterial3Theme(android.content.Context) -> isMaterial3Theme
    233:241:boolean isTheme(android.content.Context,int[]) -> isTheme
    76:82:android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> obtainStyledAttributes
    114:120:androidx.appcompat.widget.TintTypedArray obtainTintedStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> obtainTintedStyledAttributes
com.google.android.material.internal.ToolbarUtils -> com.google.android.material.internal.ToolbarUtils:
    48:48:void <clinit>() -> <clinit>
    93:108:android.widget.ImageView getImageView(androidx.appcompat.widget.Toolbar,android.graphics.drawable.Drawable) -> getImageView
    88:88:android.widget.ImageView getLogoImageView(androidx.appcompat.widget.Toolbar) -> getLogoImageView
    136:149:android.widget.ImageButton getNavigationIconButton(androidx.appcompat.widget.Toolbar) -> getNavigationIconButton
    68:69:android.widget.TextView getSubtitleTextView(androidx.appcompat.widget.Toolbar) -> getSubtitleTextView
    73:83:java.util.List getTextViewsWithText(androidx.appcompat.widget.Toolbar,java.lang.CharSequence) -> getTextViewsWithText
    62:63:android.widget.TextView getTitleTextView(androidx.appcompat.widget.Toolbar) -> getTitleTextView
com.google.android.material.internal.ToolbarUtils$1 -> com.google.android.material.internal.ToolbarUtils$1:
    49:49:void <init>() -> <init>
    49:49:int compare(java.lang.Object,java.lang.Object) -> compare
    52:52:int compare(android.view.View,android.view.View) -> compare
com.google.android.material.internal.TouchObserverFrameLayout -> com.google.android.material.internal.TouchObserverFrameLayout:
    44:45:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    54:57:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    62:63:void setOnTouchListener(android.view.View$OnTouchListener) -> setOnTouchListener
com.google.android.material.internal.ViewUtils -> com.google.android.material.internal.ViewUtils:
    297:315:void doOnApplyWindowInsets(android.view.View,com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener) -> doOnApplyWindowInsets
    160:161:float dpToPx(android.content.Context,int) -> dpToPx
    428:430:java.lang.Integer getBackgroundColor(android.view.View) -> getBackgroundColor
    343:349:float getParentAbsoluteElevation(android.view.View) -> getParentAbsoluteElevation
    156:156:boolean isLayoutRtl(android.view.View) -> isLayoutRtl
    137:151:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
    319:336:void requestApplyInsetsWhenAttached(android.view.View) -> requestApplyInsetsWhenAttached
    165:176:void requestFocusAndShowKeyboard(android.view.View) -> requestFocusAndShowKeyboard
com.google.android.material.internal.ViewUtils$1 -> com.google.android.material.internal.ViewUtils$1:
    167:167:void <init>(android.view.View) -> <init>
    170:174:void run() -> run
com.google.android.material.internal.ViewUtils$3 -> com.google.android.material.internal.ViewUtils$3:
    307:307:void <init>(com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener,com.google.android.material.internal.ViewUtils$RelativePadding) -> <init>
    310:310:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.internal.ViewUtils$4 -> com.google.android.material.internal.ViewUtils$4:
    325:325:void <init>() -> <init>
    328:330:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    333:333:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
com.google.android.material.internal.ViewUtils$RelativePadding -> com.google.android.material.internal.ViewUtils$RelativePadding:
    203:208:void <init>(int,int,int,int) -> <init>
    210:215:void <init>(com.google.android.material.internal.ViewUtils$RelativePadding) -> <init>
com.google.android.material.internal.VisibilityAwareImageButton -> com.google.android.material.internal.VisibilityAwareImageButton:
    64:64:int getUserSetVisibility() -> getUserSetVisibility
    57:61:void internalSetVisibility(int,boolean) -> internalSetVisibility
    53:54:void setVisibility(int) -> setVisibility
com.google.android.material.math.MathUtils -> com.google.android.material.math.MathUtils:
    28:30:float dist(float,float,float,float) -> dist
    65:69:float distanceToFurthestCorner(float,float,float,float,float,float) -> distanceToFurthestCorner
    37:37:float lerp(float,float,float) -> lerp
    74:74:float max(float,float,float,float) -> max
com.google.android.material.motion.MotionUtils -> com.google.android.material.motion.MotionUtils:
    129:135:float getLegacyControlPoint(java.lang.String[],int) -> getLegacyControlPoint
    123:125:java.lang.String getLegacyEasingContent(java.lang.String,java.lang.String) -> getLegacyEasingContent
    89:108:android.animation.TimeInterpolator getLegacyThemeInterpolator(java.lang.String) -> getLegacyThemeInterpolator
    113:114:boolean isLegacyEasingAttribute(java.lang.String) -> isLegacyEasingAttribute
    118:119:boolean isLegacyEasingType(java.lang.String,java.lang.String) -> isLegacyEasingType
    50:50:int resolveThemeDuration(android.content.Context,int,int) -> resolveThemeDuration
    68:85:android.animation.TimeInterpolator resolveThemeInterpolator(android.content.Context,int,android.animation.TimeInterpolator) -> resolveThemeInterpolator
com.google.android.material.radiobutton.MaterialRadioButton -> com.google.android.material.radiobutton.MaterialRadioButton:
    45:47:void <clinit>() -> <clinit>
    62:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:88:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    119:136:android.content.res.ColorStateList getMaterialThemeColorsTintList() -> getMaterialThemeColorsTintList
    92:97:void onAttachedToWindow() -> onAttachedToWindow
    105:111:void setUseMaterialThemeColors(boolean) -> setUseMaterialThemeColors
com.google.android.material.resources.CancelableFontCallback -> com.google.android.material.resources.CancelableFontCallback:
    42:45:void <init>(com.google.android.material.resources.CancelableFontCallback$ApplyFont,android.graphics.Typeface) -> <init>
    64:65:void cancel() -> cancel
    54:55:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    49:50:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
    68:71:void updateIfNotCancelled(android.graphics.Typeface) -> updateIfNotCancelled
com.google.android.material.resources.MaterialAttributes -> com.google.android.material.resources.MaterialAttributes:
    46:50:android.util.TypedValue resolve(android.content.Context,int) -> resolve
    121:124:boolean resolveBoolean(android.content.Context,int,boolean) -> resolveBoolean
    133:136:int resolveInteger(android.content.Context,int,int) -> resolveInteger
    89:89:int resolveOrThrow(android.content.Context,int,java.lang.String) -> resolveOrThrow
    56:57:android.util.TypedValue resolveTypedValueOrThrow(android.view.View,int) -> resolveTypedValueOrThrow
    65:77:android.util.TypedValue resolveTypedValueOrThrow(android.content.Context,int,java.lang.String) -> resolveTypedValueOrThrow
com.google.android.material.resources.MaterialResources -> com.google.android.material.resources.MaterialResources:
    62:81:android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int) -> getColorStateList
    91:110:android.content.res.ColorStateList getColorStateList(android.content.Context,androidx.appcompat.widget.TintTypedArray,int) -> getColorStateList
    173:181:int getDimensionPixelSize(android.content.Context,android.content.res.TypedArray,int,int) -> getDimensionPixelSize
    122:131:android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.res.TypedArray,int) -> getDrawable
    259:262:int getIndexWithValue(android.content.res.TypedArray,int,int) -> getIndexWithValue
    142:148:com.google.android.material.resources.TextAppearance getTextAppearance(android.content.Context,android.content.res.TypedArray,int) -> getTextAppearance
    188:188:boolean isFontScaleAtLeast1_3(android.content.Context) -> isFontScaleAtLeast1_3
    195:195:boolean isFontScaleAtLeast2_0(android.content.Context) -> isFontScaleAtLeast2_0
com.google.android.material.resources.TextAppearance -> com.google.android.material.resources.TextAppearance:
    77:122:void <init>(android.content.Context,int) -> <init>
    48:48:android.graphics.Typeface access$000(com.google.android.material.resources.TextAppearance) -> access$000
    48:48:android.graphics.Typeface access$002(com.google.android.material.resources.TextAppearance,android.graphics.Typeface) -> access$002
    48:48:boolean access$102(com.google.android.material.resources.TextAppearance,boolean) -> access$102
    269:291:void createFallbackFont() -> createFallbackFont
    263:264:android.graphics.Typeface getFallbackFont() -> getFallbackFont
    132:154:android.graphics.Typeface getFont(android.content.Context) -> getFont
    172:218:void getFontAsync(android.content.Context,com.google.android.material.resources.TextAppearanceFontCallback) -> getFontAsync
    235:252:void getFontAsync(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> getFontAsync
    363:363:android.content.res.ColorStateList getTextColor() -> getTextColor
    371:371:float getTextSize() -> getTextSize
    367:368:void setTextColor(android.content.res.ColorStateList) -> setTextColor
    375:376:void setTextSize(float) -> setTextSize
    379:386:boolean shouldLoadFontSynchronously(android.content.Context) -> shouldLoadFontSynchronously
    303:316:void updateDrawState(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> updateDrawState
    328:333:void updateMeasureState(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> updateMeasureState
    342:359:void updateTextPaintMeasureState(android.content.Context,android.text.TextPaint,android.graphics.Typeface) -> updateTextPaintMeasureState
com.google.android.material.resources.TextAppearance$1 -> com.google.android.material.resources.TextAppearance$1:
    194:194:void <init>(com.google.android.material.resources.TextAppearance,com.google.android.material.resources.TextAppearanceFontCallback) -> <init>
    204:206:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    197:200:void onFontRetrieved(android.graphics.Typeface) -> onFontRetrieved
com.google.android.material.resources.TextAppearance$2 -> com.google.android.material.resources.TextAppearance$2:
    239:239:void <init>(com.google.android.material.resources.TextAppearance,android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> <init>
    249:250:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    243:245:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
com.google.android.material.resources.TextAppearanceConfig -> com.google.android.material.resources.TextAppearanceConfig:
    43:43:boolean shouldLoadFontSynchronously() -> shouldLoadFontSynchronously
com.google.android.material.resources.TextAppearanceFontCallback -> com.google.android.material.resources.TextAppearanceFontCallback:
    30:30:void <init>() -> <init>
com.google.android.material.resources.TypefaceUtils -> com.google.android.material.resources.TypefaceUtils:
    45:45:android.graphics.Typeface maybeCopyWithFontWeightAdjustment(android.content.Context,android.graphics.Typeface) -> maybeCopyWithFontWeightAdjustment
    52:63:android.graphics.Typeface maybeCopyWithFontWeightAdjustment(android.content.res.Configuration,android.graphics.Typeface) -> maybeCopyWithFontWeightAdjustment
com.google.android.material.resources.TypefaceUtils$$ExternalSyntheticApiModelOutline0 -> com.google.android.material.resources.TypefaceUtils$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int com.google.android.material.resources.TypefaceUtils$$InternalSyntheticApiModelOutline$2$f820dc1d60c05b76a07a4eb308cb98f479c398dd077248d8ad415c710cd4497f$0.m(android.graphics.Typeface) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.ripple.RippleDrawableCompat -> com.google.android.material.ripple.RippleDrawableCompat:
    47:47:void <init>(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState,com.google.android.material.ripple.RippleDrawableCompat$1) -> <init>
    58:59:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    62:64:void <init>(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState) -> <init>
    126:129:void draw(android.graphics.Canvas) -> draw
    140:140:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    163:163:int getOpacity() -> getOpacity
    104:104:boolean isStateful() -> isStateful
    46:46:android.graphics.drawable.Drawable mutate() -> mutate
    146:148:com.google.android.material.ripple.RippleDrawableCompat mutate() -> mutate
    133:135:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    109:120:boolean onStateChange(int[]) -> onStateChange
    153:154:void setAlpha(int) -> setAlpha
    158:159:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    83:84:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    68:69:void setTint(int) -> setTint
    78:79:void setTintList(android.content.res.ColorStateList) -> setTintList
    73:74:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState -> com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState:
    175:178:void <init>(com.google.android.material.shape.MaterialShapeDrawable) -> <init>
    180:183:void <init>(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState) -> <init>
    193:193:int getChangingConfigurations() -> getChangingConfigurations
    170:170:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    188:188:com.google.android.material.ripple.RippleDrawableCompat newDrawable() -> newDrawable
com.google.android.material.ripple.RippleUtils -> com.google.android.material.ripple.RippleUtils:
    55:90:void <clinit>() -> <clinit>
    97:97:void <init>() -> <init>
    220:230:android.content.res.ColorStateList sanitizeRippleDrawableColor(android.content.res.ColorStateList) -> sanitizeRippleDrawableColor
    238:252:boolean shouldDrawRippleCompat(int[]) -> shouldDrawRippleCompat
com.google.android.material.search.SearchBar -> com.google.android.material.search.SearchBar:
    120:120:void <clinit>() -> <clinit>
    314:319:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    476:476:int defaultIfZero(int,int) -> defaultIfZero
    527:527:android.view.View getCenterView() -> getCenterView
    799:799:float getCompatElevation() -> getCompatElevation
    613:613:float getCornerSize() -> getCornerSize
    571:571:java.lang.CharSequence getHint() -> getHint
    795:795:int getMenuResId() -> getMenuResId
    587:587:int getStrokeColor() -> getStrokeColor
    600:600:float getStrokeWidth() -> getStrokeWidth
    550:550:java.lang.CharSequence getText() -> getText
    544:544:android.widget.TextView getTextView() -> getTextView
    411:413:void inflateMenu(int) -> inflateMenu
    501:514:void layoutCenterView() -> layoutCenterView
    517:522:void layoutChild(android.view.View,int,int,int,int) -> layoutChild
    365:385:android.graphics.drawable.Drawable maybeTintNavigationIcon(android.graphics.drawable.Drawable) -> maybeTintNavigationIcon
    495:498:void measureCenterView(int,int) -> measureCenterView
    431:436:void onAttachedToWindow() -> onAttachedToWindow
    332:346:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    424:427:void onLayout(boolean,int,int,int,int) -> onLayout
    417:420:void onMeasure(int,int) -> onMeasure
    865:872:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    857:860:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    532:539:void setCenterView(android.view.View) -> setCenterView
    462:473:void setDefaultMargins() -> setDefaultMargins
    629:631:void setDefaultScrollFlagsEnabled(boolean) -> setDefaultScrollFlagsEnabled
    324:328:void setElevation(float) -> setElevation
    576:577:void setHint(java.lang.CharSequence) -> setHint
    581:582:void setHint(int) -> setHint
    360:361:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    389:407:void setNavigationIconDecorative(boolean) -> setNavigationIconDecorative
    350:356:void setNavigationOnClickListener(android.view.View$OnClickListener) -> setNavigationOnClickListener
    657:658:void setOnLoadAnimationFadeInEnabled(boolean) -> setOnLoadAnimationFadeInEnabled
    480:492:void setOrClearDefaultScrollFlags() -> setOrClearDefaultScrollFlags
    592:595:void setStrokeColor(int) -> setStrokeColor
    605:608:void setStrokeWidth(float) -> setStrokeWidth
    459:459:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    555:556:void setText(java.lang.CharSequence) -> setText
    560:561:void setText(int) -> setText
    447:447:void setTitle(java.lang.CharSequence) -> setTitle
com.google.android.material.search.SearchBar$SavedState -> com.google.android.material.search.SearchBar$SavedState:
    891:891:void <clinit>() -> <clinit>
    879:880:void <init>(android.os.Parcel) -> <init>
    883:885:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    888:889:void <init>(android.os.Parcelable) -> <init>
    912:914:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.search.SearchBar$SavedState$1 -> com.google.android.material.search.SearchBar$SavedState$1:
    892:892:void <init>() -> <init>
    892:892:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    892:892:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    896:896:com.google.android.material.search.SearchBar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    901:901:com.google.android.material.search.SearchBar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    892:892:java.lang.Object[] newArray(int) -> newArray
    906:906:com.google.android.material.search.SearchBar$SavedState[] newArray(int) -> newArray
com.google.android.material.search.SearchBar$ScrollingViewBehavior -> com.google.android.material.search.SearchBar$ScrollingViewBehavior:
    805:807:void <init>() -> <init>
    805:811:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    816:822:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    826:836:void setAppBarLayoutTransparent(com.google.android.material.appbar.AppBarLayout) -> setAppBarLayoutTransparent
    840:840:boolean shouldHeaderOverlapScrollingChild() -> shouldHeaderOverlapScrollingChild
com.google.android.material.search.SearchView -> com.google.android.material.search.SearchView:
    124:124:void <clinit>() -> <clinit>
    493:495:void addHeaderView(android.view.View) -> addHeaderView
    219:224:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    255:256:android.view.Window getActivityWindow() -> getActivityWindow
    250:250:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    705:705:com.google.android.material.search.SearchView$TransitionState getCurrentTransitionState() -> getCurrentTransitionState
    621:621:android.widget.EditText getEditText() -> getEditText
    650:650:java.lang.CharSequence getHint() -> getHint
    278:281:float getOverlayElevation() -> getOverlayElevation
    597:597:android.widget.TextView getSearchPrefix() -> getSearchPrefix
    609:609:java.lang.CharSequence getSearchPrefixText() -> getSearchPrefixText
    666:666:int getSoftInputMode() -> getSoftInputMode
    362:366:int getStatusBarHeight() -> getStatusBarHeight
    628:628:android.text.Editable getText() -> getText
    615:615:androidx.appcompat.widget.Toolbar getToolbar() -> getToolbar
    466:466:boolean isSetupWithSearchBar() -> isSetupWithSearchBar
    242:245:void onAttachedToWindow() -> onAttachedToWindow
    228:231:void onFinishInflate() -> onFinishInflate
    935:944:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    926:930:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    516:517:void setAnimatedNavigationIcon(boolean) -> setAnimatedNavigationIcon
    545:546:void setAutoShowKeyboard(boolean) -> setAutoShowKeyboard
    236:238:void setElevation(float) -> setElevation
    655:656:void setHint(java.lang.CharSequence) -> setHint
    660:661:void setHint(int) -> setHint
    532:533:void setMenuItemsAnimated(boolean) -> setMenuItemsAnimated
    829:840:void setModalForAccessibility(boolean) -> setModalForAccessibility
    591:592:void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener) -> setOnMenuItemClickListener
    602:604:void setSearchPrefixText(java.lang.CharSequence) -> setSearchPrefixText
    694:696:void setStatusBarSpacerEnabled(boolean) -> setStatusBarSpacerEnabled
    699:700:void setStatusBarSpacerEnabledInternal(boolean) -> setStatusBarSpacerEnabledInternal
    634:635:void setText(java.lang.CharSequence) -> setText
    639:640:void setText(int) -> setText
    848:851:void setToolbarTouchscreenBlocksFocus(boolean) -> setToolbarTouchscreenBlocksFocus
    709:719:void setTransitionState(com.google.android.material.search.SearchView$TransitionState) -> setTransitionState
    269:275:void setUpBackgroundViewElevationOverlay(float) -> setUpBackgroundViewElevationOverlay
    286:291:void setUpHeaderLayout(int) -> setUpHeaderLayout
    350:354:void setUpStatusBarSpacer(int) -> setUpStatusBarSpacer
    560:561:void setUseWindowInsetsController(boolean) -> setUseWindowInsetsController
    759:766:void setVisible(boolean) -> setVisible
    476:478:void setupWithSearchBar(com.google.android.material.search.SearchBar) -> setupWithSearchBar
    855:884:void updateChildImportantForAccessibility(android.view.ViewGroup,boolean) -> updateChildImportantForAccessibility
    769:782:void updateNavigationIconProgressIfNeeded() -> updateNavigationIconProgressIfNeeded
    678:682:void updateSoftInputMode() -> updateSoftInputMode
com.google.android.material.search.SearchView$Behavior -> com.google.android.material.search.SearchView$Behavior:
    889:889:void <init>() -> <init>
    892:893:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    887:887:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    898:901:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.search.SearchView,android.view.View) -> onDependentViewChanged
com.google.android.material.search.SearchView$SavedState -> com.google.android.material.search.SearchView$SavedState:
    965:965:void <clinit>() -> <clinit>
    952:953:void <init>(android.os.Parcel) -> <init>
    956:959:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    962:963:void <init>(android.os.Parcelable) -> <init>
    986:989:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.search.SearchView$SavedState$1 -> com.google.android.material.search.SearchView$SavedState$1:
    966:966:void <init>() -> <init>
    966:966:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    966:966:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    970:970:com.google.android.material.search.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    975:975:com.google.android.material.search.SearchView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    966:966:java.lang.Object[] newArray(int) -> newArray
    980:980:com.google.android.material.search.SearchView$SavedState[] newArray(int) -> newArray
com.google.android.material.search.SearchView$TransitionState -> com.google.android.material.search.SearchView$TransitionState:
    916:920:void <clinit>() -> <clinit>
    916:916:void <init>(java.lang.String,int) -> <init>
    916:916:com.google.android.material.search.SearchView$TransitionState valueOf(java.lang.String) -> valueOf
    916:916:com.google.android.material.search.SearchView$TransitionState[] values() -> values
com.google.android.material.shadow.ShadowRenderer -> com.google.android.material.shadow.ShadowRenderer:
    60:66:void <clinit>() -> <clinit>
    72:73:void <init>() -> <init>
    68:84:void <init>(int) -> <init>
    130:184:void drawCornerShadow(android.graphics.Canvas,android.graphics.Matrix,android.graphics.RectF,int,float,float) -> drawCornerShadow
    96:117:void drawEdgeShadow(android.graphics.Canvas,android.graphics.Matrix,android.graphics.RectF,int) -> drawEdgeShadow
    218:218:android.graphics.Paint getShadowPaint() -> getShadowPaint
    87:91:void setShadowColor(int) -> setShadowColor
com.google.android.material.shape.AbsoluteCornerSize -> com.google.android.material.shape.AbsoluteCornerSize:
    28:30:void <init>(float) -> <init>
    46:53:boolean equals(java.lang.Object) -> equals
    34:34:float getCornerSize(android.graphics.RectF) -> getCornerSize
    58:59:int hashCode() -> hashCode
com.google.android.material.shape.AdjustedCornerSize -> com.google.android.material.shape.AdjustedCornerSize:
    37:46:void <init>(float,com.google.android.material.shape.CornerSize) -> <init>
    55:62:boolean equals(java.lang.Object) -> equals
    50:50:float getCornerSize(android.graphics.RectF) -> getCornerSize
    67:68:int hashCode() -> hashCode
com.google.android.material.shape.CornerTreatment -> com.google.android.material.shape.CornerTreatment:
    30:30:void <init>() -> <init>
    98:99:void getCornerPath(com.google.android.material.shape.ShapePath,float,float,android.graphics.RectF,com.google.android.material.shape.CornerSize) -> getCornerPath
com.google.android.material.shape.CutCornerTreatment -> com.google.android.material.shape.CutCornerTreatment:
    24:26:void <init>() -> <init>
    47:53:void getCornerPath(com.google.android.material.shape.ShapePath,float,float,float) -> getCornerPath
com.google.android.material.shape.EdgeTreatment -> com.google.android.material.shape.EdgeTreatment:
    29:29:void <init>() -> <init>
    73:73:boolean forceIntersection() -> forceIntersection
    64:65:void getEdgePath(float,float,float,com.google.android.material.shape.ShapePath) -> getEdgePath
com.google.android.material.shape.MaterialShapeDrawable -> com.google.android.material.shape.MaterialShapeDrawable:
    78:114:void <clinit>() -> <clinit>
    76:76:void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState,com.google.android.material.shape.MaterialShapeDrawable$1) -> <init>
    187:188:void <init>() -> <init>
    195:196:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    208:209:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    119:233:void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) -> <init>
    76:76:java.util.BitSet access$000(com.google.android.material.shape.MaterialShapeDrawable) -> access$000
    76:76:com.google.android.material.shape.ShapePath$ShadowCompatOperation[] access$100(com.google.android.material.shape.MaterialShapeDrawable) -> access$100
    76:76:com.google.android.material.shape.ShapePath$ShadowCompatOperation[] access$200(com.google.android.material.shape.MaterialShapeDrawable) -> access$200
    76:76:boolean access$402(com.google.android.material.shape.MaterialShapeDrawable,boolean) -> access$402
    1270:1278:android.graphics.PorterDuffColorFilter calculatePaintColorTintFilter(android.graphics.Paint,boolean) -> calculatePaintColorTintFilter
    1220:1231:void calculatePath(android.graphics.RectF,android.graphics.Path) -> calculatePath
    1166:1172:void calculatePathForSize(android.graphics.RectF,android.graphics.Path) -> calculatePathForSize
    1178:1199:void calculateStrokePath() -> calculateStrokePath
    1286:1291:android.graphics.PorterDuffColorFilter calculateTintColorTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,boolean) -> calculateTintColorTintFilter
    1262:1264:android.graphics.PorterDuffColorFilter calculateTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.graphics.Paint,boolean) -> calculateTintFilter
    623:627:int compositeElevationOverlayIfNeeded(int) -> compositeElevationOverlayIfNeeded
    176:183:com.google.android.material.shape.MaterialShapeDrawable createWithElevationOverlay(android.content.Context,float) -> createWithElevationOverlay
    959:985:void draw(android.graphics.Canvas) -> draw
    1113:1137:void drawCompatShadow(android.graphics.Canvas) -> drawCompatShadow
    1066:1067:void drawFillShape(android.graphics.Canvas) -> drawFillShape
    1045:1046:void drawShape(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,android.graphics.RectF) -> drawShape
    1055:1063:void drawShape(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,com.google.android.material.shape.ShapeAppearanceModel,android.graphics.RectF) -> drawShape
    1079:1081:void drawStrokeShape(android.graphics.Canvas) -> drawStrokeShape
    461:461:int getAlpha() -> getAlpha
    490:491:android.graphics.RectF getBoundsAsRectF() -> getBoundsAsRectF
    1348:1351:android.graphics.RectF getBoundsInsetByStroke() -> getBoundsInsetByStroke
    238:238:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    674:674:float getElevation() -> getElevation
    321:321:android.content.res.ColorStateList getFillColor() -> getFillColor
    456:456:int getOpacity() -> getOpacity
    1204:1217:void getOutline(android.graphics.Outline) -> getOutline
    524:528:boolean getPadding(android.graphics.Rect) -> getPadding
    657:657:float getParentAbsoluteElevation() -> getParentAbsoluteElevation
    449:449:int getResolvedTintColor() -> getResolvedTintColor
    1141:1143:int getShadowOffsetX() -> getShadowOffsetX
    1148:1150:int getShadowOffsetY() -> getShadowOffsetY
    825:825:int getShadowRadius() -> getShadowRadius
    275:275:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    343:343:android.content.res.ColorStateList getStrokeColor() -> getStrokeColor
    1340:1343:float getStrokeInsetLength() -> getStrokeInsetLength
    431:431:float getStrokeWidth() -> getStrokeWidth
    365:365:android.content.res.ColorStateList getTintList() -> getTintList
    1356:1359:float getTopLeftCornerResolvedSize() -> getTopLeftCornerResolvedSize
    695:695:float getTranslationZ() -> getTranslationZ
    480:485:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    716:716:float getZ() -> getZ
    933:935:boolean hasCompatShadow() -> hasCompatShadow
    940:940:boolean hasFill() -> hasFill
    946:948:boolean hasStroke() -> hasStroke
    616:618:void initializeElevationOverlay(android.content.Context) -> initializeElevationOverlay
    871:873:void invalidateSelf() -> invalidateSelf
    880:881:void invalidateSelfIgnoreShape() -> invalidateSelfIgnoreShape
    600:601:boolean isElevationOverlayEnabled() -> isElevationOverlayEnabled
    1394:1394:boolean isRoundRect() -> isRoundRect
    1296:1300:boolean isStateful() -> isStateful
    988:1032:void maybeDrawCompatShadow(android.graphics.Canvas) -> maybeDrawCompatShadow
    250:251:int modulateAlpha(int,int) -> modulateAlpha
    244:246:android.graphics.drawable.Drawable mutate() -> mutate
    953:955:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    1305:1311:boolean onStateChange(int[]) -> onStateChange
    1085:1103:void prepareCanvasForShadow(android.graphics.Canvas) -> prepareCanvasForShadow
    844:845:boolean requiresCompatShadow() -> requiresCompatShadow
    466:470:void setAlpha(int) -> setAlpha
    474:476:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    501:502:void setCornerSize(com.google.android.material.shape.CornerSize) -> setCornerSize
    683:687:void setElevation(float) -> setElevation
    308:312:void setFillColor(android.content.res.ColorStateList) -> setFillColor
    648:653:void setInterpolation(float) -> setInterpolation
    541:547:void setPadding(int,int,int,int) -> setPadding
    662:666:void setParentAbsoluteElevation(float) -> setParentAbsoluteElevation
    262:264:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    410:412:void setStroke(float,int) -> setStroke
    421:423:void setStroke(float,android.content.res.ColorStateList) -> setStroke
    330:334:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    440:442:void setStrokeWidth(float) -> setStrokeWidth
    380:381:void setTint(int) -> setTint
    357:360:void setTintList(android.content.res.ColorStateList) -> setTintList
    348:353:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    1315:1336:boolean updateColorsForState(int[]) -> updateColorsForState
    1234:1253:boolean updateTintFilter() -> updateTintFilter
    729:735:void updateZ() -> updateZ
com.google.android.material.shape.MaterialShapeDrawable$1 -> com.google.android.material.shape.MaterialShapeDrawable$1:
    219:219:void <init>(com.google.android.material.shape.MaterialShapeDrawable) -> <init>
    223:225:void onCornerPathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int) -> onCornerPathCreated
    229:231:void onEdgePathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int) -> onEdgePathCreated
com.google.android.material.shape.MaterialShapeDrawable$2 -> com.google.android.material.shape.MaterialShapeDrawable$2:
    1182:1182:void <init>(com.google.android.material.shape.MaterialShapeDrawable,float) -> <init>
    1188:1190:com.google.android.material.shape.CornerSize apply(com.google.android.material.shape.CornerSize) -> apply
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState -> com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState:
    1403:1432:void <init>(com.google.android.material.shape.ShapeAppearanceModel,com.google.android.material.elevation.ElevationOverlayProvider) -> <init>
    1403:1459:void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) -> <init>
    1472:1472:int getChangingConfigurations() -> getChangingConfigurations
    1464:1467:android.graphics.drawable.Drawable newDrawable() -> newDrawable
com.google.android.material.shape.MaterialShapeUtils -> com.google.android.material.shape.MaterialShapeUtils:
    31:37:com.google.android.material.shape.CornerTreatment createCornerTreatment(int) -> createCornerTreatment
    43:43:com.google.android.material.shape.CornerTreatment createDefaultCornerTreatment() -> createDefaultCornerTreatment
    48:48:com.google.android.material.shape.EdgeTreatment createDefaultEdgeTreatment() -> createDefaultEdgeTreatment
    57:61:void setElevation(android.view.View,float) -> setElevation
    70:74:void setParentAbsoluteElevation(android.view.View) -> setParentAbsoluteElevation
    83:86:void setParentAbsoluteElevation(android.view.View,com.google.android.material.shape.MaterialShapeDrawable) -> setParentAbsoluteElevation
com.google.android.material.shape.RelativeCornerSize -> com.google.android.material.shape.RelativeCornerSize:
    58:60:void <init>(float) -> <init>
    75:82:boolean equals(java.lang.Object) -> equals
    70:70:float getCornerSize(android.graphics.RectF) -> getCornerSize
    51:51:float getMaxCornerSize(android.graphics.RectF) -> getMaxCornerSize
    87:88:int hashCode() -> hashCode
com.google.android.material.shape.RoundedCornerTreatment -> com.google.android.material.shape.RoundedCornerTreatment:
    24:26:void <init>() -> <init>
    43:45:void getCornerPath(com.google.android.material.shape.ShapePath,float,float,float) -> getCornerPath
com.google.android.material.shape.ShapeAppearanceModel -> com.google.android.material.shape.ShapeAppearanceModel:
    593:593:void <clinit>() -> <clinit>
    42:42:void <init>(com.google.android.material.shape.ShapeAppearanceModel$Builder,com.google.android.material.shape.ShapeAppearanceModel$1) -> <init>
    608:623:void <init>(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> <init>
    626:641:void <init>() -> <init>
    465:465:com.google.android.material.shape.ShapeAppearanceModel$Builder builder() -> builder
    474:474:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int) -> builder
    484:484:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int,int) -> builder
    495:502:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int,com.google.android.material.shape.CornerSize) -> builder
    510:510:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int) -> builder
    519:519:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int,int) -> builder
    533:569:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int,com.google.android.material.shape.CornerSize) -> builder
    760:760:com.google.android.material.shape.EdgeTreatment getBottomEdge() -> getBottomEdge
    680:680:com.google.android.material.shape.CornerTreatment getBottomLeftCorner() -> getBottomLeftCorner
    720:720:com.google.android.material.shape.CornerSize getBottomLeftCornerSize() -> getBottomLeftCornerSize
    670:670:com.google.android.material.shape.CornerTreatment getBottomRightCorner() -> getBottomRightCorner
    710:710:com.google.android.material.shape.CornerSize getBottomRightCornerSize() -> getBottomRightCornerSize
    575:588:com.google.android.material.shape.CornerSize getCornerSize(android.content.res.TypedArray,int,com.google.android.material.shape.CornerSize) -> getCornerSize
    730:730:com.google.android.material.shape.EdgeTreatment getLeftEdge() -> getLeftEdge
    750:750:com.google.android.material.shape.EdgeTreatment getRightEdge() -> getRightEdge
    740:740:com.google.android.material.shape.EdgeTreatment getTopEdge() -> getTopEdge
    650:650:com.google.android.material.shape.CornerTreatment getTopLeftCorner() -> getTopLeftCorner
    690:690:com.google.android.material.shape.CornerSize getTopLeftCornerSize() -> getTopLeftCornerSize
    660:660:com.google.android.material.shape.CornerTreatment getTopRightCorner() -> getTopRightCorner
    700:700:com.google.android.material.shape.CornerSize getTopRightCornerSize() -> getTopRightCornerSize
    819:838:boolean isRoundRect(android.graphics.RectF) -> isRoundRect
    766:766:com.google.android.material.shape.ShapeAppearanceModel$Builder toBuilder() -> toBuilder
    775:775:com.google.android.material.shape.ShapeAppearanceModel withCornerSize(float) -> withCornerSize
    780:780:com.google.android.material.shape.ShapeAppearanceModel withCornerSize(com.google.android.material.shape.CornerSize) -> withCornerSize
    803:808:com.google.android.material.shape.ShapeAppearanceModel withTransformedCornerSizes(com.google.android.material.shape.ShapeAppearanceModel$CornerSizeUnaryOperator) -> withTransformedCornerSizes
com.google.android.material.shape.ShapeAppearanceModel$Builder -> com.google.android.material.shape.ShapeAppearanceModel$Builder:
    47:69:void <init>() -> <init>
    47:86:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    45:45:com.google.android.material.shape.CornerTreatment access$100(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$100
    45:45:com.google.android.material.shape.EdgeTreatment access$1000(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$1000
    45:45:com.google.android.material.shape.EdgeTreatment access$1100(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$1100
    45:45:com.google.android.material.shape.EdgeTreatment access$1200(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$1200
    45:45:com.google.android.material.shape.CornerTreatment access$200(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$200
    45:45:com.google.android.material.shape.CornerTreatment access$300(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$300
    45:45:com.google.android.material.shape.CornerTreatment access$400(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$400
    45:45:com.google.android.material.shape.CornerSize access$500(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$500
    45:45:com.google.android.material.shape.CornerSize access$600(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$600
    45:45:com.google.android.material.shape.CornerSize access$700(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$700
    45:45:com.google.android.material.shape.CornerSize access$800(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$800
    45:45:com.google.android.material.shape.EdgeTreatment access$900(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$900
    459:459:com.google.android.material.shape.ShapeAppearanceModel build() -> build
    448:453:float compatCornerTreatmentSize(com.google.android.material.shape.CornerTreatment) -> compatCornerTreatmentSize
    126:129:com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCornerSizes(com.google.android.material.shape.CornerSize) -> setAllCornerSizes
    136:139:com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCornerSizes(float) -> setAllCornerSizes
    363:364:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(int,com.google.android.material.shape.CornerSize) -> setBottomLeftCorner
    375:381:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(com.google.android.material.shape.CornerTreatment) -> setBottomLeftCorner
    194:195:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCornerSize(float) -> setBottomLeftCornerSize
    202:203:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCornerSize(com.google.android.material.shape.CornerSize) -> setBottomLeftCornerSize
    318:319:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(int,com.google.android.material.shape.CornerSize) -> setBottomRightCorner
    330:336:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(com.google.android.material.shape.CornerTreatment) -> setBottomRightCorner
    178:179:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCornerSize(float) -> setBottomRightCornerSize
    186:187:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCornerSize(com.google.android.material.shape.CornerSize) -> setBottomRightCornerSize
    229:230:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(int,com.google.android.material.shape.CornerSize) -> setTopLeftCorner
    241:247:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(com.google.android.material.shape.CornerTreatment) -> setTopLeftCorner
    146:147:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCornerSize(float) -> setTopLeftCornerSize
    154:155:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCornerSize(com.google.android.material.shape.CornerSize) -> setTopLeftCornerSize
    273:274:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(int,com.google.android.material.shape.CornerSize) -> setTopRightCorner
    285:291:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(com.google.android.material.shape.CornerTreatment) -> setTopRightCorner
    162:163:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCornerSize(float) -> setTopRightCornerSize
    170:171:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCornerSize(com.google.android.material.shape.CornerSize) -> setTopRightCornerSize
com.google.android.material.shape.ShapeAppearancePathProvider -> com.google.android.material.shape.ShapeAppearancePathProvider:
    55:77:void <init>() -> <init>
    325:325:float angleOfEdge(int) -> angleOfEdge
    170:182:void appendCornerPath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int) -> appendCornerPath
    185:230:void appendEdgePath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int) -> appendEdgePath
    99:100:void calculatePath(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,android.graphics.Path) -> calculatePath
    118:145:void calculatePath(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,com.google.android.material.shape.ShapeAppearancePathProvider$PathListener,android.graphics.Path) -> calculatePath
    307:322:void getCoordinatesOfCorner(int,android.graphics.RectF,android.graphics.PointF) -> getCoordinatesOfCorner
    278:287:com.google.android.material.shape.CornerSize getCornerSizeForIndex(int,com.google.android.material.shape.ShapeAppearanceModel) -> getCornerSizeForIndex
    263:272:com.google.android.material.shape.CornerTreatment getCornerTreatmentForIndex(int,com.google.android.material.shape.ShapeAppearanceModel) -> getCornerTreatmentForIndex
    247:257:float getEdgeCenterForIndex(android.graphics.RectF,int) -> getEdgeCenterForIndex
    293:302:com.google.android.material.shape.EdgeTreatment getEdgeTreatmentForIndex(int,com.google.android.material.shape.ShapeAppearanceModel) -> getEdgeTreatmentForIndex
    83:83:com.google.android.material.shape.ShapeAppearancePathProvider getInstance() -> getInstance
    234:243:boolean pathOverlapsCorner(android.graphics.Path,int) -> pathOverlapsCorner
    148:157:void setCornerPathAndTransform(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int) -> setCornerPathAndTransform
    160:167:void setEdgePathAndTransform(int) -> setEdgePathAndTransform
com.google.android.material.shape.ShapeAppearancePathProvider$Lazy -> com.google.android.material.shape.ShapeAppearancePathProvider$Lazy:
    39:39:void <clinit>() -> <clinit>
com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec -> com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec:
    348:354:void <init>(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,com.google.android.material.shape.ShapeAppearancePathProvider$PathListener,android.graphics.Path) -> <init>
com.google.android.material.shape.ShapePath -> com.google.android.material.shape.ShapePath:
    92:98:void <init>() -> <init>
    253:275:void addArc(float,float,float,float,float,float) -> addArc
    335:350:void addConnectingShadowIfNecessary(float) -> addConnectingShadowIfNecessary
    317:320:void addShadowCompatOperation(com.google.android.material.shape.ShapePath$ShadowCompatOperation,float,float) -> addShadowCompatOperation
    284:288:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> applyToPath
    327:327:boolean containsIncompatibleShadowOp() -> containsIncompatibleShadowOp
    297:300:com.google.android.material.shape.ShapePath$ShadowCompatOperation createShadowCompatOperation(android.graphics.Matrix) -> createShadowCompatOperation
    369:369:float getCurrentShadowAngle() -> getCurrentShadowAngle
    373:373:float getEndShadowAngle() -> getEndShadowAngle
    361:361:float getEndX() -> getEndX
    365:365:float getEndY() -> getEndY
    353:353:float getStartX() -> getStartX
    357:357:float getStartY() -> getStartY
    132:147:void lineTo(float,float) -> lineTo
    109:110:void reset(float,float) -> reset
    114:123:void reset(float,float,float,float) -> reset
    393:394:void setCurrentShadowAngle(float) -> setCurrentShadowAngle
    397:398:void setEndShadowAngle(float) -> setEndShadowAngle
    385:386:void setEndX(float) -> setEndX
    389:390:void setEndY(float) -> setEndY
    377:378:void setStartX(float) -> setStartX
    381:382:void setStartY(float) -> setStartY
com.google.android.material.shape.ShapePath$1 -> com.google.android.material.shape.ShapePath$1:
    300:300:void <init>(com.google.android.material.shape.ShapePath,java.util.List,android.graphics.Matrix) -> <init>
    304:307:void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
com.google.android.material.shape.ShapePath$ArcShadowOperation -> com.google.android.material.shape.ShapePath$ArcShadowOperation:
    547:549:void <init>(com.google.android.material.shape.ShapePath$PathArcOperation) -> <init>
    557:564:void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
com.google.android.material.shape.ShapePath$LineShadowOperation -> com.google.android.material.shape.ShapePath$LineShadowOperation:
    426:430:void <init>(com.google.android.material.shape.ShapePath$PathLineOperation,float,float) -> <init>
    438:446:void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
    449:449:float getAngle() -> getAngle
com.google.android.material.shape.ShapePath$PathArcOperation -> com.google.android.material.shape.ShapePath$PathArcOperation:
    659:659:void <clinit>() -> <clinit>
    692:697:void <init>(float,float,float,float) -> <init>
    658:658:float access$1000(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1000
    658:658:float access$1100(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1100
    658:658:float access$1200(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1200
    658:658:float access$1300(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1300
    658:658:void access$600(com.google.android.material.shape.ShapePath$PathArcOperation,float) -> access$600
    658:658:void access$700(com.google.android.material.shape.ShapePath$PathArcOperation,float) -> access$700
    658:658:float access$800(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$800
    658:658:float access$900(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$900
    701:707:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> applyToPath
    722:722:float getBottom() -> getBottom
    710:710:float getLeft() -> getLeft
    718:718:float getRight() -> getRight
    742:742:float getStartAngle() -> getStartAngle
    746:746:float getSweepAngle() -> getSweepAngle
    714:714:float getTop() -> getTop
    738:739:void setBottom(float) -> setBottom
    726:727:void setLeft(float) -> setLeft
    734:735:void setRight(float) -> setRight
    750:751:void setStartAngle(float) -> setStartAngle
    754:755:void setSweepAngle(float) -> setSweepAngle
    730:731:void setTop(float) -> setTop
com.google.android.material.shape.ShapePath$PathLineOperation -> com.google.android.material.shape.ShapePath$PathLineOperation:
    578:578:void <init>() -> <init>
    578:578:float access$000(com.google.android.material.shape.ShapePath$PathLineOperation) -> access$000
    578:578:float access$002(com.google.android.material.shape.ShapePath$PathLineOperation,float) -> access$002
    578:578:float access$100(com.google.android.material.shape.ShapePath$PathLineOperation) -> access$100
    578:578:float access$102(com.google.android.material.shape.ShapePath$PathLineOperation,float) -> access$102
    584:589:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> applyToPath
com.google.android.material.shape.ShapePath$PathOperation -> com.google.android.material.shape.ShapePath$PathOperation:
    568:571:void <init>() -> <init>
com.google.android.material.shape.ShapePath$ShadowCompatOperation -> com.google.android.material.shape.ShapePath$ShadowCompatOperation:
    406:406:void <clinit>() -> <clinit>
    404:407:void <init>() -> <init>
    411:412:void draw(com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
com.google.android.material.sidesheet.RightSheetDelegate -> com.google.android.material.sidesheet.RightSheetDelegate:
    38:40:void <init>(com.google.android.material.sidesheet.SideSheetBehavior) -> <init>
    129:132:float calculateSlideOffsetBasedOnOutwardEdge(int) -> calculateSlideOffsetBasedOnOutwardEdge
    75:98:int calculateTargetStateOnViewReleased(android.view.View,float,float) -> calculateTargetStateOnViewReleased
    60:60:int getExpandedOffset() -> getExpandedOffset
    53:53:int getHiddenOffset() -> getHiddenOffset
    124:124:int getOutwardEdge(android.view.View) -> getOutwardEdge
    45:45:int getSheetEdge() -> getSheetEdge
    67:67:boolean isReleasedCloseToOriginEdge(android.view.View) -> isReleasedCloseToOriginEdge
    114:119:boolean isSettling(android.view.View,int,boolean) -> isSettling
    102:103:boolean isSwipeSignificant(float,float) -> isSwipeSignificant
    108:109:boolean shouldHide(android.view.View,float) -> shouldHide
    138:145:void updateCoplanarSiblingLayoutParams(android.view.ViewGroup$MarginLayoutParams,int,int) -> updateCoplanarSiblingLayoutParams
com.google.android.material.sidesheet.SheetDelegate -> com.google.android.material.sidesheet.SheetDelegate:
    29:29:void <init>() -> <init>
com.google.android.material.sidesheet.SheetUtils -> com.google.android.material.sidesheet.SheetUtils:
    33:33:boolean isSwipeMostlyHorizontal(float,float) -> isSwipeMostlyHorizontal
com.google.android.material.sidesheet.SideSheetBehavior -> com.google.android.material.sidesheet.SideSheetBehavior:
    void $r8$lambda$BqwTUDu32X3pYkD_jSNGWG9fjsM(com.google.android.material.sidesheet.SideSheetBehavior,int) -> $r8$lambda$BqwTUDu32X3pYkD_jSNGWG9fjsM
      # {"id":"com.android.tools.r8.synthesized"}
    boolean $r8$lambda$tYSQPZMO83x5k0C9LPAWDL-Rmyo(com.google.android.material.sidesheet.SideSheetBehavior,int,android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> $r8$lambda$tYSQPZMO83x5k0C9LPAWDL-Rmyo
      # {"id":"com.android.tools.r8.synthesized"}
    66:90:void <clinit>() -> <clinit>
    88:685:void <init>() -> <init>
    88:685:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    63:63:int access$000(com.google.android.material.sidesheet.SideSheetBehavior) -> access$000
    63:63:java.lang.ref.WeakReference access$100(com.google.android.material.sidesheet.SideSheetBehavior) -> access$100
    63:63:com.google.android.material.sidesheet.SheetDelegate access$200(com.google.android.material.sidesheet.SideSheetBehavior) -> access$200
    63:63:void access$300(com.google.android.material.sidesheet.SideSheetBehavior,android.view.View,int) -> access$300
    63:63:boolean access$400(com.google.android.material.sidesheet.SideSheetBehavior) -> access$400
    63:63:void access$500(com.google.android.material.sidesheet.SideSheetBehavior,android.view.View,int,boolean) -> access$500
    63:63:int access$600(com.google.android.material.sidesheet.SideSheetBehavior) -> access$600
    63:63:androidx.customview.widget.ViewDragHelper access$700(com.google.android.material.sidesheet.SideSheetBehavior) -> access$700
    365:379:int calculateCurrentOffset(int,android.view.View) -> calculateCurrentOffset
    465:465:float calculateDragDistance(float,float) -> calculateDragDistance
    804:808:void clearCoplanarSiblingView() -> clearCoplanarSiblingView
    955:955:androidx.core.view.accessibility.AccessibilityViewCommand createAccessibilityViewCommandForState(int) -> createAccessibilityViewCommandForState
    634:649:void createMaterialShapeDrawableIfNeeded(android.content.Context) -> createMaterialShapeDrawableIfNeeded
    745:751:void dispatchOnSlide(android.view.View,int) -> dispatchOnSlide
    339:343:void ensureAccessibilityPaneTitleIsSet(android.view.View) -> ensureAccessibilityPaneTitleIsSet
    255:268:int getChildMeasureSpec(int,int,int,int) -> getChildMeasureSpec
    355:355:int getChildWidth() -> getChildWidth
    800:800:android.view.View getCoplanarSiblingView() -> getCoplanarSiblingView
    166:166:int getDefaultSheetEdge() -> getDefaultSheetEdge
    473:473:int getExpandedOffset() -> getExpandedOffset
    508:508:float getHideFriction() -> getHideFriction
    512:512:float getHideThreshold() -> getHideThreshold
    670:676:int getOutwardEdgeOffsetForState(int) -> getOutwardEdgeOffsetForState
    359:359:int getParentWidth() -> getParentWidth
    422:422:int getSignificantVelocityThreshold() -> getSignificantVelocityThreshold
    682:682:androidx.customview.widget.ViewDragHelper getViewDragHelper() -> getViewDragHelper
    457:461:boolean isDraggedFarEnough(android.view.MotionEvent) -> isDraggedFarEnough
    573:574:boolean isLayingOut(android.view.View) -> isLayingOut
    956:957:boolean lambda$createAccessibilityViewCommandForState$1(int,android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> lambda$createAccessibilityViewCommandForState$1
    556:560:void lambda$setState$0(int) -> lambda$setState$0
    346:352:void maybeAssignCoplanarSiblingViewBasedId(androidx.coordinatorlayout.widget.CoordinatorLayout) -> maybeAssignCoplanarSiblingViewBasedId
    205:210:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    214:218:void onDetachedFromLayoutParams() -> onDetachedFromLayoutParams
    385:414:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    276:325:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    228:250:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    194:201:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    188:188:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    428:453:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    949:951:void replaceAccessibilityActionForState(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,int) -> replaceAccessibilityActionForState
    617:621:void resetVelocity() -> resetVelocity
    565:570:void runAfterLayout(android.view.View,java.lang.Runnable) -> runAfterLayout
    761:772:void setCoplanarSiblingViewId(int) -> setCoplanarSiblingViewId
    484:485:void setDraggable(boolean) -> setDraggable
    152:162:void setSheetEdge(int) -> setSheetEdge
    542:562:void setState(int) -> setState
    590:614:void setStateInternal(int) -> setStateInternal
    630:630:boolean shouldHandleDraggingWithHelper() -> shouldHandleDraggingWithHelper
    418:418:boolean shouldInterceptTouchEvent(android.view.View) -> shouldInterceptTouchEvent
    817:817:boolean shouldSkipSmoothAnimation() -> shouldSkipSmoothAnimation
    660:667:void startSettling(android.view.View,int,boolean) -> startSettling
    927:945:void updateAccessibilityActions() -> updateAccessibilityActions
    331:335:void updateSheetVisibility(android.view.View) -> updateSheetVisibility
com.google.android.material.sidesheet.SideSheetBehavior$$ExternalSyntheticLambda0 -> com.google.android.material.sidesheet.SideSheetBehavior$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.sidesheet.SideSheetBehavior com.google.android.material.sidesheet.SideSheetBehavior$$InternalSyntheticLambda$1$fa1244d46eae0795a60b9fc62a1245804a9f64a9fac94559c274504bbca5d4b6$0.f$0 -> f$0
    int com.google.android.material.sidesheet.SideSheetBehavior$$InternalSyntheticLambda$1$fa1244d46eae0795a60b9fc62a1245804a9f64a9fac94559c274504bbca5d4b6$0.f$1 -> f$1
    void com.google.android.material.sidesheet.SideSheetBehavior$$InternalSyntheticLambda$1$fa1244d46eae0795a60b9fc62a1245804a9f64a9fac94559c274504bbca5d4b6$0.<init>(com.google.android.material.sidesheet.SideSheetBehavior,int) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean com.google.android.material.sidesheet.SideSheetBehavior$$InternalSyntheticLambda$1$fa1244d46eae0795a60b9fc62a1245804a9f64a9fac94559c274504bbca5d4b6$0.perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.sidesheet.SideSheetBehavior$$ExternalSyntheticLambda1 -> com.google.android.material.sidesheet.SideSheetBehavior$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.sidesheet.SideSheetBehavior com.google.android.material.sidesheet.SideSheetBehavior$$InternalSyntheticLambda$2$d3cacd97ad6fa5b54fa0e7242a348c40ec6030be8bf0a83cb679ff7f75e87731$0.f$0 -> f$0
    int com.google.android.material.sidesheet.SideSheetBehavior$$InternalSyntheticLambda$2$d3cacd97ad6fa5b54fa0e7242a348c40ec6030be8bf0a83cb679ff7f75e87731$0.f$1 -> f$1
    void com.google.android.material.sidesheet.SideSheetBehavior$$InternalSyntheticLambda$2$d3cacd97ad6fa5b54fa0e7242a348c40ec6030be8bf0a83cb679ff7f75e87731$0.<init>(com.google.android.material.sidesheet.SideSheetBehavior,int) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.sidesheet.SideSheetBehavior$$InternalSyntheticLambda$2$d3cacd97ad6fa5b54fa0e7242a348c40ec6030be8bf0a83cb679ff7f75e87731$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.sidesheet.SideSheetBehavior$1 -> com.google.android.material.sidesheet.SideSheetBehavior$1:
    686:686:void <init>(com.google.android.material.sidesheet.SideSheetBehavior) -> <init>
    735:735:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    730:730:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    740:740:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    715:718:void onViewDragStateChanged(int) -> onViewDragStateChanged
    699:711:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    723:726:void onViewReleased(android.view.View,float,float) -> onViewReleased
    690:693:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
com.google.android.material.sidesheet.SideSheetBehavior$SavedState -> com.google.android.material.sidesheet.SideSheetBehavior$SavedState:
    884:884:void <clinit>() -> <clinit>
    868:871:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    874:876:void <init>(android.os.Parcelable,com.google.android.material.sidesheet.SideSheetBehavior) -> <init>
    880:882:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.sidesheet.SideSheetBehavior$SavedState$1 -> com.google.android.material.sidesheet.SideSheetBehavior$SavedState$1:
    885:885:void <init>() -> <init>
    885:885:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    885:885:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    889:889:com.google.android.material.sidesheet.SideSheetBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    895:895:com.google.android.material.sidesheet.SideSheetBehavior$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    885:885:java.lang.Object[] newArray(int) -> newArray
    901:901:com.google.android.material.sidesheet.SideSheetBehavior$SavedState[] newArray(int) -> newArray
com.google.android.material.sidesheet.SideSheetBehavior$StateSettlingTracker -> com.google.android.material.sidesheet.SideSheetBehavior$StateSettlingTracker:
    void $r8$lambda$cX4rrUBRviTi9l99dj1EmckVARg(com.google.android.material.sidesheet.SideSheetBehavior$StateSettlingTracker) -> $r8$lambda$cX4rrUBRviTi9l99dj1EmckVARg
      # {"id":"com.android.tools.r8.synthesized"}
    832:836:void <init>(com.google.android.material.sidesheet.SideSheetBehavior) -> <init>
    848:856:void continueSettlingToState(int) -> continueSettlingToState
    838:845:void lambda$new$0() -> lambda$new$0
com.google.android.material.sidesheet.SideSheetBehavior$StateSettlingTracker$$ExternalSyntheticLambda0 -> com.google.android.material.sidesheet.SideSheetBehavior$StateSettlingTracker$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.sidesheet.SideSheetBehavior$StateSettlingTracker com.google.android.material.sidesheet.SideSheetBehavior$StateSettlingTracker$$InternalSyntheticLambda$1$e0d76f536e2711a7e2f829fd7b69be01c71a320b0aec14b05669b9ddd9797109$0.f$0 -> f$0
    void com.google.android.material.sidesheet.SideSheetBehavior$StateSettlingTracker$$InternalSyntheticLambda$1$e0d76f536e2711a7e2f829fd7b69be01c71a320b0aec14b05669b9ddd9797109$0.<init>(com.google.android.material.sidesheet.SideSheetBehavior$StateSettlingTracker) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.sidesheet.SideSheetBehavior$StateSettlingTracker$$InternalSyntheticLambda$1$e0d76f536e2711a7e2f829fd7b69be01c71a320b0aec14b05669b9ddd9797109$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.sidesheet.SideSheetCallback -> com.google.android.material.sidesheet.SideSheetCallback:
    24:24:void <init>() -> <init>
    48:48:void onLayout(android.view.View) -> onLayout
com.google.android.material.snackbar.BaseTransientBottomBar -> com.google.android.material.snackbar.BaseTransientBottomBar:
    221:273:void <clinit>() -> <clinit>
    102:102:void access$1200(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$1200
    102:102:void access$1300(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$1300
    102:102:int access$1400(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$1400
    102:102:int access$1500(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$1500
    102:102:com.google.android.material.snackbar.ContentViewCallback access$1600(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$1600
    102:102:boolean access$1700() -> access$1700
    102:102:int access$1800(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$1800
    102:102:com.google.android.material.shape.MaterialShapeDrawable access$1900(int,com.google.android.material.shape.ShapeAppearanceModel) -> access$1900
    102:102:android.graphics.drawable.GradientDrawable access$2000(int,android.content.res.Resources) -> access$2000
    102:102:void access$900(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$900
    907:925:void animateViewIn() -> animateViewIn
    928:933:void animateViewOut(int) -> animateViewOut
    890:902:int calculateBottomMarginForAnchorView() -> calculateBottomMarginForAnchorView
    1375:1380:android.graphics.drawable.GradientDrawable createGradientDrawableBackground(int,android.content.res.Resources) -> createGradientDrawableBackground
    1367:1369:com.google.android.material.shape.MaterialShapeDrawable createMaterialShapeDrawableBackground(int,com.google.android.material.shape.ShapeAppearanceModel) -> createMaterialShapeDrawableBackground
    674:675:void dispatchDismiss(int) -> dispatchDismiss
    966:975:android.animation.ValueAnimator getAlphaAnimator(float[]) -> getAlphaAnimator
    585:585:android.view.View getAnchorView() -> getAnchorView
    746:746:com.google.android.material.behavior.SwipeDismissBehavior getNewBehavior() -> getNewBehavior
    979:990:android.animation.ValueAnimator getScaleAnimator(float[]) -> getScaleAnimator
    1079:1084:int getTranslationYBottom() -> getTranslationYBottom
    1088:1094:void hideView(int) -> hideView
    726:726:boolean isShownOrQueued() -> isShownOrQueued
    489:491:boolean isSwipeDismissable() -> isSwipeDismissable
    775:782:void onAttachedToWindow() -> onAttachedToWindow
    785:798:void onDetachedFromWindow() -> onDetachedFromWindow
    801:805:void onLayoutChange() -> onLayoutChange
    1110:1125:void onViewHidden(int) -> onViewHidden
    1097:1106:void onViewShown() -> onViewShown
    881:887:void recalculateAndUpdateMargins() -> recalculateAndUpdateMargins
    836:878:void setUpBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> setUpBehavior
    1129:1135:boolean shouldAnimate() -> shouldAnimate
    485:485:boolean shouldUpdateGestureInset() -> shouldUpdateGestureInset
    750:772:void showView() -> showView
    808:818:void showViewImpl() -> showViewImpl
    936:950:void startFadeInAnimation() -> startFadeInAnimation
    953:963:void startFadeOutAnimation(int) -> startFadeOutAnimation
    994:1038:void startSlideInAnimation() -> startSlideInAnimation
    1041:1076:void startSlideOutAnimation(int) -> startSlideOutAnimation
    457:482:void updateMargins() -> updateMargins
com.google.android.material.snackbar.BaseTransientBottomBar$1 -> com.google.android.material.snackbar.BaseTransientBottomBar$1:
    258:258:void <init>() -> <init>
    261:269:boolean handleMessage(android.os.Message) -> handleMessage
com.google.android.material.snackbar.BaseTransientBottomBar$10 -> com.google.android.material.snackbar.BaseTransientBottomBar$10:
    956:956:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> <init>
    959:960:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.snackbar.BaseTransientBottomBar$11 -> com.google.android.material.snackbar.BaseTransientBottomBar$11:
    969:969:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    972:973:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.snackbar.BaseTransientBottomBar$12 -> com.google.android.material.snackbar.BaseTransientBottomBar$12:
    982:982:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    985:988:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.snackbar.BaseTransientBottomBar$13 -> com.google.android.material.snackbar.BaseTransientBottomBar$13:
    1006:1006:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    1016:1017:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    1009:1012:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.snackbar.BaseTransientBottomBar$14 -> com.google.android.material.snackbar.BaseTransientBottomBar$14:
    1020:1021:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> <init>
    1025:1035:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.snackbar.BaseTransientBottomBar$15 -> com.google.android.material.snackbar.BaseTransientBottomBar$15:
    1046:1046:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> <init>
    1054:1055:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    1049:1050:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.snackbar.BaseTransientBottomBar$16 -> com.google.android.material.snackbar.BaseTransientBottomBar$16:
    1058:1059:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    1063:1073:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.snackbar.BaseTransientBottomBar$6 -> com.google.android.material.snackbar.BaseTransientBottomBar$6:
    791:791:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    794:795:void run() -> run
com.google.android.material.snackbar.BaseTransientBottomBar$7 -> com.google.android.material.snackbar.BaseTransientBottomBar$7:
    846:846:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    849:853:void onDismiss(android.view.View) -> onDismiss
    857:870:void onDragStateChanged(int) -> onDragStateChanged
com.google.android.material.snackbar.BaseTransientBottomBar$8 -> com.google.android.material.snackbar.BaseTransientBottomBar$8:
    908:908:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    911:923:void run() -> run
com.google.android.material.snackbar.BaseTransientBottomBar$9 -> com.google.android.material.snackbar.BaseTransientBottomBar$9:
    943:943:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    946:947:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback -> com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback:
    126:126:void <init>() -> <init>
    166:166:void onDismissed(java.lang.Object,int) -> onDismissed
    176:176:void onShown(java.lang.Object) -> onShown
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior -> com.google.android.material.snackbar.BaseTransientBottomBar$Behavior:
    1387:1389:void <init>() -> <init>
    1384:1384:void access$1100(com.google.android.material.snackbar.BaseTransientBottomBar$Behavior,com.google.android.material.snackbar.BaseTransientBottomBar) -> access$1100
    1398:1398:boolean canSwipeDismissView(android.view.View) -> canSwipeDismissView
    1404:1405:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    1393:1394:void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar) -> setBaseTransientBottomBar
com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate -> com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate:
    1415:1419:void <init>(com.google.android.material.behavior.SwipeDismissBehavior) -> <init>
    1427:1427:boolean canSwipeDismissView(android.view.View) -> canSwipeDismissView
    1432:1447:void onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    1423:1424:void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar) -> setBaseTransientBottomBar
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout -> com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout:
    1141:1141:void <clinit>() -> <clinit>
    1169:1206:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1140:1140:android.graphics.Rect access$1000(com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout) -> access$1000
    1329:1332:void addToTargetParent(android.view.ViewGroup) -> addToTargetParent
    1345:1359:android.graphics.drawable.Drawable createThemedBackground() -> createThemedBackground
    1317:1317:float getActionTextColorAlpha() -> getActionTextColorAlpha
    1305:1305:int getAnimationMode() -> getAnimationMode
    1313:1313:float getBackgroundOverlayColorAlpha() -> getBackgroundOverlayColorAlpha
    1325:1325:int getMaxInlineActionWidth() -> getMaxInlineActionWidth
    1321:1321:int getMaxWidth() -> getMaxWidth
    1274:1279:void onAttachedToWindow() -> onAttachedToWindow
    1283:1287:void onDetachedFromWindow() -> onDetachedFromWindow
    1266:1270:void onLayout(boolean,int,int,int,int) -> onLayout
    1257:1262:void onMeasure(int,int) -> onMeasure
    1309:1310:void setAnimationMode(int) -> setAnimationMode
    1210:1211:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    1215:1221:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    1225:1234:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    1238:1246:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1335:1336:void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar) -> setBaseTransientBottomBar
    1291:1301:void setLayoutParams(android.view.ViewGroup$LayoutParams) -> setLayoutParams
    1251:1253:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    1339:1341:void updateOriginalMargins(android.view.ViewGroup$MarginLayoutParams) -> updateOriginalMargins
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout$1 -> com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout$1:
    1142:1142:void <init>() -> <init>
    1147:1147:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.android.material.snackbar.Snackbar$SnackbarLayout -> com.google.android.material.snackbar.Snackbar$SnackbarLayout:
    508:509:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    513:528:void onMeasure(int,int) -> onMeasure
    501:501:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    501:501:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    501:501:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    501:501:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    501:501:void setLayoutParams(android.view.ViewGroup$LayoutParams) -> setLayoutParams
    501:501:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
com.google.android.material.snackbar.SnackbarContentLayout -> com.google.android.material.snackbar.SnackbarContentLayout:
    52:58:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    153:162:void animateContentIn(int,int) -> animateContentIn
    166:175:void animateContentOut(int,int) -> animateContentOut
    72:72:android.widget.Button getActionView() -> getActionView
    68:68:android.widget.TextView getMessageView() -> getMessageView
    62:65:void onFinishInflate() -> onFinishInflate
    87:120:void onMeasure(int,int) -> onMeasure
    178:179:void setMaxInlineActionWidth(int) -> setMaxInlineActionWidth
    139:149:void updateTopBottomPadding(android.view.View,int,int) -> updateTopBottomPadding
    124:134:boolean updateViewsWithinLayout(int,int,int) -> updateViewsWithinLayout
com.google.android.material.snackbar.SnackbarManager -> com.google.android.material.snackbar.SnackbarManager:
    49:66:void <init>() -> <init>
    205:212:boolean cancelSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord,int) -> cancelSnackbarLocked
    107:114:void dismiss(com.google.android.material.snackbar.SnackbarManager$Callback,int) -> dismiss
    37:40:com.google.android.material.snackbar.SnackbarManager getInstance() -> getInstance
    240:245:void handleTimeout(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord) -> handleTimeout
    169:171:boolean isCurrentOrNext(com.google.android.material.snackbar.SnackbarManager$Callback) -> isCurrentOrNext
    216:216:boolean isCurrentSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback) -> isCurrentSnackbarLocked
    220:220:boolean isNextSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback) -> isNextSnackbarLocked
    121:130:void onDismissed(com.google.android.material.snackbar.SnackbarManager$Callback) -> onDismissed
    137:142:void onShown(com.google.android.material.snackbar.SnackbarManager$Callback) -> onShown
    145:151:void pauseTimeout(com.google.android.material.snackbar.SnackbarManager$Callback) -> pauseTimeout
    154:160:void restoreTimeoutIfPaused(com.google.android.material.snackbar.SnackbarManager$Callback) -> restoreTimeoutIfPaused
    224:237:void scheduleTimeoutLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord) -> scheduleTimeoutLocked
    190:202:void showNextSnackbarLocked() -> showNextSnackbarLocked
com.google.android.material.snackbar.SnackbarManager$1 -> com.google.android.material.snackbar.SnackbarManager$1:
    54:54:void <init>(com.google.android.material.snackbar.SnackbarManager) -> <init>
    57:62:boolean handleMessage(android.os.Message) -> handleMessage
com.google.android.material.snackbar.SnackbarManager$SnackbarRecord -> com.google.android.material.snackbar.SnackbarManager$SnackbarRecord:
    185:185:boolean isSnackbar(com.google.android.material.snackbar.SnackbarManager$Callback) -> isSnackbar
com.google.android.material.stateful.ExtendableSavedState -> com.google.android.material.stateful.ExtendableSavedState:
    91:91:void <clinit>() -> <clinit>
    36:36:void <init>(android.os.Parcel,java.lang.ClassLoader,com.google.android.material.stateful.ExtendableSavedState$1) -> <init>
    41:43:void <init>(android.os.Parcelable) -> <init>
    46:60:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    84:85:java.lang.String toString() -> toString
    64:79:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.stateful.ExtendableSavedState$1 -> com.google.android.material.stateful.ExtendableSavedState$1:
    92:92:void <init>() -> <init>
    92:92:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    92:92:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    97:97:com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    103:103:com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    92:92:java.lang.Object[] newArray(int) -> newArray
    109:109:com.google.android.material.stateful.ExtendableSavedState[] newArray(int) -> newArray
com.google.android.material.textfield.ClearTextEndIconDelegate -> com.google.android.material.textfield.ClearTextEndIconDelegate:
    void $r8$lambda$Abvjkt9KmYeJvJ7_vHGwZ-xlmVA(com.google.android.material.textfield.ClearTextEndIconDelegate,android.animation.ValueAnimator) -> $r8$lambda$Abvjkt9KmYeJvJ7_vHGwZ-xlmVA
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$nI62G89ozUOuRnvjwrP0IYYoGyA(com.google.android.material.textfield.ClearTextEndIconDelegate,android.view.View) -> $r8$lambda$nI62G89ozUOuRnvjwrP0IYYoGyA
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$tQahUbi3HJfsEhbpmdlHLxzqxv4(com.google.android.material.textfield.ClearTextEndIconDelegate,android.animation.ValueAnimator) -> $r8$lambda$tQahUbi3HJfsEhbpmdlHLxzqxv4
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$ycpHjhDocuatJlJAPKZepsuRHG8(com.google.android.material.textfield.ClearTextEndIconDelegate,android.view.View,boolean) -> $r8$lambda$ycpHjhDocuatJlJAPKZepsuRHG8
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$ypc1RVfDDE8vNgAyrsAm7Dre9Zs(com.google.android.material.textfield.ClearTextEndIconDelegate) -> $r8$lambda$ypc1RVfDDE8vNgAyrsAm7Dre9Zs
      # {"id":"com.android.tools.r8.synthesized"}
    49:84:void <init>(com.google.android.material.textfield.EndCompoundLayout) -> <init>
    131:135:void afterEditTextChanged(android.text.Editable) -> afterEditTextChanged
    148:162:void animateIcon(boolean) -> animateIcon
    187:195:android.animation.ValueAnimator getAlphaAnimator(float[]) -> getAlphaAnimator
    107:107:int getIconContentDescriptionResId() -> getIconContentDescriptionResId
    102:102:int getIconDrawableResId() -> getIconDrawableResId
    139:139:android.view.View$OnFocusChangeListener getOnEditTextFocusChangeListener() -> getOnEditTextFocusChangeListener
    120:120:android.view.View$OnClickListener getOnIconClickListener() -> getOnIconClickListener
    144:144:android.view.View$OnFocusChangeListener getOnIconViewFocusChangeListener() -> getOnIconViewFocusChangeListener
    199:207:android.animation.ValueAnimator getScaleAnimator() -> getScaleAnimator
    165:184:void initAnimators() -> initAnimators
    191:193:void lambda$getAlphaAnimator$3(android.animation.ValueAnimator) -> lambda$getAlphaAnimator$3
    203:206:void lambda$getScaleAnimator$4(android.animation.ValueAnimator) -> lambda$getScaleAnimator$4
    50:58:void lambda$new$0(android.view.View) -> lambda$new$0
    61:61:void lambda$new$1(android.view.View,boolean) -> lambda$new$1
    96:96:void lambda$tearDown$2() -> lambda$tearDown$2
    125:127:void onEditTextAttached(android.widget.EditText) -> onEditTextAttached
    112:116:void onSuffixVisibilityChanged(boolean) -> onSuffixVisibilityChanged
    88:89:void setUp() -> setUp
    211:213:boolean shouldBeVisible() -> shouldBeVisible
    93:98:void tearDown() -> tearDown
com.google.android.material.textfield.ClearTextEndIconDelegate$$ExternalSyntheticLambda0 -> com.google.android.material.textfield.ClearTextEndIconDelegate$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.ClearTextEndIconDelegate com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$17ccb35e90256e2a790b98fb0f29fcb9f71fa2758edf36e22295aec0d2f06296$0.f$0 -> f$0
    void com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$17ccb35e90256e2a790b98fb0f29fcb9f71fa2758edf36e22295aec0d2f06296$0.<init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$17ccb35e90256e2a790b98fb0f29fcb9f71fa2758edf36e22295aec0d2f06296$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.ClearTextEndIconDelegate$$ExternalSyntheticLambda1 -> com.google.android.material.textfield.ClearTextEndIconDelegate$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.ClearTextEndIconDelegate com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$767bc18c2a341de5b202a8fdeb001f518750b20b4c8359fb95e76366595254a4$0.f$0 -> f$0
    void com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$767bc18c2a341de5b202a8fdeb001f518750b20b4c8359fb95e76366595254a4$0.<init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$767bc18c2a341de5b202a8fdeb001f518750b20b4c8359fb95e76366595254a4$0.onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.ClearTextEndIconDelegate$$ExternalSyntheticLambda2 -> com.google.android.material.textfield.ClearTextEndIconDelegate$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.ClearTextEndIconDelegate com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$88b8d40c43e34dcb614afd396cecd928e90873c960f200febc85ef2ae10b66ab$0.f$0 -> f$0
    void com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$88b8d40c43e34dcb614afd396cecd928e90873c960f200febc85ef2ae10b66ab$0.<init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$88b8d40c43e34dcb614afd396cecd928e90873c960f200febc85ef2ae10b66ab$0.onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.ClearTextEndIconDelegate$$ExternalSyntheticLambda3 -> com.google.android.material.textfield.ClearTextEndIconDelegate$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.ClearTextEndIconDelegate com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$b01fc8933ceb300a93c892a20cf8d831db7c88c6a1b23a8fb1a09bdb1b6fc74c$0.f$0 -> f$0
    void com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$b01fc8933ceb300a93c892a20cf8d831db7c88c6a1b23a8fb1a09bdb1b6fc74c$0.<init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$b01fc8933ceb300a93c892a20cf8d831db7c88c6a1b23a8fb1a09bdb1b6fc74c$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.ClearTextEndIconDelegate$$ExternalSyntheticLambda4 -> com.google.android.material.textfield.ClearTextEndIconDelegate$$ExternalSyntheticLambda4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.ClearTextEndIconDelegate com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$b01fc8933ceb300a93c892a20cf8d831db7c88c6a1b23a8fb1a09bdb1b6fc74c$1.f$0 -> f$0
    void com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$b01fc8933ceb300a93c892a20cf8d831db7c88c6a1b23a8fb1a09bdb1b6fc74c$1.<init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$b01fc8933ceb300a93c892a20cf8d831db7c88c6a1b23a8fb1a09bdb1b6fc74c$1.onFocusChange(android.view.View,boolean) -> onFocusChange
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.ClearTextEndIconDelegate$1 -> com.google.android.material.textfield.ClearTextEndIconDelegate$1:
    170:170:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    173:174:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.textfield.ClearTextEndIconDelegate$2 -> com.google.android.material.textfield.ClearTextEndIconDelegate$2:
    178:178:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    181:182:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.textfield.CustomEndIconDelegate -> com.google.android.material.textfield.CustomEndIconDelegate:
    31:32:void <init>(com.google.android.material.textfield.EndCompoundLayout) -> <init>
    36:37:void setUp() -> setUp
com.google.android.material.textfield.CutoutDrawable -> com.google.android.material.textfield.CutoutDrawable:
    40:40:void <init>(com.google.android.material.shape.ShapeAppearanceModel,com.google.android.material.textfield.CutoutDrawable$1) -> <init>
    50:52:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    44:45:com.google.android.material.textfield.CutoutDrawable create(com.google.android.material.shape.ShapeAppearanceModel) -> create
    55:55:boolean hasCutout() -> hasCutout
    76:77:void removeCutout() -> removeCutout
    61:68:void setCutout(float,float,float,float) -> setCutout
    71:72:void setCutout(android.graphics.RectF) -> setCutout
com.google.android.material.textfield.CutoutDrawable$ImplApi18 -> com.google.android.material.textfield.CutoutDrawable$ImplApi18:
    82:83:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    87:100:void drawStrokeShape(android.graphics.Canvas) -> drawStrokeShape
com.google.android.material.textfield.CutoutDrawable$ImplApi18$$ExternalSyntheticApiModelOutline0 -> com.google.android.material.textfield.CutoutDrawable$ImplApi18$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean com.google.android.material.textfield.CutoutDrawable$ImplApi18$$InternalSyntheticApiModelOutline$1$2611763f8cf470311a6a386efd258456b5d1bb74791eddafc6e3a57231bb4d5e$0.m(android.graphics.Canvas,android.graphics.RectF) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.DropdownMenuEndIconDelegate -> com.google.android.material.textfield.DropdownMenuEndIconDelegate:
    void $r8$lambda$4SBpO57tjhDSopV0DemkySdxojY(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.animation.ValueAnimator) -> $r8$lambda$4SBpO57tjhDSopV0DemkySdxojY
      # {"id":"com.android.tools.r8.synthesized"}
    boolean $r8$lambda$BqmxB1OD2-UBtyLLYrjkb1pVKko(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.view.View,android.view.MotionEvent) -> $r8$lambda$BqmxB1OD2-UBtyLLYrjkb1pVKko
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$CCm9KkEwkNKH7i3YuOdE94QyO7w(com.google.android.material.textfield.DropdownMenuEndIconDelegate,boolean) -> $r8$lambda$CCm9KkEwkNKH7i3YuOdE94QyO7w
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$GC4Z4aSLx1o4GNefaOGyXn6tdak(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.view.View) -> $r8$lambda$GC4Z4aSLx1o4GNefaOGyXn6tdak
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$Gy89nJjcMrMnAKlMjFZkWRzwff0(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> $r8$lambda$Gy89nJjcMrMnAKlMjFZkWRzwff0
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$az2bGAstjYQVJ0xTZU5to9JFwf8(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> $r8$lambda$az2bGAstjYQVJ0xTZU5to9JFwf8
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$s0Go8aDJW6wdKEyjtVLy3FzDAsw(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.view.View,boolean) -> $r8$lambda$s0Go8aDJW6wdKEyjtVLy3FzDAsw
      # {"id":"com.android.tools.r8.synthesized"}
    58:58:void <clinit>() -> <clinit>
    69:114:void <init>(com.google.android.material.textfield.EndCompoundLayout) -> <init>
    55:55:android.animation.ValueAnimator access$000(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$000
    202:212:void afterEditTextChanged(android.text.Editable) -> afterEditTextChanged
    300:306:android.widget.AutoCompleteTextView castAutoCompleteTextViewOrThrow(android.widget.EditText) -> castAutoCompleteTextViewOrThrow
    336:344:android.animation.ValueAnimator getAlphaAnimator(int,float[]) -> getAlphaAnimator
    150:150:int getIconContentDescriptionResId() -> getIconContentDescriptionResId
    145:145:int getIconDrawableResId() -> getIconDrawableResId
    216:216:android.view.View$OnFocusChangeListener getOnEditTextFocusChangeListener() -> getOnEditTextFocusChangeListener
    185:185:android.view.View$OnClickListener getOnIconClickListener() -> getOnIconClickListener
    138:138:androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener getTouchExplorationStateChangeListener() -> getTouchExplorationStateChangeListener
    323:333:void initAnimators() -> initAnimators
    180:180:boolean isBoxBackgroundModeSupported(int) -> isBoxBackgroundModeSupported
    294:295:boolean isDropdownPopupActive() -> isDropdownPopupActive
    165:165:boolean isIconActivable() -> isIconActivable
    170:170:boolean isIconActivated() -> isIconActivated
    155:155:boolean isIconCheckable() -> isIconCheckable
    160:160:boolean isIconChecked() -> isIconChecked
    208:211:void lambda$afterEditTextChanged$3() -> lambda$afterEditTextChanged$3
    340:342:void lambda$getAlphaAnimator$6(android.animation.ValueAnimator) -> lambda$getAlphaAnimator$6
    69:69:void lambda$new$0(android.view.View) -> lambda$new$0
    72:78:void lambda$new$1(android.view.View,boolean) -> lambda$new$1
    82:87:void lambda$new$2(boolean) -> lambda$new$2
    275:282:boolean lambda$setUpDropdownShowHideBehavior$4(android.view.View,android.view.MotionEvent) -> lambda$setUpDropdownShowHideBehavior$4
    286:288:void lambda$setUpDropdownShowHideBehavior$5() -> lambda$setUpDropdownShowHideBehavior$5
    190:197:void onEditTextAttached(android.widget.EditText) -> onEditTextAttached
    223:231:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    237:243:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    315:320:void setEndIconChecked(boolean) -> setEndIconChecked
    118:121:void setUp() -> setUp
    274:291:void setUpDropdownShowHideBehavior() -> setUpDropdownShowHideBehavior
    175:175:boolean shouldTintIconOnError() -> shouldTintIconOnError
    246:268:void showHideDropdown() -> showHideDropdown
    127:134:void tearDown() -> tearDown
    310:312:void updateDropdownPopupDirty() -> updateDropdownPopupDirty
com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda0 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.DropdownMenuEndIconDelegate com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$424e68cea38bf38d5b555e49338463efe58e97016155fefcd446e70c1ca874a9$0.f$0 -> f$0
    void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$424e68cea38bf38d5b555e49338463efe58e97016155fefcd446e70c1ca874a9$0.<init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$424e68cea38bf38d5b555e49338463efe58e97016155fefcd446e70c1ca874a9$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda1 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.DropdownMenuEndIconDelegate com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$424e68cea38bf38d5b555e49338463efe58e97016155fefcd446e70c1ca874a9$1.f$0 -> f$0
    void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$424e68cea38bf38d5b555e49338463efe58e97016155fefcd446e70c1ca874a9$1.<init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$424e68cea38bf38d5b555e49338463efe58e97016155fefcd446e70c1ca874a9$1.onFocusChange(android.view.View,boolean) -> onFocusChange
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda2 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.DropdownMenuEndIconDelegate com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$424e68cea38bf38d5b555e49338463efe58e97016155fefcd446e70c1ca874a9$2.f$0 -> f$0
    void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$424e68cea38bf38d5b555e49338463efe58e97016155fefcd446e70c1ca874a9$2.<init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$424e68cea38bf38d5b555e49338463efe58e97016155fefcd446e70c1ca874a9$2.onTouchExplorationStateChanged(boolean) -> onTouchExplorationStateChanged
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda3 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.DropdownMenuEndIconDelegate com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$6a6dc61376018444d49e0ec726ac9e955707ce81eb61dcb389eb38bf30d0f5ae$0.f$0 -> f$0
    void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$6a6dc61376018444d49e0ec726ac9e955707ce81eb61dcb389eb38bf30d0f5ae$0.<init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$6a6dc61376018444d49e0ec726ac9e955707ce81eb61dcb389eb38bf30d0f5ae$0.onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda4 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.DropdownMenuEndIconDelegate com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$d62d3ecde1df87ec317ef0dcf916bf354e324992921381eb10236d3be87a69e3$0.f$0 -> f$0
    void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$d62d3ecde1df87ec317ef0dcf916bf354e324992921381eb10236d3be87a69e3$0.<init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$d62d3ecde1df87ec317ef0dcf916bf354e324992921381eb10236d3be87a69e3$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda5 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.DropdownMenuEndIconDelegate com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$daa5b0f51703359aef8ae32ed8be140469a8a95e04886ce893dea4b8762fad43$0.f$0 -> f$0
    void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$daa5b0f51703359aef8ae32ed8be140469a8a95e04886ce893dea4b8762fad43$0.<init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$daa5b0f51703359aef8ae32ed8be140469a8a95e04886ce893dea4b8762fad43$0.onTouch(android.view.View,android.view.MotionEvent) -> onTouch
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda6 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.DropdownMenuEndIconDelegate com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$daa5b0f51703359aef8ae32ed8be140469a8a95e04886ce893dea4b8762fad43$1.f$0 -> f$0
    void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$daa5b0f51703359aef8ae32ed8be140469a8a95e04886ce893dea4b8762fad43$1.<init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$daa5b0f51703359aef8ae32ed8be140469a8a95e04886ce893dea4b8762fad43$1.onDismiss() -> onDismiss
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.DropdownMenuEndIconDelegate$1 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$1:
    326:326:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    329:331:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.textfield.EditTextUtils -> com.google.android.material.textfield.EditTextUtils:
    27:27:boolean isEditable(android.widget.EditText) -> isEditable
com.google.android.material.textfield.EndCompoundLayout -> com.google.android.material.textfield.EndCompoundLayout:
    96:201:void <init>(com.google.android.material.textfield.TextInputLayout,androidx.appcompat.widget.TintTypedArray) -> <init>
    84:84:android.widget.EditText access$000(com.google.android.material.textfield.EndCompoundLayout) -> access$000
    84:84:android.widget.EditText access$002(com.google.android.material.textfield.EndCompoundLayout,android.widget.EditText) -> access$002
    84:84:android.text.TextWatcher access$100(com.google.android.material.textfield.EndCompoundLayout) -> access$100
    84:84:void access$200(com.google.android.material.textfield.EndCompoundLayout,com.google.android.material.textfield.EndIconDelegate) -> access$200
    84:84:void access$300(com.google.android.material.textfield.EndCompoundLayout) -> access$300
    84:84:void access$400(com.google.android.material.textfield.EndCompoundLayout) -> access$400
    426:432:void addTouchExplorationStateChangeListenerIfNeeded() -> addTouchExplorationStateChangeListenerIfNeeded
    512:515:void checkEndIcon() -> checkEndIcon
    205:215:com.google.android.material.internal.CheckableImageButton createIconView(android.view.ViewGroup,android.view.LayoutInflater,int) -> createIconView
    780:783:void dispatchOnEndIconChanged(int) -> dispatchOnEndIconChanged
    742:747:com.google.android.material.internal.CheckableImageButton getCurrentEndIconView() -> getCurrentEndIconView
    546:546:java.lang.CharSequence getEndIconContentDescription() -> getEndIconContentDescription
    351:351:com.google.android.material.textfield.EndIconDelegate getEndIconDelegate() -> getEndIconDelegate
    531:531:android.graphics.drawable.Drawable getEndIconDrawable() -> getEndIconDrawable
    575:575:int getEndIconMinSize() -> getEndIconMinSize
    356:356:int getEndIconMode() -> getEndIconMode
    585:585:android.widget.ImageView$ScaleType getEndIconScaleType() -> getEndIconScaleType
    347:347:com.google.android.material.internal.CheckableImageButton getEndIconView() -> getEndIconView
    325:325:android.graphics.drawable.Drawable getErrorIconDrawable() -> getErrorIconDrawable
    442:443:int getIconResId(com.google.android.material.textfield.EndIconDelegate) -> getIconResId
    657:657:java.lang.CharSequence getPasswordVisibilityToggleContentDescription() -> getPasswordVisibilityToggleContentDescription
    652:652:android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable() -> getPasswordVisibilityToggleDrawable
    616:616:java.lang.CharSequence getSuffixText() -> getSuffixText
    629:629:android.content.res.ColorStateList getSuffixTextColor() -> getSuffixTextColor
    605:605:android.widget.TextView getSuffixTextView() -> getSuffixTextView
    601:601:boolean hasEndIcon() -> hasEndIcon
    243:291:void initEndIconView(androidx.appcompat.widget.TintTypedArray) -> initEndIconView
    219:239:void initErrorIconView(androidx.appcompat.widget.TintTypedArray) -> initErrorIconView
    295:311:void initSuffixTextView(androidx.appcompat.widget.TintTypedArray) -> initSuffixTextView
    508:508:boolean isEndIconChecked() -> isEndIconChecked
    488:488:boolean isEndIconVisible() -> isEndIconVisible
    752:752:boolean isErrorIconVisible() -> isErrorIconVisible
    694:696:void onHintStateChanged(boolean) -> onHintStateChanged
    699:708:void onTextInputBoxStateUpdated() -> onTextInputBoxStateUpdated
    496:497:void refreshEndIconDrawableState() -> refreshEndIconDrawableState
    475:476:void refreshErrorIconDrawableState() -> refreshErrorIconDrawableState
    391:410:void refreshIconState(boolean) -> refreshIconState
    435:439:void removeTouchExplorationStateChangeListenerIfNeeded() -> removeTouchExplorationStateChangeListenerIfNeeded
    492:493:void setEndIconActivated(boolean) -> setEndIconActivated
    500:501:void setEndIconCheckable(boolean) -> setEndIconCheckable
    535:536:void setEndIconContentDescription(int) -> setEndIconContentDescription
    539:542:void setEndIconContentDescription(java.lang.CharSequence) -> setEndIconContentDescription
    518:519:void setEndIconDrawable(int) -> setEndIconDrawable
    522:527:void setEndIconDrawable(android.graphics.drawable.Drawable) -> setEndIconDrawable
    564:572:void setEndIconMinSize(int) -> setEndIconMinSize
    360:388:void setEndIconMode(int) -> setEndIconMode
    447:448:void setEndIconOnClickListener(android.view.View$OnClickListener) -> setEndIconOnClickListener
    452:454:void setEndIconOnLongClickListener(android.view.View$OnLongClickListener) -> setEndIconOnLongClickListener
    579:582:void setEndIconScaleType(android.widget.ImageView$ScaleType) -> setEndIconScaleType
    550:554:void setEndIconTintList(android.content.res.ColorStateList) -> setEndIconTintList
    557:561:void setEndIconTintMode(android.graphics.PorterDuff$Mode) -> setEndIconTintMode
    479:485:void setEndIconVisible(boolean) -> setEndIconVisible
    314:316:void setErrorIconDrawable(int) -> setErrorIconDrawable
    319:322:void setErrorIconDrawable(android.graphics.drawable.Drawable) -> setErrorIconDrawable
    343:344:void setErrorIconOnClickListener(android.view.View$OnClickListener) -> setErrorIconOnClickListener
    458:460:void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener) -> setErrorIconOnLongClickListener
    329:333:void setErrorIconTintList(android.content.res.ColorStateList) -> setErrorIconTintList
    336:340:void setErrorIconTintMode(android.graphics.PorterDuff$Mode) -> setErrorIconTintMode
    463:472:void setOnFocusChangeListenersIfNeeded(com.google.android.material.textfield.EndIconDelegate) -> setOnFocusChangeListenersIfNeeded
    642:644:void setPasswordVisibilityToggleContentDescription(int) -> setPasswordVisibilityToggleContentDescription
    647:648:void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence) -> setPasswordVisibilityToggleContentDescription
    633:635:void setPasswordVisibilityToggleDrawable(int) -> setPasswordVisibilityToggleDrawable
    638:639:void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable) -> setPasswordVisibilityToggleDrawable
    665:672:void setPasswordVisibilityToggleEnabled(boolean) -> setPasswordVisibilityToggleEnabled
    675:677:void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList) -> setPasswordVisibilityToggleTintList
    680:682:void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode) -> setPasswordVisibilityToggleTintMode
    609:612:void setSuffixText(java.lang.CharSequence) -> setSuffixText
    620:621:void setSuffixTextAppearance(int) -> setSuffixTextAppearance
    624:625:void setSuffixTextColor(android.content.res.ColorStateList) -> setSuffixTextColor
    413:417:void setUpDelegate(com.google.android.material.textfield.EndIconDelegate) -> setUpDelegate
    420:423:void tearDownDelegate(com.google.android.material.textfield.EndIconDelegate) -> tearDownDelegate
    786:796:void tintEndIconOnError(boolean) -> tintEndIconOnError
    770:777:void updateEndLayoutVisibility() -> updateEndLayoutVisibility
    756:766:void updateErrorIconVisibility() -> updateErrorIconVisibility
    724:738:void updateSuffixTextViewPadding() -> updateSuffixTextViewPadding
    711:721:void updateSuffixTextVisibility() -> updateSuffixTextVisibility
com.google.android.material.textfield.EndCompoundLayout$1 -> com.google.android.material.textfield.EndCompoundLayout$1:
    115:115:void <init>(com.google.android.material.textfield.EndCompoundLayout) -> <init>
    123:124:void afterTextChanged(android.text.Editable) -> afterTextChanged
    118:119:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
com.google.android.material.textfield.EndCompoundLayout$2 -> com.google.android.material.textfield.EndCompoundLayout$2:
    128:128:void <init>(com.google.android.material.textfield.EndCompoundLayout) -> <init>
    131:147:void onEditTextAttached(com.google.android.material.textfield.TextInputLayout) -> onEditTextAttached
com.google.android.material.textfield.EndCompoundLayout$3 -> com.google.android.material.textfield.EndCompoundLayout$3:
    190:190:void <init>(com.google.android.material.textfield.EndCompoundLayout) -> <init>
    193:194:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    198:199:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
com.google.android.material.textfield.EndCompoundLayout$EndIconDelegates -> com.google.android.material.textfield.EndCompoundLayout$EndIconDelegates:
    799:810:void <init>(com.google.android.material.textfield.EndCompoundLayout,androidx.appcompat.widget.TintTypedArray) -> <init>
    798:798:int access$500(com.google.android.material.textfield.EndCompoundLayout$EndIconDelegates) -> access$500
    822:834:com.google.android.material.textfield.EndIconDelegate create(int) -> create
    813:818:com.google.android.material.textfield.EndIconDelegate get(int) -> get
com.google.android.material.textfield.EndIconDelegate -> com.google.android.material.textfield.EndIconDelegate:
    48:53:void <init>(com.google.android.material.textfield.EndCompoundLayout) -> <init>
    180:180:void afterEditTextChanged(android.text.Editable) -> afterEditTextChanged
    173:173:void beforeEditTextChanged(java.lang.CharSequence,int,int,int) -> beforeEditTextChanged
    71:71:int getIconContentDescriptionResId() -> getIconContentDescriptionResId
    65:65:int getIconDrawableResId() -> getIconDrawableResId
    146:146:android.view.View$OnFocusChangeListener getOnEditTextFocusChangeListener() -> getOnEditTextFocusChangeListener
    138:138:android.view.View$OnClickListener getOnIconClickListener() -> getOnIconClickListener
    154:154:android.view.View$OnFocusChangeListener getOnIconViewFocusChangeListener() -> getOnIconViewFocusChangeListener
    162:162:androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener getTouchExplorationStateChangeListener() -> getTouchExplorationStateChangeListener
    122:122:boolean isBoxBackgroundModeSupported(int) -> isBoxBackgroundModeSupported
    95:95:boolean isIconActivable() -> isIconActivable
    105:105:boolean isIconActivated() -> isIconActivated
    80:80:boolean isIconCheckable() -> isIconCheckable
    88:88:boolean isIconChecked() -> isIconChecked
    166:166:void onEditTextAttached(android.widget.EditText) -> onEditTextAttached
    186:186:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    192:192:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    131:131:void onSuffixVisibilityChanged(boolean) -> onSuffixVisibilityChanged
    195:196:void refreshIconState() -> refreshIconState
    56:56:void setUp() -> setUp
    113:113:boolean shouldTintIconOnError() -> shouldTintIconOnError
    60:60:void tearDown() -> tearDown
com.google.android.material.textfield.IconHelper -> com.google.android.material.textfield.IconHelper:
    81:101:void applyIconTint(com.google.android.material.textfield.TextInputLayout,com.google.android.material.internal.CheckableImageButton,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> applyIconTint
    161:175:android.widget.ImageView$ScaleType convertScaleType(int) -> convertScaleType
    127:135:int[] mergeIconState(com.google.android.material.textfield.TextInputLayout,com.google.android.material.internal.CheckableImageButton) -> mergeIconState
    110:122:void refreshIconDrawableState(com.google.android.material.textfield.TextInputLayout,com.google.android.material.internal.CheckableImageButton,android.content.res.ColorStateList) -> refreshIconDrawableState
    139:147:void setCompatRippleBackgroundIfNeeded(com.google.android.material.internal.CheckableImageButton) -> setCompatRippleBackgroundIfNeeded
    58:70:void setIconClickable(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener) -> setIconClickable
    151:153:void setIconMinSize(com.google.android.material.internal.CheckableImageButton,int) -> setIconMinSize
    46:48:void setIconOnClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnClickListener,android.view.View$OnLongClickListener) -> setIconOnClickListener
    52:54:void setIconOnLongClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener) -> setIconOnLongClickListener
    157:158:void setIconScaleType(com.google.android.material.internal.CheckableImageButton,android.widget.ImageView$ScaleType) -> setIconScaleType
com.google.android.material.textfield.IndicatorViewController -> com.google.android.material.textfield.IndicatorViewController:
    134:161:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    67:67:int access$002(com.google.android.material.textfield.IndicatorViewController,int) -> access$002
    67:67:android.animation.Animator access$102(com.google.android.material.textfield.IndicatorViewController,android.animation.Animator) -> access$102
    67:67:android.widget.TextView access$200(com.google.android.material.textfield.IndicatorViewController) -> access$200
    67:67:com.google.android.material.textfield.TextInputLayout access$300(com.google.android.material.textfield.IndicatorViewController) -> access$300
    437:462:void addIndicator(android.widget.TextView,int) -> addIndicator
    402:423:void adjustIndicatorPadding() -> adjustIndicatorPadding
    426:426:boolean canAdjustIndicatorPadding() -> canAdjustIndicatorPadding
    379:382:void cancelCaptionAnimator() -> cancelCaptionAnimator
    339:358:void createCaptionAnimators(java.util.List,boolean,android.widget.TextView,int,int,int) -> createCaptionAnimators
    361:367:android.animation.ObjectAnimator createCaptionOpacityAnimator(android.widget.TextView,boolean) -> createCaptionOpacityAnimator
    371:375:android.animation.ObjectAnimator createCaptionTranslationYAnimator(android.widget.TextView) -> createCaptionTranslationYAnimator
    584:584:boolean errorShouldBeShown() -> errorShouldBeShown
    390:398:android.widget.TextView getCaptionViewFromDisplayState(int) -> getCaptionViewFromDisplayState
    675:675:int getErrorAccessibilityLiveRegion() -> getErrorAccessibilityLiveRegion
    671:671:java.lang.CharSequence getErrorContentDescription() -> getErrorContentDescription
    609:609:java.lang.CharSequence getErrorText() -> getErrorText
    633:633:int getErrorViewCurrentTextColor() -> getErrorViewCurrentTextColor
    638:638:android.content.res.ColorStateList getErrorViewTextColors() -> getErrorViewTextColors
    613:613:java.lang.CharSequence getHelperText() -> getHelperText
    576:576:android.view.View getHelperTextView() -> getHelperTextView
    680:680:int getHelperTextViewCurrentTextColor() -> getHelperTextViewCurrentTextColor
    431:433:int getIndicatorPadding(boolean,int,int) -> getIndicatorPadding
    201:215:void hideError() -> hideError
    177:185:void hideHelperText() -> hideHelperText
    588:590:boolean isCaptionStateError(int) -> isCaptionStateError
    385:385:boolean isCaptionView(int) -> isCaptionView
    519:519:boolean isErrorEnabled() -> isErrorEnabled
    523:523:boolean isHelperTextEnabled() -> isHelperTextEnabled
    465:476:void removeIndicator(android.widget.TextView,int) -> removeIndicator
    306:329:void setCaptionViewVisibilities(int,int) -> setCaptionViewVisibilities
    663:667:void setErrorAccessibilityLiveRegion(int) -> setErrorAccessibilityLiveRegion
    656:660:void setErrorContentDescription(java.lang.CharSequence) -> setErrorContentDescription
    486:516:void setErrorEnabled(boolean) -> setErrorEnabled
    649:653:void setErrorTextAppearance(int) -> setErrorTextAppearance
    642:646:void setErrorViewTextColor(android.content.res.ColorStateList) -> setErrorViewTextColor
    696:700:void setHelperTextAppearance(int) -> setHelperTextAppearance
    528:572:void setHelperTextEnabled(boolean) -> setHelperTextEnabled
    689:693:void setHelperTextViewTextColor(android.content.res.ColorStateList) -> setHelperTextViewTextColor
    626:629:void setTextViewTypeface(android.widget.TextView,android.graphics.Typeface) -> setTextViewTypeface
    618:623:void setTypefaces(android.graphics.Typeface) -> setTypefaces
    479:482:void setViewGroupGoneIfEmpty(android.view.ViewGroup,int) -> setViewGroupGoneIfEmpty
    227:231:boolean shouldAnimateCaptionView(android.widget.TextView,java.lang.CharSequence) -> shouldAnimateCaptionView
    188:198:void showError(java.lang.CharSequence) -> showError
    164:174:void showHelper(java.lang.CharSequence) -> showHelper
    239:302:void updateCaptionViewsVisibility(int,int,boolean) -> updateCaptionViewsVisibility
com.google.android.material.textfield.IndicatorViewController$1 -> com.google.android.material.textfield.IndicatorViewController$1:
    269:269:void <init>(com.google.android.material.textfield.IndicatorViewController,int,android.widget.TextView,int,android.widget.TextView) -> <init>
    272:285:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    289:293:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.textfield.IndicatorViewController$2 -> com.google.android.material.textfield.IndicatorViewController$2:
    552:552:void <init>(com.google.android.material.textfield.IndicatorViewController) -> <init>
    556:561:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
com.google.android.material.textfield.MaterialAutoCompleteTextView -> com.google.android.material.textfield.MaterialAutoCompleteTextView:
    89:90:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    77:173:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    71:71:androidx.appcompat.widget.ListPopupWindow access$000(com.google.android.material.textfield.MaterialAutoCompleteTextView) -> access$000
    71:71:void access$100(com.google.android.material.textfield.MaterialAutoCompleteTextView,java.lang.Object) -> access$100
    71:71:int access$200(com.google.android.material.textfield.MaterialAutoCompleteTextView) -> access$200
    71:71:android.content.res.ColorStateList access$300(com.google.android.material.textfield.MaterialAutoCompleteTextView) -> access$300
    186:191:void dismissDropDown() -> dismissDropDown
    431:438:com.google.android.material.textfield.TextInputLayout findTextInputLayoutAncestor() -> findTextInputLayoutAncestor
    352:356:java.lang.CharSequence getHint() -> getHint
    322:322:float getPopupElevation() -> getPopupElevation
    274:274:int getSimpleItemSelectedColor() -> getSimpleItemSelectedColor
    304:304:android.content.res.ColorStateList getSimpleItemSelectedRippleColor() -> getSimpleItemSelectedRippleColor
    204:204:boolean isTouchExplorationEnabled() -> isTouchExplorationEnabled
    376:419:int measureContentWidth() -> measureContentWidth
    327:339:void onAttachedToWindow() -> onAttachedToWindow
    343:345:void onDetachedFromWindow() -> onDetachedFromWindow
    423:427:void onInputTypeChanged() -> onInputTypeChanged
    361:373:void onMeasure(int,int) -> onMeasure
    195:201:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    209:211:void setAdapter(android.widget.ListAdapter) -> setAdapter
    309:313:void setDropDownBackgroundDrawable(android.graphics.drawable.Drawable) -> setDropDownBackgroundDrawable
    221:223:void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    215:217:void setRawInputType(int) -> setRawInputType
    260:264:void setSimpleItemSelectedColor(int) -> setSimpleItemSelectedColor
    289:293:void setSimpleItemSelectedRippleColor(android.content.res.ColorStateList) -> setSimpleItemSelectedRippleColor
    234:235:void setSimpleItems(int) -> setSimpleItems
    246:247:void setSimpleItems(java.lang.String[]) -> setSimpleItems
    177:182:void showDropDown() -> showDropDown
    443:451:void updateText(java.lang.Object) -> updateText
com.google.android.material.textfield.MaterialAutoCompleteTextView$1 -> com.google.android.material.textfield.MaterialAutoCompleteTextView$1:
    144:144:void <init>(com.google.android.material.textfield.MaterialAutoCompleteTextView) -> <init>
    148:164:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.google.android.material.textfield.MaterialAutoCompleteTextView$MaterialArrayAdapter -> com.google.android.material.textfield.MaterialAutoCompleteTextView$MaterialArrayAdapter:
    460:463:void <init>(com.google.android.material.textfield.MaterialAutoCompleteTextView,android.content.Context,int,java.lang.String[]) -> <init>
    509:530:android.content.res.ColorStateList createItemSelectedColorStateList() -> createItemSelectedColorStateList
    485:503:android.graphics.drawable.Drawable getSelectedItemDrawable() -> getSelectedItemDrawable
    472:480:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    551:551:boolean hasSelectedColor() -> hasSelectedColor
    555:555:boolean hasSelectedRippleColor() -> hasSelectedRippleColor
    534:547:android.content.res.ColorStateList sanitizeDropdownItemSelectedRippleColor() -> sanitizeDropdownItemSelectedRippleColor
    466:468:void updateSelectedItemColorStateList() -> updateSelectedItemColorStateList
com.google.android.material.textfield.NoEndIconDelegate -> com.google.android.material.textfield.NoEndIconDelegate:
    26:27:void <init>(com.google.android.material.textfield.EndCompoundLayout) -> <init>
com.google.android.material.textfield.PasswordToggleEndIconDelegate -> com.google.android.material.textfield.PasswordToggleEndIconDelegate:
    void $r8$lambda$twlq6SYcv_LydKclcBcdQZ6NHKY(com.google.android.material.textfield.PasswordToggleEndIconDelegate,android.view.View) -> $r8$lambda$twlq6SYcv_LydKclcBcdQZ6NHKY
      # {"id":"com.android.tools.r8.synthesized"}
    32:61:void <init>(com.google.android.material.textfield.EndCompoundLayout,int) -> <init>
    115:116:void beforeEditTextChanged(java.lang.CharSequence,int,int,int) -> beforeEditTextChanged
    88:88:int getIconContentDescriptionResId() -> getIconContentDescriptionResId
    82:82:int getIconDrawableResId() -> getIconDrawableResId
    104:104:android.view.View$OnClickListener getOnIconClickListener() -> getOnIconClickListener
    119:120:boolean hasPasswordTransformation() -> hasPasswordTransformation
    93:93:boolean isIconCheckable() -> isIconCheckable
    99:99:boolean isIconChecked() -> isIconChecked
    124:128:boolean isInputTypePassword(android.widget.EditText) -> isInputTypePassword
    38:53:void lambda$new$0(android.view.View) -> lambda$new$0
    109:111:void onEditTextAttached(android.widget.EditText) -> onEditTextAttached
    65:69:void setUp() -> setUp
    73:77:void tearDown() -> tearDown
com.google.android.material.textfield.PasswordToggleEndIconDelegate$$ExternalSyntheticLambda0 -> com.google.android.material.textfield.PasswordToggleEndIconDelegate$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.PasswordToggleEndIconDelegate com.google.android.material.textfield.PasswordToggleEndIconDelegate$$InternalSyntheticLambda$2$decc8f0b3b822bf7eef5cd7a798db439e744c3f9e22c4ce2f9722e0826ecd2aa$0.f$0 -> f$0
    void com.google.android.material.textfield.PasswordToggleEndIconDelegate$$InternalSyntheticLambda$2$decc8f0b3b822bf7eef5cd7a798db439e744c3f9e22c4ce2f9722e0826ecd2aa$0.<init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.textfield.PasswordToggleEndIconDelegate$$InternalSyntheticLambda$2$decc8f0b3b822bf7eef5cd7a798db439e744c3f9e22c4ce2f9722e0826ecd2aa$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.StartCompoundLayout -> com.google.android.material.textfield.StartCompoundLayout:
    80:105:void <init>(com.google.android.material.textfield.TextInputLayout,androidx.appcompat.widget.TintTypedArray) -> <init>
    188:188:java.lang.CharSequence getPrefixText() -> getPrefixText
    197:197:android.content.res.ColorStateList getPrefixTextColor() -> getPrefixTextColor
    171:171:android.widget.TextView getPrefixTextView() -> getPrefixTextView
    265:265:java.lang.CharSequence getStartIconContentDescription() -> getStartIconContentDescription
    220:220:android.graphics.drawable.Drawable getStartIconDrawable() -> getStartIconDrawable
    293:293:int getStartIconMinSize() -> getStartIconMinSize
    303:303:android.widget.ImageView$ScaleType getStartIconScaleType() -> getStartIconScaleType
    148:161:void initPrefixTextView(androidx.appcompat.widget.TintTypedArray) -> initPrefixTextView
    109:145:void initStartIconView(androidx.appcompat.widget.TintTypedArray) -> initStartIconView
    242:242:boolean isStartIconVisible() -> isStartIconVisible
    332:334:void onHintStateChanged(boolean) -> onHintStateChanged
    165:167:void onMeasure(int,int) -> onMeasure
    246:247:void refreshStartIconDrawableState() -> refreshStartIconDrawableState
    175:178:void setPrefixText(java.lang.CharSequence) -> setPrefixText
    201:202:void setPrefixTextAppearance(int) -> setPrefixTextAppearance
    192:193:void setPrefixTextColor(android.content.res.ColorStateList) -> setPrefixTextColor
    250:251:void setStartIconCheckable(boolean) -> setStartIconCheckable
    258:261:void setStartIconContentDescription(java.lang.CharSequence) -> setStartIconContentDescription
    205:216:void setStartIconDrawable(android.graphics.drawable.Drawable) -> setStartIconDrawable
    283:290:void setStartIconMinSize(int) -> setStartIconMinSize
    224:225:void setStartIconOnClickListener(android.view.View$OnClickListener) -> setStartIconOnClickListener
    229:231:void setStartIconOnLongClickListener(android.view.View$OnLongClickListener) -> setStartIconOnLongClickListener
    297:299:void setStartIconScaleType(android.widget.ImageView$ScaleType) -> setStartIconScaleType
    269:273:void setStartIconTintList(android.content.res.ColorStateList) -> setStartIconTintList
    276:280:void setStartIconTintMode(android.graphics.PorterDuff$Mode) -> setStartIconTintMode
    234:239:void setStartIconVisible(boolean) -> setStartIconVisible
    307:313:void setupAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> setupAccessibilityNodeInfo
    316:329:void updatePrefixTextViewPadding() -> updatePrefixTextViewPadding
    338:346:void updateVisibility() -> updateVisibility
com.google.android.material.textfield.TextInputEditText -> com.google.android.material.textfield.TextInputEditText:
    63:64:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    55:81:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    161:167:void getFocusedRect(android.graphics.Rect) -> getFocusedRect
    171:174:boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point) -> getGlobalVisibleRect
    104:108:java.lang.CharSequence getHint() -> getHint
    137:138:java.lang.CharSequence getHintFromLayout() -> getHintFromLayout
    125:132:com.google.android.material.textfield.TextInputLayout getTextInputLayout() -> getTextInputLayout
    85:97:void onAttachedToWindow() -> onAttachedToWindow
    114:120:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    195:203:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    179:189:boolean requestRectangleOnScreen(android.graphics.Rect) -> requestRectangleOnScreen
    145:146:void setTextInputLayoutFocusedRectEnabled(boolean) -> setTextInputLayoutFocusedRectEnabled
    156:156:boolean shouldUseTextInputLayoutFocusedRect(com.google.android.material.textfield.TextInputLayout) -> shouldUseTextInputLayoutFocusedRect
com.google.android.material.textfield.TextInputLayout -> com.google.android.material.textfield.TextInputLayout:
    int $r8$lambda$ae-b_REtQE9J8sctylgQBMSu39c(android.text.Editable) -> $r8$lambda$ae-b_REtQE9J8sctylgQBMSu39c
      # {"id":"com.android.tools.r8.synthesized"}
    196:207:void <clinit>() -> <clinit>
    451:452:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    220:704:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    194:194:boolean access$000(com.google.android.material.textfield.TextInputLayout) -> access$000
    194:194:boolean access$100(com.google.android.material.textfield.TextInputLayout) -> access$100
    194:194:void access$200(com.google.android.material.textfield.TextInputLayout,android.text.Editable) -> access$200
    194:194:com.google.android.material.textfield.EndCompoundLayout access$300(com.google.android.material.textfield.TextInputLayout) -> access$300
    194:194:com.google.android.material.textfield.StartCompoundLayout access$400(com.google.android.material.textfield.TextInputLayout) -> access$400
    194:194:com.google.android.material.textfield.IndicatorViewController access$500(com.google.android.material.textfield.TextInputLayout) -> access$500
    3741:3745:void addOnEditTextAttachedListener(com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener) -> addOnEditTextAttachedListener
    2474:2478:void addPlaceholderTextView() -> addPlaceholderTextView
    709:726:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    967:990:void adjustFilledEditTextPaddingForLargeFont() -> adjustFilledEditTextPaddingForLargeFont
    4358:4380:void animateToExpansionFraction(float) -> animateToExpansionFraction
    2860:2877:void applyBoxAttributes() -> applyBoxAttributes
    2881:2895:void applyBoxUnderlineAttributes() -> applyBoxUnderlineAttributes
    4183:4185:void applyCutoutPadding(android.graphics.RectF) -> applyCutoutPadding
    785:809:void assignBoxBackgroundByMode() -> assignBoxBackgroundByMode
    2851:2856:int calculateBoxBackgroundColor() -> calculateBoxBackgroundColor
    2758:2781:android.graphics.Rect calculateCollapsedTextBounds(android.graphics.Rect) -> calculateCollapsedTextBounds
    2830:2836:int calculateExpandedLabelBottom(android.graphics.Rect,android.graphics.Rect,float) -> calculateExpandedLabelBottom
    2822:2825:int calculateExpandedLabelTop(android.graphics.Rect,float) -> calculateExpandedLabelTop
    2805:2818:android.graphics.Rect calculateExpandedTextBounds(android.graphics.Rect) -> calculateExpandedTextBounds
    2741:2752:int calculateLabelMarginTop() -> calculateLabelMarginTop
    2898:2898:boolean canDrawOutlineStroke() -> canDrawOutlineStroke
    2902:2902:boolean canDrawStroke() -> canDrawStroke
    4177:4180:void closeCutout() -> closeCutout
    4127:4143:void collapseHint(boolean) -> collapseHint
    2432:2437:androidx.transition.Fade createPlaceholderFadeTransition() -> createPlaceholderFadeTransition
    4146:4146:boolean cutoutEnabled() -> cutoutEnabled
    3944:3947:void dispatchOnEditTextAttached() -> dispatchOnEditTextAttached
    1429:1465:void dispatchProvideAutofillStructure(android.view.ViewStructure,int) -> dispatchProvideAutofillStructure
    3032:3035:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    4084:4087:void draw(android.graphics.Canvas) -> draw
    4102:4124:void drawBoxUnderline(android.graphics.Canvas) -> drawBoxUnderline
    4096:4099:void drawHint(android.graphics.Canvas) -> drawHint
    4194:4224:void drawableStateChanged() -> drawableStateChanged
    4338:4354:void expandHint(boolean) -> expandHint
    1583:1586:int getBaseline() -> getBaseline
    730:733:com.google.android.material.shape.MaterialShapeDrawable getBoxBackground() -> getBoxBackground
    1227:1227:int getBoxBackgroundColor() -> getBoxBackgroundColor
    769:769:int getBoxBackgroundMode() -> getBoxBackgroundMode
    1012:1012:int getBoxCollapsedPaddingTop() -> getBoxCollapsedPaddingTop
    1364:1366:float getBoxCornerRadiusBottomEnd() -> getBoxCornerRadiusBottomEnd
    1376:1378:float getBoxCornerRadiusBottomStart() -> getBoxCornerRadiusBottomStart
    1352:1354:float getBoxCornerRadiusTopEnd() -> getBoxCornerRadiusTopEnd
    1340:1342:float getBoxCornerRadiusTopStart() -> getBoxCornerRadiusTopStart
    1110:1110:int getBoxStrokeColor() -> getBoxStrokeColor
    1160:1160:android.content.res.ColorStateList getBoxStrokeErrorColor() -> getBoxStrokeErrorColor
    1048:1048:int getBoxStrokeWidth() -> getBoxStrokeWidth
    1085:1085:int getBoxStrokeWidthFocused() -> getBoxStrokeWidthFocused
    2686:2686:int getCounterMaxLength() -> getCounterMaxLength
    2695:2698:java.lang.CharSequence getCounterOverflowDescription() -> getCounterOverflowDescription
    2286:2286:android.content.res.ColorStateList getCounterOverflowTextColor() -> getCounterOverflowTextColor
    2243:2243:android.content.res.ColorStateList getCounterTextColor() -> getCounterTextColor
    1944:1944:android.content.res.ColorStateList getDefaultHintTextColor() -> getDefaultHintTextColor
    926:949:com.google.android.material.shape.MaterialShapeDrawable getDropDownMaterialShapeDrawable(boolean) -> getDropDownMaterialShapeDrawable
    1638:1638:android.widget.EditText getEditText() -> getEditText
    825:838:android.graphics.drawable.Drawable getEditTextBoxBackground() -> getEditTextBoxBackground
    3673:3673:java.lang.CharSequence getEndIconContentDescription() -> getEndIconContentDescription
    3567:3567:android.graphics.drawable.Drawable getEndIconDrawable() -> getEndIconDrawable
    3589:3589:int getEndIconMinSize() -> getEndIconMinSize
    3416:3416:int getEndIconMode() -> getEndIconMode
    3635:3635:android.widget.ImageView$ScaleType getEndIconScaleType() -> getEndIconScaleType
    3940:3940:com.google.android.material.internal.CheckableImageButton getEndIconView() -> getEndIconView
    3045:3045:java.lang.CharSequence getError() -> getError
    2095:2095:int getErrorAccessibilityLiveRegion() -> getErrorAccessibilityLiveRegion
    2076:2076:java.lang.CharSequence getErrorContentDescription() -> getErrorContentDescription
    1975:1975:int getErrorCurrentTextColors() -> getErrorCurrentTextColors
    2153:2153:android.graphics.drawable.Drawable getErrorIconDrawable() -> getErrorIconDrawable
    873:887:android.graphics.drawable.Drawable getFilledBoxBackgroundWithRipple(com.google.android.material.shape.MaterialShapeDrawable,int,int,int[][]) -> getFilledBoxBackgroundWithRipple
    3057:3059:java.lang.CharSequence getHelperText() -> getHelperText
    2052:2052:int getHelperTextCurrentTextColor() -> getHelperTextCurrentTextColor
    1816:1816:java.lang.CharSequence getHint() -> getHint
    4398:4398:float getHintCollapsedTextHeight() -> getHintCollapsedTextHeight
    4393:4393:int getHintCurrentCollapsedTextColor() -> getHintCurrentCollapsedTextColor
    1925:1925:android.content.res.ColorStateList getHintTextColor() -> getHintTextColor
    2786:2791:int getLabelLeftBoundAlightWithPrefix(int,boolean) -> getLabelLeftBoundAlightWithPrefix
    2795:2800:int getLabelRightBoundAlignedWithSuffix(int,boolean) -> getLabelRightBoundAlignedWithSuffix
    1423:1423:com.google.android.material.textfield.TextInputLayout$LengthCounter getLengthCounter() -> getLengthCounter
    1688:1688:int getMaxEms() -> getMaxEms
    1770:1770:int getMaxWidth() -> getMaxWidth
    1663:1663:int getMinEms() -> getMinEms
    1729:1729:int getMinWidth() -> getMinWidth
    915:922:android.graphics.drawable.Drawable getOrCreateFilledDropDownMenuBackground() -> getOrCreateFilledDropDownMenuBackground
    908:911:android.graphics.drawable.Drawable getOrCreateOutlinedDropDownMenuBackground() -> getOrCreateOutlinedDropDownMenuBackground
    844:865:android.graphics.drawable.Drawable getOutlinedBoxBackgroundWithRipple(android.content.Context,com.google.android.material.shape.MaterialShapeDrawable,int,int[][]) -> getOutlinedBoxBackgroundWithRipple
    3848:3848:java.lang.CharSequence getPasswordVisibilityToggleContentDescription() -> getPasswordVisibilityToggleContentDescription
    3834:3834:android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable() -> getPasswordVisibilityToggleDrawable
    2412:2412:java.lang.CharSequence getPlaceholderText() -> getPlaceholderText
    2530:2530:int getPlaceholderTextAppearance() -> getPlaceholderTextAppearance
    2507:2507:android.content.res.ColorStateList getPlaceholderTextColor() -> getPlaceholderTextColor
    2553:2553:java.lang.CharSequence getPrefixText() -> getPrefixText
    2585:2585:android.content.res.ColorStateList getPrefixTextColor() -> getPrefixTextColor
    2566:2566:android.widget.TextView getPrefixTextView() -> getPrefixTextView
    1250:1250:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    3364:3364:java.lang.CharSequence getStartIconContentDescription() -> getStartIconContentDescription
    3231:3231:android.graphics.drawable.Drawable getStartIconDrawable() -> getStartIconDrawable
    3253:3253:int getStartIconMinSize() -> getStartIconMinSize
    3612:3612:android.widget.ImageView$ScaleType getStartIconScaleType() -> getStartIconScaleType
    2617:2617:java.lang.CharSequence getSuffixText() -> getSuffixText
    2649:2649:android.content.res.ColorStateList getSuffixTextColor() -> getSuffixTextColor
    2630:2630:android.widget.TextView getSuffixTextView() -> getSuffixTextView
    1405:1405:android.graphics.Typeface getTypeface() -> getTypeface
    2466:2471:void hidePlaceholderText() -> hidePlaceholderText
    3488:3488:boolean isEndIconVisible() -> isEndIconVisible
    1999:1999:boolean isErrorEnabled() -> isErrorEnabled
    2046:2046:boolean isHelperTextEnabled() -> isHelperTextEnabled
    4383:4383:boolean isHintExpanded() -> isHintExpanded
    1881:1881:boolean isProvidingHint() -> isProvidingHint
    2840:2841:boolean isSingleLineFilledTextField() -> isSingleLineFilledTextField
    244:244:int lambda$new$0(android.text.Editable) -> lambda$new$0
    773:782:void onApplyBoxBackgroundMode() -> onApplyBoxBackgroundMode
    4091:4093:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    4045:4069:void onLayout(boolean,int,int,int,int) -> onLayout
    3148:3163:void onMeasure(int,int) -> onMeasure
    3010:3028:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    3109:3144:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    2999:3005:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    4150:4167:void openCutout() -> openCutout
    4170:4174:void recalculateCutout() -> recalculateCutout
    2671:2678:void recursiveSetEnabled(android.view.ViewGroup,boolean) -> recursiveSetEnabled
    3303:3304:void refreshStartIconDrawableState() -> refreshStartIconDrawableState
    2481:2484:void removePlaceholderTextView() -> removePlaceholderTextView
    1188:1195:void setBoxBackgroundColor(int) -> setBoxBackgroundColor
    1173:1174:void setBoxBackgroundColorResource(int) -> setBoxBackgroundColorResource
    1207:1218:void setBoxBackgroundColorStateList(android.content.res.ColorStateList) -> setBoxBackgroundColorStateList
    752:759:void setBoxBackgroundMode(int) -> setBoxBackgroundMode
    1002:1003:void setBoxCollapsedPaddingTop(int) -> setBoxCollapsedPaddingTop
    1260:1268:void setBoxCornerFamily(int) -> setBoxCornerFamily
    1097:1101:void setBoxStrokeColor(int) -> setBoxStrokeColor
    1119:1135:void setBoxStrokeColorStateList(android.content.res.ColorStateList) -> setBoxStrokeColorStateList
    1146:1150:void setBoxStrokeErrorColor(android.content.res.ColorStateList) -> setBoxStrokeErrorColor
    1037:1039:void setBoxStrokeWidth(int) -> setBoxStrokeWidth
    1074:1076:void setBoxStrokeWidthFocused(int) -> setBoxStrokeWidthFocused
    1062:1063:void setBoxStrokeWidthFocusedResource(int) -> setBoxStrokeWidthFocusedResource
    1025:1026:void setBoxStrokeWidthResource(int) -> setBoxStrokeWidthResource
    2183:2203:void setCounterEnabled(boolean) -> setCounterEnabled
    2306:2316:void setCounterMaxLength(int) -> setCounterMaxLength
    2254:2258:void setCounterOverflowTextAppearance(int) -> setCounterOverflowTextAppearance
    2270:2274:void setCounterOverflowTextColor(android.content.res.ColorStateList) -> setCounterOverflowTextColor
    2213:2217:void setCounterTextAppearance(int) -> setCounterTextAppearance
    2228:2232:void setCounterTextColor(android.content.res.ColorStateList) -> setCounterTextColor
    1930:1936:void setDefaultHintTextColor(android.content.res.ColorStateList) -> setDefaultHintTextColor
    891:905:void setDropDownMenuBackgroundIfNeeded() -> setDropDownMenuBackgroundIfNeeded
    1469:1565:void setEditText(android.widget.EditText) -> setEditText
    2666:2668:void setEnabled(boolean) -> setEnabled
    3497:3498:void setEndIconActivated(boolean) -> setEndIconActivated
    3519:3520:void setEndIconCheckable(boolean) -> setEndIconCheckable
    3648:3649:void setEndIconContentDescription(int) -> setEndIconContentDescription
    3662:3663:void setEndIconContentDescription(java.lang.CharSequence) -> setEndIconContentDescription
    3542:3543:void setEndIconDrawable(int) -> setEndIconDrawable
    3556:3557:void setEndIconDrawable(android.graphics.drawable.Drawable) -> setEndIconDrawable
    3578:3579:void setEndIconMinSize(int) -> setEndIconMinSize
    3404:3405:void setEndIconMode(int) -> setEndIconMode
    3427:3428:void setEndIconOnClickListener(android.view.View$OnClickListener) -> setEndIconOnClickListener
    3450:3451:void setEndIconOnLongClickListener(android.view.View$OnLongClickListener) -> setEndIconOnLongClickListener
    3623:3624:void setEndIconScaleType(android.widget.ImageView$ScaleType) -> setEndIconScaleType
    3688:3689:void setEndIconTintList(android.content.res.ColorStateList) -> setEndIconTintList
    3700:3701:void setEndIconTintMode(android.graphics.PorterDuff$Mode) -> setEndIconTintMode
    3479:3480:void setEndIconVisible(boolean) -> setEndIconVisible
    2109:2123:void setError(java.lang.CharSequence) -> setError
    2086:2087:void setErrorAccessibilityLiveRegion(int) -> setErrorAccessibilityLiveRegion
    2066:2067:void setErrorContentDescription(java.lang.CharSequence) -> setErrorContentDescription
    1955:1956:void setErrorEnabled(boolean) -> setErrorEnabled
    2132:2133:void setErrorIconDrawable(int) -> setErrorIconDrawable
    2142:2143:void setErrorIconDrawable(android.graphics.drawable.Drawable) -> setErrorIconDrawable
    3438:3439:void setErrorIconOnClickListener(android.view.View$OnClickListener) -> setErrorIconOnClickListener
    3462:3463:void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener) -> setErrorIconOnLongClickListener
    2163:2164:void setErrorIconTintList(android.content.res.ColorStateList) -> setErrorIconTintList
    2174:2175:void setErrorIconTintMode(android.graphics.PorterDuff$Mode) -> setErrorIconTintMode
    1964:1965:void setErrorTextAppearance(int) -> setErrorTextAppearance
    1969:1970:void setErrorTextColor(android.content.res.ColorStateList) -> setErrorTextColor
    3101:3105:void setExpandedHintEnabled(boolean) -> setExpandedHintEnabled
    2027:2037:void setHelperText(java.lang.CharSequence) -> setHelperText
    1989:1990:void setHelperTextColor(android.content.res.ColorStateList) -> setHelperTextColor
    2010:2011:void setHelperTextEnabled(boolean) -> setHelperTextEnabled
    1984:1985:void setHelperTextTextAppearance(int) -> setHelperTextTextAppearance
    1780:1784:void setHint(java.lang.CharSequence) -> setHint
    1794:1795:void setHint(int) -> setHint
    3079:3080:void setHintAnimationEnabled(boolean) -> setHintAnimationEnabled
    1831:1860:void setHintEnabled(boolean) -> setHintEnabled
    1798:1806:void setHintInternal(java.lang.CharSequence) -> setHintInternal
    1890:1898:void setHintTextAppearance(int) -> setHintTextAppearance
    1905:1916:void setHintTextColor(android.content.res.ColorStateList) -> setHintTextColor
    1414:1415:void setLengthCounter(com.google.android.material.textfield.TextInputLayout$LengthCounter) -> setLengthCounter
    1675:1679:void setMaxEms(int) -> setMaxEms
    1742:1746:void setMaxWidth(int) -> setMaxWidth
    1758:1759:void setMaxWidthResource(int) -> setMaxWidthResource
    1650:1654:void setMinEms(int) -> setMinEms
    1701:1705:void setMinWidth(int) -> setMinWidth
    1717:1718:void setMinWidthResource(int) -> setMinWidthResource
    3805:3806:void setPasswordVisibilityToggleContentDescription(int) -> setPasswordVisibilityToggleContentDescription
    3821:3822:void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence) -> setPasswordVisibilityToggleContentDescription
    3774:3775:void setPasswordVisibilityToggleDrawable(int) -> setPasswordVisibilityToggleDrawable
    3789:3790:void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable) -> setPasswordVisibilityToggleDrawable
    3874:3875:void setPasswordVisibilityToggleEnabled(boolean) -> setPasswordVisibilityToggleEnabled
    3891:3892:void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList) -> setPasswordVisibilityToggleTintList
    3905:3906:void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode) -> setPasswordVisibilityToggleTintMode
    2377:2402:void setPlaceholderText(java.lang.CharSequence) -> setPlaceholderText
    2517:2521:void setPlaceholderTextAppearance(int) -> setPlaceholderTextAppearance
    2492:2498:void setPlaceholderTextColor(android.content.res.ColorStateList) -> setPlaceholderTextColor
    2417:2429:void setPlaceholderTextEnabled(boolean) -> setPlaceholderTextEnabled
    2542:2543:void setPrefixText(java.lang.CharSequence) -> setPrefixText
    2594:2595:void setPrefixTextAppearance(int) -> setPrefixTextAppearance
    2575:2576:void setPrefixTextColor(android.content.res.ColorStateList) -> setPrefixTextColor
    1237:1241:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    3317:3318:void setStartIconCheckable(boolean) -> setStartIconCheckable
    3339:3340:void setStartIconContentDescription(int) -> setStartIconContentDescription
    3353:3354:void setStartIconContentDescription(java.lang.CharSequence) -> setStartIconContentDescription
    3206:3207:void setStartIconDrawable(int) -> setStartIconDrawable
    3219:3220:void setStartIconDrawable(android.graphics.drawable.Drawable) -> setStartIconDrawable
    3242:3243:void setStartIconMinSize(int) -> setStartIconMinSize
    3265:3266:void setStartIconOnClickListener(android.view.View$OnClickListener) -> setStartIconOnClickListener
    3277:3278:void setStartIconOnLongClickListener(android.view.View$OnLongClickListener) -> setStartIconOnLongClickListener
    3600:3601:void setStartIconScaleType(android.widget.ImageView$ScaleType) -> setStartIconScaleType
    3379:3380:void setStartIconTintList(android.content.res.ColorStateList) -> setStartIconTintList
    3391:3392:void setStartIconTintMode(android.graphics.PorterDuff$Mode) -> setStartIconTintMode
    3286:3287:void setStartIconVisible(boolean) -> setStartIconVisible
    2606:2607:void setSuffixText(java.lang.CharSequence) -> setSuffixText
    2658:2659:void setSuffixTextAppearance(int) -> setSuffixTextAppearance
    2639:2640:void setSuffixTextColor(android.content.res.ColorStateList) -> setSuffixTextColor
    2716:2738:void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int) -> setTextAppearanceCompatWithErrorFallback
    3933:3936:void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate) -> setTextInputAccessibilityDelegate
    1388:1398:void setTypeface(android.graphics.Typeface) -> setTypeface
    2940:2940:boolean shouldShowError() -> shouldShowError
    4037:4040:boolean shouldUpdateEndDummyDrawable() -> shouldUpdateEndDummyDrawable
    4031:4033:boolean shouldUpdateStartDummyDrawable() -> shouldUpdateStartDummyDrawable
    2454:2463:void showPlaceholderText() -> showPlaceholderText
    953:964:void updateBoxCollapsedPaddingTop() -> updateBoxCollapsedPaddingTop
    4072:4080:void updateBoxUnderlineBounds(android.graphics.Rect) -> updateBoxUnderlineBounds
    2319:2322:void updateCounter() -> updateCounter
    2325:2351:void updateCounter(android.text.Editable) -> updateCounter
    2359:2366:void updateCounterContentDescription(android.content.Context,android.widget.TextView,int,int,boolean) -> updateCounterContentDescription
    2702:2712:void updateCounterTextAppearanceAndColor() -> updateCounterTextAppearanceAndColor
    4320:4335:void updateCursorColor(boolean) -> updateCursorColor
    3954:4027:boolean updateDummyDrawables() -> updateDummyDrawables
    2908:2937:void updateEditTextBackground() -> updateEditTextBackground
    812:821:void updateEditTextBoxBackgroundIfNeeded() -> updateEditTextBoxBackgroundIfNeeded
    3166:3179:boolean updateEditTextHeightBasedOnIcon() -> updateEditTextHeightBasedOnIcon
    1570:1579:void updateInputLayoutMargins() -> updateInputLayoutMargins
    1591:1592:void updateLabelState(boolean) -> updateLabelState
    1595:1633:void updateLabelState(boolean,boolean) -> updateLabelState
    3183:3194:void updatePlaceholderMeasurementsBasedOnEditText() -> updatePlaceholderMeasurementsBasedOnEditText
    2441:2442:void updatePlaceholderText() -> updatePlaceholderText
    2445:2451:void updatePlaceholderText(android.text.Editable) -> updatePlaceholderText
    4300:4316:void updateStrokeErrorColor(boolean,boolean) -> updateStrokeErrorColor
    4227:4297:void updateTextInputBoxState() -> updateTextInputBoxState
com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticApiModelOutline0 -> com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.textfield.TextInputLayout$$InternalSyntheticApiModelOutline$1$210c7beff28088e63fa64bf9b17c0261d59c8af6f2ebf8dd5c9590290991e314$0.m(android.view.ViewStructure,android.view.autofill.AutofillId) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticApiModelOutline1 -> com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.textfield.TextInputLayout$$InternalSyntheticApiModelOutline$1$210c7beff28088e63fa64bf9b17c0261d59c8af6f2ebf8dd5c9590290991e314$1.m(android.view.View,android.view.ViewStructure,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticApiModelOutline2 -> com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.graphics.drawable.Drawable com.google.android.material.textfield.TextInputLayout$$InternalSyntheticApiModelOutline$1$22849781a358ecdf99b482e731626670766b7de8875852c491a4db41de870f96$0.m(android.widget.EditText) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticLambda3 -> com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.textfield.TextInputLayout$$InternalSyntheticLambda$1$c731f40b0043b1db8be68c13833421f1a22aba3e352b73c80e80778290593594$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    int com.google.android.material.textfield.TextInputLayout$$InternalSyntheticLambda$1$c731f40b0043b1db8be68c13833421f1a22aba3e352b73c80e80778290593594$0.countLength(android.text.Editable) -> countLength
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.TextInputLayout$1 -> com.google.android.material.textfield.TextInputLayout$1:
    1509:1509:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    1512:1519:void afterTextChanged(android.text.Editable) -> afterTextChanged
    1522:1522:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    1525:1525:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.google.android.material.textfield.TextInputLayout$2 -> com.google.android.material.textfield.TextInputLayout$2:
    3020:3020:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    3023:3024:void run() -> run
com.google.android.material.textfield.TextInputLayout$3 -> com.google.android.material.textfield.TextInputLayout$3:
    3154:3154:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    3157:3158:void run() -> run
com.google.android.material.textfield.TextInputLayout$4 -> com.google.android.material.textfield.TextInputLayout$4:
    4371:4371:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    4374:4375:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate -> com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate:
    4410:4412:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    4417:4475:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    4480:4482:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
com.google.android.material.textfield.TextInputLayout$SavedState -> com.google.android.material.textfield.TextInputLayout$SavedState:
    2974:2974:void <clinit>() -> <clinit>
    2948:2949:void <init>(android.os.Parcelable) -> <init>
    2952:2955:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2967:2968:java.lang.String toString() -> toString
    2959:2962:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.textfield.TextInputLayout$SavedState$1 -> com.google.android.material.textfield.TextInputLayout$SavedState$1:
    2975:2975:void <init>() -> <init>
    2975:2975:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2975:2975:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2979:2979:com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2985:2985:com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2975:2975:java.lang.Object[] newArray(int) -> newArray
    2991:2991:com.google.android.material.textfield.TextInputLayout$SavedState[] newArray(int) -> newArray
com.google.android.material.textview.MaterialTextView -> com.google.android.material.textview.MaterialTextView:
    83:84:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    88:90:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    130:142:void applyLineHeightFromViewAppearance(android.content.res.Resources$Theme,int) -> applyLineHeightFromViewAppearance
    145:145:boolean canApplyTextAppearanceLineHeight(android.content.Context) -> canApplyTextAppearanceLineHeight
    183:189:int findViewAppearanceResourceId(android.content.res.Resources$Theme,android.util.AttributeSet,int,int) -> findViewAppearanceResourceId
    115:127:void initialize(android.util.AttributeSet,int,int) -> initialize
    152:158:int readFirstAvailableDimension(android.content.Context,android.content.res.TypedArray,int[]) -> readFirstAvailableDimension
    106:111:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    167:178:boolean viewAttrsHasLineHeight(android.content.Context,android.content.res.Resources$Theme,android.util.AttributeSet,int,int) -> viewAttrsHasLineHeight
com.google.android.material.theme.MaterialComponentsViewInflater -> com.google.android.material.theme.MaterialComponentsViewInflater:
    39:39:void <init>() -> <init>
    68:68:androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createAutoCompleteTextView
    43:43:androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet) -> createButton
    49:49:androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet) -> createCheckBox
    55:55:androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet) -> createRadioButton
    61:61:androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet) -> createTextView
com.google.android.material.theme.overlay.MaterialThemeOverlay -> com.google.android.material.theme.overlay.MaterialThemeOverlay:
    48:51:void <clinit>() -> <clinit>
    94:99:int obtainAndroidThemeOverlayId(android.content.Context,android.util.AttributeSet) -> obtainAndroidThemeOverlayId
    112:118:int obtainMaterialThemeOverlayId(android.content.Context,android.util.AttributeSet,int,int) -> obtainMaterialThemeOverlayId
    66:84:android.content.Context wrap(android.content.Context,android.util.AttributeSet,int,int) -> wrap
com.google.android.material.timepicker.ChipTextInputComboView -> com.google.android.material.timepicker.ChipTextInputComboView:
    66:67:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    71:88:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:53:java.lang.String access$100(com.google.android.material.timepicker.ChipTextInputComboView,java.lang.CharSequence) -> access$100
    53:53:com.google.android.material.chip.Chip access$200(com.google.android.material.timepicker.ChipTextInputComboView) -> access$200
    134:134:java.lang.String formatText(java.lang.CharSequence) -> formatText
    100:100:boolean isChecked() -> isChecked
    187:189:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    105:111:void setChecked(boolean) -> setChecked
    139:140:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    144:145:void setTag(int,java.lang.Object) -> setTag
    115:116:void toggle() -> toggle
    91:96:void updateHintLocales() -> updateHintLocales
com.google.android.material.timepicker.ChipTextInputComboView$TextFormatter -> com.google.android.material.timepicker.ChipTextInputComboView$TextFormatter:
    170:170:void <init>(com.google.android.material.timepicker.ChipTextInputComboView) -> <init>
    170:170:void <init>(com.google.android.material.timepicker.ChipTextInputComboView,com.google.android.material.timepicker.ChipTextInputComboView$1) -> <init>
    176:182:void afterTextChanged(android.text.Editable) -> afterTextChanged
com.google.android.material.timepicker.ClockFaceView -> com.google.android.material.timepicker.ClockFaceView:
    100:101:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    75:202:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    68:68:com.google.android.material.timepicker.ClockHandView access$000(com.google.android.material.timepicker.ClockFaceView) -> access$000
    68:68:int access$100(com.google.android.material.timepicker.ClockFaceView) -> access$100
    68:68:android.util.SparseArray access$200(com.google.android.material.timepicker.ClockFaceView) -> access$200
    68:68:android.graphics.Rect access$300(com.google.android.material.timepicker.ClockFaceView) -> access$300
    293:309:void findIntersectingTextView() -> findIntersectingTextView
    336:347:android.graphics.RadialGradient getGradientForTextView(android.graphics.RectF,android.widget.TextView) -> getGradientForTextView
    313:331:android.widget.TextView getSelectedTextView(android.graphics.RectF) -> getSelectedTextView
    379:379:float max3(float,float,float) -> max3
    263:271:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    283:285:void onLayout(boolean,int,int,int,int) -> onLayout
    363:376:void onMeasure(int,int) -> onMeasure
    355:359:void onRotate(float,boolean) -> onRotate
    275:279:void setRadius(int) -> setRadius
    209:211:void setValues(java.lang.String[],int) -> setValues
    255:259:void updateLayoutParams() -> updateLayoutParams
    214:251:void updateTextViews(int) -> updateTextViews
com.google.android.material.timepicker.ClockFaceView$1 -> com.google.android.material.timepicker.ClockFaceView$1:
    139:139:void <init>(com.google.android.material.timepicker.ClockFaceView) -> <init>
    142:149:boolean onPreDraw() -> onPreDraw
com.google.android.material.timepicker.ClockFaceView$2 -> com.google.android.material.timepicker.ClockFaceView$2:
    156:156:void <init>(com.google.android.material.timepicker.ClockFaceView) -> <init>
    160:177:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    181:190:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
com.google.android.material.timepicker.ClockHandView -> com.google.android.material.timepicker.ClockHandView:
    void $r8$lambda$wCFWOEU6-eiQJxdycea1a-JE7mk(com.google.android.material.timepicker.ClockHandView,android.animation.ValueAnimator) -> $r8$lambda$wCFWOEU6-eiQJxdycea1a-JE7mk
      # {"id":"com.android.tools.r8.synthesized"}
    104:105:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    60:137:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    232:233:void addOnRotateListener(com.google.android.material.timepicker.ClockHandView$OnRotateListener) -> addOnRotateListener
    344:350:void adjustLevel(float,float) -> adjustLevel
    252:276:void drawSelector(android.graphics.Canvas) -> drawSelector
    280:280:android.graphics.RectF getCurrentSelectorBox() -> getCurrentSelectorBox
    369:377:int getDegreesFromXY(float,float) -> getDegreesFromXY
    241:241:float getHandRotation() -> getHandRotation
    400:400:int getLeveledCircleRadius(int) -> getLeveledCircleRadius
    285:285:int getSelectorRadius() -> getSelectorRadius
    183:198:android.util.Pair getValuesForAnimation(float) -> getValuesForAnimation
    354:365:boolean handleTouchInput(float,float,boolean,boolean,boolean) -> handleTouchInput
    168:170:void lambda$setHandRotation$0(android.animation.ValueAnimator) -> lambda$setHandRotation$0
    246:249:void onDraw(android.graphics.Canvas) -> onDraw
    141:146:void onLayout(boolean,int,int,int,int) -> onLayout
    300:340:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    293:295:void setCircleRadius(int) -> setCircleRadius
    149:150:void setHandRotation(float) -> setHandRotation
    153:180:void setHandRotation(float,boolean) -> setHandRotation
    203:225:void setHandRotationInternal(float,boolean) -> setHandRotationInternal
    391:396:void setMultiLevel(boolean) -> setMultiLevel
com.google.android.material.timepicker.ClockHandView$$ExternalSyntheticLambda0 -> com.google.android.material.timepicker.ClockHandView$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.timepicker.ClockHandView com.google.android.material.timepicker.ClockHandView$$InternalSyntheticLambda$1$d093ea0b239bae6cbf76d576282e0c438274ef62aab2c670570a8783bbe9a178$0.f$0 -> f$0
    void com.google.android.material.timepicker.ClockHandView$$InternalSyntheticLambda$1$d093ea0b239bae6cbf76d576282e0c438274ef62aab2c670570a8783bbe9a178$0.<init>(com.google.android.material.timepicker.ClockHandView) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.timepicker.ClockHandView$$InternalSyntheticLambda$1$d093ea0b239bae6cbf76d576282e0c438274ef62aab2c670570a8783bbe9a178$0.onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.timepicker.ClockHandView$1 -> com.google.android.material.timepicker.ClockHandView$1:
    172:172:void <init>(com.google.android.material.timepicker.ClockHandView) -> <init>
    175:176:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
com.google.android.material.timepicker.MaxInputValidator -> com.google.android.material.timepicker.MaxInputValidator:
    26:28:void <init>(int) -> <init>
    42:52:java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int) -> filter
com.google.android.material.timepicker.RadialViewGroup -> com.google.android.material.timepicker.RadialViewGroup:
    77:78:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    81:90:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    165:170:void addConstraints(java.util.List,androidx.constraintlayout.widget.ConstraintSet,int) -> addConstraints
    107:112:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    93:96:android.graphics.drawable.Drawable createBackground() -> createBackground
    184:184:int getLeveledRadius(int) -> getLeveledRadius
    179:179:int getRadius() -> getRadius
    132:134:void onFinishInflate() -> onFinishInflate
    116:119:void onViewRemoved(android.view.View) -> onViewRemoved
    102:103:void setBackgroundColor(int) -> setBackgroundColor
    173:175:void setRadius(int) -> setRadius
    188:188:boolean shouldSkipView(android.view.View) -> shouldSkipView
    137:161:void updateLayoutParams() -> updateLayoutParams
    123:128:void updateLayoutParamsAsync() -> updateLayoutParamsAsync
com.google.android.material.timepicker.RadialViewGroup$$ExternalSyntheticLambda0 -> com.google.android.material.timepicker.RadialViewGroup$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.timepicker.RadialViewGroup com.google.android.material.timepicker.RadialViewGroup$$InternalSyntheticLambda$1$7bbc437f301ed8da93e8173b46d2379836a9dc5506bd0cafbf404eb130a29a06$0.f$0 -> f$0
    void com.google.android.material.timepicker.RadialViewGroup$$InternalSyntheticLambda$1$7bbc437f301ed8da93e8173b46d2379836a9dc5506bd0cafbf404eb130a29a06$0.<init>(com.google.android.material.timepicker.RadialViewGroup) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.timepicker.RadialViewGroup$$InternalSyntheticLambda$1$7bbc437f301ed8da93e8173b46d2379836a9dc5506bd0cafbf404eb130a29a06$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.timepicker.TimeModel -> com.google.android.material.timepicker.TimeModel:
    167:167:void <clinit>() -> <clinit>
    55:56:void <init>() -> <init>
    59:60:void <init>(int) -> <init>
    62:70:void <init>(int,int,int,int) -> <init>
    73:74:void <init>(android.os.Parcel) -> <init>
    155:155:int describeContents() -> describeContents
    138:147:boolean equals(java.lang.Object) -> equals
    192:192:java.lang.String formatText(android.content.res.Resources,java.lang.CharSequence) -> formatText
    198:201:java.lang.String formatText(android.content.res.Resources,java.lang.CharSequence,java.lang.String) -> formatText
    84:84:int getPeriod(int) -> getPeriod
    132:133:int hashCode() -> hashCode
    160:164:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.timepicker.TimeModel$1 -> com.google.android.material.timepicker.TimeModel$1:
    167:167:void <init>() -> <init>
    167:167:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    170:170:com.google.android.material.timepicker.TimeModel createFromParcel(android.os.Parcel) -> createFromParcel
    167:167:java.lang.Object[] newArray(int) -> newArray
    175:175:com.google.android.material.timepicker.TimeModel[] newArray(int) -> newArray
com.google.android.material.timepicker.TimePickerView -> com.google.android.material.timepicker.TimePickerView:
    void $r8$lambda$qcr5SAw_DiQbOm3iFiOG_eXPQ9M(com.google.android.material.timepicker.TimePickerView,com.google.android.material.button.MaterialButtonToggleGroup,int,boolean) -> $r8$lambda$qcr5SAw_DiQbOm3iFiOG_eXPQ9M
      # {"id":"com.android.tools.r8.synthesized"}
    98:99:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    79:125:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    56:56:com.google.android.material.timepicker.TimePickerView$OnSelectionChange access$000(com.google.android.material.timepicker.TimePickerView) -> access$000
    56:56:com.google.android.material.timepicker.TimePickerView$OnDoubleTapListener access$100(com.google.android.material.timepicker.TimePickerView) -> access$100
    108:116:void lambda$new$0(com.google.android.material.button.MaterialButtonToggleGroup,int,boolean) -> lambda$new$0
    257:261:void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    169:177:void setUpDisplay() -> setUpDisplay
    129:158:void setupDoubleTap() -> setupDoubleTap
com.google.android.material.timepicker.TimePickerView$$ExternalSyntheticLambda0 -> com.google.android.material.timepicker.TimePickerView$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.timepicker.TimePickerView com.google.android.material.timepicker.TimePickerView$$InternalSyntheticLambda$1$5feadb3ca702c7e36ca9a0f418cbec5bee822000d4298df1eb25a795110daf22$0.f$0 -> f$0
    void com.google.android.material.timepicker.TimePickerView$$InternalSyntheticLambda$1$5feadb3ca702c7e36ca9a0f418cbec5bee822000d4298df1eb25a795110daf22$0.<init>(com.google.android.material.timepicker.TimePickerView) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.timepicker.TimePickerView$$InternalSyntheticLambda$1$5feadb3ca702c7e36ca9a0f418cbec5bee822000d4298df1eb25a795110daf22$0.onButtonChecked(com.google.android.material.button.MaterialButtonToggleGroup,int,boolean) -> onButtonChecked
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.timepicker.TimePickerView$1 -> com.google.android.material.timepicker.TimePickerView$1:
    80:80:void <init>(com.google.android.material.timepicker.TimePickerView) -> <init>
    83:86:void onClick(android.view.View) -> onClick
com.google.android.material.timepicker.TimePickerView$2 -> com.google.android.material.timepicker.TimePickerView$2:
    132:132:void <init>(com.google.android.material.timepicker.TimePickerView) -> <init>
    135:140:boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
com.google.android.material.timepicker.TimePickerView$3 -> com.google.android.material.timepicker.TimePickerView$3:
    145:145:void <init>(com.google.android.material.timepicker.TimePickerView,android.view.GestureDetector) -> <init>
    148:152:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.android.material.transformation.ExpandableBehavior -> com.google.android.material.transformation.ExpandableBehavior:
    65:67:void <init>() -> <init>
    65:71:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    43:43:int access$000(com.google.android.material.transformation.ExpandableBehavior) -> access$000
    150:155:boolean didStateChange(boolean) -> didStateChange
    139:146:com.google.android.material.expandable.ExpandableWidget findExpandableWidget(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> findExpandableWidget
    126:133:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    98:120:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
com.google.android.material.transformation.ExpandableBehavior$1 -> com.google.android.material.transformation.ExpandableBehavior$1:
    106:106:void <init>(com.google.android.material.transformation.ExpandableBehavior,android.view.View,int,com.google.android.material.expandable.ExpandableWidget) -> <init>
    109:114:boolean onPreDraw() -> onPreDraw
com.google.android.material.transformation.ExpandableTransformationBehavior -> com.google.android.material.transformation.ExpandableTransformationBehavior:
    46:46:void <init>() -> <init>
    49:50:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:42:android.animation.AnimatorSet access$002(com.google.android.material.transformation.ExpandableTransformationBehavior,android.animation.AnimatorSet) -> access$002
    75:97:boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean) -> onExpandedStateChange
com.google.android.material.transformation.ExpandableTransformationBehavior$1 -> com.google.android.material.transformation.ExpandableTransformationBehavior$1:
    83:83:void <init>(com.google.android.material.transformation.ExpandableTransformationBehavior) -> <init>
    86:87:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.transformation.FabTransformationBehavior -> com.google.android.material.transformation.FabTransformationBehavior:
    79:89:void <init>() -> <init>
    79:93:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    710:722:android.view.ViewGroup calculateChildContentContainer(android.view.View) -> calculateChildContentContainer
    668:686:void calculateChildVisibleBoundsAtEndOfExpansion(android.view.View,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,com.google.android.material.animation.MotionTiming,com.google.android.material.animation.MotionTiming,float,float,float,float,android.graphics.RectF) -> calculateChildVisibleBoundsAtEndOfExpansion
    626:628:void calculateDependencyWindowBounds(android.view.View,android.graphics.RectF) -> calculateDependencyWindowBounds
    542:556:android.util.Pair calculateMotionTiming(float,float,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec) -> calculateMotionTiming
    632:641:float calculateRevealCenterX(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateRevealCenterX
    646:655:float calculateRevealCenterY(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateRevealCenterY
    561:582:float calculateTranslationX(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateTranslationX
    587:608:float calculateTranslationY(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateTranslationY
    690:703:float calculateValueOfAnimationAtEndOfExpansion(com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,com.google.android.material.animation.MotionTiming,float,float) -> calculateValueOfAnimationAtEndOfExpansion
    612:623:void calculateWindowBounds(android.view.View,android.graphics.RectF) -> calculateWindowBounds
    502:532:void createChildrenFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createChildrenFadeAnimation
    462:492:void createColorAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createColorAnimation
    230:256:void createDependencyTranslationAnimation(android.view.View,android.view.View,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List) -> createDependencyTranslationAnimation
    207:222:void createElevationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createElevationAnimation
    377:452:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List) -> createExpansionAnimation
    315:365:void createIconFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createIconFadeAnimation
    774:785:void createPostFillRadialExpansion(android.view.View,long,long,long,int,int,float,java.util.List) -> createPostFillRadialExpansion
    751:762:void createPreFillRadialExpansion(android.view.View,long,int,int,float,java.util.List) -> createPreFillRadialExpansion
    267:305:void createTranslationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List,android.graphics.RectF) -> createTranslationAnimation
    735:739:int getBackgroundTint(android.view.View) -> getBackgroundTint
    99:109:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    115:120:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    129:193:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean) -> onCreateExpandedStateChangeAnimation
    727:730:android.view.ViewGroup toViewGroupOrNull(android.view.View) -> toViewGroupOrNull
com.google.android.material.transformation.FabTransformationBehavior$1 -> com.google.android.material.transformation.FabTransformationBehavior$1:
    169:169:void <init>(com.google.android.material.transformation.FabTransformationBehavior,boolean,android.view.View,android.view.View) -> <init>
    182:188:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    172:178:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationBehavior$2 -> com.google.android.material.transformation.FabTransformationBehavior$2:
    342:342:void <init>(com.google.android.material.transformation.FabTransformationBehavior,android.view.View) -> <init>
    345:346:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.transformation.FabTransformationBehavior$3 -> com.google.android.material.transformation.FabTransformationBehavior$3:
    353:353:void <init>(com.google.android.material.transformation.FabTransformationBehavior,com.google.android.material.circularreveal.CircularRevealWidget,android.graphics.drawable.Drawable) -> <init>
    362:363:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    357:358:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationBehavior$4 -> com.google.android.material.transformation.FabTransformationBehavior$4:
    405:405:void <init>(com.google.android.material.transformation.FabTransformationBehavior,com.google.android.material.circularreveal.CircularRevealWidget) -> <init>
    410:413:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec -> com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec:
    788:788:void <init>() -> <init>
com.google.android.material.transformation.FabTransformationScrimBehavior -> com.google.android.material.transformation.FabTransformationScrimBehavior:
    52:55:void <init>() -> <init>
    52:59:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    112:126:void createScrimAnimation(android.view.View,boolean,boolean,java.util.List,java.util.List) -> createScrimAnimation
    63:63:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    80:103:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean) -> onCreateExpandedStateChangeAnimation
    70:70:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
com.google.android.material.transformation.FabTransformationScrimBehavior$1 -> com.google.android.material.transformation.FabTransformationScrimBehavior$1:
    88:88:void <init>(com.google.android.material.transformation.FabTransformationScrimBehavior,boolean,android.view.View) -> <init>
    98:101:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    91:94:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationSheetBehavior -> com.google.android.material.transformation.FabTransformationSheetBehavior:
    53:53:void <init>() -> <init>
    56:57:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    63:72:com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec onCreateMotionSpec(android.content.Context,boolean) -> onCreateMotionSpec
    79:80:boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean) -> onExpandedStateChange
    84:127:void updateImportantForAccessibility(android.view.View,boolean) -> updateImportantForAccessibility
com.werb.eventbus.EventBus -> com.werb.eventbus.EventBus:
# {"id":"sourceFile","fileName":"EventBus.kt"}
    14:14:com.werb.eventbus.SubscriberMethodHunter access$getMethodHunter$p(com.werb.eventbus.EventBus) -> <clinit>
    14:14:void <clinit>():14 -> <clinit>
    14:14:com.werb.eventbus.SubscriberMethodHunter access$getMethodHunter$p(com.werb.eventbus.EventBus) -> <init>
    14:14:void <init>():14 -> <init>
    16:18:void <init>() -> <init>
    14:14:com.werb.eventbus.SubscriberMethodHunter access$getMethodHunter$p(com.werb.eventbus.EventBus) -> access$getMethodHunter$p
    35:36:void post(com.werb.eventbus.IEvent) -> post
    39:44:void post(com.werb.eventbus.IEvent,java.lang.String) -> post
    22:25:void register(java.lang.Object) -> register
    29:32:void unRegister(java.lang.Object) -> unRegister
com.werb.eventbus.EventBus$register$1 -> com.werb.eventbus.EventBus$register$1:
# {"id":"sourceFile","fileName":"EventBus.kt"}
    23:24:void run() -> run
com.werb.eventbus.EventBus$unRegister$1 -> com.werb.eventbus.EventBus$unRegister$1:
# {"id":"sourceFile","fileName":"EventBus.kt"}
    30:31:void run() -> run
com.werb.eventbus.EventDispatcher -> com.werb.eventbus.EventDispatcher:
# {"id":"sourceFile","fileName":"EventDispatcher.kt"}
    14:14:void <clinit>() -> <clinit>
    14:14:void <clinit>() -> <init>
    14:14:void <init>():14 -> <init>
    17:21:void <init>() -> <init>
    24:44:void dispatcherEvent(com.werb.eventbus.IEvent,java.util.concurrent.CopyOnWriteArrayList) -> dispatcherEvent
    35:38:com.werb.eventbus.handler.EventHandler getEventHandler(com.werb.eventbus.ThreadMode) -> getEventHandler
com.werb.eventbus.EventType -> com.werb.eventbus.EventType:
# {"id":"sourceFile","fileName":"EventType.kt"}
    8:8:void <init>(java.lang.Class,java.lang.String) -> <init>
    12:26:boolean equals(java.lang.Object) -> equals
    30:33:int hashCode() -> hashCode
com.werb.eventbus.IEvent -> com.werb.eventbus.IEvent:
# {"id":"sourceFile","fileName":"IEvent.kt"}
com.werb.eventbus.Subscriber -> com.werb.eventbus.Subscriber:
# {"id":"sourceFile","fileName":"Subscriber.kt"}
com.werb.eventbus.SubscriberMethodHunter -> com.werb.eventbus.SubscriberMethodHunter:
# {"id":"sourceFile","fileName":"SubscriberMethodHunter.kt"}
    13:13:void <init>(java.util.Map) -> <init>
    16:40:void findSubscribeMethods(java.lang.Object) -> findSubscribeMethods
    87:102:java.util.concurrent.CopyOnWriteArrayList getMatchEventType$eventbus_release(com.werb.eventbus.EventType) -> getMatchEventType$eventbus_release
    223:223:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.first(java.lang.Iterable,kotlin.jvm.functions.Function1) -> getMatchEventType$eventbus_release
    223:223:java.util.concurrent.CopyOnWriteArrayList getMatchEventType$eventbus_release(com.werb.eventbus.EventType):88 -> getMatchEventType$eventbus_release
    88:88:java.util.concurrent.CopyOnWriteArrayList getMatchEventType$eventbus_release(com.werb.eventbus.EventType) -> getMatchEventType$eventbus_release
    100:100:boolean isImplementIEvent(java.lang.Class) -> isImplementIEvent
    92:92:boolean isSameObject(java.lang.Object,java.lang.Object) -> isSameObject
    96:96:boolean isSystemClass(java.lang.String) -> isSystemClass
    59:83:void removeSubscribeMethods(java.lang.Object) -> removeSubscribeMethods
    43:56:void subscribe(com.werb.eventbus.EventType,com.werb.eventbus.Subscription) -> subscribe
com.werb.eventbus.Subscription -> com.werb.eventbus.Subscription:
# {"id":"sourceFile","fileName":"Subscription.kt"}
    11:11:void <init>(java.lang.ref.WeakReference,java.lang.reflect.Method,com.werb.eventbus.ThreadMode) -> <init>
    16:27:boolean equals(java.lang.Object) -> equals
    11:11:java.lang.ref.WeakReference getSubscriber() -> getSubscriber
    12:12:java.lang.reflect.Method getTargetMethod() -> getTargetMethod
    13:13:com.werb.eventbus.ThreadMode getThreadMode() -> getThreadMode
    31:35:int hashCode() -> hashCode
com.werb.eventbus.ThreadMode -> com.werb.eventbus.ThreadMode:
# {"id":"sourceFile","fileName":"ThreadMode.kt"}
    10:10:void <init>(java.lang.String,int) -> <init>
com.werb.eventbus.handler.AsyncEventHandler -> com.werb.eventbus.handler.AsyncEventHandler:
# {"id":"sourceFile","fileName":"AsyncEventHandler.kt"}
    15:17:void <init>() -> <init>
    21:32:void handleEvent(com.werb.eventbus.Subscription,com.werb.eventbus.IEvent) -> handleEvent
com.werb.eventbus.handler.AsyncEventHandler$handleEvent$1 -> com.werb.eventbus.handler.AsyncEventHandler$handleEvent$1:
# {"id":"sourceFile","fileName":"AsyncEventHandler.kt"}
    22:31:void run() -> run
com.werb.eventbus.handler.EventHandler -> com.werb.eventbus.handler.EventHandler:
# {"id":"sourceFile","fileName":"EventHandler.kt"}
com.werb.eventbus.handler.MainEventHandler -> com.werb.eventbus.handler.MainEventHandler:
# {"id":"sourceFile","fileName":"MainEventHandler.kt"}
    14:16:void <init>() -> <init>
    19:30:void handleEvent(com.werb.eventbus.Subscription,com.werb.eventbus.IEvent) -> handleEvent
com.werb.eventbus.handler.MainEventHandler$handleEvent$1 -> com.werb.eventbus.handler.MainEventHandler$handleEvent$1:
# {"id":"sourceFile","fileName":"MainEventHandler.kt"}
    20:29:void run() -> run
com.werb.eventbus.handler.PostEventHandler -> com.werb.eventbus.handler.PostEventHandler:
# {"id":"sourceFile","fileName":"PostEventHandler.kt"}
    13:13:void <init>() -> <init>
    16:25:void handleEvent(com.werb.eventbus.Subscription,com.werb.eventbus.IEvent) -> handleEvent
com.werb.library.MoreAdapter -> com.werb.library.MoreAdapter:
# {"id":"sourceFile","fileName":"MoreAdapter.kt"}
    24:33:void <init>() -> <init>
    246:259:void addAnimation(com.werb.library.MoreViewHolder) -> addAnimation
    78:80:com.werb.library.link.MoreLink attachTo(androidx.recyclerview.widget.RecyclerView) -> attachTo
    294:294:int attachViewTypeLayout(java.lang.Object) -> attachViewTypeLayout
    299:299:com.werb.library.action.MoreClickListener bindClickListener(com.werb.library.MoreViewHolder) -> bindClickListener
    297:297:java.lang.Class createViewHolder(int) -> createViewHolder
    168:168:java.lang.Object getData(int) -> getData
    220:220:int getItemCount() -> getItemCount
    223:224:int getItemViewType(int) -> getItemViewType
    26:26:void <init>() -> getList
    26:26:java.util.List getList():26 -> getList
    304:304:void injectValueInHolder(int,java.lang.Class,com.werb.library.MoreViewHolder) -> injectValueInHolder
    118:142:void loadData(java.lang.Object) -> loadData
    24:24:void <init>() -> onBindViewHolder
    24:24:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int):24 -> onBindViewHolder
    24:24:void <init>() -> onBindViewHolder
    24:24:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List):24 -> onBindViewHolder
    57:60:void onBindViewHolder(com.werb.library.MoreViewHolder,int) -> onBindViewHolder
    63:70:void onBindViewHolder(com.werb.library.MoreViewHolder,int,java.util.List) -> onBindViewHolder
    24:24:void <init>() -> onCreateViewHolder
    24:24:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int):24 -> onCreateViewHolder
    39:53:com.werb.library.MoreViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    24:24:void <init>() -> onViewAttachedToWindow
    24:24:void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder):24 -> onViewAttachedToWindow
    228:230:void onViewAttachedToWindow(com.werb.library.MoreViewHolder) -> onViewAttachedToWindow
    24:24:void <init>() -> onViewRecycled
    24:24:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder):24 -> onViewRecycled
    74:75:void onViewRecycled(com.werb.library.MoreViewHolder) -> onViewRecycled
    281:282:void register(com.werb.library.link.RegisterItem) -> register
    171:176:void removeAllData() -> removeAllData
com.werb.library.MoreAdapter$linkManager$2 -> com.werb.library.MoreAdapter$linkManager$2:
# {"id":"sourceFile","fileName":"MoreAdapter.kt"}
    24:24:java.lang.Object invoke() -> invoke
    27:27:com.werb.library.link.MoreLinkManager invoke() -> invoke
com.werb.library.MoreViewHolder -> com.werb.library.MoreViewHolder:
# {"id":"sourceFile","fileName":"MoreViewHolder.kt"}
    13:15:void <init>(android.view.View) -> <init>
    44:45:void addOnClickListener(android.view.View) -> addOnClickListener
    0:66:void bindData$default(com.werb.library.MoreViewHolder,java.lang.Object,java.util.List,int,java.lang.Object) -> bindData$default
    17:17:void setClickListener$library_release(com.werb.library.action.MoreClickListener) -> getClickListener$library_release
    17:17:com.werb.library.action.MoreClickListener getClickListener$library_release():17 -> getClickListener$library_release
    13:13:void <init>(android.view.View) -> getContainerView
    13:13:android.view.View getContainerView():13 -> getContainerView
    17:17:void setClickListener$library_release(com.werb.library.action.MoreClickListener) -> setClickListener$library_release
    69:69:void unBindData() -> unBindData
com.werb.library.MoreViewHolder$addOnClickListener$2 -> com.werb.library.MoreViewHolder$addOnClickListener$2:
# {"id":"sourceFile","fileName":"MoreViewHolder.kt"}
    44:44:void onClick(android.view.View) -> onClick
com.werb.library.action.MoreClickListener -> com.werb.library.action.MoreClickListener:
# {"id":"sourceFile","fileName":"MoreClickListener.kt"}
    9:9:void <init>() -> <init>
    11:11:void onItemClick(android.view.View,int) -> onItemClick
com.werb.library.annotation.MoreInject -> com.werb.library.annotation.MoreInject:
# {"id":"sourceFile","fileName":"MoreInject.kt"}
com.werb.library.exception.ModelNotRegisterException -> com.werb.library.exception.ModelNotRegisterException:
# {"id":"sourceFile","fileName":"ModelNotRegisterException.kt"}
    8:8:void <init>(java.lang.String) -> <init>
com.werb.library.exception.ViewHolderInitErrorException -> com.werb.library.exception.ViewHolderInitErrorException:
# {"id":"sourceFile","fileName":"ViewHolderInitErrorException.kt"}
    6:6:void <init>(java.lang.String,java.lang.String) -> <init>
com.werb.library.extension.MoreAnimation -> com.werb.library.extension.MoreAnimation:
# {"id":"sourceFile","fileName":"MoreAnimation.kt"}
com.werb.library.link.MoreLink -> com.werb.library.link.MoreLink:
# {"id":"sourceFile","fileName":"MoreLink.kt"}
com.werb.library.link.MoreLinkManager -> com.werb.library.link.MoreLinkManager:
# {"id":"sourceFile","fileName":"MoreLinkManager.kt"}
    18:37:void <init>() -> <init>
    90:108:int attachViewTypeLayout(java.lang.Object) -> attachViewTypeLayout
    132:147:com.werb.library.action.MoreClickListener bindClickListener(com.werb.library.MoreViewHolder) -> bindClickListener
    113:128:java.lang.Class createViewHolder(int) -> createViewHolder
    159:197:void injectValueInHolder(int,java.lang.Class,com.werb.library.MoreViewHolder) -> injectValueInHolder
    180:182:java.lang.Class reflectClass(java.lang.Class) -> reflectClass
    45:64:void register(com.werb.library.link.RegisterItem) -> register
com.werb.library.link.MultiLink -> com.werb.library.link.MultiLink:
# {"id":"sourceFile","fileName":"MultiLink.kt"}
    7:7:void <init>() -> <init>
com.werb.library.link.RegisterItem -> com.werb.library.link.RegisterItem:
# {"id":"sourceFile","fileName":"RegisterItem.kt"}
    8:8:void <init>(int,java.lang.Class,com.werb.library.action.MoreClickListener,java.util.Map) -> <init>
    10:11:void <init>(int,java.lang.Class,com.werb.library.action.MoreClickListener,java.util.Map,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    9:9:java.lang.Class getClazzViewHolder() -> getClazzViewHolder
    10:10:com.werb.library.action.MoreClickListener getClickListener() -> getClickListener
    11:11:java.util.Map getInjectValue() -> getInjectValue
    8:8:int getLayoutId() -> getLayoutId
com.werb.pickphotosample.MainActivity -> com.werb.pickphotosample.MainActivity:
# {"id":"sourceFile","fileName":"MainActivity.kt"}
    void $r8$lambda$jvejzS9wEbePESXzxijVKM26Ieg(com.werb.pickphotosample.MainActivity,android.view.View) -> $r8$lambda$jvejzS9wEbePESXzxijVKM26Ieg
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$sIvAcWqUZETLc7JcxcZ_PqbOYZk(com.werb.pickphotosample.MainActivity,android.view.View) -> $r8$lambda$sIvAcWqUZETLc7JcxcZ_PqbOYZk
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$uRkduhb0bkmUW7tkSdUBDSERVGI(com.werb.pickphotosample.MainActivity,android.view.View) -> $r8$lambda$uRkduhb0bkmUW7tkSdUBDSERVGI
      # {"id":"com.android.tools.r8.synthesized"}
    23:29:void <init>() -> <init>
    103:114:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    32:100:void onCreate(android.os.Bundle) -> onCreate
    48:60:void onCreate$lambda$0(com.werb.pickphotosample.MainActivity,android.view.View) -> onCreate$lambda$0
    65:77:void onCreate$lambda$1(com.werb.pickphotosample.MainActivity,android.view.View) -> onCreate$lambda$1
    82:92:void onCreate$lambda$2(com.werb.pickphotosample.MainActivity,android.view.View) -> onCreate$lambda$2
    117:129:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
com.werb.pickphotosample.MainActivity$$ExternalSyntheticLambda0 -> com.werb.pickphotosample.MainActivity$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.werb.pickphotosample.MainActivity com.werb.pickphotosample.MainActivity$$InternalSyntheticLambda$1$cdbfdea6efdb15e0e8e722ac367c5698c2edd52bc2d06db6f86907bd06f0ebd6$0.f$0 -> f$0
    void com.werb.pickphotosample.MainActivity$$InternalSyntheticLambda$1$cdbfdea6efdb15e0e8e722ac367c5698c2edd52bc2d06db6f86907bd06f0ebd6$0.<init>(com.werb.pickphotosample.MainActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.werb.pickphotosample.MainActivity$$InternalSyntheticLambda$1$cdbfdea6efdb15e0e8e722ac367c5698c2edd52bc2d06db6f86907bd06f0ebd6$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.werb.pickphotosample.MainActivity$$ExternalSyntheticLambda1 -> com.werb.pickphotosample.MainActivity$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.werb.pickphotosample.MainActivity com.werb.pickphotosample.MainActivity$$InternalSyntheticLambda$1$cdbfdea6efdb15e0e8e722ac367c5698c2edd52bc2d06db6f86907bd06f0ebd6$1.f$0 -> f$0
    void com.werb.pickphotosample.MainActivity$$InternalSyntheticLambda$1$cdbfdea6efdb15e0e8e722ac367c5698c2edd52bc2d06db6f86907bd06f0ebd6$1.<init>(com.werb.pickphotosample.MainActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.werb.pickphotosample.MainActivity$$InternalSyntheticLambda$1$cdbfdea6efdb15e0e8e722ac367c5698c2edd52bc2d06db6f86907bd06f0ebd6$1.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.werb.pickphotosample.MainActivity$$ExternalSyntheticLambda2 -> com.werb.pickphotosample.MainActivity$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.werb.pickphotosample.MainActivity com.werb.pickphotosample.MainActivity$$InternalSyntheticLambda$1$cdbfdea6efdb15e0e8e722ac367c5698c2edd52bc2d06db6f86907bd06f0ebd6$2.f$0 -> f$0
    void com.werb.pickphotosample.MainActivity$$InternalSyntheticLambda$1$cdbfdea6efdb15e0e8e722ac367c5698c2edd52bc2d06db6f86907bd06f0ebd6$2.<init>(com.werb.pickphotosample.MainActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.werb.pickphotosample.MainActivity$$InternalSyntheticLambda$1$cdbfdea6efdb15e0e8e722ac367c5698c2edd52bc2d06db6f86907bd06f0ebd6$2.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.werb.pickphotosample.SampleAdapter -> com.werb.pickphotosample.SampleAdapter:
# {"id":"sourceFile","fileName":"SampleAdapter.kt"}
    21:21:void <init>(android.content.Context,java.util.ArrayList) -> <init>
    21:21:android.content.Context access$getContext$p(com.werb.pickphotosample.SampleAdapter) -> access$getContext$p
    36:39:int getItemCount() -> getItemCount
    28:33:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    24:24:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    44:46:void updateData(java.util.ArrayList) -> updateData
com.werb.pickphotosample.SampleAdapter$GridImageViewHolder -> com.werb.pickphotosample.SampleAdapter$GridImageViewHolder:
# {"id":"sourceFile","fileName":"SampleAdapter.kt"}
    49:62:void <init>(com.werb.pickphotosample.SampleAdapter,android.view.View) -> <init>
    65:66:void bindItem$app_debug(java.lang.String) -> bindItem$app_debug
com.werb.pickphotoview.BasePickActivity -> com.werb.pickphotoview.BasePickActivity:
# {"id":"sourceFile","fileName":"BasePickActivity.kt"}
    13:13:void <init>() -> <init>
    16:18:void onCreate(android.os.Bundle) -> onCreate
    21:25:void onDestroy() -> onDestroy
    29:42:void theme() -> theme
com.werb.pickphotoview.GlobalData -> com.werb.pickphotoview.GlobalData:
# {"id":"sourceFile","fileName":"GlobalData.kt"}
    7:7:void <init>() -> <init>
    9:9:com.werb.pickphotoview.model.PickModel getModel() -> getModel
    9:9:void setModel(com.werb.pickphotoview.model.PickModel) -> setModel
com.werb.pickphotoview.PickPhotoActivity -> com.werb.pickphotoview.PickPhotoActivity:
# {"id":"sourceFile","fileName":"PickPhotoActivity.kt"}
    void $r8$lambda$28ljjyjurJVzIWTgbjN3y-8tXU4(com.werb.pickphotoview.PickPhotoActivity,android.view.View) -> $r8$lambda$28ljjyjurJVzIWTgbjN3y-8tXU4
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$74-SiwL47rF3gkTfJ2QbhA8zgf8(com.werb.pickphotoview.PickPhotoActivity,android.view.View) -> $r8$lambda$74-SiwL47rF3gkTfJ2QbhA8zgf8
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$G_httzjUQkTlxKH0fZuUj8TrckU(com.werb.pickphotoview.PickPhotoActivity,android.view.View) -> $r8$lambda$G_httzjUQkTlxKH0fZuUj8TrckU
      # {"id":"com.android.tools.r8.synthesized"}
    32:37:void <init>() -> <init>
    110:116:void add() -> add
    178:183:void finish() -> finish
    47:70:void initToolbar() -> initToolbar
    56:56:void initToolbar$lambda$3$lambda$0(com.werb.pickphotoview.PickPhotoActivity,android.view.View) -> initToolbar$lambda$3$lambda$0
    65:65:void initToolbar$lambda$3$lambda$1(com.werb.pickphotoview.PickPhotoActivity,android.view.View) -> initToolbar$lambda$3$lambda$1
    66:66:void initToolbar$lambda$3$lambda$2(com.werb.pickphotoview.PickPhotoActivity,android.view.View) -> initToolbar$lambda$3$lambda$2
    143:167:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    40:44:void onCreate(android.os.Bundle) -> onCreate
    136:140:void pick(com.werb.pickphotoview.event.PickFinishEvent) -> pick
    73:93:void showFragment() -> showFragment
    119:127:void sure() -> sure
    96:107:void switch() -> switch
    131:132:void textChange(com.werb.pickphotoview.event.PickImageEvent) -> textChange
com.werb.pickphotoview.PickPhotoActivity$$ExternalSyntheticLambda0 -> com.werb.pickphotoview.PickPhotoActivity$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.werb.pickphotoview.PickPhotoActivity com.werb.pickphotoview.PickPhotoActivity$$InternalSyntheticLambda$1$c579f03e9ac11e5f0907055cddb23a5ba3e4fc2c06ed37c9d9bc04287d901e1e$0.f$0 -> f$0
    void com.werb.pickphotoview.PickPhotoActivity$$InternalSyntheticLambda$1$c579f03e9ac11e5f0907055cddb23a5ba3e4fc2c06ed37c9d9bc04287d901e1e$0.<init>(com.werb.pickphotoview.PickPhotoActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.werb.pickphotoview.PickPhotoActivity$$InternalSyntheticLambda$1$c579f03e9ac11e5f0907055cddb23a5ba3e4fc2c06ed37c9d9bc04287d901e1e$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.werb.pickphotoview.PickPhotoActivity$$ExternalSyntheticLambda1 -> com.werb.pickphotoview.PickPhotoActivity$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.werb.pickphotoview.PickPhotoActivity com.werb.pickphotoview.PickPhotoActivity$$InternalSyntheticLambda$1$c579f03e9ac11e5f0907055cddb23a5ba3e4fc2c06ed37c9d9bc04287d901e1e$1.f$0 -> f$0
    void com.werb.pickphotoview.PickPhotoActivity$$InternalSyntheticLambda$1$c579f03e9ac11e5f0907055cddb23a5ba3e4fc2c06ed37c9d9bc04287d901e1e$1.<init>(com.werb.pickphotoview.PickPhotoActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.werb.pickphotoview.PickPhotoActivity$$InternalSyntheticLambda$1$c579f03e9ac11e5f0907055cddb23a5ba3e4fc2c06ed37c9d9bc04287d901e1e$1.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.werb.pickphotoview.PickPhotoActivity$$ExternalSyntheticLambda2 -> com.werb.pickphotoview.PickPhotoActivity$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.werb.pickphotoview.PickPhotoActivity com.werb.pickphotoview.PickPhotoActivity$$InternalSyntheticLambda$1$c579f03e9ac11e5f0907055cddb23a5ba3e4fc2c06ed37c9d9bc04287d901e1e$2.f$0 -> f$0
    void com.werb.pickphotoview.PickPhotoActivity$$InternalSyntheticLambda$1$c579f03e9ac11e5f0907055cddb23a5ba3e4fc2c06ed37c9d9bc04287d901e1e$2.<init>(com.werb.pickphotoview.PickPhotoActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.werb.pickphotoview.PickPhotoActivity$$InternalSyntheticLambda$1$c579f03e9ac11e5f0907055cddb23a5ba3e4fc2c06ed37c9d9bc04287d901e1e$2.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.werb.pickphotoview.PickPhotoActivity$Companion -> com.werb.pickphotoview.PickPhotoActivity$Companion:
# {"id":"sourceFile","fileName":"PickPhotoActivity.kt"}
    169:169:void <init>() -> <init>
    171:174:void startActivity(android.app.Activity,int) -> startActivity
com.werb.pickphotoview.PickPhotoPreviewActivity -> com.werb.pickphotoview.PickPhotoPreviewActivity:
# {"id":"sourceFile","fileName":"PickPhotoPreviewActivity.kt"}
    void $r8$lambda$W0s_WWCiKE_bLWgWMGssfFeUlDo(com.werb.pickphotoview.PickPhotoPreviewActivity,android.view.View) -> $r8$lambda$W0s_WWCiKE_bLWgWMGssfFeUlDo
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$iyNBNW0Iw0MQ8ddNicruTfJkphI(com.werb.pickphotoview.PickPhotoPreviewActivity,android.view.View) -> $r8$lambda$iyNBNW0Iw0MQ8ddNicruTfJkphI
      # {"id":"com.android.tools.r8.synthesized"}
    30:36:void <init>() -> <init>
    29:29:java.util.List access$allImage(com.werb.pickphotoview.PickPhotoPreviewActivity) -> access$allImage
    29:29:void access$full(com.werb.pickphotoview.PickPhotoPreviewActivity) -> access$full
    29:29:java.util.List access$getAllImages(com.werb.pickphotoview.PickPhotoPreviewActivity) -> access$getAllImages
    29:29:java.util.List access$getImageViews(com.werb.pickphotoview.PickPhotoPreviewActivity) -> access$getImageViews
    29:29:java.util.List access$imageViews(com.werb.pickphotoview.PickPhotoPreviewActivity) -> access$imageViews
    102:105:void add() -> add
    108:109:java.util.List allImage() -> allImage
    189:191:void finish() -> finish
    194:198:void finishForResult() -> finishForResult
    113:127:void full() -> full
    35:35:java.util.List getAllImages() -> getAllImages
    36:36:java.util.List getImageViews() -> getImageViews
    130:134:void hideOrShowToolbar() -> hideOrShowToolbar
    95:99:java.util.List imageViews() -> imageViews
    55:93:void initToolbar() -> initToolbar
    66:66:void initToolbar$lambda$3$lambda$0(com.werb.pickphotoview.PickPhotoPreviewActivity,android.view.View) -> initToolbar$lambda$3$lambda$0
    67:67:void initToolbar$lambda$3$lambda$1(com.werb.pickphotoview.PickPhotoPreviewActivity,android.view.View) -> initToolbar$lambda$3$lambda$1
    40:47:void onCreate(android.os.Bundle) -> onCreate
    50:52:void onDestroy() -> onDestroy
    138:147:void select(com.werb.pickphotoview.event.PickPreviewEvent) -> select
com.werb.pickphotoview.PickPhotoPreviewActivity$$ExternalSyntheticLambda0 -> com.werb.pickphotoview.PickPhotoPreviewActivity$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.werb.pickphotoview.PickPhotoPreviewActivity com.werb.pickphotoview.PickPhotoPreviewActivity$$InternalSyntheticLambda$1$9c86274947f531af354c844129080d6adae3768e5a5b790777208ae63a27ef02$0.f$0 -> f$0
    void com.werb.pickphotoview.PickPhotoPreviewActivity$$InternalSyntheticLambda$1$9c86274947f531af354c844129080d6adae3768e5a5b790777208ae63a27ef02$0.<init>(com.werb.pickphotoview.PickPhotoPreviewActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.werb.pickphotoview.PickPhotoPreviewActivity$$InternalSyntheticLambda$1$9c86274947f531af354c844129080d6adae3768e5a5b790777208ae63a27ef02$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.werb.pickphotoview.PickPhotoPreviewActivity$$ExternalSyntheticLambda1 -> com.werb.pickphotoview.PickPhotoPreviewActivity$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.werb.pickphotoview.PickPhotoPreviewActivity com.werb.pickphotoview.PickPhotoPreviewActivity$$InternalSyntheticLambda$1$9c86274947f531af354c844129080d6adae3768e5a5b790777208ae63a27ef02$1.f$0 -> f$0
    void com.werb.pickphotoview.PickPhotoPreviewActivity$$InternalSyntheticLambda$1$9c86274947f531af354c844129080d6adae3768e5a5b790777208ae63a27ef02$1.<init>(com.werb.pickphotoview.PickPhotoPreviewActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.werb.pickphotoview.PickPhotoPreviewActivity$$InternalSyntheticLambda$1$9c86274947f531af354c844129080d6adae3768e5a5b790777208ae63a27ef02$1.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.werb.pickphotoview.PickPhotoPreviewActivity$Companion -> com.werb.pickphotoview.PickPhotoPreviewActivity$Companion:
# {"id":"sourceFile","fileName":"PickPhotoPreviewActivity.kt"}
    178:178:void <init>() -> <init>
    180:185:void startActivity(android.app.Activity,int,java.lang.String,java.lang.String) -> startActivity
com.werb.pickphotoview.PickPhotoPreviewActivity$ListPageAdapter -> com.werb.pickphotoview.PickPhotoPreviewActivity$ListPageAdapter:
# {"id":"sourceFile","fileName":"PickPhotoPreviewActivity.kt"}
    150:150:void <init>(com.werb.pickphotoview.PickPhotoPreviewActivity) -> <init>
    171:175:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    153:153:int getCount() -> getCount
    161:167:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    157:157:boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
com.werb.pickphotoview.PickPhotoPreviewActivity$ListPageAdapter$instantiateItem$1 -> com.werb.pickphotoview.PickPhotoPreviewActivity$ListPageAdapter$instantiateItem$1:
# {"id":"sourceFile","fileName":"PickPhotoPreviewActivity.kt"}
    165:165:java.lang.Object invoke() -> invoke
    165:165:void invoke() -> invoke
com.werb.pickphotoview.PickPhotoPreviewActivity$allImages$2 -> com.werb.pickphotoview.PickPhotoPreviewActivity$allImages$2:
# {"id":"sourceFile","fileName":"PickPhotoPreviewActivity.kt"}
    35:35:java.lang.Object invoke() -> invoke
    35:35:java.util.List invoke() -> invoke
com.werb.pickphotoview.PickPhotoPreviewActivity$imageViews$2 -> com.werb.pickphotoview.PickPhotoPreviewActivity$imageViews$2:
# {"id":"sourceFile","fileName":"PickPhotoPreviewActivity.kt"}
    36:36:java.lang.Object invoke() -> invoke
    36:36:java.util.List invoke() -> invoke
com.werb.pickphotoview.PickPhotoPreviewActivity$initToolbar$1$3$1 -> com.werb.pickphotoview.PickPhotoPreviewActivity$initToolbar$1$3$1:
# {"id":"sourceFile","fileName":"PickPhotoPreviewActivity.kt"}
    76:76:void <init>(com.werb.pickphotoview.PickPhotoPreviewActivity,int) -> <init>
    88:88:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    79:79:void onPageScrolled(int,float,int) -> onPageScrolled
    82:84:void onPageSelected(int) -> onPageSelected
com.werb.pickphotoview.PickPhotoView -> com.werb.pickphotoview.PickPhotoView:
# {"id":"sourceFile","fileName":"PickPhotoView.kt"}
    12:12:void <init>(com.werb.pickphotoview.PickPhotoView$Builder) -> <init>
    12:12:void access$start(com.werb.pickphotoview.PickPhotoView) -> access$start
    15:16:void start() -> start
com.werb.pickphotoview.PickPhotoView$Builder -> com.werb.pickphotoview.PickPhotoView$Builder:
# {"id":"sourceFile","fileName":"PickPhotoView.kt"}
    18:20:void <init>(android.app.Activity) -> <init>
    89:90:com.werb.pickphotoview.PickPhotoView create() -> create
    18:18:android.app.Activity getActivity() -> getActivity
    33:34:com.werb.pickphotoview.PickPhotoView$Builder setAllPhotoSize(int) -> setAllPhotoSize
    49:50:com.werb.pickphotoview.PickPhotoView$Builder setClickSelectable(boolean) -> setClickSelectable
    28:29:com.werb.pickphotoview.PickPhotoView$Builder setHasPhotoSize(int) -> setHasPhotoSize
    74:75:com.werb.pickphotoview.PickPhotoView$Builder setLightStatusBar(boolean) -> setLightStatusBar
    23:24:com.werb.pickphotoview.PickPhotoView$Builder setPickPhotoSize(int) -> setPickPhotoSize
    69:70:com.werb.pickphotoview.PickPhotoView$Builder setSelectIconColor(int) -> setSelectIconColor
    43:44:com.werb.pickphotoview.PickPhotoView$Builder setShowCamera(boolean) -> setShowCamera
    79:80:com.werb.pickphotoview.PickPhotoView$Builder setShowGif(boolean) -> setShowGif
    38:39:com.werb.pickphotoview.PickPhotoView$Builder setSpanCount(int) -> setSpanCount
    59:60:com.werb.pickphotoview.PickPhotoView$Builder setStatusBarColor(int) -> setStatusBarColor
    54:55:com.werb.pickphotoview.PickPhotoView$Builder setToolbarColor(int) -> setToolbarColor
    64:65:com.werb.pickphotoview.PickPhotoView$Builder setToolbarTextColor(int) -> setToolbarTextColor
    94:95:void start() -> start
com.werb.pickphotoview.adapter.CameraViewHolder -> com.werb.pickphotoview.adapter.CameraViewHolder:
# {"id":"sourceFile","fileName":"CameraViewHolder.kt"}
    void $r8$lambda$EuB71j1E-H986QC5sfJlsW9gl94(com.werb.pickphotoview.adapter.CameraViewHolder,android.view.View) -> $r8$lambda$EuB71j1E-H986QC5sfJlsW9gl94
      # {"id":"com.android.tools.r8.synthesized"}
    15:28:void <init>(android.view.View) -> <init>
    15:15:void bindData(java.lang.Object,java.util.List) -> bindData
    31:46:void bindData(java.lang.String,java.util.List) -> bindData
    32:45:void bindData$lambda$1(com.werb.pickphotoview.adapter.CameraViewHolder,android.view.View) -> bindData$lambda$1
com.werb.pickphotoview.adapter.CameraViewHolder$$ExternalSyntheticLambda0 -> com.werb.pickphotoview.adapter.CameraViewHolder$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.werb.pickphotoview.adapter.CameraViewHolder com.werb.pickphotoview.adapter.CameraViewHolder$$InternalSyntheticLambda$1$e360bf8f892b88e44d0563b38c9955ddbb7c36b16ed15a719c7dbca34c10479e$0.f$0 -> f$0
    void com.werb.pickphotoview.adapter.CameraViewHolder$$InternalSyntheticLambda$1$e360bf8f892b88e44d0563b38c9955ddbb7c36b16ed15a719c7dbca34c10479e$0.<init>(com.werb.pickphotoview.adapter.CameraViewHolder) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.werb.pickphotoview.adapter.CameraViewHolder$$InternalSyntheticLambda$1$e360bf8f892b88e44d0563b38c9955ddbb7c36b16ed15a719c7dbca34c10479e$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.werb.pickphotoview.adapter.DirImageViewHolder -> com.werb.pickphotoview.adapter.DirImageViewHolder:
# {"id":"sourceFile","fileName":"DirImageViewHolder.kt"}
    void $r8$lambda$NBaV-7xjtRk2tI2b9pWFW69N510(java.lang.String,android.view.View) -> $r8$lambda$NBaV-7xjtRk2tI2b9pWFW69N510
      # {"id":"com.android.tools.r8.synthesized"}
    16:19:void <init>(android.view.View) -> <init>
    16:16:void bindData(java.lang.Object,java.util.List) -> bindData
    22:35:void bindData(java.lang.String,java.util.List) -> bindData
    32:33:void bindData$lambda$0(java.lang.String,android.view.View) -> bindData$lambda$0
com.werb.pickphotoview.adapter.DirImageViewHolder$$ExternalSyntheticLambda0 -> com.werb.pickphotoview.adapter.DirImageViewHolder$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.String com.werb.pickphotoview.adapter.DirImageViewHolder$$InternalSyntheticLambda$1$b83c24642c28af9e9d40611a777ff9038710a43ed989f83189b318c0b8bacf4f$0.f$0 -> f$0
    void com.werb.pickphotoview.adapter.DirImageViewHolder$$InternalSyntheticLambda$1$b83c24642c28af9e9d40611a777ff9038710a43ed989f83189b318c0b8bacf4f$0.<init>(java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.werb.pickphotoview.adapter.DirImageViewHolder$$InternalSyntheticLambda$1$b83c24642c28af9e9d40611a777ff9038710a43ed989f83189b318c0b8bacf4f$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.werb.pickphotoview.adapter.GridImageViewHolder -> com.werb.pickphotoview.adapter.GridImageViewHolder:
# {"id":"sourceFile","fileName":"GridImageViewHolder.kt"}
    void $r8$lambda$YWG5lODAXdDoTqmVGdMyg_1GUAk(com.werb.pickphotoview.adapter.GridImageViewHolder,com.werb.pickphotoview.model.GridImage,android.view.View) -> $r8$lambda$YWG5lODAXdDoTqmVGdMyg_1GUAk
      # {"id":"com.android.tools.r8.synthesized"}
    26:26:void bindData(java.lang.Object,java.util.List) -> <init>
    26:26:void <init>(android.view.View):26 -> <init>
    28:43:void <init>(android.view.View) -> <init>
    26:26:void bindData(java.lang.Object,java.util.List) -> <init>
    26:26:void <init>(android.view.View):26 -> <init>
    26:26:void bindData(java.lang.Object,java.util.List) -> bindData
    46:55:void bindData(com.werb.pickphotoview.model.GridImage,java.util.List) -> bindData
    1855:1855:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> bindData
    1855:1855:void bindData(com.werb.pickphotoview.model.GridImage,java.util.List):55 -> bindData
    56:59:void bindData(com.werb.pickphotoview.model.GridImage,java.util.List) -> bindData
    1855:1856:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> bindData
    1855:1856:void bindData(com.werb.pickphotoview.model.GridImage,java.util.List):55 -> bindData
    61:84:void bindData(com.werb.pickphotoview.model.GridImage,java.util.List) -> bindData
    80:81:void bindData$lambda$4$lambda$3(com.werb.pickphotoview.adapter.GridImageViewHolder,com.werb.pickphotoview.model.GridImage,android.view.View) -> bindData$lambda$4$lambda$3
    87:103:void select(com.werb.pickphotoview.model.GridImage) -> select
com.werb.pickphotoview.adapter.GridImageViewHolder$$ExternalSyntheticLambda0 -> com.werb.pickphotoview.adapter.GridImageViewHolder$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.werb.pickphotoview.model.GridImage com.werb.pickphotoview.adapter.GridImageViewHolder$$InternalSyntheticLambda$1$f4efbea8cd8a741d522b5169cd107c43843608d6973303041f7042c8979c69d7$0.f$1 -> f$1
    com.werb.pickphotoview.adapter.GridImageViewHolder com.werb.pickphotoview.adapter.GridImageViewHolder$$InternalSyntheticLambda$1$f4efbea8cd8a741d522b5169cd107c43843608d6973303041f7042c8979c69d7$0.f$0 -> f$0
    void com.werb.pickphotoview.adapter.GridImageViewHolder$$InternalSyntheticLambda$1$f4efbea8cd8a741d522b5169cd107c43843608d6973303041f7042c8979c69d7$0.<init>(com.werb.pickphotoview.adapter.GridImageViewHolder,com.werb.pickphotoview.model.GridImage) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.werb.pickphotoview.adapter.GridImageViewHolder$$InternalSyntheticLambda$1$f4efbea8cd8a741d522b5169cd107c43843608d6973303041f7042c8979c69d7$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.werb.pickphotoview.adapter.SpaceItemDecoration -> com.werb.pickphotoview.adapter.SpaceItemDecoration:
    17:20:void <init>(int,int) -> <init>
    24:33:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
com.werb.pickphotoview.event.PickFinishEvent -> com.werb.pickphotoview.event.PickFinishEvent:
# {"id":"sourceFile","fileName":"PickFinishEvent.kt"}
    10:10:void <init>(java.lang.String) -> <init>
    10:10:void <init>(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    10:10:java.lang.String getDirName() -> getDirName
com.werb.pickphotoview.event.PickImageEvent -> com.werb.pickphotoview.event.PickImageEvent:
# {"id":"sourceFile","fileName":"PickImageEvent.kt"}
    7:7:void <init>() -> <init>
com.werb.pickphotoview.event.PickPreviewEvent -> com.werb.pickphotoview.event.PickPreviewEvent:
# {"id":"sourceFile","fileName":"PickPreviewEvent.kt"}
    7:7:void <init>(java.lang.String) -> <init>
    7:7:java.lang.String getPath() -> getPath
com.werb.pickphotoview.extensions.ContextExtensionsKt -> com.werb.pickphotoview.extensions.ContextExtensionsKt:
# {"id":"sourceFile","fileName":"ContextExtensions.kt"}
    15:15:int alphaColor(android.content.Context,int) -> alphaColor
    11:11:int color(android.content.Context,int) -> color
    9:9:android.graphics.drawable.Drawable drawable(android.content.Context,int) -> drawable
    13:13:java.lang.String string(android.content.Context,int) -> string
com.werb.pickphotoview.model.DirImage -> com.werb.pickphotoview.model.DirImage:
# {"id":"sourceFile","fileName":"DirImage.kt"}
    10:10:void <init>(java.util.ArrayList) -> <init>
    10:10:java.util.ArrayList getDirName() -> getDirName
com.werb.pickphotoview.model.GridImage -> com.werb.pickphotoview.model.GridImage:
# {"id":"sourceFile","fileName":"GridImage.kt"}
    5:5:void <init>(java.lang.String,boolean,java.lang.String) -> <init>
    5:5:java.lang.String getDir() -> getDir
    5:5:java.lang.String getPath() -> getPath
    5:5:boolean getSelect() -> getSelect
    5:5:void setSelect(boolean) -> setSelect
com.werb.pickphotoview.model.GroupImage -> com.werb.pickphotoview.model.GroupImage:
# {"id":"sourceFile","fileName":"GroupImage.kt"}
    11:11:void <init>() -> <init>
    13:13:java.util.HashMap getMGroupMap() -> getMGroupMap
    13:13:void setMGroupMap(java.util.HashMap) -> setMGroupMap
com.werb.pickphotoview.model.PickModel -> com.werb.pickphotoview.model.PickModel:
# {"id":"sourceFile","fileName":"PickModel.kt"}
    8:22:void <init>() -> <init>
    12:12:int getAllPhotoSize() -> getAllPhotoSize
    11:11:int getHasPhotoSize() -> getHasPhotoSize
    20:20:boolean getLightStatusBar() -> getLightStatusBar
    10:10:int getPickPhotoSize() -> getPickPhotoSize
    19:19:int getSelectIconColor() -> getSelectIconColor
    13:13:int getSpanCount() -> getSpanCount
    17:17:int getStatusBarColor() -> getStatusBarColor
    16:16:int getToolbarColor() -> getToolbarColor
    18:18:int getToolbarTextColor() -> getToolbarTextColor
    15:15:boolean isClickSelectable() -> isClickSelectable
    14:14:boolean isShowCamera() -> isShowCamera
    21:21:boolean isShowGif() -> isShowGif
    12:12:void setAllPhotoSize(int) -> setAllPhotoSize
    15:15:void setClickSelectable(boolean) -> setClickSelectable
    11:11:void setHasPhotoSize(int) -> setHasPhotoSize
    20:20:void setLightStatusBar(boolean) -> setLightStatusBar
    10:10:void setPickPhotoSize(int) -> setPickPhotoSize
    19:19:void setSelectIconColor(int) -> setSelectIconColor
    14:14:void setShowCamera(boolean) -> setShowCamera
    21:21:void setShowGif(boolean) -> setShowGif
    13:13:void setSpanCount(int) -> setSpanCount
    17:17:void setStatusBarColor(int) -> setStatusBarColor
    16:16:void setToolbarColor(int) -> setToolbarColor
    18:18:void setToolbarTextColor(int) -> setToolbarTextColor
com.werb.pickphotoview.provider.PickProvider -> com.werb.pickphotoview.provider.PickProvider:
    10:10:void <init>() -> <init>
com.werb.pickphotoview.ui.GridFragment -> com.werb.pickphotoview.ui.GridFragment:
# {"id":"sourceFile","fileName":"GridFragment.kt"}
    41:41:void <init>() -> <init>
    44:44:com.bumptech.glide.RequestManager getManager() -> <init>
    44:44:void <init>():44 -> <init>
    41:184:void <init>() -> <init>
    40:40:com.bumptech.glide.RequestManager access$getManager(com.werb.pickphotoview.ui.GridFragment) -> access$add
    40:40:void access$add(com.werb.pickphotoview.ui.GridFragment):40 -> access$add
    40:40:com.bumptech.glide.RequestManager access$getManager(com.werb.pickphotoview.ui.GridFragment) -> access$addImage
    40:40:void access$addImage(com.werb.pickphotoview.ui.GridFragment,com.werb.pickphotoview.model.GridImage,int):40 -> access$addImage
    40:40:com.bumptech.glide.RequestManager access$getManager(com.werb.pickphotoview.ui.GridFragment) -> access$getAdapter$p
    40:40:com.werb.library.MoreAdapter access$getAdapter$p(com.werb.pickphotoview.ui.GridFragment):40 -> access$getAdapter$p
    40:40:com.bumptech.glide.RequestManager access$getManager(com.werb.pickphotoview.ui.GridFragment) -> access$getManager
    40:40:com.bumptech.glide.RequestManager access$getManager(com.werb.pickphotoview.ui.GridFragment) -> access$getSelectImages$p
    40:40:java.util.List access$getSelectImages$p(com.werb.pickphotoview.ui.GridFragment):40 -> access$getSelectImages$p
    40:40:com.bumptech.glide.RequestManager access$getManager(com.werb.pickphotoview.ui.GridFragment) -> access$removeImage
    40:40:void access$removeImage(com.werb.pickphotoview.ui.GridFragment,com.werb.pickphotoview.model.GridImage,int):40 -> access$removeImage
    135:141:void add() -> add
    120:124:void addImage(com.werb.pickphotoview.model.GridImage,int) -> addImage
    63:66:void getData() -> getData
    androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras() -> getDefaultViewModelCreationExtras
      # {"id":"com.android.tools.r8.synthesized"}
    44:44:com.bumptech.glide.RequestManager getManager() -> getManager
    146:159:void images(com.werb.pickphotoview.event.PickFinishEvent) -> images
    1855:1855:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> images
    1855:1855:void images(com.werb.pickphotoview.event.PickFinishEvent):159 -> images
    160:161:void images(com.werb.pickphotoview.event.PickFinishEvent) -> images
    1855:1856:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> images
    1855:1856:void images(com.werb.pickphotoview.event.PickFinishEvent):159 -> images
    163:163:void images(com.werb.pickphotoview.event.PickFinishEvent) -> images
    69:80:void initView() -> initView
    48:48:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    58:60:void onDestroyView() -> onDestroyView
    52:55:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    128:132:void removeImage(com.werb.pickphotoview.model.GridImage,int) -> removeImage
    172:172:void select(com.werb.pickphotoview.event.PickPreviewEvent) -> select
    1855:1855:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> select
    1855:1855:void select(com.werb.pickphotoview.event.PickPreviewEvent):172 -> select
    173:179:void select(com.werb.pickphotoview.event.PickPreviewEvent) -> select
    1855:1856:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> select
    1855:1856:void select(com.werb.pickphotoview.event.PickPreviewEvent):172 -> select
    180:181:void select(com.werb.pickphotoview.event.PickPreviewEvent) -> select
    167:168:void switch(com.werb.pickphotoview.event.PickFinishEvent) -> switch
com.werb.pickphotoview.ui.GridFragment$manager$2 -> com.werb.pickphotoview.ui.GridFragment$manager$2:
# {"id":"sourceFile","fileName":"GridFragment.kt"}
    44:44:com.bumptech.glide.RequestManager invoke() -> invoke
    44:44:java.lang.Object invoke() -> invoke
com.werb.pickphotoview.ui.GridFragment$scrollListener$1 -> com.werb.pickphotoview.ui.GridFragment$scrollListener$1:
# {"id":"sourceFile","fileName":"GridFragment.kt"}
    184:184:void <init>(com.werb.pickphotoview.ui.GridFragment) -> <init>
    195:198:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    186:192:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
com.werb.pickphotoview.ui.GridFragment$selectListener$1 -> com.werb.pickphotoview.ui.GridFragment$selectListener$1:
# {"id":"sourceFile","fileName":"GridFragment.kt"}
    83:83:void <init>(com.werb.pickphotoview.ui.GridFragment) -> <init>
    86:115:void onItemClick(android.view.View,int) -> onItemClick
com.werb.pickphotoview.ui.ListFragment -> com.werb.pickphotoview.ui.ListFragment:
# {"id":"sourceFile","fileName":"ListFragment.kt"}
    25:25:void <init>() -> <init>
    androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras() -> getDefaultViewModelCreationExtras
      # {"id":"com.android.tools.r8.synthesized"}
    56:61:void images(com.werb.pickphotoview.event.PickFinishEvent) -> images
    44:52:void initView() -> initView
    30:30:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    39:41:void onDestroyView() -> onDestroyView
    34:36:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
com.werb.pickphotoview.util.GlideHelper -> com.werb.pickphotoview.util.GlideHelper:
# {"id":"sourceFile","fileName":"GlideHelper.kt"}
    11:11:void <init>() -> <init>
    15:21:com.bumptech.glide.request.RequestOptions imageLoadOption() -> imageLoadOption
com.werb.pickphotoview.util.PickConfig -> com.werb.pickphotoview.util.PickConfig:
# {"id":"sourceFile","fileName":"PickConfig.kt"}
    13:49:void <clinit>() -> <clinit>
    10:10:void <init>() -> <init>
    27:27:java.lang.String getALL_PHOTOS() -> getALL_PHOTOS
    35:35:int getCAMERA_PHOTO_DATA() -> getCAMERA_PHOTO_DATA
    25:25:java.lang.String getINTENT_IMG_LIST_SELECT() -> getINTENT_IMG_LIST_SELECT
    31:31:int getITEM_SPACE() -> getITEM_SPACE
    45:45:int getPICK_BLACK_COLOR() -> getPICK_BLACK_COLOR
    48:48:java.lang.String getPICK_GIRD() -> getPICK_GIRD
    49:49:java.lang.String getPICK_LIST() -> getPICK_LIST
    33:33:int getPICK_PHOTO_DATA() -> getPICK_PHOTO_DATA
    46:46:int getPICK_WHITE_COLOR() -> getPICK_WHITE_COLOR
    37:37:int getPREVIEW_PHOTO_DATA() -> getPREVIEW_PHOTO_DATA
    43:43:int getSCROLL_THRESHOLD() -> getSCROLL_THRESHOLD
    13:13:java.lang.String getTAG() -> getTAG
com.werb.pickphotoview.util.PickPhotoHelper -> com.werb.pickphotoview.util.PickPhotoHelper:
# {"id":"sourceFile","fileName":"PickPhotoHelper.kt"}
    void $r8$lambda$vGmjyjpOEa7vZ_avdBlQJSkuDvo(boolean,android.content.ContentResolver,com.werb.pickphotoview.util.PickPhotoHelper) -> $r8$lambda$vGmjyjpOEa7vZ_avdBlQJSkuDvo
      # {"id":"com.android.tools.r8.synthesized"}
    21:23:void <clinit>() -> <clinit>
    19:19:void <init>() -> <init>
    41:46:void clear() -> clear
    26:26:com.werb.pickphotoview.model.DirImage getDirImage() -> getDirImage
    24:24:com.werb.pickphotoview.model.GroupImage getGroupImage() -> getGroupImage
    21:21:java.util.List getSelectImages() -> getSelectImages
    49:49:java.lang.Thread imageThread(boolean,android.content.ContentResolver) -> imageThread
    50:110:void imageThread$lambda$0(boolean,android.content.ContentResolver,com.werb.pickphotoview.util.PickPhotoHelper) -> imageThread$lambda$0
    30:33:void start(boolean,android.content.ContentResolver) -> start
    36:38:void stop() -> stop
com.werb.pickphotoview.util.PickPhotoHelper$$ExternalSyntheticLambda0 -> com.werb.pickphotoview.util.PickPhotoHelper$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.ContentResolver com.werb.pickphotoview.util.PickPhotoHelper$$InternalSyntheticLambda$1$0455da46265989837b7aad74a659a050a6088d01ce80fce8f61b74f0304d1362$0.f$1 -> f$1
    boolean com.werb.pickphotoview.util.PickPhotoHelper$$InternalSyntheticLambda$1$0455da46265989837b7aad74a659a050a6088d01ce80fce8f61b74f0304d1362$0.f$0 -> f$0
    com.werb.pickphotoview.util.PickPhotoHelper com.werb.pickphotoview.util.PickPhotoHelper$$InternalSyntheticLambda$1$0455da46265989837b7aad74a659a050a6088d01ce80fce8f61b74f0304d1362$0.f$2 -> f$2
    void com.werb.pickphotoview.util.PickPhotoHelper$$InternalSyntheticLambda$1$0455da46265989837b7aad74a659a050a6088d01ce80fce8f61b74f0304d1362$0.<init>(boolean,android.content.ContentResolver,com.werb.pickphotoview.util.PickPhotoHelper) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.werb.pickphotoview.util.PickPhotoHelper$$InternalSyntheticLambda$1$0455da46265989837b7aad74a659a050a6088d01ce80fce8f61b74f0304d1362$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.werb.pickphotoview.util.PickPhotoHelper$selectImages$2 -> com.werb.pickphotoview.util.PickPhotoHelper$selectImages$2:
# {"id":"sourceFile","fileName":"PickPhotoHelper.kt"}
    21:21:java.lang.Object invoke() -> invoke
    21:21:java.util.List invoke() -> invoke
com.werb.pickphotoview.util.PickUtils -> com.werb.pickphotoview.util.PickUtils:
    34:34:void <clinit>() -> <clinit>
    48:50:void <init>(android.content.Context) -> <init>
    148:156:java.io.File createDir(java.lang.String) -> createDir
    77:78:int dp2px(float) -> dp2px
    174:203:java.lang.String getFilePath(android.content.Context) -> getFilePath
    38:45:com.werb.pickphotoview.util.PickUtils getInstance(android.content.Context) -> getInstance
    160:164:java.io.File getPhotoFile(android.content.Context) -> getPhotoFile
    168:170:java.lang.String getPhotoFileName() -> getPhotoFileName
    144:144:java.lang.String getSavePhotoDir(android.content.Context) -> getSavePhotoDir
    130:140:android.net.Uri getUri(java.io.File) -> getUri
    53:61:int getWidthPixels() -> getWidthPixels
com.werb.pickphotoview.widget.PreviewImage -> com.werb.pickphotoview.widget.PreviewImage:
# {"id":"sourceFile","fileName":"PreviewImage.kt"}
    void $r8$lambda$R_tn6kcAIpZE1Vmh-v8-RZUKd9o(kotlin.jvm.functions.Function0,android.view.View) -> $r8$lambda$R_tn6kcAIpZE1Vmh-v8-RZUKd9o
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$dh6wnrE9kFDJtBWcI-WrdLO5V0g(com.werb.pickphotoview.widget.PreviewImage,java.lang.String,android.view.View) -> $r8$lambda$dh6wnrE9kFDJtBWcI-WrdLO5V0g
      # {"id":"com.android.tools.r8.synthesized"}
    27:35:void <init>(android.content.Context) -> <init>
    79:82:void addImage(java.lang.String) -> addImage
    74:75:void clear() -> clear
    38:40:void initView() -> initView
    86:89:void removeImage(java.lang.String) -> removeImage
    92:109:void select(java.lang.String) -> select
    43:71:void setImage(java.lang.String,kotlin.jvm.functions.Function0) -> setImage
    44:44:void setImage$lambda$0(kotlin.jvm.functions.Function0,android.view.View) -> setImage$lambda$0
    47:66:void setImage$lambda$2(com.werb.pickphotoview.widget.PreviewImage,java.lang.String,android.view.View) -> setImage$lambda$2
com.werb.pickphotoview.widget.PreviewImage$$ExternalSyntheticLambda0 -> com.werb.pickphotoview.widget.PreviewImage$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    kotlin.jvm.functions.Function0 com.werb.pickphotoview.widget.PreviewImage$$InternalSyntheticLambda$2$2c53ac2a1d88cb6db08dcc104e1fb555f70666cae6d011eefc500cf6827ffaa0$0.f$0 -> f$0
    void com.werb.pickphotoview.widget.PreviewImage$$InternalSyntheticLambda$2$2c53ac2a1d88cb6db08dcc104e1fb555f70666cae6d011eefc500cf6827ffaa0$0.<init>(kotlin.jvm.functions.Function0) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.werb.pickphotoview.widget.PreviewImage$$InternalSyntheticLambda$2$2c53ac2a1d88cb6db08dcc104e1fb555f70666cae6d011eefc500cf6827ffaa0$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.werb.pickphotoview.widget.PreviewImage$$ExternalSyntheticLambda1 -> com.werb.pickphotoview.widget.PreviewImage$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.werb.pickphotoview.widget.PreviewImage com.werb.pickphotoview.widget.PreviewImage$$InternalSyntheticLambda$2$2c53ac2a1d88cb6db08dcc104e1fb555f70666cae6d011eefc500cf6827ffaa0$1.f$0 -> f$0
    java.lang.String com.werb.pickphotoview.widget.PreviewImage$$InternalSyntheticLambda$2$2c53ac2a1d88cb6db08dcc104e1fb555f70666cae6d011eefc500cf6827ffaa0$1.f$1 -> f$1
    void com.werb.pickphotoview.widget.PreviewImage$$InternalSyntheticLambda$2$2c53ac2a1d88cb6db08dcc104e1fb555f70666cae6d011eefc500cf6827ffaa0$1.<init>(com.werb.pickphotoview.widget.PreviewImage,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.werb.pickphotoview.widget.PreviewImage$$InternalSyntheticLambda$2$2c53ac2a1d88cb6db08dcc104e1fb555f70666cae6d011eefc500cf6827ffaa0$1.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.Lazy -> kotlin.Lazy:
# {"id":"sourceFile","fileName":"Lazy.kt"}
kotlin.LazyKt -> kotlin.LazyKt:
    kotlin.Lazy lazy(kotlin.jvm.functions.Function0) -> lazy
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.LazyKt__LazyJVMKt -> kotlin.LazyKt__LazyJVMKt:
# {"id":"sourceFile","fileName":"LazyJVM.kt"}
    21:21:kotlin.Lazy lazy(kotlin.jvm.functions.Function0) -> lazy
kotlin.LazyKt__LazyKt -> kotlin.LazyKt__LazyKt:
# {"id":"sourceFile","fileName":"Lazy.kt"}
kotlin.NoWhenBranchMatchedException -> kotlin.NoWhenBranchMatchedException:
# {"id":"sourceFile","fileName":"NoWhenBranchMatchedException.kt"}
    9:9:void <init>() -> <init>
kotlin.Pair -> kotlin.Pair:
# {"id":"sourceFile","fileName":"Tuples.kt"}
    26:28:void <init>(java.lang.Object,java.lang.Object) -> <init>
    27:27:java.lang.Object getFirst() -> getFirst
    28:28:java.lang.Object getSecond() -> getSecond
    34:34:java.lang.String toString() -> toString
kotlin.SynchronizedLazyImpl -> kotlin.SynchronizedLazyImpl:
# {"id":"sourceFile","fileName":"LazyJVM.kt"}
    55:59:void <init>(kotlin.jvm.functions.Function0,java.lang.Object) -> <init>
    55:87:void <init>(kotlin.jvm.functions.Function0,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    63:77:java.lang.Object getValue() -> getValue
    82:82:boolean isInitialized() -> isInitialized
    84:84:java.lang.String toString() -> toString
kotlin.TuplesKt -> kotlin.TuplesKt:
# {"id":"sourceFile","fileName":"Tuples.kt"}
    43:43:kotlin.Pair to(java.lang.Object,java.lang.Object) -> to
kotlin.TypeCastException -> kotlin.TypeCastException:
# {"id":"sourceFile","fileName":"TypeCastException.kt"}
    11:11:void <init>(java.lang.String) -> <init>
kotlin.UNINITIALIZED_VALUE -> kotlin.UNINITIALIZED_VALUE:
# {"id":"sourceFile","fileName":"Lazy.kt"}
    71:71:void <init>() -> <init>
kotlin.UninitializedPropertyAccessException -> kotlin.UninitializedPropertyAccessException:
# {"id":"sourceFile","fileName":"UninitializedPropertyAccessException.kt"}
    9:9:void <init>() -> <init>
    11:11:void <init>(java.lang.String) -> <init>
kotlin.Unit -> kotlin.Unit:
# {"id":"sourceFile","fileName":"Unit.kt"}
    22:22:void <init>() -> <init>
    23:23:java.lang.String toString() -> toString
kotlin.collections.ArrayAsCollection -> kotlin.collections.ArrayAsCollection:
# {"id":"sourceFile","fileName":"Collections.kt"}
    57:57:int size() -> <init>
    57:57:void <init>(java.lang.Object[],boolean):57 -> <init>
    60:60:boolean contains(java.lang.Object) -> contains
    61:61:boolean containsAll(java.util.Collection) -> containsAll
    1726:1727:boolean kotlin.collections.CollectionsKt___CollectionsKt.all(java.lang.Iterable,kotlin.jvm.functions.Function1) -> containsAll
    1726:1727:boolean containsAll(java.util.Collection):61 -> containsAll
    61:61:boolean containsAll(java.util.Collection) -> containsAll
    1727:1728:boolean kotlin.collections.CollectionsKt___CollectionsKt.all(java.lang.Iterable,kotlin.jvm.functions.Function1) -> containsAll
    1727:1728:boolean containsAll(java.util.Collection):61 -> containsAll
    61:61:boolean containsAll(java.util.Collection) -> containsAll
    58:58:int getSize() -> getSize
    59:59:boolean isEmpty() -> isEmpty
    62:62:java.util.Iterator iterator() -> iterator
    57:57:int size() -> size
    64:64:java.lang.Object[] toArray() -> toArray
kotlin.collections.ArraysKt -> kotlin.collections.ArraysKt:
    java.util.List filterNotNull(java.lang.Object[]) -> filterNotNull
      # {"id":"com.android.tools.r8.synthesized"}
    char single(char[]) -> single
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List toList(java.lang.Object[]) -> toList
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.collections.ArraysKt__ArraysJVMKt -> kotlin.collections.ArraysKt__ArraysJVMKt:
# {"id":"sourceFile","fileName":"ArraysJVM.kt"}
kotlin.collections.ArraysKt__ArraysKt -> kotlin.collections.ArraysKt__ArraysKt:
# {"id":"sourceFile","fileName":"Arrays.kt"}
kotlin.collections.ArraysKt___ArraysJvmKt -> kotlin.collections.ArraysKt___ArraysJvmKt:
# {"id":"sourceFile","fileName":"_ArraysJvm.kt"}
    133:133:java.util.List asList(java.lang.Object[]) -> asList
kotlin.collections.ArraysKt___ArraysKt -> kotlin.collections.ArraysKt___ArraysKt:
# {"id":"sourceFile","fileName":"_Arrays.kt"}
    519:519:boolean contains(java.lang.Object[],java.lang.Object) -> contains
    4198:4198:java.util.List filterNotNull(java.lang.Object[]) -> filterNotNull
    4207:4208:java.util.Collection filterNotNullTo(java.lang.Object[],java.util.Collection) -> filterNotNullTo
    1507:1520:int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    2897:2900:char single(char[]) -> single
    9945:9948:java.util.List toList(java.lang.Object[]) -> toList
    10044:10044:java.util.List toMutableList(java.lang.Object[]) -> toMutableList
kotlin.collections.ArraysUtilJVM -> kotlin.collections.ArraysUtilJVM:
    13:13:java.util.List asList(java.lang.Object[]) -> asList
kotlin.collections.CollectionsKt -> kotlin.collections.CollectionsKt:
    java.util.ArrayList arrayListOf(java.lang.Object[]) -> arrayListOf
      # {"id":"com.android.tools.r8.synthesized"}
    int collectionSizeOrDefault(java.lang.Iterable,int) -> collectionSizeOrDefault
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List emptyList() -> emptyList
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List listOf(java.lang.Object) -> listOf
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List listOf(java.lang.Object[]) -> listOf
      # {"id":"com.android.tools.r8.synthesized"}
    void throwIndexOverflow() -> throwIndexOverflow
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List zip(java.lang.Iterable,java.lang.Iterable) -> zip
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.collections.CollectionsKt__CollectionsJVMKt -> kotlin.collections.CollectionsKt__CollectionsJVMKt:
# {"id":"sourceFile","fileName":"CollectionsJVM.kt"}
    88:92:java.lang.Object[] copyToArrayOfAny(java.lang.Object[],boolean) -> copyToArrayOfAny
    20:20:java.util.List listOf(java.lang.Object) -> listOf
kotlin.collections.CollectionsKt__CollectionsKt -> kotlin.collections.CollectionsKt__CollectionsKt:
# {"id":"sourceFile","fileName":"Collections.kt"}
    114:114:java.util.ArrayList arrayListOf(java.lang.Object[]) -> arrayListOf
    55:55:java.util.Collection asCollection(java.lang.Object[]) -> asCollection
    71:71:java.util.List emptyList() -> emptyList
    77:77:java.util.List listOf(java.lang.Object[]) -> listOf
    465:465:void throwIndexOverflow() -> throwIndexOverflow
kotlin.collections.CollectionsKt__IterablesKt -> kotlin.collections.CollectionsKt__IterablesKt:
# {"id":"sourceFile","fileName":"Iterables.kt"}
    39:39:int collectionSizeOrDefault(java.lang.Iterable,int) -> collectionSizeOrDefault
kotlin.collections.CollectionsKt__IteratorsJVMKt -> kotlin.collections.CollectionsKt__IteratorsJVMKt:
# {"id":"sourceFile","fileName":"IteratorsJVM.kt"}
kotlin.collections.CollectionsKt__IteratorsKt -> kotlin.collections.CollectionsKt__IteratorsKt:
# {"id":"sourceFile","fileName":"Iterators.kt"}
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt -> kotlin.collections.CollectionsKt__MutableCollectionsJVMKt:
# {"id":"sourceFile","fileName":"MutableCollectionsJVM.kt"}
kotlin.collections.CollectionsKt__MutableCollectionsKt -> kotlin.collections.CollectionsKt__MutableCollectionsKt:
# {"id":"sourceFile","fileName":"MutableCollections.kt"}
kotlin.collections.CollectionsKt__ReversedViewsKt -> kotlin.collections.CollectionsKt__ReversedViewsKt:
# {"id":"sourceFile","fileName":"ReversedViews.kt"}
kotlin.collections.CollectionsKt___CollectionsJvmKt -> kotlin.collections.CollectionsKt___CollectionsJvmKt:
# {"id":"sourceFile","fileName":"_CollectionsJvm.kt"}
kotlin.collections.CollectionsKt___CollectionsKt -> kotlin.collections.CollectionsKt___CollectionsKt:
# {"id":"sourceFile","fileName":"_Collections.kt"}
    3422:3422:java.util.List zip(java.lang.Iterable,java.lang.Iterable) -> zip
    3433:3437:java.util.List zip(java.lang.Iterable,java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip
    3433:3437:java.util.List zip(java.lang.Iterable,java.lang.Iterable):3422 -> zip
    3422:3422:java.util.List zip(java.lang.Iterable,java.lang.Iterable) -> zip
    3437:3439:java.util.List zip(java.lang.Iterable,java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip
    3437:3439:java.util.List zip(java.lang.Iterable,java.lang.Iterable):3422 -> zip
    3422:3422:java.util.List zip(java.lang.Iterable,java.lang.Iterable) -> zip
kotlin.collections.EmptyIterator -> kotlin.collections.EmptyIterator:
# {"id":"sourceFile","fileName":"Collections.kt"}
    15:15:void <init>() -> <init>
    16:16:boolean hasNext() -> hasNext
    17:17:boolean hasPrevious() -> hasPrevious
    15:15:java.lang.Object next() -> next
    20:20:java.lang.Void next() -> next
    18:18:int nextIndex() -> nextIndex
    15:15:java.lang.Object previous() -> previous
    21:21:java.lang.Void previous() -> previous
    19:19:int previousIndex() -> previousIndex
kotlin.collections.EmptyList -> kotlin.collections.EmptyList:
# {"id":"sourceFile","fileName":"Collections.kt"}
    24:24:void <init>() -> <init>
    24:24:boolean contains(java.lang.Object) -> contains
    33:33:boolean contains(java.lang.Void) -> contains
    34:34:boolean containsAll(java.util.Collection) -> containsAll
    27:27:boolean equals(java.lang.Object) -> equals
    24:24:java.lang.Object get(int) -> get
    36:36:java.lang.Void get(int) -> get
    31:31:int getSize() -> getSize
    28:28:int hashCode() -> hashCode
    24:24:int indexOf(java.lang.Object) -> indexOf
    37:37:int indexOf(java.lang.Void) -> indexOf
    32:32:boolean isEmpty() -> isEmpty
    40:40:java.util.Iterator iterator() -> iterator
    24:24:int lastIndexOf(java.lang.Object) -> lastIndexOf
    38:38:int lastIndexOf(java.lang.Void) -> lastIndexOf
    41:41:java.util.ListIterator listIterator() -> listIterator
    43:44:java.util.ListIterator listIterator(int) -> listIterator
    24:24:int size() -> size
    48:49:java.util.List subList(int,int) -> subList
    29:29:java.lang.String toString() -> toString
kotlin.collections.EmptyMap -> kotlin.collections.EmptyMap:
# {"id":"sourceFile","fileName":"Maps.kt"}
    14:14:void <init>() -> <init>
    24:24:boolean containsKey(java.lang.Object) -> containsKey
    14:14:boolean containsValue(java.lang.Object) -> containsValue
    25:25:boolean containsValue(java.lang.Void) -> containsValue
    14:14:java.util.Set entrySet() -> entrySet
    17:17:boolean equals(java.lang.Object) -> equals
    14:14:java.lang.Object get(java.lang.Object) -> get
    26:26:java.lang.Void get(java.lang.Object) -> get
    27:27:java.util.Set getEntries() -> getEntries
    28:28:java.util.Set getKeys() -> getKeys
    21:21:int getSize() -> getSize
    29:29:java.util.Collection getValues() -> getValues
    18:18:int hashCode() -> hashCode
    22:22:boolean isEmpty() -> isEmpty
    14:14:java.util.Set keySet() -> keySet
    14:14:java.lang.Object remove(java.lang.Object) -> remove
    14:14:int size() -> size
    19:19:java.lang.String toString() -> toString
    14:14:java.util.Collection values() -> values
kotlin.collections.EmptySet -> kotlin.collections.EmptySet:
# {"id":"sourceFile","fileName":"Sets.kt"}
    14:14:void <init>() -> <init>
    14:14:boolean contains(java.lang.Object) -> contains
    23:23:boolean contains(java.lang.Void) -> contains
    24:24:boolean containsAll(java.util.Collection) -> containsAll
    17:17:boolean equals(java.lang.Object) -> equals
    21:21:int getSize() -> getSize
    18:18:int hashCode() -> hashCode
    22:22:boolean isEmpty() -> isEmpty
    26:26:java.util.Iterator iterator() -> iterator
    14:14:int size() -> size
    19:19:java.lang.String toString() -> toString
kotlin.collections.IntIterator -> kotlin.collections.IntIterator:
# {"id":"sourceFile","fileName":"PrimitiveIterators.kt"}
    35:35:void <init>() -> <init>
    35:35:java.lang.Object next() -> next
kotlin.collections.MapsKt -> kotlin.collections.MapsKt:
    java.util.Map emptyMap() -> emptyMap
      # {"id":"com.android.tools.r8.synthesized"}
    int mapCapacity(int) -> mapCapacity
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.Map toMap(java.lang.Iterable) -> toMap
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.Map toMap(java.util.Map) -> toMap
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.collections.MapsKt__MapWithDefaultKt -> kotlin.collections.MapsKt__MapWithDefaultKt:
# {"id":"sourceFile","fileName":"MapWithDefault.kt"}
kotlin.collections.MapsKt__MapsJVMKt -> kotlin.collections.MapsKt__MapsJVMKt:
# {"id":"sourceFile","fileName":"MapsJVM.kt"}
    148:156:int mapCapacity(int) -> mapCapacity
    27:27:java.util.Map mapOf(kotlin.Pair) -> mapOf
    140:159:java.util.Map toSingletonMap(java.util.Map) -> toSingletonMap
kotlin.collections.MapsKt__MapsKt -> kotlin.collections.MapsKt__MapsKt:
# {"id":"sourceFile","fileName":"Maps.kt"}
    40:40:java.util.Map emptyMap() -> emptyMap
    788:792:java.util.Map optimizeReadOnlyMap(java.util.Map) -> optimizeReadOnlyMap
    419:422:void putAll(java.util.Map,java.lang.Iterable) -> putAll
    550:557:java.util.Map toMap(java.lang.Iterable) -> toMap
    564:794:java.util.Map toMap(java.lang.Iterable,java.util.Map) -> toMap
    604:608:java.util.Map toMap(java.util.Map) -> toMap
    616:616:java.util.Map toMutableMap(java.util.Map) -> toMutableMap
kotlin.collections.MapsKt___MapsJvmKt -> kotlin.collections.MapsKt___MapsJvmKt:
# {"id":"sourceFile","fileName":"_MapsJvm.kt"}
kotlin.collections.MapsKt___MapsKt -> kotlin.collections.MapsKt___MapsKt:
# {"id":"sourceFile","fileName":"_Maps.kt"}
kotlin.coroutines.CoroutineContext -> kotlin.coroutines.CoroutineContext:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
kotlin.coroutines.CoroutineContext$Element -> kotlin.coroutines.CoroutineContext$Element:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
kotlin.coroutines.CoroutineContext$Key -> kotlin.coroutines.CoroutineContext$Key:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
kotlin.internal.ProgressionUtilKt -> kotlin.internal.ProgressionUtilKt:
# {"id":"sourceFile","fileName":"progressionUtil.kt"}
    21:21:int differenceModulo(int,int,int) -> differenceModulo
    45:49:int getProgressionLastElement(int,int,int) -> getProgressionLastElement
    10:11:int mod(int,int) -> mod
kotlin.jvm.JvmClassMappingKt -> kotlin.jvm.JvmClassMappingKt:
# {"id":"sourceFile","fileName":"JvmClassMapping.kt"}
    29:29:java.lang.Class getJavaClass(kotlin.reflect.KClass) -> getJavaClass
    59:72:java.lang.Class getJavaObjectType(kotlin.reflect.KClass) -> getJavaObjectType
kotlin.jvm.KotlinReflectionNotSupportedError -> kotlin.jvm.KotlinReflectionNotSupportedError:
# {"id":"sourceFile","fileName":"KotlinReflectionNotSupportedError.kt"}
    11:11:void <init>() -> <init>
kotlin.jvm.functions.Function0 -> kotlin.jvm.functions.Function0:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function1 -> kotlin.jvm.functions.Function1:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function10 -> kotlin.jvm.functions.Function10:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function11 -> kotlin.jvm.functions.Function11:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function12 -> kotlin.jvm.functions.Function12:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function13 -> kotlin.jvm.functions.Function13:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function14 -> kotlin.jvm.functions.Function14:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function15 -> kotlin.jvm.functions.Function15:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function16 -> kotlin.jvm.functions.Function16:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function17 -> kotlin.jvm.functions.Function17:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function18 -> kotlin.jvm.functions.Function18:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function19 -> kotlin.jvm.functions.Function19:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function2 -> kotlin.jvm.functions.Function2:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function20 -> kotlin.jvm.functions.Function20:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function21 -> kotlin.jvm.functions.Function21:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function22 -> kotlin.jvm.functions.Function22:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function3 -> kotlin.jvm.functions.Function3:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function4 -> kotlin.jvm.functions.Function4:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function5 -> kotlin.jvm.functions.Function5:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function6 -> kotlin.jvm.functions.Function6:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function7 -> kotlin.jvm.functions.Function7:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function8 -> kotlin.jvm.functions.Function8:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function9 -> kotlin.jvm.functions.Function9:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.internal.ArrayIterator -> kotlin.jvm.internal.ArrayIterator:
# {"id":"sourceFile","fileName":"ArrayIterator.kt"}
    8:8:void <init>(java.lang.Object[]) -> <init>
    10:10:boolean hasNext() -> hasNext
    11:11:java.lang.Object next() -> next
kotlin.jvm.internal.ArrayIteratorKt -> kotlin.jvm.internal.ArrayIteratorKt:
# {"id":"sourceFile","fileName":"ArrayIterator.kt"}
    14:14:java.util.Iterator iterator(java.lang.Object[]) -> iterator
kotlin.jvm.internal.CallableReference -> kotlin.jvm.internal.CallableReference:
    48:48:void <clinit>() -> <clinit>
    60:61:void <init>() -> <init>
    65:66:void <init>(java.lang.Object) -> <init>
    69:75:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean) -> <init>
    86:91:kotlin.reflect.KCallable compute() -> compute
    81:81:java.lang.Object getBoundReceiver() -> getBoundReceiver
    120:120:java.lang.String getName() -> getName
    111:112:kotlin.reflect.KDeclarationContainer getOwner() -> getOwner
    96:100:kotlin.reflect.KCallable getReflected() -> getReflected
    132:132:java.lang.String getSignature() -> getSignature
kotlin.jvm.internal.CallableReference$NoReceiver -> kotlin.jvm.internal.CallableReference$NoReceiver:
    52:52:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    51:51:kotlin.jvm.internal.CallableReference$NoReceiver access$000() -> access$000
kotlin.jvm.internal.ClassBasedDeclarationContainer -> kotlin.jvm.internal.ClassBasedDeclarationContainer:
# {"id":"sourceFile","fileName":"ClassBasedDeclarationContainer.kt"}
kotlin.jvm.internal.ClassReference -> kotlin.jvm.internal.ClassReference:
# {"id":"sourceFile","fileName":"ClassReference.kt"}
    101:107:void <clinit>() -> <clinit>
    1559:1559:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.mapIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2) -> <clinit>
    1559:1559:void <clinit>():107 -> <clinit>
    1590:1592:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> <clinit>
    1590:1592:void <clinit>():107 -> <clinit>
    107:107:void <clinit>() -> <clinit>
    1592:1593:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> <clinit>
    1592:1593:void <clinit>():107 -> <clinit>
    1559:1559:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.mapIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2) -> <clinit>
    1559:1559:void <clinit>():107 -> <clinit>
    107:155:void <clinit>() -> <clinit>
    1253:1254:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.associateTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1) -> <clinit>
    1253:1254:void <clinit>():155 -> <clinit>
    156:156:void <clinit>() -> <clinit>
    1254:1256:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.associateTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1) -> <clinit>
    1254:1256:void <clinit>():155 -> <clinit>
    132:163:void <clinit>() -> <clinit>
    442:442:java.util.Map kotlin.collections.MapsKt__MapsKt.mapValues(java.util.Map,kotlin.jvm.functions.Function1) -> <clinit>
    442:442:void <clinit>():163 -> <clinit>
    392:392:java.util.Map kotlin.collections.MapsKt__MapsKt.mapValuesTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1) -> <clinit>
    392:392:void <clinit>():163 -> <clinit>
    1238:1239:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.associateByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <clinit>
    1238:1239:void <clinit>():163 -> <clinit>
    392:392:java.util.Map kotlin.collections.MapsKt__MapsKt.mapValuesTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1) -> <clinit>
    392:392:void <clinit>():163 -> <clinit>
    1239:1239:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.associateByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <clinit>
    1239:1239:void <clinit>():163 -> <clinit>
    163:163:void <clinit>() -> <clinit>
    1239:1241:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.associateByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <clinit>
    1239:1241:void <clinit>():163 -> <clinit>
    392:392:java.util.Map kotlin.collections.MapsKt__MapsKt.mapValuesTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1) -> <clinit>
    392:392:void <clinit>():163 -> <clinit>
    442:442:java.util.Map kotlin.collections.MapsKt__MapsKt.mapValues(java.util.Map,kotlin.jvm.functions.Function1) -> <clinit>
    442:442:void <clinit>():163 -> <clinit>
    163:163:void <clinit>() -> <clinit>
    10:10:java.util.Map access$getFUNCTION_CLASSES$cp() -> <init>
    10:10:void <init>(java.lang.Class):10 -> <init>
    91:91:boolean equals(java.lang.Object) -> equals
    10:10:java.util.Map access$getFUNCTION_CLASSES$cp() -> getJClass
    10:10:java.lang.Class getJClass():10 -> getJClass
    94:94:int hashCode() -> hashCode
    97:97:java.lang.String toString() -> toString
kotlin.jvm.internal.ClassReference$Companion -> kotlin.jvm.internal.ClassReference$Companion:
# {"id":"sourceFile","fileName":"ClassReference.kt"}
    99:99:void <init>() -> <init>
kotlin.jvm.internal.CollectionToArray -> kotlin.jvm.internal.CollectionToArray:
# {"id":"sourceFile","fileName":"CollectionToArray.kt"}
    14:14:void <clinit>() -> <clinit>
    26:26:java.lang.Object[] kotlin.ArrayIntrinsicsKt.emptyArray() -> <clinit>
    26:26:void <clinit>():14 -> <clinit>
    14:14:void <clinit>() -> <clinit>
    19:19:java.lang.Object[] toArray(java.util.Collection) -> toArray
    57:58:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    57:58:java.lang.Object[] toArray(java.util.Collection):19 -> toArray
    21:21:java.lang.Object[] toArray(java.util.Collection) -> toArray
    58:60:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    58:60:java.lang.Object[] toArray(java.util.Collection):19 -> toArray
    21:21:java.lang.Object[] toArray(java.util.Collection) -> toArray
    60:61:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    60:61:java.lang.Object[] toArray(java.util.Collection):19 -> toArray
    22:22:java.lang.Object[] toArray(java.util.Collection) -> toArray
    61:78:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    61:78:java.lang.Object[] toArray(java.util.Collection):19 -> toArray
    23:23:java.lang.Object[] toArray(java.util.Collection) -> toArray
    78:78:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    78:78:java.lang.Object[] toArray(java.util.Collection):19 -> toArray
    24:24:java.lang.Object[] toArray(java.util.Collection) -> toArray
    78:78:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    78:78:java.lang.Object[] toArray(java.util.Collection):19 -> toArray
    30:31:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    57:58:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    57:58:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):31 -> toArray
    34:35:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    58:60:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    58:60:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):31 -> toArray
    34:35:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    60:60:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    60:60:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):31 -> toArray
    31:31:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    61:61:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    61:61:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):31 -> toArray
    39:39:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    61:78:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    61:78:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):31 -> toArray
    42:46:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    78:78:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    78:78:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):31 -> toArray
    31:31:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    78:78:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    78:78:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):31 -> toArray
    30:30:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
kotlin.jvm.internal.FunctionBase -> kotlin.jvm.internal.FunctionBase:
# {"id":"sourceFile","fileName":"FunctionBase.kt"}
kotlin.jvm.internal.FunctionReference -> kotlin.jvm.internal.FunctionReference:
    50:53:void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    69:69:kotlin.reflect.KCallable computeReflected() -> computeReflected
    104:118:boolean equals(java.lang.Object) -> equals
    123:123:int hashCode() -> hashCode
    128:136:java.lang.String toString() -> toString
kotlin.jvm.internal.FunctionReferenceImpl -> kotlin.jvm.internal.FunctionReferenceImpl:
    29:30:void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
kotlin.jvm.internal.Intrinsics -> kotlin.jvm.internal.Intrinsics:
    16:17:void <init>() -> <init>
    169:169:boolean areEqual(java.lang.Object,java.lang.Object) -> areEqual
    86:89:void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String) -> checkExpressionValueIsNotNull
    24:27:void checkNotNull(java.lang.Object) -> checkNotNull
    30:33:void checkNotNull(java.lang.Object,java.lang.String) -> checkNotNull
    92:95:void checkNotNullExpressionValue(java.lang.Object,java.lang.String) -> checkNotNullExpressionValue
    130:133:void checkNotNullParameter(java.lang.Object,java.lang.String) -> checkNotNullParameter
    124:127:void checkParameterIsNotNull(java.lang.Object,java.lang.String) -> checkParameterIsNotNull
    144:157:java.lang.String createParameterIsNullExceptionMessage(java.lang.String) -> createParameterIsNullExceptionMessage
    253:253:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable) -> sanitizeStackTrace
    257:269:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable,java.lang.String) -> sanitizeStackTrace
    45:45:void throwJavaNpe() -> throwJavaNpe
    50:50:void throwJavaNpe(java.lang.String) -> throwJavaNpe
    136:136:void throwParameterIsNullIAE(java.lang.String) -> throwParameterIsNullIAE
    140:140:void throwParameterIsNullNPE(java.lang.String) -> throwParameterIsNullNPE
    54:54:void throwUninitializedProperty(java.lang.String) -> throwUninitializedProperty
    58:59:void throwUninitializedPropertyAccessException(java.lang.String) -> throwUninitializedPropertyAccessException
kotlin.jvm.internal.Lambda -> kotlin.jvm.internal.Lambda:
# {"id":"sourceFile","fileName":"Lambda.kt"}
    10:10:void <init>(int) -> <init>
    11:11:java.lang.String toString() -> toString
kotlin.jvm.internal.PackageReference -> kotlin.jvm.internal.PackageReference:
# {"id":"sourceFile","fileName":"PackageReference.kt"}
    10:13:void <init>(java.lang.Class,java.lang.String) -> <init>
    19:19:boolean equals(java.lang.Object) -> equals
    12:12:java.lang.Class getJClass() -> getJClass
    22:22:int hashCode() -> hashCode
    25:25:java.lang.String toString() -> toString
kotlin.jvm.internal.PropertyReference -> kotlin.jvm.internal.PropertyReference:
    15:16:void <init>() -> <init>
    25:26:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    48:59:boolean equals(java.lang.Object) -> equals
    31:31:kotlin.reflect.KProperty getReflected() -> getReflected
    64:64:int hashCode() -> hashCode
    69:74:java.lang.String toString() -> toString
kotlin.jvm.internal.PropertyReference1 -> kotlin.jvm.internal.PropertyReference1:
    25:26:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    30:30:kotlin.reflect.KCallable computeReflected() -> computeReflected
    40:40:kotlin.reflect.KProperty1$Getter getGetter() -> getGetter
    35:35:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.jvm.internal.PropertyReference1Impl -> kotlin.jvm.internal.PropertyReference1Impl:
    15:20:void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String) -> <init>
    34:34:java.lang.Object get(java.lang.Object) -> get
kotlin.jvm.internal.Reflection -> kotlin.jvm.internal.Reflection:
    26:39:void <clinit>() -> <clinit>
    90:90:kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference) -> function
    60:60:kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class) -> getOrCreateKotlinClass
    51:51:kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class) -> getOrCreateKotlinPackage
    104:104:kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1) -> property1
    79:79:java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda) -> renderLambdaToString
kotlin.jvm.internal.ReflectionFactory -> kotlin.jvm.internal.ReflectionFactory:
    14:14:void <init>() -> <init>
    51:51:kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference) -> function
    30:30:kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class) -> getOrCreateKotlinClass
    26:26:kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class,java.lang.String) -> getOrCreateKotlinPackage
    65:65:kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1) -> property1
    39:39:java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda) -> renderLambdaToString
    44:45:java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase) -> renderLambdaToString
kotlin.jvm.internal.StringCompanionObject -> kotlin.jvm.internal.StringCompanionObject:
# {"id":"sourceFile","fileName":"PrimitiveCompanionObjects.kt"}
    110:110:void <init>() -> <init>
kotlin.ranges.IntProgression -> kotlin.ranges.IntProgression:
# {"id":"sourceFile","fileName":"Progressions.kt"}
    77:102:void <init>(int,int,int) -> <init>
    115:116:boolean equals(java.lang.Object) -> equals
    92:92:int getFirst() -> getFirst
    97:97:int getLast() -> getLast
    102:102:int getStep() -> getStep
    119:119:int hashCode() -> hashCode
    112:112:boolean isEmpty() -> isEmpty
    77:77:java.util.Iterator iterator() -> iterator
    104:104:kotlin.collections.IntIterator iterator() -> iterator
    121:121:java.lang.String toString() -> toString
kotlin.ranges.IntProgression$Companion -> kotlin.ranges.IntProgression$Companion:
# {"id":"sourceFile","fileName":"Progressions.kt"}
    123:123:void <init>() -> <init>
    132:132:kotlin.ranges.IntProgression fromClosedRange(int,int,int) -> fromClosedRange
kotlin.ranges.IntProgressionIterator -> kotlin.ranges.IntProgressionIterator:
# {"id":"sourceFile","fileName":"ProgressionIterators.kt"}
    38:41:void <init>(int,int,int) -> <init>
    43:43:boolean hasNext() -> hasNext
    46:54:int nextInt() -> nextInt
kotlin.ranges.IntRange -> kotlin.ranges.IntRange:
# {"id":"sourceFile","fileName":"PrimitiveRanges.kt"}
    86:86:void <clinit>() -> <clinit>
    54:54:void <init>(int,int) -> <init>
    76:77:boolean equals(java.lang.Object) -> equals
    80:80:int hashCode() -> hashCode
    73:73:boolean isEmpty() -> isEmpty
    82:82:java.lang.String toString() -> toString
kotlin.ranges.IntRange$Companion -> kotlin.ranges.IntRange$Companion:
# {"id":"sourceFile","fileName":"PrimitiveRanges.kt"}
    84:84:void <init>() -> <init>
kotlin.ranges.RangesKt -> kotlin.ranges.RangesKt:
    int coerceAtLeast(int,int) -> coerceAtLeast
      # {"id":"com.android.tools.r8.synthesized"}
    int coerceAtMost(int,int) -> coerceAtMost
      # {"id":"com.android.tools.r8.synthesized"}
    kotlin.ranges.IntProgression downTo(int,int) -> downTo
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.ranges.RangesKt__RangesKt -> kotlin.ranges.RangesKt__RangesKt:
# {"id":"sourceFile","fileName":"Ranges.kt"}
kotlin.ranges.RangesKt___RangesKt -> kotlin.ranges.RangesKt___RangesKt:
# {"id":"sourceFile","fileName":"_Ranges.kt"}
    1244:1244:int coerceAtLeast(int,int) -> coerceAtLeast
    1321:1321:int coerceAtMost(int,int) -> coerceAtMost
    828:828:kotlin.ranges.IntProgression downTo(int,int) -> downTo
kotlin.reflect.KCallable -> kotlin.reflect.KCallable:
# {"id":"sourceFile","fileName":"KCallable.kt"}
kotlin.reflect.KClass -> kotlin.reflect.KClass:
# {"id":"sourceFile","fileName":"KClass.kt"}
kotlin.reflect.KDeclarationContainer -> kotlin.reflect.KDeclarationContainer:
# {"id":"sourceFile","fileName":"KDeclarationContainer.kt"}
kotlin.reflect.KFunction -> kotlin.reflect.KFunction:
# {"id":"sourceFile","fileName":"KFunction.kt"}
kotlin.reflect.KProperty -> kotlin.reflect.KProperty:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KProperty1 -> kotlin.reflect.KProperty1:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KProperty1$Getter -> kotlin.reflect.KProperty1$Getter:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.text.CharsKt__CharJVMKt -> kotlin.text.CharsKt__CharJVMKt:
# {"id":"sourceFile","fileName":"CharJVM.kt"}
kotlin.text.CharsKt__CharKt -> kotlin.text.CharsKt__CharKt:
# {"id":"sourceFile","fileName":"Char.kt"}
    234:240:boolean equals(char,char,boolean) -> equals
kotlin.text.StringsKt -> kotlin.text.StringsKt:
    boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object) -> contains$default
      # {"id":"com.android.tools.r8.synthesized"}
    boolean endsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> endsWith$default
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> replace$default
      # {"id":"com.android.tools.r8.synthesized"}
    boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> startsWith$default
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String substringAfterLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object) -> substringAfterLast$default
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.text.StringsKt__AppendableKt -> kotlin.text.StringsKt__AppendableKt:
# {"id":"sourceFile","fileName":"Appendable.kt"}
kotlin.text.StringsKt__IndentKt -> kotlin.text.StringsKt__IndentKt:
# {"id":"sourceFile","fileName":"Indent.kt"}
kotlin.text.StringsKt__RegexExtensionsJVMKt -> kotlin.text.StringsKt__RegexExtensionsJVMKt:
# {"id":"sourceFile","fileName":"RegexExtensionsJVM.kt"}
kotlin.text.StringsKt__RegexExtensionsKt -> kotlin.text.StringsKt__RegexExtensionsKt:
# {"id":"sourceFile","fileName":"RegexExtensions.kt"}
kotlin.text.StringsKt__StringBuilderJVMKt -> kotlin.text.StringsKt__StringBuilderJVMKt:
# {"id":"sourceFile","fileName":"StringBuilderJVM.kt"}
kotlin.text.StringsKt__StringBuilderKt -> kotlin.text.StringsKt__StringBuilderKt:
# {"id":"sourceFile","fileName":"StringBuilder.kt"}
kotlin.text.StringsKt__StringNumberConversionsJVMKt -> kotlin.text.StringsKt__StringNumberConversionsJVMKt:
# {"id":"sourceFile","fileName":"StringNumberConversionsJVM.kt"}
kotlin.text.StringsKt__StringNumberConversionsKt -> kotlin.text.StringsKt__StringNumberConversionsKt:
# {"id":"sourceFile","fileName":"StringNumberConversions.kt"}
kotlin.text.StringsKt__StringsJVMKt -> kotlin.text.StringsKt__StringsJVMKt:
# {"id":"sourceFile","fileName":"StringsJVM.kt"}
    439:442:boolean endsWith(java.lang.String,java.lang.String,boolean) -> endsWith
    438:438:boolean endsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> endsWith$default
    653:656:boolean regionMatches(java.lang.String,int,java.lang.String,int,int,boolean) -> regionMatches
    87:105:java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,boolean) -> replace
    86:86:java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> replace$default
    417:420:boolean startsWith(java.lang.String,java.lang.String,boolean) -> startsWith
    416:416:boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> startsWith$default
kotlin.text.StringsKt__StringsKt -> kotlin.text.StringsKt__StringsKt:
# {"id":"sourceFile","fileName":"Strings.kt"}
    1145:1148:boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean) -> contains
    1144:1144:boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object) -> contains$default
    379:379:int getLastIndex(java.lang.CharSequence) -> getLastIndex
    1102:1105:int indexOf(java.lang.CharSequence,java.lang.String,int,boolean) -> indexOf
    973:989:int indexOf$StringsKt__StringsKt(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean) -> indexOf$StringsKt__StringsKt
    972:972:int indexOf$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean,int,java.lang.Object) -> indexOf$StringsKt__StringsKt$default
    1101:1101:int indexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object) -> indexOf$default
    1117:1120:int lastIndexOf(java.lang.CharSequence,char,int,boolean) -> lastIndexOf
    1116:1116:int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object) -> lastIndexOf$default
    956:964:int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean) -> lastIndexOfAny
    12824:12824:boolean kotlin.collections.ArraysKt___ArraysKt.any(char[],kotlin.jvm.functions.Function1) -> lastIndexOfAny
    12824:12824:int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean):964 -> lastIndexOfAny
    964:964:int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean) -> lastIndexOfAny
    12824:12825:boolean kotlin.collections.ArraysKt___ArraysKt.any(char[],kotlin.jvm.functions.Function1) -> lastIndexOfAny
    12824:12825:int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean):964 -> lastIndexOfAny
    962:968:int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean) -> lastIndexOfAny
    821:829:boolean regionMatchesImpl(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean) -> regionMatchesImpl
    484:485:java.lang.String substringAfterLast(java.lang.String,char,java.lang.String) -> substringAfterLast
    483:483:java.lang.String substringAfterLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object) -> substringAfterLast$default
kotlin.text.StringsKt___StringsJvmKt -> kotlin.text.StringsKt___StringsJvmKt:
# {"id":"sourceFile","fileName":"_StringsJvm.kt"}
kotlin.text.StringsKt___StringsKt -> kotlin.text.StringsKt___StringsKt:
# {"id":"sourceFile","fileName":"_Strings.kt"}
kotlinx.coroutines.Job -> kotlinx.coroutines.Job:
# {"id":"sourceFile","fileName":"Job.kt"}
kotlinx.coroutines.Job$Key -> kotlinx.coroutines.Job$Key:
# {"id":"sourceFile","fileName":"Job.kt"}
    116:116:void <init>() -> <init>
kotlinx.coroutines.JobKt -> kotlinx.coroutines.JobKt:
    1:1:void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException) -> cancel
    1:1:void cancel$default(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException,int,java.lang.Object) -> cancel$default
kotlinx.coroutines.JobKt__JobKt -> kotlinx.coroutines.JobKt__JobKt:
# {"id":"sourceFile","fileName":"Job.kt"}
    549:550:void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException) -> cancel
    548:548:void cancel$default(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException,int,java.lang.Object) -> cancel$default
kotlinx.coroutines.flow.MutableStateFlow -> kotlinx.coroutines.flow.MutableStateFlow:
# {"id":"sourceFile","fileName":"StateFlow.kt"}
